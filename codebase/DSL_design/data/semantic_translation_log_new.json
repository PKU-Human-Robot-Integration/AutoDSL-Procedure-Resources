{"Molecular Biology & Genetics": {"0": {"subject": "Molecular Biology & Genetics", "enum": 0, "protocol": "Bile Sample Preparation: Collect bile into a sterile bottle. Centrifuge at 3000g for 10 minutes at 4\u00b0C to clear sediments. Aliquot 1 ml into tubes. Store aliquots at -20\u00b0C. ", "compile": [{"i": 0, "sentense": "Bile Sample Preparation: Collect bile into a sterile bottle.", "kg": {"protocol": {"name": "Bile Sample Preparation", "steps": [{"step": 1, "description": "Collect bile into a sterile bottle"}]}}, "operation": "COLLECT", "entity_list": [["Container", "bottle"]], "result_ours": {"opcode": "COLLECT", "slot": [["Volume", null], ["Container", "bottle"]], "emit": "sterile bile sample"}, "result_dsl": {"opcode": "COLLECT", "slot": [["Volume", null], ["Container", "bottle"]], "emit": "sterile bile sample"}, "result_baseline1": {"opcode": "Collect Bile", "slot": [["Container", "sterile bottle"]], "emit": ""}, "result_baseline2": {"opcode": "Bile Sample Preparation", "slot": [["Container", "sterile bottle"]], "emit": ""}, "result_baseline3": {"opcode": "COLLECT", "slot": [["Container", "sterile bottle"], ["REG", "bile"]], "emit": "Bile Sample"}}, {"i": 1, "sentense": "Centrifuge at 3000g for 10 minutes at 4\u00b0C to clear sediments.", "kg": {"Protocol": {"Experimental_steps": [{"Step_number": 1, "Action": "Centrifugation", "Speed": "3000g", "Time": "10 minutes", "Temperature": "4\u00b0C", "Purpose": "Clear sediments"}]}}, "operation": "CENTRIFUGE", "entity_list": [["Force", "3000g"], ["Time", "10 minutes"], ["Temperature", "4\u00b0C"]], "result_ours": {"opcode": "PUMP", "slot": [["Force", "3000g"], ["Time", "10 minutes"], ["Temperature", "4\u00b0C"]], "emit": "Clear sediments"}, "result_dsl": {"opcode": "PUMP", "slot": [["Force", "3000g"], ["Time", "10 minutes"], ["Temperature", "4\u00b0C"]], "emit": "Clear sediments"}, "result_baseline1": {"opcode": "Centrifugation", "slot": [["Force", "3000g"], ["Time", "10 minutes"], ["Temperature", "4\u00b0C"]], "emit": "Clear sediments"}, "result_baseline2": {"opcode": "Centrifuge", "slot": [["Force", 3000], ["Time", 10], ["Temperature", 4], ["Container", null]], "emit": "Clear sediments"}, "result_baseline3": {"opcode": "CENTRIFUGE", "slot": [["Force", "3000g"], ["Time", "10 minutes"], ["Temperature", "4\u00b0C"]], "emit": "Clear sediments"}}, {"i": 2, "sentense": "Aliquot 1 ml into tubes.", "kg": {"protocol": {"steps": [{"step_number": 1, "description": "Aliquot 1 ml into tubes"}]}}, "operation": "ALIQUOT", "entity_list": [], "result_ours": {"opcode": "RINSE", "slot": [["REG", null], ["Time", null], ["Temperature", null]], "emit": "Samples in tubes."}, "result_dsl": {"opcode": "RINSE", "slot": [["REG", null], ["Time", null], ["Temperature", null]], "emit": "Samples in tubes"}, "result_baseline1": {"opcode": "Aliquot", "slot": [["Volume", 1], ["Container", null]], "emit": ""}, "result_baseline2": {"opcode": "Aliquot", "slot": [["Volume", 1], ["Container", "tubes"]], "emit": ""}, "result_baseline3": {"opcode": "ALIQUOT", "slot": [["Volume", "1 ml"], ["Container", "tubes"]], "emit": ""}}, {"i": 3, "sentense": "Store aliquots at -20\u00b0C.", "kg": {"protocol": {"steps": [{"description": "Store aliquots at -20\u00b0C", "temperature": "-20\u00b0C"}]}}, "operation": "STORE", "entity_list": [["Temperature", "-20\u00b0C"]], "result_ours": {"opcode": "STORE", "slot": [["Container", null], ["Temperature", "-20\u00b0C"]], "emit": "Frozen samples"}, "result_dsl": {"opcode": "STORE", "slot": [["Container", null], ["Temperature", "-20\u00b0C"]], "emit": "Frozen samples"}, "result_baseline1": {"opcode": "STORE", "slot": [["Container", "aliquots"], ["Temperature", "-20\u00b0C"]], "emit": ""}, "result_baseline2": {"opcode": "STORE", "slot": [["Temperature", "-20\u00b0C"], ["Container", null]], "emit": "Alciquots"}, "result_baseline3": {"opcode": "STORE", "slot": [["Temperature", "-20\u00b0C"], ["Container", "aliquots"]], "emit": ""}}]}, "1": {"subject": "Molecular Biology & Genetics", "enum": 1, "protocol": "3' Terminal Nucleosides Determination in RNA: Dissolve yeast tRNA<sup>Phe</sup> or mouse piRNAs in Milli-Q water. Add ammonium acetate buffer and RNase T<sub>2</sub>, then incubate. After RNA hydrolysis, analyze the hydrolysate using an LC/MS system.", "compile": [{"i": 0, "sentense": "3' Terminal Nucleosides Determination in RNA: Dissolve yeast tRNA<sup>Phe</sup> or mouse piRNAs in Milli-Q water.", "kg": {"Protocol": {"Title": "3' Terminal Nucleosides Determination in RNA", "Steps": [{"Step1": "Dissolve yeast tRNA Phe or mouse piRNAs in Milli-Q water"}], "Inputs": [{"RNAs": ["yeast tRNA Phe", "mouse piRNAs"], "Solvent": "Milli-Q water"}]}}, "operation": "DISSOLVE", "entity_list": [], "result_ours": {"opcode": "MERGE", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "nucleosides"}, "result_dsl": {"opcode": "MERGE", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "nucleosides"}, "result_baseline1": {"opcode": "DETERMINE", "slot": [["String", "3' Terminal Nucleosides"], ["String", null], ["Container", null]], "emit": "RNA samples dissolved in Milli-Q water"}, "result_baseline2": {"opcode": "Determine", "slot": [["Mass", null], ["Container", "Milli-Q water"], ["String", "yeast tRNA<Phe> or mouse piRNAs"]], "emit": "3' Terminal Nucleosides"}, "result_baseline3": {"opcode": "3' Terminal Nucleosides Determination in RNA", "slot": [["REG", "yeast tRNA<sup>Phe</sup>"], ["REG", "mouse piRNAs"], ["Container", "Milli-Q water"]], "emit": ""}}, {"i": 1, "sentense": "Add ammonium acetate buffer and RNase T<sub>2</sub>, then incubate.", "kg": {"protocol": {"steps": [{"step_number": 1, "description": "Add ammonium acetate buffer"}, {"step_number": 2, "description": "Add RNase T2"}, {"step_number": 3, "description": "Incubate"}]}}, "operation": "ADD", "entity_list": [["REG", "ammonium acetate buffer"], ["REG", "RNase T<sub>2</sub>"]], "result_ours": {"opcode": "ADD", "slot": [["REG", "ammonium acetate buffer"], ["Container", null], ["Volume", null], ["REG", "RNase T<sub>2</sub>"]], "emit": "incubated RNase T2"}, "result_dsl": {"opcode": "INCUBATE", "slot": [["REG", "ammonium acetate buffer"], ["Container", null], ["Volume", null], ["REG", "RNase T2"]], "emit": "incubated RNase T2"}, "result_baseline1": {"opcode": "INCUBATE", "slot": [["Container", null], ["Temperature", null], ["Time", null]], "emit": "RNA degradation"}, "result_baseline2": {"opcode": "Incubate", "slot": [["Container", "ammonium acetate buffer"], ["Container", "RNase T2"], ["Time", null]], "emit": ""}, "result_baseline3": {"opcode": "ADD", "slot": [["REG", "ammonium acetate buffer"], ["REG", "RNase T2"]], "emit": "Incubate"}}, {"i": 2, "sentense": "After RNA hydrolysis, analyze the hydrolysate using an LC/MS system.", "kg": {"Protocol": {"Steps": [{"Step 1": "Perform RNA hydrolysis", "Description": "Hydrolyze RNA samples using a suitable enzymatic or chemical method to break RNA molecules into smaller fragments.", "Time": "Dependent on chosen hydrolysis method"}, {"Step 2": "Analyze the hydrolysate using an LC/MS system", "Description": "Inject the hydrolysate into an LC/MS system for analysis of the RNA fragments.", "Time": "Dependent on LC/MS system settings"}]}}, "operation": "ANALYZE", "entity_list": [["REG", "RNA hydrolysis"], ["Device", "LC/MS system"]], "result_ours": {"opcode": "EVALUATE", "slot": [["REG", "RNA hydrolysis"], ["Device", "LC/MS system"]], "emit": "hydrolysate composition"}, "result_dsl": {"opcode": "EVALUATE", "slot": [["REG", "RNA hydrolysis"], ["Device", "LC/MS system"]], "emit": "hydrolysate composition"}, "result_baseline1": {"opcode": "RNA hydrolysis and analysis", "slot": [["String", "Perform RNA hydrolysis"], ["String", "Analyze the hydrolysate using an LC/MS system"], ["Time", null]], "emit": "RNA fragment analysis"}, "result_baseline2": {"opcode": "analyze", "slot": [["String", "RNA hydrolysate"], ["Container", "LC/MS system"]], "emit": "data analysis"}, "result_baseline3": {"opcode": "Analyze", "slot": [["REG", "RNA hydrolysis"], ["Device", "LC/MS system"]], "emit": "Hydrolysate analysis results"}}]}, "2": {"subject": "Molecular Biology & Genetics", "enum": 2, "protocol": "Cell Thawing, Splitting, and Transfection: Thaw cells, spin down, and plate in growth media. Event trigger: Split cells at 80% confluency to avoid differentiation. For transfection, seed at low density and change media post-transfection for differentiation or growth.", "compile": [{"i": 0, "sentense": "Cell Thawing, Splitting, and Transfection: Thaw cells, spin down, and plate in growth media.", "kg": {"protocol": {"steps": [{"name": "Cell Thawing", "description": "Thaw cells in appropriate medium."}, {"name": "Spin Down", "description": "Centrifuge cells to pellet them."}, {"name": "Plate in Growth Media", "description": "Plate cells in growth media for further experimentation."}], "additional_steps": [{"name": "Splitting", "description": "Split cells for further experimental use."}, {"name": "Transfection", "description": "Introduce exogenous nucleic acids into cells for gene manipulation."}]}}, "operation": "THAW", "entity_list": [], "result_ours": {"opcode": "DRY", "slot": [["REG", null], ["Time", null], ["Temperature", null], ["Device", null]], "emit": "plate in growth media."}, "result_dsl": {"opcode": "DRY", "slot": [["REG", null], ["Time", null], ["Temperature", null], ["Device", null]], "emit": "plate in growth media"}, "result_baseline1": {"opcode": "Cell Culture", "slot": [["Container", null], ["Time", null], ["String", "appropriate medium"]], "emit": "Plate in Growth Media"}, "result_baseline2": {"opcode": "Cell Thawing, Splitting, and Transfection", "slot": [["Device", null], ["Time", null], ["String", "Thaw cells, spin down, and plate in growth media"]], "emit": ""}, "result_baseline3": {"opcode": "Cell Thawing, Splitting, and Transfection", "slot": [["REG", "cells"], ["REG", "growth media"]], "emit": "Thawed, spun down, and plated cells"}}, {"i": 1, "sentense": "Event trigger: Split cells at 80% confluency to avoid differentiation.", "kg": {"Protocol": {"EventTrigger": "Split cells at 80% confluency", "Purpose": "To avoid differentiation", "Steps": [{"StepNumber": 1, "Description": "Grow cells until they reach 80% confluency"}, {"StepNumber": 2, "Description": "Split cells using appropriate method"}]}}, "operation": "SPLIT", "entity_list": [], "result_ours": {"opcode": "SPLIT", "slot": [["Volume", null], ["Force", null], ["Time", null], ["Temperature", null]], "emit": "cell behavior at different confluency levels"}, "result_dsl": {"opcode": "SPLIT", "slot": [["Volume", null], ["Force", null], ["Time", null], ["Temperature", null]], "emit": "cell behavior at different confluency levels"}, "result_baseline1": {"opcode": "SPLIT", "slot": [["Time", null], ["String", "appropriate method"], ["Device", null]], "emit": "Split cells"}, "result_baseline2": {"opcode": "Split", "slot": [["Container", null], ["Concentration", null], ["String", "80% confluency"]], "emit": "Avoid differentiation"}, "result_baseline3": {"opcode": "SPLIT", "slot": [["REG", "cells"], ["REG", "80% confluency"], ["Bool", "avoid differentiation"]], "emit": ""}}, {"i": 2, "sentense": "For transfection, seed at low density and change media post-transfection for differentiation or growth.", "kg": {"protocol": {"experiment": "Transfection", "steps": [{"step_number": 1, "description": "Seed cells at low density"}, {"step_number": 2, "description": "Transfect cells"}, {"step_number": 3, "description": "Change media post-transfection"}], "post_transfection": {"action": "Differentiation or growth"}}}, "operation": "CHANGE", "entity_list": [], "result_ours": {"opcode": "CHANGE", "slot": [["REG", null], ["Time", null], ["REG", null], ["Time", null]], "emit": "Modified cells"}, "result_dsl": {"opcode": "CHANGE", "slot": [["REG", null], ["Time", null], ["REG", null], ["Time", null]], "emit": "Modified cells"}, "result_baseline1": {"opcode": "Transfection", "slot": [["Device", null], ["REG", "low-density cells"], ["REG", "transfection reagent"], ["Container", null]], "emit": "Differentiation or growth"}, "result_baseline2": {"opcode": "transfection", "slot": [["Container", null], ["String", "low density"], ["Time", null], ["String", "change media"], ["String", "differentiation or growth"]], "emit": "post-transfection"}, "result_baseline3": {"opcode": "TRANSFECTION", "slot": [["REG", "low density"], ["REG", "media post-transfection"], ["REG", "differentiation"], ["REG", "growth"]], "emit": ""}}]}, "3": {"subject": "Molecular Biology & Genetics", "enum": 3, "protocol": "Bile Processing Protocol: Collect bile in sterile bottles from patients with biliary tubes. Centrifuge at 3000g for 10 minutes at 4\u00b0C to remove sediment and debris. Aliquot the clear bile into 1 ml volumes in microcentrifuge tubes. Store the aliquots at -20\u00b0C for future use. ", "compile": [{"i": 0, "sentense": "Bile Processing Protocol: Collect bile in sterile bottles from patients with biliary tubes.", "kg": {"protocol": {"name": "Bile Processing Protocol", "steps": [{"step_number": 1, "description": "Collect bile in sterile bottles", "specifics": {"sample_source": "patients with biliary tubes", "container_type": "sterile bottles"}}]}}, "operation": "COLLECT", "entity_list": [], "result_ours": {"opcode": "COLLECT", "slot": [["REG", null], ["REG", null], ["Volume", null]], "emit": "sterile bile samples"}, "result_dsl": {"opcode": "COLLECT", "slot": [["REG", null], ["REG", null], ["Volume", null]], "emit": "sterile bile samples"}, "result_baseline1": {"opcode": "COLLECT", "slot": [["Container", "sterile bottles"], ["REG", "patients with biliary tubes"], ["Volume", null]], "emit": "Bile samples"}, "result_baseline2": {"opcode": "Collect", "slot": [["Container", "sterile bottles"], ["String", "bile from patients with biliary tubes"], ["Device", null]], "emit": "Processing"}, "result_baseline3": {"opcode": "Collect", "slot": [["Container", "sterile bottles"], ["REG", "patients with biliary tubes"]], "emit": "Bile"}}, {"i": 1, "sentense": "Centrifuge at 3000g for 10 minutes at 4\u00b0C to remove sediment and debris.", "kg": {"protocol": {"steps": [{"action": "Centrifuge", "speed": "3000g", "time": "10 minutes", "temperature": "4\u00b0C", "purpose": "remove sediment and debris"}]}}, "operation": "CENTRIFUGE", "entity_list": [["Force", "3000g"], ["Time", "10 minutes"], ["Temperature", "4\u00b0C"], ["REG", "sediment"], ["REG", "debris"]], "result_ours": {"opcode": "PUMP", "slot": [["Force", "3000g"], ["Time", "10 minutes"], ["Temperature", "4\u00b0C"], ["REG", "sediment"], ["REG", "debris"]], "emit": "\"Centrifuged supernatant\""}, "result_dsl": {"opcode": "PUMP", "slot": [["Force", "3000g"], ["Time", "10 minutes"], ["Temperature", "4\u00b0C"], ["REG", "sediment"], ["REG", "debris"]], "emit": "Centrifuged supernatant"}, "result_baseline1": {"opcode": "Centrifuge", "slot": [["Force", "3000g"], ["Time", "10 minutes"], ["Temperature", "4\u00b0C"], ["String", "remove sediment and debris"]], "emit": ""}, "result_baseline2": {"opcode": "Centrifuge", "slot": [["Force", 3000], ["Time", "10 minutes"], ["Temperature", "4\u00b0C"]], "emit": "Remove sediment and debris"}, "result_baseline3": {"opcode": "CENTRIFUGE", "slot": [["Force", "3000g"], ["Time", "10 minutes"], ["Temperature", "4\u00b0C"]], "emit": "sediment and debris removal"}}, {"i": 2, "sentense": "Aliquot the clear bile into 1 ml volumes in microcentrifuge tubes.", "kg": {"Protocol": {"Step 1": "Aliquot the clear bile", "Step 2": "Transfer into 1 ml volumes", "Step 3": "Use microcentrifuge tubes", "Step 4": "Final volume should be 1 ml"}}, "operation": "ALIQUOT", "entity_list": [], "result_ours": {"opcode": "RINSE", "slot": [["REG", null], ["Time", null], ["Temperature", null]], "emit": "1 ml volumes of clear bile in microcentrifuge tubes."}, "result_dsl": {"opcode": "RINSE", "slot": [["REG", null], ["Time", null], ["Temperature", null], ["Volume", "1 ml"], ["Container", "microcentrifuge tubes"], ["String", "clear bile"]], "emit": ""}, "result_baseline1": {"opcode": "TRANSFER", "slot": [["Container", "microcentrifuge tubes"], ["Volume", "1 ml"]], "emit": "Clear bile aliquot"}, "result_baseline2": {"opcode": "Aliquot", "slot": [["Volume", 1], ["Container", "microcentrifuge tubes"]], "emit": ""}, "result_baseline3": {"opcode": "ALIQUOT", "slot": [["Volume", "1 ml"], ["Container", "microcentrifuge tubes"]], "emit": "clear bile"}}, {"i": 3, "sentense": "Store the aliquots at -20\u00b0C for future use.", "kg": {"name": "Experimental Protocol", "steps": [{"step": 1, "description": "Store the aliquots at -20\u00b0C for future use"}]}, "operation": "STORE", "entity_list": [["Temperature", "-20\u00b0C"]], "result_ours": {"opcode": "STORE", "slot": [["Container", null], ["Temperature", "-20\u00b0C"]], "emit": "preserved aliquots"}, "result_dsl": {"opcode": "STORE", "slot": [["Container", null], ["Temperature", "-20\u00b0C"]], "emit": "preserved aliquots"}, "result_baseline1": {"opcode": "STORE", "slot": [["REG", "aliquots"], ["Temperature", -20], ["Time", null]], "emit": "Future use"}, "result_baseline2": {"opcode": "Store", "slot": [["Container", "aliquots"], ["Temperature", -20], ["Time", null]], "emit": ""}, "result_baseline3": {"opcode": "STORE", "slot": [["Temperature", "-20\u00b0C"]], "emit": "Aliquots for future use"}}]}, "4": {"subject": "Molecular Biology & Genetics", "enum": 4, "protocol": "Bile Collection and Centrifugation: Collect bile into a sterile collection bottle. Use a centrifuge tube to spin at 3000g for 10 minutes at 4\u00b0C. Aliquot the clarified supernatant into microcentrifuge tubes, 1 ml each. Freeze aliquots in microcentrifuge tubes at -20\u00b0C for storage.", "compile": [{"i": 0, "sentense": "Bile Collection and Centrifugation: Collect bile into a sterile collection bottle.", "kg": {"protocol": {"title": "Bile Collection and Centrifugation Protocol", "steps": [{"step_number": 1, "description": "Collect bile into a sterile collection bottle"}, {"step_number": 2, "description": "Centrifuge the collected bile"}]}}, "operation": "COLLECT", "entity_list": [["Container", "bottle"]], "result_ours": {"opcode": "COLLECT", "slot": [["Volume", null], ["Container", "bottle"]], "emit": "Bile sample"}, "result_dsl": {"opcode": "COLLECT", "slot": [["Volume", null], ["Container", "bottle"]], "emit": "Bile sample"}, "result_baseline1": {"opcode": "Bile Collection and Centrifugation", "slot": [["Container", null], ["Device", null]], "emit": "Centrifuged bile sample"}, "result_baseline2": {"opcode": "Bile Collection and Centrifugation", "slot": [["Container", "sterile collection bottle"], ["String", null]], "emit": "Centrifuged bile sample"}, "result_baseline3": {"opcode": "Bile Collection and Centrifugation", "slot": [["Container", "sterile collection bottle"]], "emit": "Bile"}}, {"i": 1, "sentense": "Use a centrifuge tube to spin at 3000g for 10 minutes at 4\u00b0C.", "kg": {"Protocol": {"Steps": [{"Step 1": "Take a centrifuge tube"}, {"Step 2": "Add the sample to the centrifuge tube"}, {"Step 3": "Centrifuge the tube at 3000g for 10 minutes at 4\u00b0C"}], "Conditions": {"Centrifuge Speed": "3000g", "Centrifugation Time": "10 minutes", "Temperature": "4\u00b0C"}}}, "operation": "SPIN", "entity_list": [["Force", "3000g"], ["Time", "10 minutes"], ["Temperature", "4\u00b0C"]], "result_ours": {"opcode": "SPIN", "slot": [["REG", null], ["Force", "3000g"], ["Device", null], ["Time", "10 minutes"], ["Temperature", "4\u00b0C"]], "emit": "Centrifuged sample"}, "result_dsl": {"opcode": "SPIN", "slot": [["REG", null], ["Force", "3000g"], ["Device", null], ["Time", "10 minutes"], ["Temperature", "4\u00b0C"]], "emit": "Centrifuged sample"}, "result_baseline1": {"opcode": "CENTRIFUGE", "slot": [["Container", "centrifuge tube"], ["String", "sample"], ["Mass", null]], "emit": "Centrifuged tube with separated components"}, "result_baseline2": {"opcode": "SPIN", "slot": [["Container", "centrifuge tube"], ["Force", 3000], ["Time", 10], ["Temperature", 4]], "emit": ""}, "result_baseline3": {"opcode": "centrifuge", "slot": [["Container", "tube"], ["Force", "3000g"], ["Time", "10 minutes"], ["Temperature", "4\u00b0C"]], "emit": ""}}, {"i": 2, "sentense": "Aliquot the clarified supernatant into microcentrifuge tubes, 1 ml each.", "kg": {"protocol": {"steps": [{"description": "Aliquot the clarified supernatant into microcentrifuge tubes", "volume": "1 ml"}]}}, "operation": "ALIQUOT", "entity_list": [], "result_ours": {"opcode": "RINSE", "slot": [["REG", null], ["Time", null], ["Temperature", null]], "emit": "clarified supernatant"}, "result_dsl": {"opcode": "RINSE", "slot": [["REG", null], ["Time", null], ["Temperature", null]], "emit": "clarified supernatant"}, "result_baseline1": {"opcode": "Aliquot", "slot": [["Volume", "1 ml"], ["Container", null]], "emit": "microcentrifuge tubes"}, "result_baseline2": {"opcode": "Aliquot", "slot": [["Container", "microcentrifuge tubes"], ["Volume", "1 ml"]], "emit": ""}, "result_baseline3": {"opcode": "ALIQUOT", "slot": [["Container", "microcentrifuge tubes"], ["Volume", "1 ml"]], "emit": "Aliquoted supernatant in microcentrifuge tubes"}}, {"i": 3, "sentense": "Freeze aliquots in microcentrifuge tubes at -20\u00b0C for storage.", "kg": {"protocol": {"steps": [{"step 1": {"action": "Freeze aliquots in microcentrifuge tubes", "temperature": "-20\u00b0C", "duration": "for storage"}}]}}, "operation": "FREEZE", "entity_list": [["REG", "aliquots"], ["Container", "microcentrifuge tubes"], ["Temperature", "-20\u00b0C"]], "result_ours": {"opcode": "SUSPEND", "slot": [["REG", "aliquots"], ["Container", "microcentrifuge tubes"], ["Temperature", "-20\u00b0C"]], "emit": "Frozen aliquots"}, "result_dsl": {"opcode": "SUSPEND", "slot": [["REG", "aliquots"], ["Container", "microcentrifuge tubes"], ["Temperature", "-20\u00b0C"]], "emit": "Frozen aliquots"}, "result_baseline1": {"opcode": "Freeze aliquots in microcentrifuge tubes", "slot": [["Temperature", "-20\u00b0C"], ["Time", "for storage"]], "emit": ""}, "result_baseline2": {"opcode": "Freeze", "slot": [["Container", "microcentrifuge tubes"], ["Temperature", "-20\u00b0C"], ["Time", null]], "emit": ""}, "result_baseline3": {"opcode": "FREEZE", "slot": [["Container", "microcentrifuge tubes"], ["Temperature", "-20\u00b0C"]], "emit": "Frozen aliquots for storage"}}]}}, "Biomedical & Clinical Research": {"0": {"subject": "Biomedical & Clinical Research", "enum": 0, "protocol": "Muscle Elasticity Therapy Study: For 4 weeks, repeat 5 sessions per week: Group A performs MET, Group B performs static stretching and motor control exercise.", "compile": [{"i": 0, "sentense": "Muscle Elasticity Therapy Study: For 4 weeks, repeat 5 sessions per week: Group A performs MET, Group B performs static stretching and motor control exercise.", "kg": {"protocol": {"study": "Muscle Elasticity Therapy Study", "duration": "4 weeks", "sessions_per_week": 5, "groups": [{"name": "Group A", "intervention": "MET", "description": "Muscle Elasticity Therapy"}, {"name": "Group B", "intervention": "static stretching and motor control exercise", "description": "Static stretching and motor control exercise"}]}}, "operation": "REPEAT", "entity_list": [["REG", "MET"]], "result_ours": {"opcode": "REPEAT", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", "MET"]], "emit": "Improved muscle elasticity"}, "result_dsl": {"opcode": "REPEAT", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", "MET"]], "emit": "Improved muscle elasticity"}, "result_baseline1": {"opcode": "Muscle Elasticity Therapy Study", "slot": [["Time", "4 weeks"], ["Frequency", 5], ["Container", null]], "emit": "Groups: Group A (MET - Muscle Elasticity Therapy), Group B (static stretching and motor control exercise)"}, "result_baseline2": {"opcode": "Muscle Elasticity Therapy Study", "slot": [["Time", "4 weeks"], ["Frequency", 5], ["String", "MET"], ["String", "static stretching and motor control exercise"]], "emit": "Study results"}, "result_baseline3": {"opcode": "Muscle Elasticity Therapy Study", "slot": [["Time", "4 weeks"], ["String", "5 sessions per week"], ["String", "Group A performs MET"], ["String", "Group B performs static stretching and motor control exercise"]], "emit": ""}}]}, "1": {"subject": "Biomedical & Clinical Research", "enum": 1, "protocol": "Fluorescence Assay for Enzyme Activity: Repeat the addition of substrates and enzyme to the cuvette, and record fluorescence intensity. Keep repeating these additions and measurements until no further change in fluorescence intensity is detected, indicating equilibrium.", "compile": [{"i": 0, "sentense": "Fluorescence Assay for Enzyme Activity: Repeat the addition of substrates and enzyme to the cuvette, and record fluorescence intensity.", "kg": {"protocol": {"title": "Fluorescence Assay for Enzyme Activity", "steps": [{"action": "Repeat", "details": "Add substrates and enzyme to the cuvette"}, {"action": "Record", "details": "Fluorescence intensity"}]}}, "operation": "REPEAT", "entity_list": [], "result_ours": {"opcode": "REPEAT", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "Fluorescence intensity measurements"}, "result_dsl": {"opcode": "Fluorescence intensity measurements", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": ""}, "result_baseline1": {"opcode": "FluorescenceAssay", "slot": [["Container", "cuvette"], ["String", "substrates"], ["String", "enzyme"]], "emit": "Fluorescence intensity"}, "result_baseline2": {"opcode": "Fluorescence Assay", "slot": [["Container", "cuvette"], ["String", "substrates"], ["Device", "enzyme"]], "emit": "fluorescence intensity measurement"}, "result_baseline3": {"opcode": "Fluorescence Assay for Enzyme Activity", "slot": [["Container", "cuvette"], ["String", "substrates"], ["String", "enzyme"]], "emit": "fluorescence intensity recorded"}}, {"i": 1, "sentense": "Keep repeating these additions and measurements until no further change in fluorescence intensity is detected, indicating equilibrium.", "kg": {"protocol": {"title": "Fluorescence Intensity Equilibrium Protocol", "steps": [{"step": 1, "description": "Add a specific amount of reagent A to the sample", "measurement": "Measure the fluorescence intensity"}, {"step": 2, "description": "Add a specific amount of reagent B to the sample", "measurement": "Measure the fluorescence intensity"}, {"step": 3, "description": "Check for any change in fluorescence intensity", "measurement": "Measure the fluorescence intensity"}]}}, "operation": "REPEAT", "entity_list": [], "result_ours": {"opcode": "REPEAT", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "Equilibrium fluorescence intensity."}, "result_dsl": {"opcode": "REPEAT", "slot": [["REG", "Equilibrium fluorescence intensity"], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": ""}, "result_baseline1": {"opcode": "Fluorescence Intensity Measurement", "slot": [["Volume", null], ["Container", "sample"], ["Device", null]], "emit": "Fluorescence intensity readings"}, "result_baseline2": {"opcode": "Repeating", "slot": [["REG", "additions"], ["REG", "measurements"], ["String", "fluorescence intensity"], ["Bool", "equilibrium"]], "emit": "No further change in fluorescence intensity detected"}, "result_baseline3": {"opcode": "REPEAT", "slot": [["String", "additions and measurements"]], "emit": "Change in fluorescence intensity"}}]}, "2": {"subject": "Biomedical & Clinical Research", "enum": 2, "protocol": "For in vivo experiments using ViroMag, the volume of virus injected depends on the viral preparation, injection route, target tissue, and preliminary in vitro results. Keep In vivo ViroMag and saline at room temperature. Use 10 to 20 \u00b5L of In vivo ViroMag for each 1x10^6 infectious viral particles, avoiding exceeding recommended injection volumes.", "compile": [{"i": 0, "sentense": "For in vivo experiments using ViroMag, the volume of virus injected depends on the viral preparation, injection route, target tissue, and preliminary in vitro results.", "kg": {"experiment": {"type": "in vivo", "method": "ViroMag", "variables": {"viral_prep": {"dependent": true, "details": "Depends on viral preparation"}, "injection_route": {"dependent": true, "details": "Depends on injection route"}, "target_tissue": {"dependent": true, "details": "Depends on target tissue"}, "in_vitro_results": {"dependent": true, "details": "Preliminary in vitro results"}}}}, "operation": "DEPEND", "entity_list": [], "result_ours": {"opcode": "CONCENTRATE", "slot": [["Device", null], ["Mass", null], ["REG", null], ["Volume", null], ["Volume", null]], "emit": "information"}, "result_dsl": {"opcode": "CONCENTRATE", "slot": [["Device", null], ["Mass", null], ["REG", null], ["Volume", null], ["Volume", null]], "emit": "information"}, "result_baseline1": {"opcode": "IN VIVO EXPERIMENT", "slot": [["String", "ViroMag"], ["String", "Depends on viral preparation"], ["String", "Depends on injection route"], ["String", "Depends on target tissue"], ["String", "Preliminary in vitro results"]], "emit": "Data analysis"}, "result_baseline2": {"opcode": "INJECT", "slot": [["Device", "ViroMag"], ["Container", null], ["Volume", null], ["Time", null]], "emit": "In vivo results"}, "result_baseline3": {"opcode": "INJECT", "slot": [["Volume", null], ["String", "Virus"], ["String", "ViroMag"], ["String", "Injection route"], ["String", "Target tissue"], ["String", "Preliminary in vitro results"]], "emit": "In vivo experiment results"}}, {"i": 1, "sentense": "Keep In vivo ViroMag and saline at room temperature.", "kg": {"protocol": {"steps": [{"step_number": 1, "description": "Keep In vivo ViroMag at room temperature."}, {"step_number": 2, "description": "Keep saline at room temperature."}]}}, "operation": "KEEP", "entity_list": [["REG", "In vivo ViroMag"], ["REG", "saline"], ["Temperature", "room temperature"]], "result_ours": {"opcode": "KEEP", "slot": [["REG", "In vivo ViroMag"], ["REG", "saline"], ["Temperature", "room temperature"]], "emit": "In vivo ViroMag particles."}, "result_dsl": {"opcode": "KEEP", "slot": [["REG", "In vivo ViroMag"], ["REG", "saline"], ["Temperature", "room temperature"]], "emit": "In vivo ViroMag particles"}, "result_baseline1": {"opcode": "STORAGE", "slot": [["Device", "In vivo ViroMag"], ["Temperature", "room temperature"], ["Device", "saline"], ["Temperature", "room temperature"]], "emit": ""}, "result_baseline2": {"opcode": "storage", "slot": [["Device", "In vivo ViroMag"], ["Container", "saline"], ["Temperature", "room temperature"]], "emit": ""}, "result_baseline3": {"opcode": "KEEP", "slot": [["String", "In vivo ViroMag"], ["String", "saline"], ["Temperature", "room temperature"]], "emit": ""}}, {"i": 2, "sentense": "Use 10 to 20 \u00b5L of In vivo ViroMag for each 1x10^6 infectious viral particles, avoiding exceeding recommended injection volumes.", "kg": {"protocol": {"name": "In vivo ViroMag Injection Protocol", "description": "Inject In vivo ViroMag for viral particle visualization", "components": [{"name": "In vivo ViroMag", "volume_used": "10-20 \u00b5L", "viral_particles_count": "1x10^6", "recommendation": "Avoid exceeding recommended injection volumes"}]}}, "operation": "USE", "entity_list": [], "result_ours": {"opcode": "USE", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "concentrated viral particles"}, "result_dsl": {"opcode": "USE", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "concentrated viral particles"}, "result_baseline1": {"opcode": "INJECT", "slot": [["Device", "In vivo ViroMag"], ["Volume", "10-20 \u00b5L"], ["Concentration", "1x10^6 viral particles"]], "emit": "Visualization of viral particles"}, "result_baseline2": {"opcode": "Injection", "slot": [["Volume", "10-20 \u00b5L"], ["Concentration", "1x10^6 infectious viral particles"], ["Container", "In vivo ViroMag"]], "emit": "Avoid exceeding recommended injection volumes"}, "result_baseline3": {"opcode": "USE", "slot": [["Volume", "10 to 20 \u00b5L"], ["Concentration", "1x10^6 infectious viral particles"], ["String", "In vivo ViroMag"]], "emit": "recommended injection volumes"}}]}, "3": {"subject": "Biomedical & Clinical Research", "enum": 3, "protocol": "Place the larvae in a 1m^3 box filled with dirt. Feed them the specified food 3-4 times daily at 2-3 hour intervals for optimal growth. Continue feeding until the larvae turn into pupae, at which point increase the food quantity. Once pupae become adults, modify their environment by adding water to facilitate mating. After mating, collect the resulting larvae.", "compile": [{"i": 0, "sentense": "Place the larvae in a 1m^3 box filled with dirt.", "kg": {"protocol": {"process": "Place larvae in a 1m^3 box filled with dirt", "materials": {"larvae": "larvae", "box_size": "1m^3", "filling": "dirt"}}}, "operation": "PLACE", "entity_list": [["Volume", "1m^3"]], "result_ours": {"opcode": "PLACE", "slot": [["Volume", "1m^3"]], "emit": "Soil-dwelling larvae"}, "result_dsl": {"opcode": "PLACE", "slot": [["Volume", "1m^3"], ["Container", null], ["Device", "Soil-dwelling larvae"]], "emit": "Environmental conditions"}, "result_baseline1": {"opcode": "Place", "slot": [["Container", "1m^3 box"], ["Device", "larvae"], ["Container", "dirt"]], "emit": ""}, "result_baseline2": {"opcode": "Place", "slot": [["Container", "1m^3 box"], ["String", "dirt"], ["Container", "larvae"]], "emit": ""}, "result_baseline3": {"opcode": "Place", "slot": [["REG", "larvae"], ["Container", "1m^3 box"], ["REG", "dirt"]], "emit": ""}}, {"i": 1, "sentense": "Feed them the specified food 3-4 times daily at 2-3 hour intervals for optimal growth.", "kg": {"protocol": {"description": "Feed the specified food 3-4 times daily at 2-3 hour intervals for optimal growth", "frequency": "3-4 times daily", "interval": "2-3 hours"}}, "operation": "FEED", "entity_list": [], "result_ours": {"opcode": "SEND", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "Optimal growth of cells."}, "result_dsl": {"opcode": "SEND", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "Optimal growth of cells"}, "result_baseline1": {"opcode": "FEED", "slot": [["String", "specified food"], ["Frequency", null], ["Time", null]], "emit": "optimal growth"}, "result_baseline2": {"opcode": "Feed", "slot": [["String", "specified food"], ["Frequency", "3-4 times daily"], ["Time", "2-3 hour intervals"]], "emit": ""}, "result_baseline3": {"opcode": "FEED", "slot": [["String", "the specified food"], ["Frequency", "3-4 times daily"], ["Time", "2-3 hour intervals"]], "emit": "optimal growth"}}, {"i": 2, "sentense": "Continue feeding until the larvae turn into pupae, at which point increase the food quantity.", "kg": {"protocol": {"description": "Continue feeding larvae until they turn into pupae, then increase food quantity", "steps": [{"name": "Feed larvae", "instructions": "Continue feeding larvae with regular food quantity"}, {"name": "Larvae turn into pupae", "instructions": "Once larvae have turned into pupae, increase food quantity"}]}}, "operation": "INCREASE", "entity_list": [], "result_ours": {"opcode": "INCREASE", "slot": [["REG", null], ["Concentration", null], ["Concentration", null]], "emit": "pupae with increased food intake"}, "result_dsl": {"opcode": "INCREASE", "slot": [["REG", null], ["Concentration", null], ["Concentration", null]], "emit": "pupae with increased food intake"}, "result_baseline1": {"opcode": "Feed larvae", "slot": [["String", "Regular food quantity"], ["Device", null]], "emit": ""}, "result_baseline2": {"opcode": "FEED", "slot": [["Time", null], ["String", "larvae to pupae"], ["String", "increase food quantity"]], "emit": "healthy pupae"}, "result_baseline3": {"opcode": "FEEDING", "slot": [["REG", "larvae"], ["REG", "pupae"], ["Volume", null]], "emit": "Increased food quantity"}}, {"i": 3, "sentense": "Once pupae become adults, modify their environment by adding water to facilitate mating.", "kg": {"protocol": {"title": "Facilitating mating in adult pupae", "steps": [{"description": "Wait until pupae become adults", "action": "observe pupae until they have fully developed into adult insects"}, {"description": "Modify environment", "action": "add water to the environment to facilitate mating"}]}}, "operation": "MODIFY", "entity_list": [], "result_ours": {"opcode": "MODIFY", "slot": [["REG", null], ["REG", null], ["Time", null], ["REG", null], ["REG", null]], "emit": "Mated adults"}, "result_dsl": {"opcode": "MODIFY", "slot": [["REG", null], ["REG", null], ["Time", null], ["REG", null], ["REG", null]], "emit": "Mated adults"}, "result_baseline1": {"opcode": "Facilitating mating in adult pupae", "slot": [["Time", null], ["Container", "water"]], "emit": ""}, "result_baseline2": {"opcode": "modify_environment", "slot": [["Time", null], ["Container", "pupae"], ["Volume", "water"]], "emit": "facilitate mating"}, "result_baseline3": {"opcode": "modify environment", "slot": [["REG", "pupae"], ["REG", "adults"], ["Volume", "water"]], "emit": "facilitated mating"}}, {"i": 4, "sentense": "After mating, collect the resulting larvae.", "kg": {"protocol": {"name": "larvae collection after mating", "description": "After mating, collect the resulting larvae", "steps": [{"step_number": 1, "action": "mating", "description": "Allow the organisms to mate", "conditions": []}, {"step_number": 2, "action": "larvae collection", "description": "Collect the resulting larvae", "conditions": []}]}}, "operation": "COLLECT", "entity_list": [], "result_ours": {"opcode": "COLLECT", "slot": [["REG", null], ["Container", null], ["Force", null], ["Time", null]], "emit": "resulting larvae, collected"}, "result_dsl": {"opcode": "COLLECT", "slot": [["REG", null], ["Container", null], ["Force", null], ["Time", null]], "emit": "resulting larvae, collected"}, "result_baseline1": {"opcode": "larvae collection", "slot": [["REG", null], ["REG", null], ["Device", null]], "emit": "resulting larvae"}, "result_baseline2": {"opcode": "Collect", "slot": [["Time", null], ["String", "resulting larvae"]], "emit": "Larvae collection"}, "result_baseline3": {"opcode": "COLLECT", "slot": [["REG", "mating"], ["REG", "larvae"]], "emit": "larvae"}}]}, "4": {"subject": "Biomedical & Clinical Research", "enum": 4, "protocol": "Larvae Experiment Protocol: Preparation: Place larvae in a pre-filled 1m\u00b3 box with dirt. Feeding: Administer specific food 3-4 times daily at 2-3 hour intervals for optimal growth. Monitoring: Continue feeding until larvae transition to pupals, increasing food supply at this stage. Environmental Change: Upon reaching adulthood, introduce water to the dirt environment for mating. Larvae Collection: Post-mating, collect new larvae.", "compile": [{"i": 0, "sentense": "Larvae Experiment Protocol: Preparation: Place larvae in a pre-filled 1m\u00b3 box with dirt.", "kg": {"protocol": {"name": "Larvae Experiment Protocol", "steps": [{"step_number": 1, "description": "Preparation", "actions": ["Place larvae in a pre-filled 1m\u00b3 box with dirt"]}]}}, "operation": "PLACE", "entity_list": [], "result_ours": {"opcode": "PLACE", "slot": [["REG", null], ["REG", null], ["REG", null]], "emit": "soil samples"}, "result_dsl": {"opcode": "PLACE", "slot": [["REG", "soil samples"], ["REG", null], ["REG", null]], "emit": ""}, "result_baseline1": {"opcode": "Preparation", "slot": [["Container", "1m\u00b3 box"], ["Container", "dirt"]], "emit": ""}, "result_baseline2": {"opcode": "Preparation", "slot": [["Container", "1m\u00b3 box"], ["Volume", "full"], ["String", "dirt"]], "emit": ""}, "result_baseline3": {"opcode": "PREPARATION", "slot": [["Container", "1m\u00b3 box"], ["Volume", "dirt"], ["REG", "larvae"]], "emit": "Prepared box with larvae"}}, {"i": 1, "sentense": "Feeding: Administer specific food 3-4 times daily at 2-3 hour intervals for optimal growth.", "kg": {"protocol": {"title": "Feeding Protocol for Optimal Growth", "description": "Administer specific food 3-4 times daily at 2-3 hour intervals for optimal growth.", "steps": [{"step_number": 1, "action": "Administer specific food", "frequency": "3-4 times daily", "interval": "2-3 hours"}]}}, "operation": "ADMINISTER", "entity_list": [], "result_ours": {"opcode": "DISTRIBUTE", "slot": [["Container", null], ["Container", null], ["Container", null]], "emit": "Well-nourished cells"}, "result_dsl": {"opcode": "DISTRIBUTE", "slot": [["Container", null], ["Container", null], ["Container", null]], "emit": "Well-nourished cells"}, "result_baseline1": {"opcode": "Administer specific food", "slot": [["Frequency", "3-4 times daily"], ["Time", "2-3 hours"], ["Container", null]], "emit": ""}, "result_baseline2": {"opcode": "Feeding", "slot": [["String", "specific food"], ["Frequency", "3-4 times daily"], ["Time", "2-3 hour intervals"]], "emit": ""}, "result_baseline3": {"opcode": "FEEDING", "slot": [["String", "specific food"], ["Time", "3-4 times daily at 2-3 hour intervals"]], "emit": "optimal growth"}}, {"i": 2, "sentense": "Monitoring: Continue feeding until larvae transition to pupals, increasing food supply at this stage.", "kg": {"protocol": {"Monitoring": "Continue feeding until larvae transition to pupals, increasing food supply at this stage"}}, "operation": "CONTINUE", "entity_list": [], "result_ours": {"opcode": "CONTINUE", "slot": [["REG", null], ["REG", null], ["REG", null]], "emit": "pupal stage"}, "result_dsl": {"opcode": "CONTINUE", "slot": [["REG", null], ["REG", null], ["REG", null]], "emit": "pupal stage"}, "result_baseline1": {"opcode": "Monitoring", "slot": [["String", "Continue feeding until larvae transition to pupals, increasing food supply at this stage"], ["Bool", null]], "emit": ""}, "result_baseline2": {"opcode": "Monitor", "slot": [["Time", null], ["String", "Transition to pupals"], ["String", "Increase food supply"]], "emit": "Continued feeding"}, "result_baseline3": {"opcode": "MONITORING", "slot": [["Time", "until larvae transition to pupals"], ["Mass", "increasing food supply"]], "emit": ""}}, {"i": 3, "sentense": "Environmental Change: Upon reaching adulthood, introduce water to the dirt environment for mating.", "kg": {"protocol": {"title": "Environmental Change for Mating", "steps": [{"step_number": 1, "description": "Once the organism reaches adulthood", "actions": [{"action": "Introduce water", "target": "dirt environment", "purpose": "for mating"}]}]}}, "operation": "INTRODUCE", "entity_list": [], "result_ours": {"opcode": "INTRODUCE", "slot": [["Volume", null], ["REG", null], ["Device", null], ["Length", null], ["Device", null]], "emit": "\"Water-based mating conditions\""}, "result_dsl": {"opcode": "INTRODUCE", "slot": [["Volume", null], ["REG", null], ["Device", null], ["Length", null], ["Device", null]], "emit": "Water-based mating conditions"}, "result_baseline1": {"opcode": "Introduce water", "slot": [["Container", "dirt environment"], ["String", "for mating"], ["Volume", null]], "emit": ""}, "result_baseline2": {"opcode": "Environmental Change", "slot": [["Time", null], ["Container", "dirt"], ["Volume", "water"]], "emit": "Mating"}, "result_baseline3": {"opcode": "Environmental Change", "slot": [["Time", "adulthood"], ["Volume", "water"], ["String", "dirt environment"], ["String", "mating"]], "emit": ""}}, {"i": 4, "sentense": "Larvae Collection: Post-mating, collect new larvae.", "kg": {"protocol": {"name": "Larvae Collection Protocol", "steps": [{"step": 1, "description": "Post-mating, collect new larvae."}]}}, "operation": "COLLECT", "entity_list": [], "result_ours": {"opcode": "COLLECT", "slot": [["REG", null], ["Container", null], ["Force", null], ["Time", null]], "emit": "Newly hatched larvae."}, "result_dsl": {"opcode": "COLLECT", "slot": [["REG", "Newly hatched larvae"], ["Container", null], ["Force", null], ["Time", null]], "emit": ""}, "result_baseline1": {"opcode": "COLLECT", "slot": [["Container", null], ["Time", null], ["String", "Post-mating, collect new larvae."]], "emit": ""}, "result_baseline2": {"opcode": "Larvae_Collection", "slot": [["Time", "Post-mating"], ["String", "new larvae"]], "emit": ""}, "result_baseline3": {"opcode": "COLLECT", "slot": [["String", "Larvae"], ["Time", "Post-mating"]], "emit": "new larvae"}}]}}, "Ecology & Environmental Biology": {"0": {"subject": "Ecology & Environmental Biology", "enum": 0, "protocol": "Thaw frozen samples to room temperature. For homogenization, sterilize a metal spatula, transfer ~50g of sample into an Erlenmeyer flask, add 2 ml of sterilized tap water, and homogenize. Next, place ~20g of homogenized sample into a tissue culture flask, add 20 ml of MDV medium, and gently shake. Autoclave the samples in Erlenmeyer flasks for 15 minutes at 121\u00b0C. Repeat the process of adding sterilized sample and MDV medium to the culture flask, gently shaking for even distribution. Repeat these steps (2.2-2.5) for all samples, including positive controls.", "compile": [{"i": 0, "sentense": "Thaw frozen samples to room temperature.", "kg": {"protocol": {"steps": [{"step_number": 1, "description": "Thaw frozen samples to room temperature"}]}}, "operation": "THAW", "entity_list": [["Temperature", "room temperature"]], "result_ours": {"opcode": "CHANGE", "slot": [["Temperature", "room temperature"]], "emit": "Room temperature samples."}, "result_dsl": {"opcode": "CHANGE", "slot": [["Temperature", "room temperature"]], "emit": "Room temperature samples"}, "result_baseline1": {"opcode": "Thaw", "slot": [["Container", null]], "emit": "Room temperature samples"}, "result_baseline2": {"opcode": "Thaw", "slot": [["REG", "frozen samples"], ["Temperature", "room temperature"], ["Time", null]], "emit": "Ready for further processing"}, "result_baseline3": {"opcode": "THAW", "slot": [["Temperature", "room temperature"]], "emit": "Thawed samples"}}, {"i": 1, "sentense": "For homogenization, sterilize a metal spatula, transfer ~50g of sample into an Erlenmeyer flask, add 2 ml of sterilized tap water, and homogenize.", "kg": {"protocol": {"steps": [{"step_number": 1, "description": "Sterilize a metal spatula"}, {"step_number": 2, "description": "Transfer ~50g of sample into an Erlenmeyer flask"}, {"step_number": 3, "description": "Add 2 ml of sterilized tap water into the Erlenmeyer flask"}, {"step_number": 4, "description": "Homogenize the sample"}], "materials": [{"name": "metal spatula", "treatment": "sterilized"}, {"name": "Erlenmeyer flask", "sterilized": true}, {"name": "tap water", "quantity": "2 ml", "sterilized": true}], "sample": {"type": "unknown", "quantity": "~50g"}}}, "operation": "STERILIZE", "entity_list": [["Container", "Erlenmeyer flask"]], "result_ours": {"opcode": "RINSE", "slot": [["Container", "Erlenmeyer flask"], ["Volume", null], ["Volume", null]], "emit": "homogenized sample"}, "result_dsl": {"opcode": "RINSE", "slot": [["Container", "Erlenmeyer flask"], ["Volume", null], ["Volume", null]], "emit": "homogenized sample"}, "result_baseline1": {"opcode": "HOMOGENIZE", "slot": [["Mass", "~50g"], ["Container", "Erlenmeyer flask"], ["Volume", "2 ml"]], "emit": "Homogenized sample"}, "result_baseline2": {"opcode": "homogenization", "slot": [["Mass", "50g"], ["Container", "Erlenmeyer flask"], ["Volume", "2 ml"], ["String", "sterilized tap water"]], "emit": "homogenized sample"}, "result_baseline3": {"opcode": "HOMOGENIZE", "slot": [["Device", "metal spatula"], ["Mass", "~50g"], ["Container", "Erlenmeyer flask"], ["Volume", "2 ml"], ["String", "sterilized tap water"]], "emit": "Homogenized sample"}}, {"i": 2, "sentense": "Next, place ~20g of homogenized sample into a tissue culture flask, add 20 ml of MDV medium, and gently shake.", "kg": {"ExperimentalProtocol": {"Step1": {"Action": "Place homogenized sample into tissue culture flask", "Amount": "20g"}, "Step2": {"Action": "Add MDV medium", "Amount": "20ml"}, "Step3": {"Action": "Gently shake"}}}, "operation": "PLACE", "entity_list": [["REG", "homogenized sample"], ["Container", "tissue culture flask"], ["Volume", "20 ml"], ["REG", "MDV medium"]], "result_ours": {"opcode": "PLACE", "slot": [["REG", "homogenized sample"], ["Container", "tissue culture flask"], ["Volume", "20 ml"], ["REG", "MDV medium"]], "emit": "MDV medium and homogenized sample"}, "result_dsl": {"opcode": "PLACE", "slot": [["REG", "homogenized sample"], ["Container", "tissue culture flask"], ["Volume", "20 ml"], ["REG", "MDV medium"]], "emit": "MDV medium and homogenized sample"}, "result_baseline1": {"opcode": "GROW", "slot": [["Container", "tissue culture flask"], ["Mass", "20g"], ["Volume", "20ml"]], "emit": "Gently shake"}, "result_baseline2": {"opcode": "Place", "slot": [["Mass", "20g"], ["Container", "tissue culture flask"], ["Volume", "20ml"], ["String", "MDV medium"], ["String", "gently shake"]], "emit": ""}, "result_baseline3": {"opcode": "PLACE", "slot": [["Mass", "20g"], ["Container", "tissue culture flask"], ["Volume", "20 ml"], ["String", "MDV medium"]], "emit": "Gently shake"}}, {"i": 3, "sentense": "Autoclave the samples in Erlenmeyer flasks for 15 minutes at 121\u00b0C.", "kg": {"protocol": {"step1": {"action": "Autoclave", "samples": "in Erlenmeyer flasks", "time": "15 minutes", "temperature": "121\u00b0C"}}}, "operation": "AUTOCLAVE", "entity_list": [["Container", "Erlenmeyer flasks"], ["Time", "15 minutes"], ["Temperature", "121\u00b0C"]], "result_ours": {"opcode": "RINSE", "slot": [["Container", "Erlenmeyer flasks"], ["Time", "15 minutes"], ["Temperature", "121\u00b0C"]], "emit": "sterilized samples"}, "result_dsl": {"opcode": "RINSE", "slot": [["Container", "Erlenmeyer flasks"], ["Time", "15 minutes"], ["Temperature", "121\u00b0C"]], "emit": "sterilized samples"}, "result_baseline1": {"opcode": "Autoclave", "slot": [["Container", "Erlenmeyer flasks"], ["Time", "15 minutes"], ["Temperature", "121\u00b0C"]], "emit": ""}, "result_baseline2": {"opcode": "Autoclave", "slot": [["Container", "Erlenmeyer flask"], ["Time", "15 minutes"], ["Temperature", "121\u00b0C"]], "emit": ""}, "result_baseline3": {"opcode": "AUTOCLAVE", "slot": [["Container", "Erlenmeyer flasks"], ["Time", "15 minutes"], ["Temperature", "121\u00b0C"]], "emit": "Autoclaved samples"}}, {"i": 4, "sentense": "Repeat the process of adding sterilized sample and MDV medium to the culture flask, gently shaking for even distribution.", "kg": {"protocol": {"title": "Repeated addition of sterilized sample and MDV medium to culture flask", "steps": [{"description": "Add sterilized sample to culture flask"}, {"description": "Add MDV medium to culture flask"}, {"description": "Gently shake for even distribution"}]}}, "operation": "REPEAT", "entity_list": [], "result_ours": {"opcode": "REPEAT", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "cultured cells"}, "result_dsl": {"opcode": "REPEAT", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "cultured cells"}, "result_baseline1": {"opcode": "Culture", "slot": [["Container", "culture flask"], ["String", "sterilized sample"], ["Container", "MDV medium"]], "emit": "Even distribution"}, "result_baseline2": {"opcode": "REPEAT", "slot": [["String", "add sterilized sample and MDV medium to the culture flask"], ["String", "shake gently for even distribution"]], "emit": "N/A"}, "result_baseline3": {"opcode": "REPEAT", "slot": [["REG", "sterilized sample"], ["REG", "MDV medium"], ["Container", "culture flask"], ["String", "gently shaking"]], "emit": "even distribution"}}, {"i": 5, "sentense": "Repeat these steps (2.2-2.5) for all samples, including positive controls.", "kg": {"protocol": {"steps": [{"step_number": 1, "description": "Repeat steps 2.2-2.5 for all samples, including positive controls."}]}}, "operation": "REPEAT", "entity_list": [], "result_ours": {"opcode": "REPEAT", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "analyzed results"}, "result_dsl": {"opcode": "REPEAT", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "analyzed results"}, "result_baseline1": {"opcode": "Repeat", "slot": [["Container", null]], "emit": "Positive controls"}, "result_baseline2": {"opcode": "REPEAT", "slot": [["Container", null], ["Time", null]], "emit": "Results analysis"}, "result_baseline3": {"opcode": "REPEAT", "slot": [["String", "steps 2.2-2.5"], ["String", "all samples"], ["String", "positive controls"]], "emit": ""}}]}, "1": {"subject": "Ecology & Environmental Biology", "enum": 1, "protocol": "For habituation, mice were placed at the ladder's start and encouraged to move forward using air puffs, repeating until they were accustomed to walking on the rungs. Motor performance was assessed by recording the time and number of foot slips as mice crossed the ladder, with trials repeated 4-5 times daily after a 15-minute interval for 3-4 days to evaluate motor learning. Data analysis involved calculating daily averages of time and foot slips and comparing these between groups. If a mouse failed to place its paws correctly or slipped, this was noted for further analysis, and if video recording was possible, missteps were reviewed afterward.", "compile": [{"i": 0, "sentense": "For habituation, mice were placed at the ladder's start and encouraged to move forward using air puffs, repeating until they were accustomed to walking on the rungs.", "kg": {"protocol": {"name": "Ladder Habituation Protocol", "description": "Protocol for habituating mice to walking on a ladder with the use of air puffs", "steps": [{"step": 1, "description": "Place mice at the start of the ladder"}, {"step": 2, "description": "Encourage mice to move forward using air puffs"}, {"step": 3, "description": "Repeat process until mice are accustomed to walking on the rungs"}]}}, "operation": "ENCOURAGE", "entity_list": [], "result_ours": {"opcode": "ALLOW", "slot": [["Time", null], ["Temperature", null], ["String", null]], "emit": "trained mice"}, "result_dsl": {"opcode": "trained", "slot": [["Time", null], ["Temperature", null], ["String", null]], "emit": "mice"}, "result_baseline1": {"opcode": "HABITUATION", "slot": [["Container", "ladder"], ["Bool", null], ["String", "air puffs"]], "emit": "Mice habituated to walking on the ladder"}, "result_baseline2": {"opcode": "habituation", "slot": [["Container", "ladder"], ["Container", "mice"], ["String", "air puffs"]], "emit": "habituated to walking on rungs"}, "result_baseline3": {"opcode": "HABITUATE", "slot": [["REG", "mice"], ["Device", "ladder"], ["Device", "air puffs"], ["REG", "rungs"], ["String", "move forward"]], "emit": "accustomed mice"}}, {"i": 1, "sentense": "Motor performance was assessed by recording the time and number of foot slips as mice crossed the ladder, with trials repeated 4-5 times daily after a 15-minute interval for 3-4 days to evaluate motor learning.", "kg": {"protocol": {"experimental_setup": "Assessment of motor performance in mice crossing a ladder", "parameters": {"measurement": "Time and number of foot slips", "repetitions": 4, "daily_trials": 4, "interval": 15, "duration": "3-4 days"}, "evaluation": {"outcome": "Motor learning", "method": "Analysis of time and foot slips recorded during trials"}}}, "operation": "RECORD", "entity_list": [["Time", "time"]], "result_ours": {"opcode": "RECORD", "slot": [["REG", null], ["Time", "time"]], "emit": "Motor learning data"}, "result_dsl": {"opcode": "RECORD", "slot": [["REG", null], ["Time", "time"]], "emit": "Motor learning data"}, "result_baseline1": {"opcode": "ASSESS", "slot": [["String", "Assessment of motor performance in mice crossing a ladder"], ["Time", null], ["Volume", null]], "emit": "Motor learning"}, "result_baseline2": {"opcode": "ASSESS", "slot": [["Time", null], ["Length", null], ["Container", "ladder"], ["Container", "mice"], ["Time", "15 minutes"], ["Volume", null], ["Time", "3-4 days"], ["Volume", null]], "emit": "Motor performance assessment"}, "result_baseline3": {"opcode": "ASSESS", "slot": [["Time", null], ["REG", "foot slips"], ["REG", "mice"], ["REG", "ladder"], ["Time", "4-5 times daily"], ["Time", "15-minute interval"], ["Time", "3-4 days"]], "emit": "motor learning evaluation"}}, {"i": 2, "sentense": "Data analysis involved calculating daily averages of time and foot slips and comparing these between groups.", "kg": {"protocol": {"description": "Data analysis protocol involving calculating daily averages of time and foot slips and comparing between groups", "steps": [{"step_number": 1, "action": "Calculate daily average of time and foot slips", "description": "Calculate the average time and number of foot slips for each day of the experiment"}, {"step_number": 2, "action": "Compare daily averages between groups", "description": "Compare the daily averages of time and foot slips between the different experimental groups"}]}}, "operation": "COMPARE", "entity_list": [], "result_ours": {"opcode": "COMPARE", "slot": [["Temperature", null], ["REG", null], ["REG", null], ["Device", null], ["String", null]], "emit": "comparison of groups' daily averages"}, "result_dsl": {"opcode": "COMPARE", "slot": [["Temperature", null], ["REG", null], ["REG", null], ["Device", null], ["String", null]], "emit": "comparison of groups' daily averages"}, "result_baseline1": {"opcode": "Data analysis", "slot": [["String", "Calculate daily average of time and foot slips"], ["String", "Compare daily averages between groups"], ["String", null]], "emit": "Calculate the average time and number of foot slips for each day of the experiment"}, "result_baseline2": {"opcode": "Data analysis", "slot": [["Time", null], ["String", "daily averages"], ["String", "foot slips"], ["String", "comparing"], ["String", "groups"]], "emit": "Statistical comparison results"}, "result_baseline3": {"opcode": "ANALYZE", "slot": [["Time", "daily averages"], ["REG", "foot slips"], ["REG", "groups"]], "emit": "comparison results"}}, {"i": 3, "sentense": "If a mouse failed to place its paws correctly or slipped, this was noted for further analysis, and if video recording was possible, missteps were reviewed afterward.", "kg": {"protocol": {"description": "Experimental protocol for analyzing mouse behavior in placing paws correctly and slipping", "steps": [{"step_number": 1, "description": "Observe mouse behavior in placing paws correctly", "action": "Note if mouse fails to place its paws correctly"}, {"step_number": 2, "description": "Observe mouse behavior in slipping", "action": "Note if mouse slips"}, {"step_number": 3, "description": "Further analysis", "action": "Review noted missteps for further analysis"}, {"step_number": 4, "description": "Video recording", "action": "If possible, record video of mouse behavior for review"}]}}, "operation": "NOTED", "entity_list": [], "result_ours": {"opcode": "NOTE", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "video recordings, missteps"}, "result_dsl": {"opcode": "video recordings", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "missteps"}, "result_baseline1": {"opcode": "", "slot": [["String", "Observe mouse behavior in placing paws correctly"], ["Bool", null]], "emit": ""}, "result_baseline2": {"opcode": "Record Missteps", "slot": [["Device", null], ["String", "video recording"], ["Bool", null]], "emit": "Review Missteps"}, "result_baseline3": {"opcode": "ANALYZE", "slot": [["REG", "mouse"], ["Bool", "failed to place its paws correctly"], ["Bool", "slipped"], ["REG", "further analysis"], ["Bool", "video recording possible"], ["REG", "missteps reviewed afterward"]], "emit": "noted"}}]}, "2": {"subject": "Ecology & Environmental Biology", "enum": 2, "protocol": "Premoisten 3 swabs with 1.5 mL of PBST solution and press out excess against the tube's wall. In parallel, for each sampling location, swab target surfaces three times using the 3 swabs together, rotating and switching order each time to ensure consistent application. Return swabs to the tube after breaking at the breakpoint. Collect two negative field controls, one at the start and end of the session, and prepare two unopened PBST tubes as negative media controls. Store all samples in a cooler with ice for up to 12 hours. This method emphasizes parallel actions in swabbing and sample preparation, aligning with a parallel-for execution model in experimental procedures.", "compile": [{"i": 0, "sentense": "Premoisten 3 swabs with 1.5 mL of PBST solution and press out excess against the tube's wall.", "kg": {"protocol": {"steps": [{"step_number": 1, "action": "Premoisten 3 swabs", "details": "Moisten with 1.5 mL of PBST solution"}, {"step_number": 2, "action": "Press out excess against the tube's wall"}]}}, "operation": "MOISTEN", "entity_list": [["Volume", "1.5 mL"], ["Concentration", "PBST solution"]], "result_ours": {"opcode": "RINSE", "slot": [["Volume", "1.5 mL"], ["Concentration", "PBST solution"]], "emit": "moistened swabs"}, "result_dsl": {"opcode": "RINSE", "slot": [["Volume", "1.5 mL"], ["Concentration", "PBST solution"]], "emit": "moistened swabs"}, "result_baseline1": {"opcode": "Premoisten", "slot": [["Volume", "1.5 mL"], ["Container", "swabs"]], "emit": "Moistened swabs"}, "result_baseline2": {"opcode": "Preparation", "slot": [["Volume", "1.5 mL"], ["Container", "tube"], ["String", "PBST solution"]], "emit": "Premoistened swabs"}, "result_baseline3": {"opcode": "PREMOISTEN", "slot": [["REG", "swabs"], ["Volume", "3"], ["REG", "PBST solution"], ["Volume", "1.5 mL"]], "emit": "Prepared swabs"}}, {"i": 1, "sentense": "In parallel, for each sampling location, swab target surfaces three times using the 3 swabs together, rotating and switching order each time to ensure consistent application.", "kg": {"protocol": {"description": "Swabbing target surfaces at each sampling location three times using 3 swabs together, rotating and switching order each time for consistent application", "steps": [{"step_number": 1, "action": "Swab target surfaces", "details": "Using 3 swabs together", "notes": "Rotate and switch order each time"}]}}, "operation": "SWAB", "entity_list": [], "result_ours": {"opcode": "RINSE", "slot": [["Device", null], ["Device", null], ["Concentration", null], ["Time", null]], "emit": "swabbed surfaces"}, "result_dsl": {"opcode": "RINSE", "slot": [["Device", null], ["Device", null], ["Concentration", null], ["Time", null]], "emit": "swabbed surfaces"}, "result_baseline1": {"opcode": "Swabbing", "slot": [["Container", "3 swabs"], ["String", null]], "emit": "Collected samples"}, "result_baseline2": {"opcode": "SWAB", "slot": [["Container", "3 swabs"], ["String", "rotating and switching order each time"], ["String", "ensure consistent application"]], "emit": "Sampling locations"}, "result_baseline3": {"opcode": "SWAB", "slot": [["REG", "sampling location"], ["String", "target surfaces"], ["REG", "3 swabs"], ["String", "rotating and switching order"], ["Time", "three times"]], "emit": "consistent application"}}, {"i": 2, "sentense": "Return swabs to the tube after breaking at the breakpoint.", "kg": {"protocol": {"steps": [{"step_number": 1, "description": "Break the swab at the breakpoint."}, {"step_number": 2, "description": "Return the swabs to the tube."}], "note": "Swabs should be returned to the tube after breaking at the breakpoint."}}, "operation": "RETURN", "entity_list": [["REG", "swabs"], ["Container", "tube"], ["REG", "breakpoint"]], "result_ours": {"opcode": "RETURN", "slot": [["REG", "swabs"], ["Container", "tube"], ["REG", "breakpoint"]], "emit": "Returned swabs"}, "result_dsl": {"opcode": "RETURN", "slot": [["REG", "swabs"], ["Container", "tube"], ["REG", "breakpoint"]], "emit": "Returned swabs"}, "result_baseline1": {"opcode": "Swab Processing", "slot": [["Container", "Swab"], ["Container", "Tube"]], "emit": "Processed swabs in the tube"}, "result_baseline2": {"opcode": "Return Swabs", "slot": [["Container", "tube"], ["Device", "swabs"], ["String", "breakpoint"], ["Bool", false]], "emit": "Protocol completed"}, "result_baseline3": {"opcode": "Return", "slot": [["Container", "tube"], ["String", "after breaking at the breakpoint"]], "emit": "swabs"}}, {"i": 3, "sentense": "Collect two negative field controls, one at the start and end of the session, and prepare two unopened PBST tubes as negative media controls.", "kg": {"protocol": {"steps": [{"description": "Collect two negative field controls", "details": "One at the start and end of the session"}, {"description": "Prepare two unopened PBST tubes", "details": "As negative media controls"}]}}, "operation": "COLLECT", "entity_list": [["Container", "PBST tubes"]], "result_ours": {"opcode": "COLLECT", "slot": [["REG", null], ["Container", "PBST tubes"]], "emit": "field controls, PBST tubes"}, "result_dsl": {"opcode": "COLLECT", "slot": [["REG", null], ["Container", "PBST tubes"]], "emit": "field controls, PBST tubes"}, "result_baseline1": {"opcode": "COLLECT AND PREPARE", "slot": [["Volume", null], ["Container", "PBST tubes"], ["String", "negative media controls"]], "emit": "Two negative field controls and two unopened PBST tubes"}, "result_baseline2": {"opcode": "Collect", "slot": [["Container", "negative field control"], ["Time", "start of session"], ["Time", "end of session"], ["Container", "unopened PBST tube"], ["String", "negative media control"]], "emit": "Prepared samples"}, "result_baseline3": {"opcode": "COLLECT", "slot": [["REG", "two negative field controls"], ["Time", "start"], ["Time", "end"], ["Container", "two unopened PBST tubes"]], "emit": "negative media controls"}}, {"i": 4, "sentense": "Store all samples in a cooler with ice for up to 12 hours.", "kg": {"protocol": {"steps": [{"step_number": 1, "action": "Store samples in a cooler with ice", "details": "Store samples in the cooler with ice for up to 12 hours"}], "duration": "Up to 12 hours"}}, "operation": "STORE", "entity_list": [["Time", "12 hours"]], "result_ours": {"opcode": "COLLECT", "slot": [["Time", "12 hours"]], "emit": "Preserved samples."}, "result_dsl": {"opcode": "COLLECT", "slot": [["Time", "12 hours"]], "emit": "Preserved samples"}, "result_baseline1": {"opcode": "Store samples", "slot": [["Container", "cooler with ice"], ["Time", "Up to 12 hours"]], "emit": ""}, "result_baseline2": {"opcode": "STORE", "slot": [["Container", "samples"], ["Temperature", "ice"], ["Time", "12 hours"]], "emit": ""}, "result_baseline3": {"opcode": "STORE", "slot": [["Container", "cooler"], ["Temperature", "ice"], ["Time", "12 hours"]], "emit": "samples"}}, {"i": 5, "sentense": "This method emphasizes parallel actions in swabbing and sample preparation, aligning with a parallel-for execution model in experimental procedures.", "kg": {"protocol": {"name": "Parallel Swabbing and Sample Preparation Protocol", "description": "This method emphasizes parallel actions in swabbing and sample preparation, aligning with a parallel-for execution model in experimental procedures.", "steps": [{"name": "Swabbing", "description": "Perform swabbing of the sample material using multiple swabs simultaneously."}, {"name": "Sample Preparation", "description": "Conduct sample preparation concurrently with swabbing to optimize time and resources."}]}}, "operation": "EMPHASIZE", "entity_list": [], "result_ours": {"opcode": "DEFINE", "slot": [["Time", null], ["Time", null], ["Time", null], ["Length", null], ["Container", null]], "emit": "prepared samples with parallel-for execution"}, "result_dsl": {"opcode": "DEFINE", "slot": [["Time", null], ["Time", null], ["Time", null], ["Length", null], ["Container", null]], "emit": "prepared samples with parallel-for execution"}, "result_baseline1": {"opcode": "Parallel Swabbing and Sample Preparation Protocol", "slot": [["String", "Perform swabbing of the sample material using multiple swabs simultaneously."], ["String", "Conduct sample preparation concurrently with swabbing to optimize time and resources."]], "emit": ""}, "result_baseline2": {"opcode": "PARALLEL_EXECUTION", "slot": [["Container", "swab"], ["Container", "sample"]], "emit": "Sample preparation"}, "result_baseline3": {"opcode": "SWAB_AND_PREPARE", "slot": [["String", "parallel actions"], ["String", "swabbing"], ["String", "sample preparation"], ["String", "parallel-for execution model"], ["String", "experimental procedures"]], "emit": "Sample preparations"}}]}, "3": {"subject": "Ecology & Environmental Biology", "enum": 3, "protocol": "Premoisten 3 swabs with 1.5 mL of buffer solution (Phosphate Buffered Saline with 0.02% Tween 80, PBST) in a 15 mL falcon tube. Press out excess solution inside the tube, swab target surfaces three times using 3 swabs together, ensuring consistent pressure and speed, and rotate swabs for each sampling. Break the swab at its breakpoint and return it to the falcon tube. Collect two negative field controls, one at the start and one at the end of sampling, and prepare two unopened tubes of PBST as negative media controls. Store all samples in a cooler with ice for up to 12 hours during collection. Proceed with swab extraction, sample aggregation, and subsequent cultivation as per the experimental setup.", "compile": [{"i": 0, "sentense": "Premoisten 3 swabs with 1.5 mL of buffer solution (Phosphate Buffered Saline with 0.02% Tween 80, PBST) in a 15 mL falcon tube."}, {"i": 1, "sentense": "Press out excess solution inside the tube, swab target surfaces three times using 3 swabs together, ensuring consistent pressure and speed, and rotate swabs for each sampling.", "kg": {"protocol": {"steps": [{"step": "Press out excess solution inside the tube", "details": "Ensure excess solution inside the tube is removed before swabbing target surfaces"}, {"step": "Swab target surfaces three times using 3 swabs together", "details": "Ensure consistent pressure and speed while swabbing and rotate swabs for each sampling"}]}}, "operation": "PRESS", "entity_list": [], "result_ours": {"opcode": "PRESS", "slot": [["REG", null], ["Time", null]], "emit": "samples of target surfaces"}, "result_dsl": {"opcode": "PRESS", "slot": [["REG", null], ["Time", null]], "emit": "samples of target surfaces"}, "result_baseline1": {"opcode": "CollectSamples", "slot": [["Container", null], ["String", "target surfaces"], ["Volume", null]], "emit": "Swab samples"}, "result_baseline2": {"opcode": "Sampling", "slot": [["Container", "Tube"], ["String", "Excess solution"], ["Volume", "3 swabs"], ["Bool", "Consistent pressure"], ["Bool", "Consistent speed"], ["Bool", "Rotate swabs for each sampling"]], "emit": "Sample collection completed"}, "result_baseline3": {"opcode": "SWAB", "slot": [["REG", "excess solution"], ["Device", "tube"], ["REG", "target surfaces"], ["REG", "3 swabs"], ["Time", "consistent pressure and speed"], ["REG", "rotate swabs"], ["REG", "each sampling"]], "emit": "Swabbed samples"}}, {"i": 2, "sentense": "Break the swab at its breakpoint and return it to the falcon tube.", "kg": {"protocol": {"steps": [{"description": "Break the swab at its breakpoint", "action": "break", "target": "swab", "location": "breakpoint"}, {"description": "Return the swab to the falcon tube", "action": "return", "target": "swab", "location": "falcon tube"}]}}, "operation": "RETURN", "entity_list": [], "result_ours": {"opcode": "RETURN", "slot": [["REG", null], ["REG", null], ["Device", null], ["Device", null]], "emit": "broken swab"}, "result_dsl": {"opcode": "broken swab", "slot": [["REG", null], ["REG", null], ["Device", null], ["Device", null]], "emit": ""}, "result_baseline1": {"opcode": "break", "slot": [["Device", null], ["Container", "breakpoint"]], "emit": ""}, "result_baseline2": {"opcode": "Return", "slot": [["Container", "falcon tube"], ["Device", "swab"]], "emit": "Breakpoint"}, "result_baseline3": {"opcode": "BREAK", "slot": [["REG", "swab"], ["Length", "breakpoint"]], "emit": "swab in falcon tube"}}, {"i": 3, "sentense": "Collect two negative field controls, one at the start and one at the end of sampling, and prepare two unopened tubes of PBST as negative media controls.", "kg": {"protocol": {"experimental_steps": [{"step_number": 1, "description": "Collect two negative field controls at the start of sampling"}, {"step_number": 2, "description": "Collect two negative field controls at the end of sampling"}, {"step_number": 3, "description": "Prepare two unopened tubes of PBST as negative media controls"}]}}, "operation": "COLLECT", "entity_list": [], "result_ours": {"opcode": "COLLECT", "slot": [["REG", null], ["REG", null], ["REG", null]], "emit": "Control samples"}, "result_dsl": {"opcode": "COLLECT", "slot": [["REG", null], ["REG", null], ["REG", null]], "emit": "Control samples"}, "result_baseline1": {"opcode": "COLLECT", "slot": [["Time", null], ["Container", "negative field controls"], ["Container", null]], "emit": "Sampling process"}, "result_baseline2": {"opcode": "Collect", "slot": [["Volume", null], ["Container", "tube"], ["String", "PBST"]], "emit": "Negative field controls and negative media controls prepared"}, "result_baseline3": {"opcode": "COLLECT", "slot": [["REG", "two negative field controls"], ["Time", "start"], ["Time", "end"], ["Container", "two unopened tubes of PBST"]], "emit": "negative media controls"}}, {"i": 4, "sentense": "Store all samples in a cooler with ice for up to 12 hours during collection.", "kg": {"protocol": {"name": "Sample Storage", "details": {"storage_conditions": "cooler with ice", "duration": "up to 12 hours", "during_collection": true}}}, "operation": "STORE", "entity_list": [["Time", "12 hours"]], "result_ours": {"opcode": "COLLECT", "slot": [["Time", "12 hours"]], "emit": "Preserved samples"}, "result_dsl": {"opcode": "COLLECT", "slot": [["Time", "12 hours"]], "emit": "Preserved samples"}, "result_baseline1": {"opcode": "Sample Storage", "slot": [["Container", null], ["Time", "up to 12 hours"], ["Bool", true]], "emit": "storage cooler with ice"}, "result_baseline2": {"opcode": "Store", "slot": [["Container", "cooler with ice"], ["Time", "up to 12 hours"]], "emit": ""}, "result_baseline3": {"opcode": "STORE", "slot": [["Container", "cooler with ice"], ["Time", "up to 12 hours"]], "emit": "collected samples"}}, {"i": 5, "sentense": "Proceed with swab extraction, sample aggregation, and subsequent cultivation as per the experimental setup.", "kg": {"protocol": {"name": "Experimental Protocol for Swab Extraction and Cultivation", "steps": [{"step_number": 1, "description": "Proceed with swab extraction", "actions": ["Use a sterile swab to collect samples from the desired area", "Ensure proper labeling and documentation of samples"]}, {"step_number": 2, "description": "Sample aggregation", "actions": ["Combine multiple swab samples into a single container", "Mix thoroughly to ensure homogeneity"]}, {"step_number": 3, "description": "Subsequent cultivation", "actions": ["Inoculate the aggregated sample onto appropriate growth media", "Incubate at specified conditions for the growth of microorganisms"]}]}}, "operation": "PROCEED", "entity_list": [], "result_ours": {"opcode": "PROCEED", "slot": [["Device", null], ["Device", null], ["Device", null], ["Device", null]], "emit": "cultured samples"}, "result_dsl": {"opcode": "CULTURE", "slot": [["Device", null], ["Device", null], ["Device", null], ["Device", null]], "emit": "cultured samples"}, "result_baseline1": {"opcode": "CULTIVATION", "slot": [["Container", null], ["Volume", null], ["Temperature", "specified conditions"], ["Time", null]], "emit": "growth of microorganisms"}, "result_baseline2": {"opcode": "CULTIVATE", "slot": [["Container", "Petri dish"], ["Time", null]], "emit": "Colony growth observation"}, "result_baseline3": {"opcode": "PROCEED", "slot": [["REG", "swab extraction"], ["REG", "sample aggregation"], ["REG", "subsequent cultivation"], ["REG", "experimental setup"]], "emit": ""}}]}, "4": {"subject": "Ecology & Environmental Biology", "enum": 4, "protocol": "Always ensure containers are not tightly sealed to prevent pressure buildup and heed warnings about ensuring adequate ventilation to avoid oxygen deficiency from inert gas displacement. Protect yourself against liquid nitrogen (LN2) splatter. Label cryogenic tubes with sample name, date frozen, and initials before aliquoting 1 mL samples. Fill an insulated pan with LN2 to about 2 cm depth and place a CoolRack in it to cool to -150\u00b0C in approximately 15 minutes; pre-chilling the CoolRack in a -80\u00b0C freezer can save LN2 and time. Place cryogenic tubes in the CoolRack on dry ice for snap freezing, leaving them for 1 minute before transferring to a freezer box with forceps, then store in a -80\u00b0C freezer. For warming, thaw tubes at 4\u00b0C.", "compile": [{"i": 0, "sentense": "Always ensure containers are not tightly sealed to prevent pressure buildup and heed warnings about ensuring adequate ventilation to avoid oxygen deficiency from inert gas displacement.", "kg": {"protocol": {"steps": [{"step": "Ensure containers are not tightly sealed", "precaution": "To prevent pressure buildup"}, {"step": "Heed warnings about ensuring adequate ventilation", "precaution": "To avoid oxygen deficiency from inert gas displacement"}]}}, "operation": "ENSURE", "entity_list": [], "result_ours": {"opcode": "MAINTAIN", "slot": [["Time", null], ["REG", null], ["Time", null]], "emit": "data on pressure and ventilation"}, "result_dsl": {"opcode": "MAINTAIN", "slot": [["Time", null], ["REG", null], ["Time", null]], "emit": "data on pressure and ventilation"}, "result_baseline1": {"opcode": "ENSURE", "slot": [["Container", null]], "emit": "Safety precautions"}, "result_baseline2": {"opcode": "PRECAUTIONS", "slot": [["Container", null], ["String", "ensure containers are not tightly sealed"], ["String", "heed warnings about ensuring adequate ventilation"]], "emit": "avoid pressure buildup and oxygen deficiency"}, "result_baseline3": {"opcode": "ENSURE", "slot": [["Container", null], ["Bool", "not tightly sealed"], ["String", "prevent pressure buildup"], ["String", "ensure adequate ventilation"], ["String", "avoid oxygen deficiency from inert gas displacement"]], "emit": ""}}, {"i": 1, "sentense": "Protect yourself against liquid nitrogen (LN2) splatter.", "kg": {"protocol": {"description": "Experimental protocol to protect against liquid nitrogen (LN2) splatter", "steps": [{"step_number": 1, "instruction": "Wear appropriate personal protective equipment (PPE) such as safety goggles, gloves, and a lab coat to protect against potential splatter of liquid nitrogen."}, {"step_number": 2, "instruction": "Make sure there are no cracks or leaks in the container holding the liquid nitrogen to prevent splatter."}, {"step_number": 3, "instruction": "Handle the liquid nitrogen with care and avoid any sudden movements that could cause splashing."}, {"step_number": 4, "instruction": "Work in a well-ventilated area to minimize the risk of exposure to potentially harmful vapors."}]}}, "operation": "PROTECT", "entity_list": [], "result_ours": {"opcode": "SECURE", "slot": [["Device", null], ["REG", null], ["Device", null], ["REG", null]], "emit": "Safety measures"}, "result_dsl": {"opcode": "SECURE", "slot": [["Device", null], ["REG", null], ["Device", null], ["REG", null]], "emit": "Safety measures"}, "result_baseline1": {"opcode": "Protect", "slot": [["Container", null], ["Volume", null]], "emit": "Protection against liquid nitrogen splatter"}, "result_baseline2": {"opcode": "SAFETY", "slot": [["String", "Liquid nitrogen (LN2) splatter"]], "emit": "Protective gear"}, "result_baseline3": {"opcode": "Protect", "slot": [["REG", "yourself against liquid nitrogen (LN2) splatter"]], "emit": ""}}, {"i": 2, "sentense": "Label cryogenic tubes with sample name, date frozen, and initials before aliquoting 1 mL samples.", "kg": {"Protocol": {"Steps": [{"Step": 1, "Action": "Label cryogenic tubes", "Details": "Label tubes with sample name, date frozen, and initials"}, {"Step": 2, "Action": "Aliquot 1 mL samples", "Details": "Aliquot 1 mL samples into labeled cryogenic tubes"}]}}, "operation": "LABEL", "entity_list": [["Container", "cryogenic tubes"], ["REG", "sample name"], ["Time", "date frozen"], ["REG", "initials"], ["Volume", "1 mL samples"]], "result_ours": {"opcode": "RECORD", "slot": [["Container", "cryogenic tubes"], ["REG", "sample name"], ["Time", "date frozen"], ["REG", "initials"], ["Volume", "1 mL samples"]], "emit": "Labeled cryogenic tubes."}, "result_dsl": {"opcode": "RECORD", "slot": [["Container", "cryogenic tubes"], ["REG", "sample name"], ["Time", "date frozen"], ["REG", "initials"], ["Volume", "1 mL samples"]], "emit": "Labeled cryogenic tubes"}, "result_baseline1": {"opcode": "Aliquot samples", "slot": [["Volume", "1 mL"], ["Container", "cryogenic tube"]], "emit": ""}, "result_baseline2": {"opcode": "LABEL", "slot": [["Container", "cryogenic tubes"], ["String", "sample name"], ["Time", "date frozen"], ["String", "initials"], ["Volume", "1 mL"]], "emit": "Aliquoted samples"}, "result_baseline3": {"opcode": "LABEL", "slot": [["Container", "cryogenic tubes"], ["String", "sample name"], ["Time", "date frozen"], ["String", "initials"], ["Volume", "1 mL"]], "emit": "aliquoted samples"}}, {"i": 3, "sentense": "Fill an insulated pan with LN2 to about 2 cm depth and place a CoolRack in it to cool to -150\u00b0C in approximately 15 minutes; pre-chilling the CoolRack in a -80\u00b0C freezer can save LN2 and time.", "kg": {"protocol": {"steps": [{"step_number": 1, "description": "Fill an insulated pan with LN2 to about 2 cm depth"}, {"step_number": 2, "description": "Place a CoolRack in the pan to cool to -150\u00b0C in approximately 15 minutes"}, {"step_number": 3, "description": "Pre-chill the CoolRack in a -80\u00b0C freezer to save LN2 and time"}], "parameters": {"LN2_depth_cm": 2, "CoolRack_temperature_target": -150, "CoolRack_cooling_time_minutes": 15, "CoolRack_pre-chill_temperature": -80}}}, "operation": "FILL", "entity_list": [["REG", "LN2"], ["Length", "2 cm"], ["Device", "CoolRack"], ["Temperature", "-150\u00b0C"], ["Time", "15 minutes"], ["Device", "CoolRack"], ["Temperature", "-80\u00b0C"], ["REG", "LN2"], ["Time", "time"]], "result_ours": {"opcode": "PLUG", "slot": [["REG", "LN2"], ["Length", "2 cm"], ["Device", "CoolRack"], ["Temperature", "-150\u00b0C"], ["Time", "15 minutes"], ["Device", "CoolRack"], ["Temperature", "-80\u00b0C"], ["REG", "LN2"], ["Time", "time"]], "emit": "\"Cooled CoolRack\""}, "result_dsl": {"opcode": "COOL", "slot": [["REG", "LN2"], ["Length", "2 cm"], ["Device", "CoolRack"], ["Temperature", "-150\u00b0C"], ["Time", "15 minutes"], ["Device", "CoolRack"], ["Temperature", "-80\u00b0C"], ["REG", "LN2"], ["Time", null]], "emit": "Cooled CoolRack"}, "result_baseline1": {"opcode": "Cooling", "slot": [["Container", "insulated pan"], ["Volume", 2], ["Temperature", null], ["Time", 15], ["Temperature", -150]], "emit": "CoolRack"}, "result_baseline2": {"opcode": "COOL", "slot": [["Container", "insulated pan"], ["Temperature", "-150\u00b0C"], ["Time", "15 minutes"], ["Device", "CoolRack"], ["Temperature", "-80\u00b0C"], ["Device", null]], "emit": "Pre-chilled CoolRack"}, "result_baseline3": {"opcode": "Fill", "slot": [["Container", "insulated pan"], ["Length", "2 cm"], ["Temperature", "-150\u00b0C"], ["Time", "15 minutes"], ["Device", "CoolRack"], ["Temperature", "-80\u00b0C"]], "emit": "Prepared insulated pan and CoolRack"}}, {"i": 4, "sentense": "Place cryogenic tubes in the CoolRack on dry ice for snap freezing, leaving them for 1 minute before transferring to a freezer box with forceps, then store in a -80\u00b0C freezer.", "kg": {"protocol": {"steps": [{"name": "Place cryogenic tubes in CoolRack on dry ice", "description": "Snap freeze the tubes, leaving them for 1 minute"}, {"name": "Transfer tubes to freezer box with forceps", "description": "Carefully move the tubes from CoolRack to freezer box"}, {"name": "Store tubes in -80\u00b0C freezer", "description": "Place the tubes in the freezer for storage"}]}}, "operation": "PLACE", "entity_list": [], "result_ours": {"opcode": "PLACE", "slot": [["REG", null], ["Device", null], ["REG", null]], "emit": "Frozen cryogenic tubes"}, "result_dsl": {"opcode": "PLACE", "slot": [["REG", null], ["Device", null], ["REG", null]], "emit": "Frozen cryogenic tubes"}, "result_baseline1": {"opcode": "Protocol Execution", "slot": [["Container", "Cryogenic tubes"], ["Container", "CoolRack"], ["Container", "Dry ice"], ["Time", "1 minute"], ["Container", "Freezer box"], ["Container", "-80\u00b0C freezer"]], "emit": "Proper storage of biological samples"}, "result_baseline2": {"opcode": "FREEZE", "slot": [["Container", "cryogenic tubes"], ["Container", "CoolRack"], ["Time", "1 minute"], ["Container", "freezer box"], ["Temperature", "-80\u00b0C"], ["Device", "forceps"]], "emit": "Stored in -80\u00b0C freezer"}, "result_baseline3": {"opcode": "Place and Freeze", "slot": [["Container", "cryogenic tubes"], ["Device", "CoolRack"], ["Device", "dry ice"], ["Time", "1 minute"], ["Device", "forceps"], ["Container", "freezer box"], ["Temperature", "-80\u00b0C"]], "emit": "snap freezing"}}, {"i": 5, "sentense": "For warming, thaw tubes at 4\u00b0C.", "kg": {"protocol": {"description": "Experimental protocol for warming tubes at 4\u00b0C", "steps": [{"step_number": 1, "action": "Thaw tubes", "temperature": "4\u00b0C"}]}}, "operation": "THAW", "entity_list": [], "result_ours": {"opcode": "CHANGE", "slot": [["Time", null], ["REG", null]], "emit": "Thawed tubes at 4\u00b0C"}, "result_dsl": {"opcode": "CHANGE", "slot": [["Time", null], ["REG", null]], "emit": "Thawed tubes at 4\u00b0C"}, "result_baseline1": {"opcode": "Thaw tubes", "slot": [["Temperature", "4\u00b0C"], ["Device", null]], "emit": ""}, "result_baseline2": {"opcode": "warming", "slot": [["Temperature", "4\u00b0C"], ["Container", null]], "emit": ""}, "result_baseline3": {"opcode": "WARMING", "slot": [["Temperature", "4\u00b0C"]], "emit": "thawed tubes"}}]}}, "Bioengineering & Technology": {"0": {"subject": "Bioengineering & Technology", "enum": 0, "protocol": "Grow yeast cells with GFP-fusion on solid media, transfer to a microscope slide covered with a coverslip, and acquire Z-sections using a spinning disk confocal microscope.", "compile": [{"i": 0, "sentense": "Grow yeast cells with GFP-fusion on solid media, transfer to a microscope slide covered with a coverslip, and acquire Z-sections using a spinning disk confocal microscope.", "kg": {"protocol": {"description": "Grow yeast cells with GFP-fusion on solid media, transfer to a microscope slide covered with a coverslip, and acquire Z-sections using a spinning disk confocal microscope", "steps": [{"step_number": 1, "action": "Grow yeast cells with GFP-fusion on solid media", "details": "Prepare solid media with appropriate nutrients and antibiotics, inoculate yeast cells containing GFP-fusion protein, and incubate at the appropriate temperature for growth"}, {"step_number": 2, "action": "Transfer yeast cells to a microscope slide", "details": "Place a droplet of media containing yeast cells on a clean microscope slide"}, {"step_number": 3, "action": "Cover with a coverslip", "details": "Gently lower a coverslip over the yeast cells on the microscope slide to prevent drying out"}, {"step_number": 4, "action": "Acquire Z-sections using a spinning disk confocal microscope", "details": "Place the prepared slide on the microscope stage, focus on the yeast cells expressing GFP-fusion protein, and acquire Z-section images using the spinning disk confocal microscope"}]}}, "operation": "GROW", "entity_list": [], "result_ours": {"opcode": "GROW", "slot": [["Temperature", null], ["Time", null]], "emit": "GFP-fusion cells    Spinning disk confocal microscopy     "}, "result_dsl": {"opcode": "GROW", "slot": [["Temperature", null], ["Time", null], ["Device", "Spinning disk confocal microscopy"]], "emit": "GFP-fusion cells"}, "result_baseline1": {"opcode": "GROW", "slot": [["REG", "GFP-fusion"], ["REG", "solid media"], ["Device", null]], "emit": "Z-stack images"}, "result_baseline2": {"opcode": "GROW", "slot": [["REG", "GFP-fusion"], ["REG", "solid media"], ["Device", "microscope slide covered with a coverslip"]], "emit": "Z-stack images"}, "result_baseline3": {"opcode": "GROW", "slot": [["REG", "GFP-fusion"], ["REG", "solid media"], ["Device", "microscope slide"], ["Device", "coverslip"], ["Device", "spinning disk confocal microscope"]], "emit": "Z-sections"}}]}, "1": {"subject": "Bioengineering & Technology", "enum": 1, "protocol": "Grow yeast cells transformed with GFP-fusion on solid media, then transfer them to a microscope slide and cover with a coverslip. Acquire Z-sections using a spinning disk confocal microscope as described.", "compile": [{"i": 0, "sentense": "Grow yeast cells transformed with GFP-fusion on solid media, then transfer them to a microscope slide and cover with a coverslip.", "kg": {"protocol": {"steps": [{"step_number": 1, "description": "Grow yeast cells transformed with GFP-fusion on solid media."}, {"step_number": 2, "description": "Transfer the yeast cells to a microscope slide."}, {"step_number": 3, "description": "Cover the yeast cells on the microscope slide with a coverslip."}], "requirements": [{"item": "yeast cells transformed with GFP-fusion", "quantity": "sufficient amount"}, {"item": "solid media", "quantity": "sufficient amount"}, {"item": "microscope slide", "quantity": "1"}, {"item": "coverslip", "quantity": "1"}]}}, "operation": "GROW", "entity_list": [["REG", "GFP-fusion"], ["REG", "solid media"], ["Device", "microscope slide"], ["Device", "coverslip"]], "result_ours": {"opcode": "GROW", "slot": [["REG", "GFP-fusion"], ["REG", "solid media"], ["Device", "microscope slide"], ["Device", "coverslip"]], "emit": "Microscope images"}, "result_dsl": {"opcode": "GROW", "slot": [["REG", "GFP-fusion"], ["REG", "solid media"], ["Device", "microscope slide"], ["Device", "coverslip"]], "emit": "Microscope images"}, "result_baseline1": {"opcode": "GROW", "slot": [["REG", "GFP-fusion"], ["REG", "solid media"], ["Device", null]], "emit": "Z-stack images"}, "result_baseline2": {"opcode": "Grow", "slot": [["Device", "microscope slide"], ["Container", "coverslip"], ["Bool", null], ["String", "yeast cells transformed with GFP-fusion"], ["String", "solid media"]], "emit": "Z-stack images"}, "result_baseline3": {"opcode": "GROW", "slot": [["REG", "yeast cells"], ["REG", "GFP-fusion"], ["REG", "solid media"], ["Device", "microscope slide"], ["Device", "coverslip"]], "emit": "Transformed yeast cells"}}, {"i": 1, "sentense": "Acquire Z-sections using a spinning disk confocal microscope as described.", "kg": {"Protocol": {"Description": "Acquire Z-sections using a spinning disk confocal microscope", "Microscope": "Spinning disk confocal microscope"}}, "operation": "ACQUIRE", "entity_list": [["Device", "spinning disk confocal microscope"]], "result_ours": {"opcode": "ACQUIRE", "slot": [["Device", "spinning disk confocal microscope"]], "emit": "Z-sections"}, "result_dsl": {"opcode": "ACQUIRE", "slot": [["Device", "spinning disk confocal microscope"]], "emit": "Z-sections"}, "result_baseline1": {"opcode": "ACQUIRE", "slot": [["Device", "Spinning disk confocal microscope"]], "emit": "Z-sections"}, "result_baseline2": {"opcode": "Acquire", "slot": [["Device", "spinning disk confocal microscope"], ["String", "Z-sections"]], "emit": "Imaging data"}, "result_baseline3": {"opcode": "ACQUIRE", "slot": [["Device", "spinning disk confocal microscope"]], "emit": "Z-sections"}}]}, "2": {"subject": "Bioengineering & Technology", "enum": 2, "protocol": "Prior to the onset of directed differentiation, pluripotent stem cells are cultured in maintenance medium with 1% or 2% DMSO for 24-48h. Proceed with desired differentiation protocol after this treatment.", "compile": [{"i": 0, "sentense": "Prior to the onset of directed differentiation, pluripotent stem cells are cultured in maintenance medium with 1% or 2% DMSO for 24-48h.", "kg": {"protocol": {"step 1": {"description": "Culturing pluripotent stem cells in maintenance medium with 1% or 2% DMSO", "duration": "24-48h"}, "step 2": {"description": "Onset of directed differentiation"}}}, "operation": "CULTURE", "entity_list": [["REG", "DMSO"], ["Time", "24-48h"]], "result_ours": {"opcode": "CULTURE", "slot": [["REG", "DMSO"], ["Time", "24-48h"]], "emit": "modified pluripotent stem cells"}, "result_dsl": {"opcode": "CULTURE", "slot": [["REG", "DMSO"], ["Time", "24-48h"]], "emit": "modified pluripotent stem cells"}, "result_baseline1": {"opcode": "CULTURE", "slot": [["Container", "Maintenance medium"], ["Container", "Pluripotent stem cells"], ["Mass", null], ["Time", "24-48h"]], "emit": "Directed differentiation"}, "result_baseline2": {"opcode": "CULTURE", "slot": [["Container", null], ["String", "maintenance medium with 1% or 2% DMSO"], ["Time", "24-48h"]], "emit": "pluripotent stem cells culture"}, "result_baseline3": {"opcode": "CULTURE", "slot": [["Container", "maintenance medium"], ["Concentration", "1% or 2% DMSO"], ["Time", "24-48h"]], "emit": "pluripotent stem cells"}}, {"i": 1, "sentense": "Proceed with desired differentiation protocol after this treatment.", "kg": {"Protocol": {"Description": "Proceed with desired differentiation protocol after this treatment."}}, "operation": "PROCEED", "entity_list": [], "result_ours": {"opcode": "PROCEED", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "Differentiated cells"}, "result_dsl": {"opcode": "PROCEED", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "Differentiated cells"}, "result_baseline1": {"opcode": "Differentiation", "slot": [["Device", null]], "emit": "Proceed with desired differentiation protocol"}, "result_baseline2": {"opcode": "desired differentiation", "slot": [["REG", "treatment"], ["String", null]], "emit": "protocol"}, "result_baseline3": {"opcode": "Proceed with desired differentiation", "slot": [["REG", "this treatment"]], "emit": ""}}]}, "3": {"subject": "Bioengineering & Technology", "enum": 3, "protocol": "Place larvae in a 1m^3 box filled with dirt, feed them the specified food 3-4 times a day at 2-3 hour intervals for optimal growth. Continue until larvae become pupae, at which point increase food quantity. Once pupae develop into adults, introduce water to the environment for mating. After mating, collect the new larvae.", "compile": [{"i": 0, "sentense": "Place larvae in a 1m^3 box filled with dirt, feed them the specified food 3-4 times a day at 2-3 hour intervals for optimal growth.", "kg": {"protocol": {"description": "Experimental protocol for optimal larvae growth", "steps": [{"step": 1, "action": "Place larvae in a 1m^3 box filled with dirt"}, {"step": 2, "action": "Feed larvae the specified food", "frequency": "3-4 times a day", "intervals": "2-3 hours"}, {"step": 3, "action": "Monitor larvae growth for optimal results"}]}}, "operation": "PLACE", "entity_list": [["Volume", "1m^3"], ["Time", "3-4 times"], ["Time", "2-3 hour"]], "result_ours": {"opcode": "PLACE", "slot": [["Volume", "1m^3"], ["Time", "3-4 times"], ["Time", "2-3 hour"]], "emit": "Well-fed and growing larvae."}, "result_dsl": {"opcode": "PLACE", "slot": [["Volume", "1m^3"], ["Time", "3-4 times"], ["Time", "2-3 hour"]], "emit": "Well-fed and growing larvae"}, "result_baseline1": {"opcode": "GROW", "slot": [["Container", "1m^3 box filled with dirt"], ["String", "specified food"], ["Time", null]], "emit": "optimal larvae growth"}, "result_baseline2": {"opcode": "Place larvae", "slot": [["Container", "1m^3 box filled with dirt"], ["String", "specified food"], ["Time", "3-4 times a day at 2-3 hour intervals"]], "emit": "optimal growth"}, "result_baseline3": {"opcode": "GROW", "slot": [["Container", "1m^3 box"], ["String", "dirt"], ["String", "specified food"], ["Time", "3-4 times a day"], ["Time", "2-3 hour intervals"]], "emit": "Larvae growth"}}, {"i": 1, "sentense": "Continue until larvae become pupae, at which point increase food quantity.", "kg": {"experimental_protocol": {"description": "Continue feeding larvae until they become pupae. Once the larvae have reached the pupal stage, increase the quantity of food provided.", "steps": [{"step_number": 1, "description": "Continue feeding larvae until they pupate"}, {"step_number": 2, "description": "Increase food quantity once larvae become pupae"}]}}, "operation": "INCREASE", "entity_list": [["REG", "larvae"], ["REG", "pupae"]], "result_ours": {"opcode": "INCREASE", "slot": [["REG", "larvae"], ["Device", null], ["REG", "pupae"]], "emit": "Increased pupal size."}, "result_dsl": {"opcode": "INCREASE", "slot": [["REG", "larvae"], ["Device", null], ["REG", "pupae"]], "emit": "Increased pupal size."}, "result_baseline1": {"opcode": "FEED", "slot": [["Time", null], ["String", "larvae"], ["Mass", "food"]], "emit": "Pupal stage"}, "result_baseline2": {"opcode": "Increase food quantity", "slot": [["Time", null]], "emit": "Pupation"}, "result_baseline3": {"opcode": "CONTINUE", "slot": [["Time", "until larvae become pupae"], ["Mass", "increase food quantity"]], "emit": ""}}, {"i": 2, "sentense": "Once pupae develop into adults, introduce water to the environment for mating.", "kg": {"protocol": {"description": "Introduce water to the environment for mating once pupae develop into adults", "steps": [{"step_number": 1, "action": "Wait for pupae to develop into adults"}, {"step_number": 2, "action": "Introduce water to the environment"}, {"step_number": 3, "action": "Allow adults to mate in the water environment"}]}}, "operation": "INTRODUCE", "entity_list": [], "result_ours": {"opcode": "LAUNCH", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "Mated adults."}, "result_dsl": {"opcode": "LAUNCH", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "Mated adults."}, "result_baseline1": {"opcode": "Introduce water for mating", "slot": [["Time", null], ["Container", "water"], ["String", "environment"]], "emit": "Adults mating"}, "result_baseline2": {"opcode": "introduce_water", "slot": [["Time", "Upon adult emergence"], ["String", "water"]], "emit": "mating environment"}, "result_baseline3": {"opcode": "INTRODUCE WATER", "slot": [["REG", "pupae"], ["REG", "adult"], ["REG", "mating"]], "emit": "Environment ready for mating"}}, {"i": 3, "sentense": "After mating, collect the new larvae.", "kg": {"Protocol": {"Step_1": "Mating of organisms", "Step_2": "Collection of new larvae", "Action": {"Step_1": "Mate the organisms according to the experimental design", "Step_2": "Collect the new larvae from the mating chambers or containers"}}}, "operation": "COLLECT", "entity_list": [], "result_ours": {"opcode": "COLLECT", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["Device", null]], "emit": "new larvae"}, "result_dsl": {"opcode": "COLLECT", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["Device", null]], "emit": "new larvae"}, "result_baseline1": {"opcode": "COLLECTION", "slot": [["Device", null], ["Container", null]], "emit": "new larvae"}, "result_baseline2": {"opcode": "collect", "slot": [["Time", null], ["Container", "larvae"]], "emit": "larvae collection"}, "result_baseline3": {"opcode": "MATE", "slot": [["REG", "new larvae"]], "emit": "new larvae collection"}}]}, "4": {"subject": "Bioengineering & Technology", "enum": 4, "protocol": "Recruit 7 mandibular models and apply radio opaque markers. Record 10 predetermined linear measurements, perform CBCT scanning of each model, and convert DICOM files into STL format. Use SLS and FFF printers for 3D printing the models. Record the same 10 linear measurements on the printed models and compare these values against the reference models and each other.", "compile": [{"i": 0, "sentense": "Recruit 7 mandibular models and apply radio opaque markers.", "kg": {"protocol": {"name": "Mandibular Model Experiment", "steps": [{"step_number": 1, "description": "Recruit 7 mandibular models"}, {"step_number": 2, "description": "Apply radio opaque markers"}]}}, "operation": "RECRUIT", "entity_list": [], "result_ours": {"opcode": "LOCATE", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "labeled mandibular models"}, "result_dsl": {"opcode": "LOCATE", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "labeled mandibular models"}, "result_baseline1": {"opcode": "MANDIBULAR_MODEL_EXPERIMENT", "slot": [["String", "Recruit 7 mandibular models"], ["String", "Apply radio opaque markers"]], "emit": ""}, "result_baseline2": {"opcode": "Recruit", "slot": [["Mass", null], ["String", "mandibular models"]], "emit": "Apply radio opaque markers"}, "result_baseline3": {"opcode": "Recruit", "slot": [["REG", "7 mandibular models"], ["String", "apply radio opaque markers"]], "emit": ""}}, {"i": 1, "sentense": "Record 10 predetermined linear measurements, perform CBCT scanning of each model, and convert DICOM files into STL format.", "kg": {"protocol": {"steps": [{"name": "Record 10 predetermined linear measurements"}, {"name": "Perform CBCT scanning of each model"}, {"name": "Convert DICOM files into STL format"}]}}, "operation": "RECORD", "entity_list": [], "result_ours": {"opcode": "RECORD", "slot": [["Container", null], ["Time", null]], "emit": "CBCT images in STL format"}, "result_dsl": {"opcode": "RECORD", "slot": [["Container", null], ["Time", null]], "emit": "CBCT images in STL format"}, "result_baseline1": {"opcode": "Record and Perform CBCT scanning", "slot": [["Container", null], ["Device", null], ["String", "linear measurements"]], "emit": "DICOM files"}, "result_baseline2": {"opcode": "Record", "slot": [["Length", null]], "emit": "Predetermined linear measurements"}, "result_baseline3": {"opcode": "SCAN", "slot": [["REG", "10 predetermined linear measurements"], ["Device", "CBCT Scanner"], ["String", "DICOM files"], ["String", "STL format"]], "emit": "STL files"}}, {"i": 2, "sentense": "Use SLS and FFF printers for 3D printing the models.", "kg": {"protocol": {"steps": [{"name": "Use SLS printer", "description": "Use a selective laser sintering (SLS) 3D printer to print the models"}, {"name": "Use FFF printer", "description": "Use a fused filament fabrication (FFF) 3D printer to print the models"}], "equipment": [{"name": "SLS printer", "type": "3D printer", "description": "Selective laser sintering (SLS) 3D printer"}, {"name": "FFF printer", "type": "3D printer", "description": "Fused filament fabrication (FFF) 3D printer"}]}}, "operation": "PRINT", "entity_list": [["Device", "SLS"], ["Device", "FFF"]], "result_ours": {"opcode": "PRINT", "slot": [["REG", null], ["REG", null], ["Device", "SLS"], ["Device", "FFF"]], "emit": "3D printed models with SLS and FFF printers."}, "result_dsl": {"opcode": "PRINT", "slot": [["REG", null], ["REG", null], ["Device", "SLS"], ["Device", "FFF"]], "emit": "3D printed models with SLS and FFF printers"}, "result_baseline1": {"opcode": "3D_PRINT", "slot": [["Device", "SLS printer"], ["Device", "FFF printer"]], "emit": "3D printed models"}, "result_baseline2": {"opcode": "3D printing", "slot": [["Device", "SLS printer"], ["Device", "FFF printer"]], "emit": "3D printed models"}, "result_baseline3": {"opcode": "3D PRINT", "slot": [["Device", "SLS printer"], ["Device", "FFF printer"]], "emit": "3D models"}}, {"i": 3, "sentense": "Record the same 10 linear measurements on the printed models and compare these values against the reference models and each other.", "kg": {"Protocol": {"Description": "Record the same 10 linear measurements on the printed models and compare these values against the reference models and each other.", "Steps": [{"Step number": 1, "Description": "Select printed models for measurement"}, {"Step number": 2, "Description": "Measure and record 10 linear measurements on each printed model"}, {"Step number": 3, "Description": "Compare the measured values against the reference models"}, {"Step number": 4, "Description": "Compare the measured values of the printed models against each other"}]}}, "operation": "RECORD", "entity_list": [], "result_ours": {"opcode": "RECORD", "slot": [["Container", null], ["Time", null]], "emit": "Comparison of measurements"}, "result_dsl": {"opcode": "RECORD", "slot": [["Container", null], ["Time", null]], "emit": "Comparison of measurements"}, "result_baseline1": {"opcode": "Measure", "slot": [["Container", "printed models"], ["Length", null]], "emit": "Comparison of measured values"}, "result_baseline2": {"opcode": "Record measurements", "slot": [["String", "linear measurements"], ["String", "printed models"], ["String", "reference models"]], "emit": "Comparison of measurements"}, "result_baseline3": {"opcode": "RECORD", "slot": [["REG", "10 linear measurements"], ["String", "printed models"], ["String", "reference models"]], "emit": "comparison values"}}]}}, "Bioinformatics & Computational Biology": {"0": {"subject": "Bioinformatics & Computational Biology", "enum": 0, "protocol": "To evaluate CSC triage algorithms, review clinical data and existing algorithms, define the crisis, select and devise algorithms, define clinical endpoints, and select patient cohorts. Obtain IRB approval, create a case report form, choose a secure data management system, determine data entry method, conduct pilot data acquisition, complete data acquisition, apply triage algorithms, and calculate priority scores. Test algorithm accuracy using AUROC, simulate clinical decision-making in small patient groups using a bootstrap method, format input files with patient outcomes and priority scores, run simulations, and analyze decision-making efficacy.", "compile": [{"i": 0, "sentense": "To evaluate CSC triage algorithms, review clinical data and existing algorithms, define the crisis, select and devise algorithms, define clinical endpoints, and select patient cohorts.", "kg": {"protocol": {"name": "CSC triage algorithm evaluation protocol", "steps": [{"step_number": 1, "description": "Review clinical data and existing algorithms"}, {"step_number": 2, "description": "Define the crisis"}, {"step_number": 3, "description": "Select and devise algorithms"}, {"step_number": 4, "description": "Define clinical endpoints"}, {"step_number": 5, "description": "Select patient cohorts"}]}}, "operation": "EVALUATE", "entity_list": [["REG", "CSC triage algorithms"]], "result_ours": {"opcode": "DETERMINE", "slot": [["REG", null], ["Device", null], ["REG", "CSC triage algorithms"]], "emit": "CSC triage algorithms evaluation"}, "result_dsl": {"opcode": "DETERMINE", "slot": [["REG", null], ["Device", null], ["REG", "CSC triage algorithms"]], "emit": "CSC triage algorithms evaluation"}, "result_baseline1": {"opcode": "Evaluate", "slot": [["String", "Clinical data and existing algorithms"], ["String", "Crisis"], ["String", "Algorithms"], ["String", "Clinical endpoints"], ["String", "Patient cohorts"]], "emit": "Algorithm evaluation"}, "result_baseline2": {"opcode": "Evaluate", "slot": [["Container", null], ["String", "CSC triage algorithms"], ["String", "clinical data"], ["String", "existing algorithms"], ["String", "crisis"], ["String", "clinical endpoints"], ["String", "patient cohorts"]], "emit": ""}, "result_baseline3": {"opcode": "EVALUATE_CSC_TRIAGE_ALGORITHMS", "slot": [["String", "review clinical data"], ["String", "existing algorithms"], ["String", "define the crisis"], ["String", "select and devise algorithms"], ["String", "define clinical endpoints"], ["String", "select patient cohorts"]], "emit": ""}}, {"i": 1, "sentense": "Obtain IRB approval, create a case report form, choose a secure data management system, determine data entry method, conduct pilot data acquisition, complete data acquisition, apply triage algorithms, and calculate priority scores."}, {"i": 2, "sentense": "Test algorithm accuracy using AUROC, simulate clinical decision-making in small patient groups using a bootstrap method, format input files with patient outcomes and priority scores, run simulations, and analyze decision-making efficacy.", "kg": {"protocol": {"steps": [{"name": "Test algorithm accuracy using AUROC"}, {"name": "Simulate clinical decision-making in small patient groups using a bootstrap method"}, {"name": "Format input files with patient outcomes and priority scores"}, {"name": "Run simulations"}, {"name": "Analyze decision-making efficacy"}]}}, "operation": "TEST", "entity_list": [["REG", "AUROC"], ["REG", "bootstrap method"]], "result_ours": {"opcode": "DETERMINE", "slot": [["REG", "AUROC"], ["Device", null], ["REG", "bootstrap method"]], "emit": "decision-making efficacy"}, "result_dsl": {"opcode": "DETERMINE", "slot": [["REG", "AUROC"], ["Device", null], ["REG", "bootstrap method"]], "emit": "decision-making efficacy"}, "result_baseline1": {"opcode": "Run simulations", "slot": [["String", "input files with patient outcomes and priority scores"], ["Bool", null]], "emit": "Decision-making efficacy"}, "result_baseline2": {"opcode": "Test algorithm accuracy", "slot": [["String", "AUROC"], ["String", "simulate clinical decision-making in small patient groups using a bootstrap method"], ["String", "format input files with patient outcomes and priority scores"], ["REG", null], ["REG", null], ["REG", null], ["Device", null]], "emit": "run simulations and analyze decision-making efficacy"}, "result_baseline3": {"opcode": "TEST", "slot": [["REG", "AUROC"], ["String", "bootstrap method"], ["REG", "patient outcomes"], ["REG", "priority scores"], ["String", "simulations"], ["String", "decision-making efficacy"]], "emit": "algorithm accuracy"}}]}, "1": {"subject": "Bioinformatics & Computational Biology", "enum": 1, "protocol": "Download and install STNMF from GitHub, link: https://github.com/jiankliu/STNMF-SNN. Process data by generating effective spike-triggered stimulus images (STE) from neuron spike trains and stimulus array, applying Singular Value Decomposition (SVD) for spatial and temporal filters. Use STNMF on STE to infer subunits' spatial receptive field, obtaining weight matrix W and module matrix M. Analyze M and W to infer temporal filters, nonlinearity, and synaptic weights of subunits. For detailed computational analysis, apply algorithms to calculate temporal filter, nonlinearity, and classify spikes into modules based on synaptic connection weights, aiming to reveal complex neuronal network dynamics.", "compile": [{"i": 0, "sentense": "Download and install STNMF from GitHub, link: https://github.com/jiankliu/STNMF-SNN.", "kg": {"protocol": {"name": "STNMF Protocol", "description": "Experimental protocol for downloading and installing STNMF from GitHub", "steps": [{"step_number": 1, "action": "Download STNMF from GitHub", "url": "https://github.com/jiankliu/STNMF-SNN"}, {"step_number": 2, "action": "Install STNMF", "instructions": "Follow the installation instructions provided in the GitHub repository"}]}}, "operation": "DOWNLOAD", "entity_list": [], "result_ours": {"opcode": "COPY", "slot": [["REG", null], ["REG", null], ["REG", null], ["Length", null], ["REG", null]], "emit": "Code"}, "result_dsl": {"opcode": "COPY", "slot": [["REG", null], ["REG", null], ["REG", null], ["Length", null], ["REG", null]], "emit": "Code"}, "result_baseline1": {"opcode": "Download and Install", "slot": [["String", "STNMF"], ["String", "https://github.com/jiankliu/STNMF-SNN"], ["String", "Follow installation instructions"]], "emit": "Installed STNMF successfully"}, "result_baseline2": {"opcode": "Download and Install", "slot": [["String", "STNMF"], ["String", "GitHub"], ["String", "https://github.com/jiankliu/STNMF-SNN"]], "emit": ""}, "result_baseline3": {"opcode": "Download and Install", "slot": [["REG", "STNMF"], ["String", "https://github.com/jiankliu/STNMF-SNN"]], "emit": "Installed STNMF program"}}, {"i": 1, "sentense": "Process data by generating effective spike-triggered stimulus images (STE) from neuron spike trains and stimulus array, applying Singular Value Decomposition (SVD) for spatial and temporal filters.", "kg": {"Protocol": {"Description": "Process data by generating effective spike-triggered stimulus images (STE) from neuron spike trains and stimulus array, applying Singular Value Decomposition (SVD) for spatial and temporal filters.", "Steps": [{"Step": 1, "Action": "Generate effective spike-triggered stimulus images (STE)", "Inputs": ["Neuron spike trains", "Stimulus array"]}, {"Step": 2, "Action": "Apply Singular Value Decomposition (SVD)", "Inputs": "STE", "Filters": {"Spatial": "SVD filter for spatial", "Temporal": "SVD filter for temporal"}}]}}, "operation": "PROCESS", "entity_list": [], "result_ours": {"opcode": "PROCEED", "slot": [["REG", null], ["Length", null], ["REG", null], ["REG", null]], "emit": "filtered stimulus images"}, "result_dsl": {"opcode": "PROCEED", "slot": [["REG", null], ["Length", null], ["REG", null], ["REG", null]], "emit": "filtered stimulus images"}, "result_baseline1": {"opcode": "Process data", "slot": [["String", "neuron spike trains"], ["String", "stimulus array"], ["String", "STE"], ["String", "SVD filter for spatial"], ["String", "SVD filter for temporal"]], "emit": "effective spike-triggered stimulus images (STE) generated by applying Singular Value Decomposition (SVD) for spatial and temporal filters"}, "result_baseline2": {"opcode": "", "slot": [], "emit": ""}, "result_baseline3": {"opcode": "PROCESS_DATA", "slot": [["String", "stimulus images"], ["String", "neuron spike trains"], ["String", "stimulus array"], ["REG", "Singular Value Decomposition (SVD)"], ["String", "spatial filters"], ["String", "temporal filters"]], "emit": "Effective Spike-Triggered Stimulus Images"}}, {"i": 2, "sentense": "Use STNMF on STE to infer subunits' spatial receptive field, obtaining weight matrix W and module matrix M. Analyze M and W to infer temporal filters, nonlinearity, and synaptic weights of subunits.", "kg": {"protocol": {"name": "STNMF on STE for Subunits' Spatial Receptive Field Inference", "steps": [{"name": "Use STNMF on STE to infer subunits' spatial receptive field", "output": [{"name": "weight matrix W", "type": "matrix"}, {"name": "module matrix M", "type": "matrix"}]}, {"name": "Analyze M and W to infer temporal filters, nonlinearity, and synaptic weights of subunits", "output": [{"name": "temporal filters", "type": "filter"}, {"name": "nonlinearity", "type": "function"}, {"name": "synaptic weights", "type": "weight"}]}]}}, "operation": "ANALYZE", "entity_list": [], "result_ours": {"opcode": "DETERMINE", "slot": [["REG", null], ["Device", null], ["REG", null]], "emit": "Temporal filters, nonlinearity, and synaptic weights of subunits."}, "result_dsl": {"opcode": "DETERMINE", "slot": [["REG", null], ["Device", null], ["REG", null]], "emit": "Temporal filters, nonlinearity, and synaptic weights of subunits"}, "result_baseline1": {"opcode": "STNMF", "slot": [["String", "STE"], ["String", "Subunits' Spatial Receptive Field Inference"], ["REG", null], ["Container", null]], "emit": "weight matrix W, module matrix M, temporal filters, nonlinearity, synaptic weights of subunits"}, "result_baseline2": {"opcode": "Use", "slot": [["Container", "STNMF"], ["Container", "STE"], ["Device", null], ["String", "subunits' spatial receptive field"], ["Bool", null], ["String", "weight matrix W"], ["String", "module matrix M"], ["String", "temporal filters"], ["String", "nonlinearity"], ["String", "synaptic weights of subunits"]], "emit": "Analysis results"}, "result_baseline3": {"opcode": "ANALYZE", "slot": [["Device", "STNMF"], ["Device", "STE"], ["REG", "spatial receptive field"], ["REG", "weight matrix W"], ["REG", "module matrix M"]], "emit": "temporal filters, nonlinearity, synaptic weights of subunits"}}, {"i": 3, "sentense": "For detailed computational analysis, apply algorithms to calculate temporal filter, nonlinearity, and classify spikes into modules based on synaptic connection weights, aiming to reveal complex neuronal network dynamics.", "kg": {"Protocol": {"Objective": "To reveal complex neuronal network dynamics", "Steps": [{"Step1": "Apply algorithms to calculate temporal filter"}, {"Step2": "Apply algorithms to calculate nonlinearity"}, {"Step3": "Classify spikes into modules based on synaptic connection weights"}]}}, "operation": "APPLY", "entity_list": [], "result_ours": {"opcode": "APPLY", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "modules with synaptic connection weights"}, "result_dsl": {"opcode": "APPLY", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "modules with synaptic connection weights"}, "result_baseline1": {"opcode": "ANALYZE", "slot": [["String", "Apply algorithms to calculate temporal filter"], ["String", "Apply algorithms to calculate nonlinearity"], ["String", "Classify spikes into modules based on synaptic connection weights"]], "emit": "reveal complex neuronal network dynamics"}, "result_baseline2": {"opcode": "Calculate", "slot": [["String", "temporal filter"], ["String", "nonlinearity"], ["String", "synaptic connection weights"]], "emit": "Neuronal network dynamics"}, "result_baseline3": {"opcode": "COMPUTATIONAL ANALYSIS", "slot": [["String", "algorithms"], ["String", "temporal filter"], ["String", "nonlinearity"], ["String", "classify spikes"], ["String", "modules"], ["String", "synaptic connection weights"], ["String", "neuronal network dynamics"]], "emit": "Complex neural network dynamics details"}}]}, "2": {"subject": "Bioinformatics & Computational Biology", "enum": 2, "protocol": "Access PAD2 for TF colocalization analysis by selecting signal files from the database for targeted analysis within specific genomic regions identified by ChromHMM. Open PAD2 website, navigate to select signals, and choose TFs or histone marks of interest. Optionally, upload personal signal files for analysis. After selection, specify the genomic region of interest for colocalization assessment through Pearson\u2019s correlation of ChIP-seq profiles. Investigate signal correlation within these regions by viewing and downloading heatmap and ranked correlation plots. This streamlined approach involves selecting signal files, determining genomic regions for analysis, and utilizing correlation data to understand protein colocalization, all performed through the PAD2 platform.", "compile": [{"i": 0, "sentense": "Access PAD2 for TF colocalization analysis by selecting signal files from the database for targeted analysis within specific genomic regions identified by ChromHMM.", "kg": {"protocol": {"analysis": "TF colocalization analysis", "target": "PAD2", "method": "selecting signal files from database", "region": "specific genomic regions identified by ChromHMM"}}, "operation": "ACCESS", "entity_list": [], "result_ours": {"opcode": "USE", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "TF colocalization analysis"}, "result_dsl": {"opcode": "TF colocalization analysis", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": ""}, "result_baseline1": {"opcode": "TF colocalization analysis", "slot": [["REG", "PAD2"], ["REG", "specific genomic regions identified by ChromHMM"], ["String", "selecting signal files from database"], ["Device", null]], "emit": "N/A"}, "result_baseline2": {"opcode": "TF colocalization analysis", "slot": [["REG", "PAD2"], ["String", "signal files"], ["String", "database"], ["REG", "ChromHMM"], ["Container", null]], "emit": "targeted analysis"}, "result_baseline3": {"opcode": "Access PAD2", "slot": [["REG", "TF colocalization analysis"], ["REG", "signal files"], ["REG", "specific genomic regions"], ["Device", "database"], ["REG", "ChromHMM"]], "emit": "targeted analysis"}}, {"i": 1, "sentense": "Open PAD2 website, navigate to select signals, and choose TFs or histone marks of interest."}, {"i": 2, "sentense": "Optionally, upload personal signal files for analysis.", "kg": {"protocol": {"title": "Experimental Protocol", "steps": [{"step": 1, "description": "Optionally upload personal signal files for analysis"}]}}, "operation": "UPLOAD", "entity_list": [], "result_ours": {"opcode": "SELECT", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "Analysis results"}, "result_dsl": {"opcode": "SELECT", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "Analysis results"}, "result_baseline1": {"opcode": "UPLOAD", "slot": [["String", "personal signal files"]], "emit": "Analysis"}, "result_baseline2": {"opcode": "upload", "slot": [["String", "personal signal files"]], "emit": "analysis"}, "result_baseline3": {"opcode": "UPLOAD", "slot": [["String", "personal signal files"]], "emit": "analysis"}}, {"i": 3, "sentense": "After selection, specify the genomic region of interest for colocalization assessment through Pearson\u2019s correlation of ChIP-seq profiles."}, {"i": 4, "sentense": "Investigate signal correlation within these regions by viewing and downloading heatmap and ranked correlation plots."}, {"i": 5, "sentense": "This streamlined approach involves selecting signal files, determining genomic regions for analysis, and utilizing correlation data to understand protein colocalization, all performed through the PAD2 platform."}]}, "3": {"subject": "Bioinformatics & Computational Biology", "enum": 3, "protocol": "Install STNMF by downloading from GitHub (https://github.com/jiankliu/STNMF-SNN) and adding to MATLAB path. Preprocess data by generating effective spike-triggered stimulus images from stimulus array and spike trains, using Singular Value Decomposition for spatial and temporal filters, and forming an N\u00d7P matrix STE. Decompose STE with STNMF to obtain weight matrix W and module matrix M, preset subunits number, reshape M for stimulus frame size. Analyze M and W to infer subunits' temporal filter, nonlinearity, and synaptic connection weights by calculating spatial filter and temporal filter convolution, creating generator signal, and visualizing nonlinearity. Obtain synaptic connection weights and spike trains by averaging W matrix columns, determining ON-OFF attribute, and classifying spikes into corresponding modules.", "compile": [{"i": 0, "sentense": "Install STNMF by downloading from GitHub (https://github.com/jiankliu/STNMF-SNN) and adding to MATLAB path.", "kg": {"protocol": {"title": "Experimental Protocol for STNMF", "steps": [{"step_number": 1, "description": "Download STNMF from GitHub at https://github.com/jiankliu/STNMF-SNN."}, {"step_number": 2, "description": "Add STNMF to MATLAB path."}]}}, "operation": "INSTALL", "entity_list": [], "result_ours": {"opcode": "BUILD", "slot": [["REG", null], ["REG", null], ["String", null], ["String", null], ["String", null]], "emit": "software tool"}, "result_dsl": {"opcode": "BUILD", "slot": [["REG", null], ["REG", null], ["String", null], ["String", null], ["String", null]], "emit": "software tool"}, "result_baseline1": {"opcode": "Execution", "slot": [["String", "Download STNMF from GitHub at https://github.com/jiankliu/STNMF-SNN"], ["String", "Add STNMF to MATLAB path"], ["String", null]], "emit": "STNMF installed successfully"}, "result_baseline2": {"opcode": "Install", "slot": [["String", "STNMF"], ["String", "download from GitHub (https://github.com/jiankliu/STNMF-SNN)"], ["String", "add to MATLAB path"]], "emit": "Successful installation"}, "result_baseline3": {"opcode": "INSTALL", "slot": [["String", "STNMF"], ["String", "https://github.com/jiankliu/STNMF-SNN"], ["String", "MATLAB"]], "emit": ""}}, {"i": 1, "sentense": "Preprocess data by generating effective spike-triggered stimulus images from stimulus array and spike trains, using Singular Value Decomposition for spatial and temporal filters, and forming an N\u00d7P matrix STE.", "kg": {"protocol": {"name": "Spike-Triggered Stimulus Image Generation", "steps": [{"step_number": 1, "description": "Preprocess data by generating effective spike-triggered stimulus images from stimulus array and spike trains"}, {"step_number": 2, "description": "Use Singular Value Decomposition for spatial and temporal filters"}, {"step_number": 3, "description": "Form an N\u00d7P matrix STE"}]}}, "operation": "GENERATE", "entity_list": [], "result_ours": {"opcode": "GENERATE", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "Spike-triggered stimulus images."}, "result_dsl": {"opcode": "GENERATE", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "Spike-triggered stimulus images"}, "result_baseline1": {"opcode": "Image Generation", "slot": [["String", "Spike-Triggered Stimulus Image Generation"], ["Bool", null], ["Container", "stimulus array"]], "emit": "N\u00d7P matrix STE"}, "result_baseline2": {"opcode": "", "slot": [], "emit": ""}, "result_baseline3": {"opcode": "PREPROCESS", "slot": [["String", "spike-triggered stimulus images"], ["String", "stimulus array"], ["String", "spike trains"], ["String", "Singular Value Decomposition"], ["String", "spatial and temporal filters"], ["String", "N\u00d7P matrix STE"]], "emit": "Preprocessed data"}}, {"i": 2, "sentense": "Decompose STE with STNMF to obtain weight matrix W and module matrix M, preset subunits number, reshape M for stimulus frame size."}, {"i": 3, "sentense": "Analyze M and W to infer subunits' temporal filter, nonlinearity, and synaptic connection weights by calculating spatial filter and temporal filter convolution, creating generator signal, and visualizing nonlinearity.", "kg": {"protocol": {"analyze": ["M", "W"], "infer": {"subunits": {"temporal_filter": "calculated by convolution of spatial filter and temporal filter", "nonlinearity": "visualized using generator signal", "synaptic_connection_weights": "calculated"}}}}, "operation": "ANALYZE", "entity_list": [["REG", "M"], ["REG", "W"], ["REG", "subunits'"], ["REG", "temporal filter"], ["REG", "synaptic connection weights"], ["REG", "spatial filter"], ["REG", "temporal filter convolution"], ["REG", "generator signal"]], "result_ours": {"opcode": "DETERMINE", "slot": [["REG", "M"], ["REG", "W"], ["REG", "subunits'"], ["REG", "temporal filter"], ["REG", "synaptic connection weights"], ["REG", "spatial filter"], ["REG", "temporal filter convolution"], ["REG", "generator signal"]], "emit": "Inference of subunits' temporal filter, nonlinearity, and synaptic connection weights."}, "result_dsl": {"opcode": "DETERMINE", "slot": [["REG", "M"], ["REG", "W"], ["REG", "subunits'"], ["REG", "temporal filter"], ["REG", "synaptic connection weights"], ["REG", "spatial filter"], ["REG", "temporal filter convolution"], ["REG", "generator signal"]], "emit": "Inference of subunits' temporal filter, nonlinearity, and synaptic connection weights"}, "result_baseline1": {"opcode": "ANALYZE", "slot": [["Time", "M"], ["Time", "W"], ["Device", null]], "emit": "Visualization of inferred subunits"}, "result_baseline2": {"opcode": "Analyze", "slot": [["String", "M"], ["String", "W"], ["String", "subunits' temporal filter"], ["String", "nonlinearity"], ["String", "synaptic connection weights"], ["String", "spatial filter"], ["String", "temporal filter convolution"], ["String", "generator signal"]], "emit": "visualizing nonlinearity"}, "result_baseline3": {"opcode": "ANALYZE", "slot": [["REG", "M"], ["REG", "W"], ["String", "subunits' temporal filter"], ["String", "nonlinearity"], ["String", "synaptic connection weights"], ["String", "spatial filter"], ["String", "temporal filter convolution"], ["String", "generator signal"]], "emit": "visualizing nonlinearity"}}, {"i": 4, "sentense": "Obtain synaptic connection weights and spike trains by averaging W matrix columns, determining ON-OFF attribute, and classifying spikes into corresponding modules.", "kg": {"protocol": {"steps": [{"description": "Obtain synaptic connection weights and spike trains", "methods": [{"name": "Average W matrix columns to obtain synaptic connection weights", "type": "mathematical"}, {"name": "Determine ON-OFF attribute", "type": "experimental"}]}, {"description": "Classify spikes into corresponding modules", "methods": [{"name": "Classify spikes into corresponding modules", "type": "experimental"}]}]}}, "operation": "OBTAIN", "entity_list": [], "result_ours": {"opcode": "COLLECT", "slot": [["Container", null], ["Length", null], ["Time", null]], "emit": "synaptic connection weights"}, "result_dsl": {"opcode": "COLLECT", "slot": [["Container", null], ["Length", null], ["Time", null]], "emit": "synaptic connection weights"}, "result_baseline1": {"opcode": "Classify", "slot": [["Device", null], ["Container", null], ["String", "spike classification"]], "emit": "classified modules"}, "result_baseline2": {"opcode": "Obtain synaptic connection weights", "slot": [["REG", "W matrix"], ["REG", "spike trains"], ["REG", "ON-OFF attribute"], ["REG", "spike modules"]], "emit": "averaging columns"}, "result_baseline3": {"opcode": "OBTAIN", "slot": [["REG", "synaptic connection weights"], ["REG", "spike trains"], ["REG", "W matrix columns"], ["REG", "ON-OFF attribute"], ["REG", "spike modules"]], "emit": "averaged W matrix columns, ON-OFF attribute, classified spikes into modules"}}]}, "4": {"subject": "Bioinformatics & Computational Biology", "enum": 4, "protocol": "To format phosphoproteomic data for CausalPath analysis, first ensure the data is in the required format, potentially using R for reformatting. Adjust parameters in parameters.txt to match your analysis needs, including specifying input files and analysis options. Execute the CausalPath algorithm via command line with the necessary files in the same directory, producing results in various formats for detailed network analysis. Visualization of the phosphoproteomic network can be done through the CausalPath website or alternative tools like Newt or ChiBE, providing insights into causal relationships and network dynamics. This process involves critical steps such as data preparation, parameter adjustment, algorithm execution, and result visualization, each contributing to the comprehensive analysis of phosphoproteomic data.", "compile": [{"i": 0, "sentense": "To format phosphoproteomic data for CausalPath analysis, first ensure the data is in the required format, potentially using R for reformatting.", "kg": {"protocol": {"name": "CausalPath analysis for phosphoproteomic data", "steps": [{"step_num": 1, "description": "Ensure phosphoproteomic data is in the required format", "tools": ["R"]}, {"step_num": 2, "description": "Format the data for CausalPath analysis"}]}}, "operation": "FORMAT", "entity_list": [["REG", "phosphoproteomic data"], ["REG", "CausalPath analysis"]], "result_ours": {"opcode": "COPY", "slot": [["REG", null], ["REG", null], ["REG", "phosphoproteomic data"], ["Length", null], ["REG", "CausalPath analysis"]], "emit": "formatted data, restructured data"}, "result_dsl": {"opcode": "COPY", "slot": [["REG", null], ["REG", null], ["REG", "phosphoproteomic data"], ["Length", null], ["REG", "CausalPath analysis"]], "emit": "formatted data, restructured data"}, "result_baseline1": {"opcode": "CausalPath analysis", "slot": [["Device", null]], "emit": "Phosphoproteomic data"}, "result_baseline2": {"opcode": "Format", "slot": [["String", "phosphoproteomic data"], ["String", "CausalPath analysis"], ["String", "R"]], "emit": ""}, "result_baseline3": {"opcode": "FORMAT", "slot": [["REG", "phosphoproteomic data"], ["Device", "R"], ["REG", "CausalPath analysis"]], "emit": "Reformatted data"}}, {"i": 1, "sentense": "Adjust parameters in parameters.txt to match your analysis needs, including specifying input files and analysis options.", "kg": {"Protocol": {"adjust_parameters": {"file": "parameters.txt", "description": "Adjust parameters to match analysis needs, specify input files and analysis options"}}}, "operation": "ADJUST", "entity_list": [], "result_ours": {"opcode": "CHANGE", "slot": [["REG", null], ["REG", null], ["Device", null], ["Container", null], ["Time", null]], "emit": "data analysis results"}, "result_dsl": {"opcode": "CHANGE", "slot": [["REG", null], ["REG", null], ["Device", null], ["Container", null], ["Time", null]], "emit": "data analysis results"}, "result_baseline1": {"opcode": "ADJUST_PARAMETERS", "slot": [["String", "parameters.txt"], ["String", "Adjust parameters to match analysis needs, specify input files and analysis options"], ["String", null]], "emit": ""}, "result_baseline2": {"opcode": "Adjust parameters", "slot": [["String", "input files"], ["String", "analysis options"]], "emit": "Match analysis needs"}, "result_baseline3": {"opcode": "Adjust parameters", "slot": [["String", "parameters.txt"], ["String", "analysis needs"], ["String", "input files"], ["String", "analysis options"]], "emit": "Adjusted parameters"}}, {"i": 2, "sentense": "Execute the CausalPath algorithm via command line with the necessary files in the same directory, producing results in various formats for detailed network analysis.", "kg": {"protocol": {"name": "CausalPath algorithm execution for network analysis", "description": "Execute the CausalPath algorithm via command line with necessary files in the same directory to analyze detailed network results in various formats.", "algorithm": "CausalPath", "execution": "command line", "files": "necessary files in the same directory", "output_formats": "various formats", "analysis_type": "network analysis"}}, "operation": "EXECUTE", "entity_list": [], "result_ours": {"opcode": "EXECUTE", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "results"}, "result_dsl": {"opcode": "EXECUTE", "slot": [["REG", null], ["REG", null], ["REG", null], ["REG", null], ["REG", null]], "emit": "results"}, "result_baseline1": {"opcode": "Execute", "slot": [["String", "CausalPath algorithm"], ["String", "command line"], ["String", "necessary files in the same directory"], ["String", null], ["String", "network analysis"]], "emit": "various formats"}, "result_baseline2": {"opcode": "Execute", "slot": [["String", "CausalPath algorithm"], ["String", "command line"], ["String", "necessary files"], ["String", "same directory"], ["String", "results in various formats"], ["String", "detailed network analysis"]], "emit": ""}, "result_baseline3": {"opcode": "EXECUTE", "slot": [["REG", "CausalPath algorithm"], ["String", "command line"], ["REG", "necessary files"], ["REG", "same directory"]], "emit": "results in various formats"}}, {"i": 3, "sentense": "Visualization of the phosphoproteomic network can be done through the CausalPath website or alternative tools like Newt or ChiBE, providing insights into causal relationships and network dynamics."}, {"i": 4, "sentense": "This process involves critical steps such as data preparation, parameter adjustment, algorithm execution, and result visualization, each contributing to the comprehensive analysis of phosphoproteomic data.", "kg": {"protocol": {"steps": [{"name": "data preparation", "description": "Initial step involving collection and organization of phosphoproteomic data."}, {"name": "parameter adjustment", "description": "Fine-tuning of algorithm parameters to optimize performance."}, {"name": "algorithm execution", "description": "Running the specified algorithm on the prepared data to extract meaningful insights."}, {"name": "result visualization", "description": "Visual representation of analyzed phosphoproteomic data for easier interpretation."}], "importance": "Critical", "goal": "Comprehensive analysis of phosphoproteomic data"}}, "operation": "ANALYZE", "entity_list": [], "result_ours": {"opcode": "DETERMINE", "slot": [["REG", null], ["Device", null], ["REG", null]], "emit": "comprehensive analysis of phosphoproteomic data"}, "result_dsl": {"opcode": "DETERMINE", "slot": [["REG", null], ["Device", null], ["REG", null]], "emit": "comprehensive analysis of phosphoproteomic data"}, "result_baseline1": {"opcode": "phosphoproteomic analysis", "slot": [["String", "data preparation"], ["String", "parameter adjustment"], ["String", "algorithm execution"], ["String", "result visualization"], ["String", null]], "emit": "Comprehensive analysis of phosphoproteomic data"}, "result_baseline2": {"opcode": "comprehensive analysis", "slot": [["String", "phosphoproteomic data"], ["String", "data preparation"], ["String", "parameter adjustment"], ["String", "algorithm execution"], ["String", "result visualization"]], "emit": "detailed analysis report"}, "result_baseline3": {"opcode": "ANALYSIS", "slot": [["String", "data preparation"], ["String", "parameter adjustment"], ["String", "algorithm execution"], ["String", "result visualization"]], "emit": "comprehensive analysis of phosphoproteomic data"}}]}}}