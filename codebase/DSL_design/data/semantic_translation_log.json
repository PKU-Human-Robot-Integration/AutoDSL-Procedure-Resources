{
    "Molecular Biology & Genetics": {
        "0": {
            "subject": "Molecular Biology & Genetics",
            "enum": 0,
            "protocol": "Bile Sample Preparation: Collect bile into a sterile bottle. Centrifuge at 3000g for 10 minutes at 4\u00b0C to clear sediments. Aliquot 1 ml into tubes. Store aliquots at -20\u00b0C. ",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Bile Sample Preparation: Collect bile into a sterile bottle.",
                    "operation": "COLLECT",
                    "entity_list": [
                        [
                            "Container",
                            "bottle"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "Volume",
                                null
                            ],
                            [
                                "Container",
                                "bottle"
                            ]
                        ],
                        "emit": "sterile bile sample"
                    },
                    "result_baseline1": {
                        "opcode": "Bile Sample Preparation",
                        "slot": [
                            [
                                "Container",
                                "bottle"
                            ],
                            [
                                "REG",
                                "sterile"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "Bile Sample Preparation",
                        "slot": [
                            [
                                "Container",
                                "bile"
                            ],
                            [
                                "Container",
                                "sterile bottle"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "Bile Sample Preparation",
                        "slot": [
                            [
                                "REG",
                                "bile"
                            ],
                            [
                                "Container",
                                "sterile bottle"
                            ]
                        ],
                        "emit": "prepared bile sample"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Centrifuge at 3000g for 10 minutes at 4\u00b0C to clear sediments.",
                    "operation": "CENTRIFUGE",
                    "entity_list": [
                        [
                            "Force",
                            "3000g"
                        ],
                        [
                            "Time",
                            "10 minutes"
                        ],
                        [
                            "Temperature",
                            "4\u00b0C"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "PUMP",
                        "slot": [
                            [
                                "Force",
                                "3000g"
                            ],
                            [
                                "Time",
                                "10 minutes"
                            ],
                            [
                                "Temperature",
                                "4\u00b0C"
                            ]
                        ],
                        "emit": "Clear sediments"
                    },
                    "result_baseline1": {
                        "opcode": "Centrifuge",
                        "slot": [
                            [
                                "Force",
                                "3000g"
                            ],
                            [
                                "Time",
                                "10 minutes"
                            ],
                            [
                                "Temperature",
                                "4\u00b0C"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "CENTRIFUGE",
                        "slot": [
                            [
                                "Force",
                                "3000g"
                            ],
                            [
                                "Time",
                                "10 minutes"
                            ],
                            [
                                "Temperature",
                                "4\u00b0C"
                            ]
                        ],
                        "emit": "clear sediments"
                    },
                    "result_baseline3": {
                        "opcode": "CENTRIFUGE",
                        "slot": [
                            [
                                "Force",
                                "3000g"
                            ],
                            [
                                "Time",
                                "10 minutes"
                            ],
                            [
                                "Temperature",
                                "4\u00b0C"
                            ]
                        ],
                        "emit": "clear sediments"
                    }
                },
                {
                    "i": 2,
                    "sentense": "Aliquot 1 ml into tubes.",
                    "operation": "ALIQUOT",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "RINSE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Time",
                                null
                            ],
                            [
                                "Temperature",
                                null
                            ]
                        ],
                        "emit": "Samples in tubes."
                    },
                    "result_baseline1": {
                        "opcode": "ALIQUOT",
                        "slot": [
                            [
                                "Volume",
                                "1 ml"
                            ],
                            [
                                "Container",
                                "tubes"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "ALIQUOT",
                        "slot": [
                            [
                                "Volume",
                                "1 ml"
                            ],
                            [
                                "Container",
                                "tubes"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "ALIQUOT",
                        "slot": [
                            [
                                "Volume",
                                "1 ml"
                            ],
                            [
                                "Container",
                                "tubes"
                            ]
                        ],
                        "emit": "filled tubes"
                    }
                },
                {
                    "i": 3,
                    "sentense": "Store aliquots at -20\u00b0C.",
                    "operation": "STORE",
                    "entity_list": [
                        [
                            "Temperature",
                            "-20\u00b0C"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "STORE",
                        "slot": [
                            [
                                "Container",
                                null
                            ],
                            [
                                "Temperature",
                                "-20\u00b0C"
                            ]
                        ],
                        "emit": "Frozen samples"
                    },
                    "result_baseline1": {
                        "opcode": "STORE",
                        "slot": [
                            [
                                "REG",
                                "aliquots"
                            ],
                            [
                                "Temperature",
                                "-20\u00b0C"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "Store",
                        "slot": [
                            [
                                "Container",
                                "aliquots"
                            ],
                            [
                                "Temperature",
                                "-20\u00b0C"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "STORE",
                        "slot": [
                            [
                                "Temperature",
                                "-20\u00b0C"
                            ]
                        ],
                        "emit": "Aliquots"
                    }
                }
            ]
        },
        "1": {
            "subject": "Molecular Biology & Genetics",
            "enum": 0,
            "protocol": "3' Terminal Nucleosides Determination in RNA: Dissolve yeast tRNA<sup>Phe</sup> or mouse piRNAs in Milli-Q water. Add ammonium acetate buffer and RNase T<sub>2</sub>, then incubate. After RNA hydrolysis, analyze the hydrolysate using an LC/MS system.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "3' Terminal Nucleosides Determination in RNA: Dissolve yeast tRNA<sup>Phe</sup> or mouse piRNAs in Milli-Q water.",
                    "operation": "DISSOLVE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "MERGE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "nucleosides"
                    },
                    "result_baseline1": {
                        "opcode": "DETERMINE",
                        "slot": [
                            [
                                "Container",
                                "yeast tRNA"
                            ],
                            [
                                "Container",
                                "mouse piRNAs"
                            ],
                            [
                                "Container",
                                "Milli-Q water"
                            ]
                        ],
                        "emit": "3' Terminal Nucleosides"
                    },
                    "result_baseline2": {
                        "opcode": "DETERMINE",
                        "slot": [
                            [
                                "REG",
                                "3' Terminal Nucleosides"
                            ],
                            [
                                "Container",
                                [
                                    "yeast tRNA<Phe>",
                                    "mouse piRNAs"
                                ]
                            ],
                            [
                                "Time",
                                "Milli-Q water"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "3' Terminal Nucleosides Determination",
                        "slot": [
                            [
                                "REG",
                                "yeast tRNA<sup>Phe</sup>"
                            ],
                            [
                                "REG",
                                "mouse piRNAs"
                            ],
                            [
                                "Container",
                                "Milli-Q water"
                            ]
                        ],
                        "emit": "Dissolved RNA"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Add ammonium acetate buffer and RNase T<sub>2</sub>, then incubate.",
                    "operation": "ADD",
                    "entity_list": [
                        [
                            "REG",
                            "ammonium acetate buffer"
                        ],
                        [
                            "REG",
                            "RNase T<sub>2</sub>"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "ADD",
                        "slot": [
                            [
                                "REG",
                                "ammonium acetate buffer"
                            ],
                            [
                                "Container",
                                null
                            ],
                            [
                                "Volume",
                                null
                            ],
                            [
                                "REG",
                                "RNase T<sub>2</sub>"
                            ]
                        ],
                        "emit": "incubated RNase T2"
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    }
                },
                {
                    "i": 2,
                    "sentense": "After RNA hydrolysis, analyze the hydrolysate using an LC/MS system.",
                    "operation": "ANALYZE",
                    "entity_list": [
                        [
                            "REG",
                            "RNA hydrolysis"
                        ],
                        [
                            "Device",
                            "LC/MS system"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "EVALUATE",
                        "slot": [
                            [
                                "REG",
                                "RNA hydrolysis"
                            ],
                            [
                                "Device",
                                "LC/MS system"
                            ]
                        ],
                        "emit": "hydrolysate composition"
                    },
                    "result_baseline1": {
                        "opcode": "ANALYZE",
                        "slot": [
                            [
                                "REG",
                                "hydrolysate"
                            ],
                            [
                                "Device",
                                "LC/MS system"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "ANALYZE",
                        "slot": [
                            [
                                "REG",
                                "RNA hydrolysate"
                            ],
                            [
                                "Device",
                                "LC/MS system"
                            ]
                        ],
                        "emit": "analysis result"
                    },
                    "result_baseline3": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    }
                }
            ]
        },
        "2": {
            "subject": "Molecular Biology & Genetics",
            "enum": 0,
            "protocol": "Cell Thawing, Splitting, and Transfection: Thaw cells, spin down, and plate in growth media. Event trigger: Split cells at 80% confluency to avoid differentiation. For transfection, seed at low density and change media post-transfection for differentiation or growth.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Cell Thawing, Splitting, and Transfection: Thaw cells, spin down, and plate in growth media.",
                    "operation": "THAW",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "DRY",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Time",
                                null
                            ],
                            [
                                "Temperature",
                                null
                            ],
                            [
                                "Device",
                                null
                            ]
                        ],
                        "emit": "plate in growth media."
                    },
                    "result_baseline1": {
                        "opcode": "Cell Thawing, Splitting, and Transfection",
                        "slot": [
                            [
                                "REG",
                                "cells"
                            ],
                            [
                                "REG",
                                "growth media"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "Cell_Thawing_Splitting_Transfection",
                        "slot": [
                            [
                                "REG",
                                "cells"
                            ],
                            [
                                "REG",
                                "growth media"
                            ]
                        ],
                        "emit": "plate"
                    },
                    "result_baseline3": {
                        "opcode": "Thaw_Split_Transfect",
                        "slot": [
                            [
                                "REG",
                                "cells"
                            ],
                            [
                                "Device",
                                "centrifuge"
                            ],
                            [
                                "REG",
                                "growth media"
                            ]
                        ],
                        "emit": "plated cells"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Event trigger: Split cells at 80% confluency to avoid differentiation.",
                    "operation": "SPLIT",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "SPLIT",
                        "slot": [
                            [
                                "Volume",
                                null
                            ],
                            [
                                "Force",
                                null
                            ],
                            [
                                "Time",
                                null
                            ],
                            [
                                "Temperature",
                                null
                            ]
                        ],
                        "emit": "cell behavior at different confluency levels"
                    },
                    "result_baseline1": {
                        "opcode": "SPLIT",
                        "slot": [
                            [
                                "REG",
                                "80% confluency"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "SPLIT_CELLS",
                        "slot": [
                            [
                                "REG",
                                "80% confluency"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    }
                },
                {
                    "i": 2,
                    "sentense": "For transfection, seed at low density and change media post-transfection for differentiation or growth.",
                    "operation": "CHANGE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "CHANGE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Time",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "Time",
                                null
                            ]
                        ],
                        "emit": "Modified cells"
                    },
                    "result_baseline1": {
                        "opcode": "TRANSFECTION",
                        "slot": [
                            [
                                "REG",
                                "low density"
                            ],
                            [
                                "REG",
                                "change media"
                            ],
                            [
                                "REG",
                                "differentiation or growth"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "TRANSFECTION",
                        "slot": [
                            [
                                "REG",
                                "low density"
                            ],
                            [
                                "REG",
                                "transfection"
                            ],
                            [
                                "REG",
                                "differentiation"
                            ],
                            [
                                "REG",
                                "growth"
                            ]
                        ],
                        "emit": "change media"
                    },
                    "result_baseline3": {
                        "opcode": "TRANSFECTION",
                        "slot": [
                            [
                                "REG",
                                "low density"
                            ],
                            [
                                "Time",
                                "post-transfection"
                            ]
                        ],
                        "emit": "Differentiation or growth"
                    }
                }
            ]
        },
        "3": {
            "subject": "Molecular Biology & Genetics",
            "enum": 0,
            "protocol": "Bile Processing Protocol: Collect bile in sterile bottles from patients with biliary tubes. Centrifuge at 3000g for 10 minutes at 4\u00b0C to remove sediment and debris. Aliquot the clear bile into 1 ml volumes in microcentrifuge tubes. Store the aliquots at -20\u00b0C for future use. ",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Bile Processing Protocol: Collect bile in sterile bottles from patients with biliary tubes.",
                    "operation": "COLLECT",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "Volume",
                                null
                            ]
                        ],
                        "emit": "sterile bile samples"
                    },
                    "result_baseline1": {
                        "opcode": "Bile Processing Protocol",
                        "slot": [
                            [
                                "Container",
                                "sterile bottles"
                            ],
                            [
                                "REG",
                                "patients with biliary tubes"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "BILE_PROCESSING",
                        "slot": [
                            [
                                "Container",
                                "sterile bottles"
                            ],
                            [
                                "REG",
                                "patients with biliary tubes"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "REG",
                                "bile"
                            ],
                            [
                                "Container",
                                "sterile bottles"
                            ],
                            [
                                "REG",
                                "patients with biliary tubes"
                            ]
                        ],
                        "emit": "Processed bile"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Centrifuge at 3000g for 10 minutes at 4\u00b0C to remove sediment and debris.",
                    "operation": "CENTRIFUGE",
                    "entity_list": [
                        [
                            "Force",
                            "3000g"
                        ],
                        [
                            "Time",
                            "10 minutes"
                        ],
                        [
                            "Temperature",
                            "4\u00b0C"
                        ],
                        [
                            "REG",
                            "sediment"
                        ],
                        [
                            "REG",
                            "debris"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "PUMP",
                        "slot": [
                            [
                                "Force",
                                "3000g"
                            ],
                            [
                                "Time",
                                "10 minutes"
                            ],
                            [
                                "Temperature",
                                "4\u00b0C"
                            ],
                            [
                                "REG",
                                "sediment"
                            ],
                            [
                                "REG",
                                "debris"
                            ]
                        ],
                        "emit": "\"Centrifuged supernatant\""
                    },
                    "result_baseline1": {
                        "opcode": "CENTRIFUGE",
                        "slot": [
                            [
                                "Force",
                                "3000g"
                            ],
                            [
                                "Time",
                                "10 minutes"
                            ],
                            [
                                "Temperature",
                                "4\u00b0C"
                            ],
                            [
                                "REG",
                                "sediment"
                            ],
                            [
                                "REG",
                                "debris"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "CENTRIFUGE",
                        "slot": [
                            [
                                "Force",
                                "3000g"
                            ],
                            [
                                "Time",
                                "10 minutes"
                            ],
                            [
                                "Temperature",
                                "4\u00b0C"
                            ]
                        ],
                        "emit": "supernatant"
                    },
                    "result_baseline3": {
                        "opcode": "CENTRIFUGE",
                        "slot": [
                            [
                                "Force",
                                "3000g"
                            ],
                            [
                                "Time",
                                "10 minutes"
                            ],
                            [
                                "Temperature",
                                "4\u00b0C"
                            ]
                        ],
                        "emit": "sediment and debris removed"
                    }
                },
                {
                    "i": 2,
                    "sentense": "Aliquot the clear bile into 1 ml volumes in microcentrifuge tubes.",
                    "operation": "ALIQUOT",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "RINSE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Time",
                                null
                            ],
                            [
                                "Temperature",
                                null
                            ]
                        ],
                        "emit": "1 ml volumes of clear bile in microcentrifuge tubes."
                    },
                    "result_baseline1": {
                        "opcode": "ALIQUOT",
                        "slot": [
                            [
                                "REG",
                                "clear bile"
                            ],
                            [
                                "Volume",
                                "1 ml"
                            ],
                            [
                                "Container",
                                "microcentrifuge tubes"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "ALIQUOT",
                        "slot": [
                            [
                                "REG",
                                "clear bile"
                            ],
                            [
                                "Volume",
                                "1 ml"
                            ],
                            [
                                "Container",
                                "microcentrifuge tubes"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "ALIQUOT",
                        "slot": [
                            [
                                "REG",
                                "clear bile"
                            ],
                            [
                                "Volume",
                                "1 ml"
                            ],
                            [
                                "Container",
                                "microcentrifuge tubes"
                            ]
                        ],
                        "emit": "clear bile in microcentrifuge tubes"
                    }
                },
                {
                    "i": 3,
                    "sentense": "Store the aliquots at -20\u00b0C for future use.",
                    "operation": "STORE",
                    "entity_list": [
                        [
                            "Temperature",
                            "-20\u00b0C"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "STORE",
                        "slot": [
                            [
                                "Container",
                                null
                            ],
                            [
                                "Temperature",
                                "-20\u00b0C"
                            ]
                        ],
                        "emit": "preserved aliquots"
                    },
                    "result_baseline1": {
                        "opcode": "Protocol",
                        "slot": [
                            [
                                "Container",
                                "aliquots"
                            ],
                            [
                                "REG",
                                "-20\u00b0C"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "Store",
                        "slot": [
                            [
                                "REG",
                                "aliquots"
                            ],
                            [
                                "Temperature",
                                "-20\u00b0C"
                            ]
                        ],
                        "emit": "future use"
                    },
                    "result_baseline3": {
                        "opcode": "Store",
                        "slot": [
                            [
                                "Container",
                                "aliquots"
                            ],
                            [
                                "Temperature",
                                "-20\u00b0C"
                            ],
                            [
                                "Time",
                                "future"
                            ]
                        ],
                        "emit": "Stored aliquots"
                    }
                }
            ]
        },
        "4": {
            "subject": "Molecular Biology & Genetics",
            "enum": 0,
            "protocol": "Bile Collection and Centrifugation: Collect bile into a sterile collection bottle. Use a centrifuge tube to spin at 3000g for 10 minutes at 4\u00b0C. Aliquot the clarified supernatant into microcentrifuge tubes, 1 ml each. Freeze aliquots in microcentrifuge tubes at -20\u00b0C for storage.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Bile Collection and Centrifugation: Collect bile into a sterile collection bottle.",
                    "operation": "COLLECT",
                    "entity_list": [
                        [
                            "Container",
                            "bottle"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "Volume",
                                null
                            ],
                            [
                                "Container",
                                "bottle"
                            ]
                        ],
                        "emit": "Bile sample"
                    },
                    "result_baseline1": {
                        "opcode": "Bile Collection and Centrifugation",
                        "slot": [
                            [
                                "Container",
                                "bottle"
                            ]
                        ],
                        "emit": "centrifuged bile"
                    },
                    "result_baseline2": {
                        "opcode": "Bile_Collection_and_Centrifugation",
                        "slot": [
                            [
                                "Container",
                                "sterile collection bottle"
                            ]
                        ],
                        "emit": "centrifuged bile"
                    },
                    "result_baseline3": {
                        "opcode": "Bile Collection and Centrifugation",
                        "slot": [
                            [
                                "REG",
                                "bile"
                            ],
                            [
                                "Container",
                                "sterile collection bottle"
                            ]
                        ],
                        "emit": "collected bile"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Use a centrifuge tube to spin at 3000g for 10 minutes at 4\u00b0C.",
                    "operation": "SPIN",
                    "entity_list": [
                        [
                            "Force",
                            "3000g"
                        ],
                        [
                            "Time",
                            "10 minutes"
                        ],
                        [
                            "Temperature",
                            "4\u00b0C"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "SPIN",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Force",
                                "3000g"
                            ],
                            [
                                "Device",
                                null
                            ],
                            [
                                "Time",
                                "10 minutes"
                            ],
                            [
                                "Temperature",
                                "4\u00b0C"
                            ]
                        ],
                        "emit": "Centrifuged sample"
                    },
                    "result_baseline1": {
                        "opcode": "STEP1",
                        "slot": [
                            [
                                "Force",
                                "3000g"
                            ],
                            [
                                "Time",
                                "10 minutes"
                            ],
                            [
                                "Temperature",
                                "4\u00b0C"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "CENTRIFUGE",
                        "slot": [
                            [
                                "Device",
                                "centrifuge"
                            ],
                            [
                                "Force",
                                "3000g"
                            ],
                            [
                                "Time",
                                "10 minutes"
                            ],
                            [
                                "Temperature",
                                "4\u00b0C"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "Use",
                        "slot": [
                            [
                                "Container",
                                "centrifuge tube"
                            ],
                            [
                                "Time",
                                "10 minutes"
                            ],
                            [
                                "Force",
                                "3000g"
                            ],
                            [
                                "Temperature",
                                "4\u00b0C"
                            ]
                        ],
                        "emit": "Separated components"
                    }
                },
                {
                    "i": 2,
                    "sentense": "Aliquot the clarified supernatant into microcentrifuge tubes, 1 ml each.",
                    "operation": "ALIQUOT",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "RINSE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Time",
                                null
                            ],
                            [
                                "Temperature",
                                null
                            ]
                        ],
                        "emit": "clarified supernatant"
                    },
                    "result_baseline1": {
                        "opcode": "ALIQUOT",
                        "slot": [
                            [
                                "Container",
                                "microcentrifuge tubes"
                            ],
                            [
                                "Volume",
                                "1 ml"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "ALIQUOT",
                        "slot": [
                            [
                                "Container",
                                "clarified supernatant"
                            ],
                            [
                                "Mass",
                                "1 ml each"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "ALIQUOT",
                        "slot": [
                            [
                                "Container",
                                "microcentrifuge tubes"
                            ],
                            [
                                "Volume",
                                "1 ml"
                            ]
                        ],
                        "emit": "aliquoted supernatant"
                    }
                },
                {
                    "i": 3,
                    "sentense": "Freeze aliquots in microcentrifuge tubes at -20\u00b0C for storage.",
                    "operation": "FREEZE",
                    "entity_list": [
                        [
                            "REG",
                            "aliquots"
                        ],
                        [
                            "Container",
                            "microcentrifuge tubes"
                        ],
                        [
                            "Temperature",
                            "-20\u00b0C"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "SUSPEND",
                        "slot": [
                            [
                                "REG",
                                "aliquots"
                            ],
                            [
                                "Container",
                                "microcentrifuge tubes"
                            ],
                            [
                                "Temperature",
                                "-20\u00b0C"
                            ]
                        ],
                        "emit": "Frozen aliquots"
                    },
                    "result_baseline1": {
                        "opcode": "FREEZE",
                        "slot": [
                            [
                                "REG",
                                "aliquots"
                            ],
                            [
                                "Container",
                                "microcentrifuge tubes"
                            ],
                            [
                                "Temperature",
                                "-20\u00b0C"
                            ]
                        ],
                        "emit": "storage at -20\u00b0C"
                    },
                    "result_baseline2": {
                        "opcode": "FREEZE",
                        "slot": [
                            [
                                "Container",
                                "microcentrifuge tubes"
                            ],
                            [
                                "Temperature",
                                "-20\u00b0C"
                            ]
                        ],
                        "emit": "storage"
                    },
                    "result_baseline3": {
                        "opcode": "Freeze",
                        "slot": [
                            [
                                "Container",
                                "microcentrifuge tubes"
                            ],
                            [
                                "Temperature",
                                "-20\u00b0C"
                            ],
                            [
                                "Container",
                                "aliquots"
                            ]
                        ],
                        "emit": "frozen aliquots"
                    }
                }
            ]
        }
    },
    "Biomedical & Clinical Research": {
        "0": {
            "subject": "Biomedical & Clinical Research",
            "enum": 0,
            "protocol": "Muscle Elasticity Therapy Study: For 4 weeks, repeat 5 sessions per week: Group A performs MET, Group B performs static stretching and motor control exercise.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Muscle Elasticity Therapy Study: For 4 weeks, repeat 5 sessions per week: Group A performs MET, Group B performs static stretching and motor control exercise.",
                    "operation": "REPEAT",
                    "entity_list": [
                        [
                            "REG",
                            "MET"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "REPEAT",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                "MET"
                            ]
                        ],
                        "emit": "Improved muscle elasticity"
                    },
                    "result_baseline1": {
                        "opcode": "Muscle Elasticity Therapy Study",
                        "slot": [
                            [
                                "REG",
                                "MET"
                            ]
                        ],
                        "emit": "Group A performs MET, Group B performs static stretching and motor control exercise"
                    },
                    "result_baseline2": {
                        "opcode": "Muscle Elasticity Therapy Study",
                        "slot": [
                            [
                                "REG",
                                "Group A"
                            ],
                            [
                                "REG",
                                "Group B"
                            ],
                            [
                                "REG",
                                "4 weeks"
                            ],
                            [
                                "REG",
                                "5 sessions per week"
                            ],
                            [
                                "REG",
                                "MET"
                            ],
                            [
                                "REG",
                                "static stretching"
                            ],
                            [
                                "REG",
                                "motor control exercise"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "Muscle Elasticity Therapy Study",
                        "slot": [
                            [
                                "Time",
                                "4 weeks"
                            ],
                            [
                                "Time",
                                "5 sessions per week"
                            ],
                            [
                                "REG",
                                "Group A"
                            ],
                            [
                                "REG",
                                "MET"
                            ],
                            [
                                "REG",
                                "Group B"
                            ],
                            [
                                "REG",
                                "static stretching"
                            ],
                            [
                                "REG",
                                "motor control exercise"
                            ]
                        ],
                        "emit": "therapy results"
                    }
                }
            ]
        },
        "1": {
            "subject": "Biomedical & Clinical Research",
            "enum": 0,
            "protocol": "Fluorescence Assay for Enzyme Activity: Repeat the addition of substrates and enzyme to the cuvette, and record fluorescence intensity. Keep repeating these additions and measurements until no further change in fluorescence intensity is detected, indicating equilibrium.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Fluorescence Assay for Enzyme Activity: Repeat the addition of substrates and enzyme to the cuvette, and record fluorescence intensity.",
                    "operation": "REPEAT",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "REPEAT",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "Fluorescence intensity measurements"
                    },
                    "result_baseline1": {
                        "opcode": "Fluorescence Assay",
                        "slot": [
                            [
                                "Container",
                                "cuvette"
                            ],
                            [
                                "Time",
                                "repeat"
                            ],
                            [
                                "String",
                                "substrates"
                            ],
                            [
                                "String",
                                "enzyme"
                            ]
                        ],
                        "emit": "fluorescence intensity"
                    },
                    "result_baseline2": {
                        "opcode": "FLUORESCENCE_ASSAY",
                        "slot": [
                            [
                                "REG",
                                "substrates"
                            ],
                            [
                                "REG",
                                "enzyme"
                            ],
                            [
                                "REG",
                                "cuvette"
                            ]
                        ],
                        "emit": "fluorescence intensity"
                    },
                    "result_baseline3": {
                        "opcode": "ASSAY",
                        "slot": [
                            [
                                "REG",
                                "Fluorescence"
                            ],
                            [
                                "REG",
                                "Enzyme Activity"
                            ],
                            [
                                "Container",
                                "cuvette"
                            ],
                            [
                                "REG",
                                "substrates"
                            ],
                            [
                                "REG",
                                "enzyme"
                            ],
                            [
                                "Device",
                                "fluorometer"
                            ]
                        ],
                        "emit": "Fluorescence intensity"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Keep repeating these additions and measurements until no further change in fluorescence intensity is detected, indicating equilibrium.",
                    "operation": "REPEAT",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "REPEAT",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "Equilibrium fluorescence intensity."
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "protocol",
                        "slot": [
                            [
                                "String",
                                "Keep repeating these additions and measurements until no further change in fluorescence intensity is detected, indicating equilibrium."
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    }
                }
            ]
        },
        "2": {
            "subject": "Biomedical & Clinical Research",
            "enum": 0,
            "protocol": "For in vivo experiments using ViroMag, the volume of virus injected depends on the viral preparation, injection route, target tissue, and preliminary in vitro results. Keep In vivo ViroMag and saline at room temperature. Use 10 to 20 \u00b5L of In vivo ViroMag for each 1x10^6 infectious viral particles, avoiding exceeding recommended injection volumes.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "For in vivo experiments using ViroMag, the volume of virus injected depends on the viral preparation, injection route, target tissue, and preliminary in vitro results.",
                    "operation": "DEPEND",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "CONCENTRATE",
                        "slot": [
                            [
                                "Device",
                                null
                            ],
                            [
                                "Mass",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "Volume",
                                null
                            ],
                            [
                                "Volume",
                                null
                            ]
                        ],
                        "emit": "information"
                    },
                    "result_baseline1": {
                        "opcode": "INJECT",
                        "slot": [
                            [
                                "REG",
                                "ViroMag"
                            ],
                            [
                                "Container",
                                "virus"
                            ],
                            [
                                "REG",
                                "injection route"
                            ],
                            [
                                "REG",
                                "target tissue"
                            ],
                            [
                                "REG",
                                "preliminary in vitro results"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "EXPERIMENT",
                        "slot": [
                            [
                                "REG",
                                "in vivo experiments"
                            ],
                            [
                                "REG",
                                "ViroMag"
                            ]
                        ],
                        "emit": "volume of virus injected"
                    },
                    "result_baseline3": {
                        "opcode": "IN VIVO EXPERIMENTS",
                        "slot": [
                            [
                                "REG",
                                "ViroMag"
                            ],
                            [
                                "Volume",
                                "virus injected"
                            ],
                            [
                                "String",
                                "viral preparation"
                            ],
                            [
                                "String",
                                "injection route"
                            ],
                            [
                                "String",
                                "target tissue"
                            ],
                            [
                                "REG",
                                "preliminary in vitro results"
                            ]
                        ],
                        "emit": "experimental results"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Keep In vivo ViroMag and saline at room temperature.",
                    "operation": "KEEP",
                    "entity_list": [
                        [
                            "REG",
                            "In vivo ViroMag"
                        ],
                        [
                            "REG",
                            "saline"
                        ],
                        [
                            "Temperature",
                            "room temperature"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "KEEP",
                        "slot": [
                            [
                                "REG",
                                "In vivo ViroMag"
                            ],
                            [
                                "REG",
                                "saline"
                            ],
                            [
                                "Temperature",
                                "room temperature"
                            ]
                        ],
                        "emit": "In vivo ViroMag particles."
                    },
                    "result_baseline1": {
                        "opcode": "KEEP",
                        "slot": [
                            [
                                "REG",
                                "In vivo ViroMag"
                            ],
                            [
                                "REG",
                                "saline"
                            ],
                            [
                                "Temperature",
                                "room temperature"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "KEEP",
                        "slot": [
                            [
                                "Container",
                                "In vivo ViroMag"
                            ],
                            [
                                "Container",
                                "saline"
                            ],
                            [
                                "Time",
                                "room temperature"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "KEEP",
                        "slot": [
                            [
                                "REG",
                                "In vivo ViroMag"
                            ],
                            [
                                "REG",
                                "saline"
                            ],
                            [
                                "Temperature",
                                "room temperature"
                            ]
                        ],
                        "emit": ""
                    }
                },
                {
                    "i": 2,
                    "sentense": "Use 10 to 20 \u00b5L of In vivo ViroMag for each 1x10^6 infectious viral particles, avoiding exceeding recommended injection volumes.",
                    "operation": "USE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "USE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "concentrated viral particles"
                    },
                    "result_baseline1": {
                        "opcode": "USE",
                        "slot": [
                            [
                                "Volume",
                                "10 to 20 \u00b5L"
                            ],
                            [
                                "REG",
                                "In vivo ViroMag"
                            ],
                            [
                                "REG",
                                "1x10^6 infectious viral particles"
                            ],
                            [
                                "REG",
                                "recommended injection volumes"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "USE",
                        "slot": [
                            [
                                "Volume",
                                "10-20 \u00b5L"
                            ],
                            [
                                "Concentration",
                                "1x10^6 infectious viral particles"
                            ],
                            [
                                "String",
                                "In vivo ViroMag"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "USE",
                        "slot": [
                            [
                                "Volume",
                                "10 to 20 \u00b5L"
                            ],
                            [
                                "REG",
                                "In vivo ViroMag"
                            ],
                            [
                                "REG",
                                "1x10^6 infectious viral particles"
                            ]
                        ],
                        "emit": "Recommended injection volumes"
                    }
                }
            ]
        },
        "3": {
            "subject": "Biomedical & Clinical Research",
            "enum": 0,
            "protocol": "Place the larvae in a 1m^3 box filled with dirt. Feed them the specified food 3-4 times daily at 2-3 hour intervals for optimal growth. Continue feeding until the larvae turn into pupae, at which point increase the food quantity. Once pupae become adults, modify their environment by adding water to facilitate mating. After mating, collect the resulting larvae.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Place the larvae in a 1m^3 box filled with dirt.",
                    "operation": "PLACE",
                    "entity_list": [
                        [
                            "Volume",
                            "1m^3"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "PLACE",
                        "slot": [
                            [
                                "Volume",
                                "1m^3"
                            ]
                        ],
                        "emit": "Soil-dwelling larvae"
                    },
                    "result_baseline1": {
                        "opcode": "Place",
                        "slot": [
                            [
                                "Container",
                                "box"
                            ],
                            [
                                "Volume",
                                "1m^3"
                            ],
                            [
                                "String",
                                "filled with dirt"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "PLACE",
                        "slot": [
                            [
                                "Container",
                                "1m^3 box"
                            ],
                            [
                                "REG",
                                "dirt"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "Place",
                        "slot": [
                            [
                                "REG",
                                "larvae"
                            ],
                            [
                                "Container",
                                "1m^3 box"
                            ],
                            [
                                "REG",
                                "dirt"
                            ]
                        ],
                        "emit": "larvae in box with dirt"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Feed them the specified food 3-4 times daily at 2-3 hour intervals for optimal growth.",
                    "operation": "FEED",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "SEND",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "Optimal growth of cells."
                    },
                    "result_baseline1": {
                        "opcode": "FEED",
                        "slot": [
                            [
                                "Container",
                                "specified food"
                            ],
                            [
                                "Time",
                                "3-4 times daily"
                            ],
                            [
                                "Time",
                                "2-3 hour intervals"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "feed_protocol",
                        "slot": [
                            [
                                "Container",
                                "specified food"
                            ],
                            [
                                "Time",
                                "2-3 hour intervals"
                            ],
                            [
                                "REG",
                                "3-4 times daily"
                            ]
                        ],
                        "emit": "optimal growth"
                    },
                    "result_baseline3": {
                        "opcode": "FEED",
                        "slot": [
                            [
                                "REG",
                                "specified food"
                            ],
                            [
                                "Time",
                                "3-4 times daily at 2-3 hour intervals"
                            ]
                        ],
                        "emit": "optimal growth"
                    }
                },
                {
                    "i": 2,
                    "sentense": "Continue feeding until the larvae turn into pupae, at which point increase the food quantity.",
                    "operation": "INCREASE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "INCREASE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Concentration",
                                null
                            ],
                            [
                                "Concentration",
                                null
                            ]
                        ],
                        "emit": "pupae with increased food intake"
                    },
                    "result_baseline1": {
                        "opcode": "FEED",
                        "slot": [
                            [
                                "REG",
                                "larvae"
                            ],
                            [
                                "Concentration",
                                "food quantity"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "FEED",
                        "slot": [
                            [
                                "Time",
                                "until larvae turn into pupae"
                            ],
                            [
                                "REG",
                                "increase food quantity"
                            ]
                        ],
                        "emit": "Pupae"
                    }
                },
                {
                    "i": 3,
                    "sentense": "Once pupae become adults, modify their environment by adding water to facilitate mating.",
                    "operation": "MODIFY",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "MODIFY",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "Time",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "Mated adults"
                    },
                    "result_baseline1": {
                        "opcode": "MODIFY_ENVIRONMENT",
                        "slot": [
                            [
                                "REG",
                                "water"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "MODIFY_ENVIRONMENT",
                        "slot": [
                            [
                                "Container",
                                "pupae"
                            ],
                            [
                                "REG",
                                "adults"
                            ],
                            [
                                "String",
                                "water"
                            ],
                            [
                                "REG",
                                "mating"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "MODIFY",
                        "slot": [
                            [
                                "REG",
                                "pupae"
                            ],
                            [
                                "REG",
                                "adults"
                            ],
                            [
                                "String",
                                "adding water"
                            ]
                        ],
                        "emit": "mating facilitated"
                    }
                },
                {
                    "i": 4,
                    "sentense": "After mating, collect the resulting larvae.",
                    "operation": "COLLECT",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Container",
                                null
                            ],
                            [
                                "Force",
                                null
                            ],
                            [
                                "Time",
                                null
                            ]
                        ],
                        "emit": "resulting larvae, collected"
                    },
                    "result_baseline1": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "REG",
                                "larvae"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "REG",
                                "larvae"
                            ]
                        ],
                        "emit": "collected larvae"
                    },
                    "result_baseline3": {
                        "opcode": "MATING",
                        "slot": [
                            [
                                "REG",
                                "mating"
                            ]
                        ],
                        "emit": "resulting larvae"
                    }
                }
            ]
        },
        "4": {
            "subject": "Biomedical & Clinical Research",
            "enum": 0,
            "protocol": "Larvae Experiment Protocol: Preparation: Place larvae in a pre-filled 1m\u00b3 box with dirt. Feeding: Administer specific food 3-4 times daily at 2-3 hour intervals for optimal growth. Monitoring: Continue feeding until larvae transition to pupals, increasing food supply at this stage. Environmental Change: Upon reaching adulthood, introduce water to the dirt environment for mating. Larvae Collection: Post-mating, collect new larvae.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Larvae Experiment Protocol: Preparation: Place larvae in a pre-filled 1m\u00b3 box with dirt.",
                    "operation": "PLACE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "PLACE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "soil samples"
                    },
                    "result_baseline1": {
                        "opcode": "Larvae Experiment Protocol",
                        "slot": [
                            [
                                "Container",
                                "1m\u00b3 box with dirt"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "Larvae Experiment Protocol",
                        "slot": [
                            [
                                "Container",
                                "1m\u00b3 box"
                            ],
                            [
                                "REG",
                                "dirt"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    }
                },
                {
                    "i": 1,
                    "sentense": "Feeding: Administer specific food 3-4 times daily at 2-3 hour intervals for optimal growth.",
                    "operation": "ADMINISTER",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "DISTRIBUTE",
                        "slot": [
                            [
                                "Container",
                                null
                            ],
                            [
                                "Container",
                                null
                            ],
                            [
                                "Container",
                                null
                            ]
                        ],
                        "emit": "Well-nourished cells"
                    },
                    "result_baseline1": {
                        "opcode": "FEEDING",
                        "slot": [
                            [
                                "REG",
                                "specific food"
                            ],
                            [
                                "REG",
                                "3-4 times daily"
                            ],
                            [
                                "REG",
                                "2-3 hour intervals"
                            ]
                        ],
                        "emit": "optimal growth"
                    },
                    "result_baseline2": {
                        "opcode": "Feeding",
                        "slot": [
                            [
                                "REG",
                                "specific food"
                            ],
                            [
                                "Time",
                                "3-4 times daily at 2-3 hour intervals"
                            ]
                        ],
                        "emit": "optimal growth"
                    },
                    "result_baseline3": {
                        "opcode": "FEEDING",
                        "slot": [
                            [
                                "REG",
                                "specific food"
                            ],
                            [
                                "Time",
                                "3-4 times daily"
                            ],
                            [
                                "Time",
                                "2-3 hour intervals"
                            ]
                        ],
                        "emit": "optimal growth"
                    }
                },
                {
                    "i": 2,
                    "sentense": "Monitoring: Continue feeding until larvae transition to pupals, increasing food supply at this stage.",
                    "operation": "CONTINUE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "CONTINUE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "pupal stage"
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "MONITORING",
                        "slot": [
                            [
                                "REG",
                                "larvae"
                            ],
                            [
                                "REG",
                                "pupals"
                            ],
                            [
                                "Time",
                                "transition"
                            ]
                        ],
                        "emit": "food supply"
                    },
                    "result_baseline3": {
                        "opcode": "Monitoring",
                        "slot": [
                            [
                                "Time",
                                "until larvae transition to pupals"
                            ],
                            [
                                "Volume",
                                "increasing food supply"
                            ]
                        ],
                        "emit": "pupals stage"
                    }
                },
                {
                    "i": 3,
                    "sentense": "Environmental Change: Upon reaching adulthood, introduce water to the dirt environment for mating.",
                    "operation": "INTRODUCE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "INTRODUCE",
                        "slot": [
                            [
                                "Volume",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "Device",
                                null
                            ],
                            [
                                "Length",
                                null
                            ],
                            [
                                "Device",
                                null
                            ]
                        ],
                        "emit": "\"Water-based mating conditions\""
                    },
                    "result_baseline1": {
                        "opcode": "ENV_CHANGE",
                        "slot": [
                            [
                                "REG",
                                "adult"
                            ],
                            [
                                "REG",
                                "dirt environment"
                            ],
                            [
                                "REG",
                                "water"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "Environmental Change",
                        "slot": [
                            [
                                "REG",
                                "adulthood"
                            ],
                            [
                                "REG",
                                "dirt environment"
                            ],
                            [
                                "Container",
                                "water"
                            ]
                        ],
                        "emit": "mating"
                    },
                    "result_baseline3": {
                        "opcode": "Environmental Change",
                        "slot": [
                            [
                                "Time",
                                "adulthood"
                            ],
                            [
                                "REG",
                                "water"
                            ],
                            [
                                "REG",
                                "dirt environment"
                            ],
                            [
                                "REG",
                                "mating"
                            ]
                        ],
                        "emit": "mated organisms"
                    }
                },
                {
                    "i": 4,
                    "sentense": "Larvae Collection: Post-mating, collect new larvae.",
                    "operation": "COLLECT",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Container",
                                null
                            ],
                            [
                                "Force",
                                null
                            ],
                            [
                                "Time",
                                null
                            ]
                        ],
                        "emit": "Newly hatched larvae."
                    },
                    "result_baseline1": {
                        "opcode": "Larvae Collection",
                        "slot": [
                            [
                                "Time",
                                "Post-mating"
                            ]
                        ],
                        "emit": "new larvae"
                    },
                    "result_baseline2": {
                        "opcode": "Larvae Collection",
                        "slot": [
                            [
                                "REG",
                                "Post-mating"
                            ],
                            [
                                "REG",
                                "new larvae"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "Larvae Collection",
                        "slot": [
                            [
                                "Time",
                                "Post-mating"
                            ],
                            [
                                "REG",
                                "new larvae"
                            ]
                        ],
                        "emit": "collected larvae"
                    }
                }
            ]
        }
    },
    "Ecology & Environmental Biology": {
        "0": {
            "subject": "Ecology & Environmental Biology",
            "enum": 0,
            "protocol": "Thaw frozen samples to room temperature. For homogenization, sterilize a metal spatula, transfer ~50g of sample into an Erlenmeyer flask, add 2 ml of sterilized tap water, and homogenize. Next, place ~20g of homogenized sample into a tissue culture flask, add 20 ml of MDV medium, and gently shake. Autoclave the samples in Erlenmeyer flasks for 15 minutes at 121\u00b0C. Repeat the process of adding sterilized sample and MDV medium to the culture flask, gently shaking for even distribution. Repeat these steps (2.2-2.5) for all samples, including positive controls.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Thaw frozen samples to room temperature.",
                    "operation": "THAW",
                    "entity_list": [
                        [
                            "Temperature",
                            "room temperature"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "CHANGE",
                        "slot": [
                            [
                                "Temperature",
                                "room temperature"
                            ]
                        ],
                        "emit": "Room temperature samples."
                    },
                    "result_baseline1": {
                        "opcode": "THAW",
                        "slot": [
                            [
                                "REG",
                                "frozen samples"
                            ],
                            [
                                "Temperature",
                                "room temperature"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "Thaw",
                        "slot": [
                            [
                                "REG",
                                "frozen samples"
                            ],
                            [
                                "Temperature",
                                "room temperature"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "THAW",
                        "slot": [
                            [
                                "REG",
                                "frozen samples"
                            ],
                            [
                                "Temperature",
                                "room temperature"
                            ]
                        ],
                        "emit": ""
                    }
                },
                {
                    "i": 1,
                    "sentense": "For homogenization, sterilize a metal spatula, transfer ~50g of sample into an Erlenmeyer flask, add 2 ml of sterilized tap water, and homogenize.",
                    "operation": "STERILIZE",
                    "entity_list": [
                        [
                            "Container",
                            "Erlenmeyer flask"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "RINSE",
                        "slot": [
                            [
                                "Container",
                                "Erlenmeyer flask"
                            ],
                            [
                                "Volume",
                                null
                            ],
                            [
                                "Volume",
                                null
                            ]
                        ],
                        "emit": "homogenized sample"
                    },
                    "result_baseline1": {
                        "opcode": "HOMOGENIZE",
                        "slot": [
                            [
                                "Container",
                                "Erlenmeyer flask"
                            ],
                            [
                                "Volume",
                                "2 ml"
                            ],
                            [
                                "String",
                                "sterilized tap water"
                            ],
                            [
                                "String",
                                "homogenize"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "HOMOGENIZE",
                        "slot": [
                            [
                                "Device",
                                "metal spatula"
                            ],
                            [
                                "Mass",
                                "~50g"
                            ],
                            [
                                "Container",
                                "Erlenmeyer flask"
                            ],
                            [
                                "Volume",
                                "2 ml"
                            ],
                            [
                                "Container",
                                "sterilized tap water"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "HOMOGENIZATION",
                        "slot": [
                            [
                                "Device",
                                "metal spatula"
                            ],
                            [
                                "Device",
                                "Erlenmeyer flask"
                            ],
                            [
                                "Mass",
                                "~50g"
                            ],
                            [
                                "Volume",
                                "2 ml"
                            ],
                            [
                                "REG",
                                "sterilized tap water"
                            ]
                        ],
                        "emit": "homogenized sample"
                    }
                },
                {
                    "i": 2,
                    "sentense": "Next, place ~20g of homogenized sample into a tissue culture flask, add 20 ml of MDV medium, and gently shake.",
                    "operation": "PLACE",
                    "entity_list": [
                        [
                            "REG",
                            "homogenized sample"
                        ],
                        [
                            "Container",
                            "tissue culture flask"
                        ],
                        [
                            "Volume",
                            "20 ml"
                        ],
                        [
                            "REG",
                            "MDV medium"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "PLACE",
                        "slot": [
                            [
                                "REG",
                                "homogenized sample"
                            ],
                            [
                                "Container",
                                "tissue culture flask"
                            ],
                            [
                                "Volume",
                                "20 ml"
                            ],
                            [
                                "REG",
                                "MDV medium"
                            ]
                        ],
                        "emit": "MDV medium and homogenized sample"
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    }
                },
                {
                    "i": 3,
                    "sentense": "Autoclave the samples in Erlenmeyer flasks for 15 minutes at 121\u00b0C.",
                    "operation": "AUTOCLAVE",
                    "entity_list": [
                        [
                            "Container",
                            "Erlenmeyer flasks"
                        ],
                        [
                            "Time",
                            "15 minutes"
                        ],
                        [
                            "Temperature",
                            "121\u00b0C"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "RINSE",
                        "slot": [
                            [
                                "Container",
                                "Erlenmeyer flasks"
                            ],
                            [
                                "Time",
                                "15 minutes"
                            ],
                            [
                                "Temperature",
                                "121\u00b0C"
                            ]
                        ],
                        "emit": "sterilized samples"
                    },
                    "result_baseline1": {
                        "opcode": "Autoclave",
                        "slot": [
                            [
                                "Container",
                                "Erlenmeyer flasks"
                            ],
                            [
                                "Time",
                                "15 minutes"
                            ],
                            [
                                "Temperature",
                                "121\u00b0C"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "AUTOCLAVE",
                        "slot": [
                            [
                                "REG",
                                "Erlenmeyer flasks"
                            ],
                            [
                                "Time",
                                "15 minutes"
                            ],
                            [
                                "Temperature",
                                "121\u00b0C"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "Autoclave",
                        "slot": [
                            [
                                "Container",
                                "Erlenmeyer flasks"
                            ],
                            [
                                "Time",
                                "15 minutes"
                            ],
                            [
                                "Temperature",
                                "121\u00b0C"
                            ],
                            [
                                "REG",
                                "samples"
                            ]
                        ],
                        "emit": "Autoclaved samples"
                    }
                },
                {
                    "i": 4,
                    "sentense": "Repeat the process of adding sterilized sample and MDV medium to the culture flask, gently shaking for even distribution.",
                    "operation": "REPEAT",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "REPEAT",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "cultured cells"
                    },
                    "result_baseline1": {
                        "opcode": "ADD",
                        "slot": [
                            [
                                "REG",
                                "sterilized sample"
                            ],
                            [
                                "REG",
                                "MDV medium"
                            ],
                            [
                                "Container",
                                "culture flask"
                            ]
                        ],
                        "emit": "evenly distributed culture"
                    },
                    "result_baseline2": {
                        "opcode": "REPEAT",
                        "slot": [
                            [
                                "Device",
                                "culture flask"
                            ],
                            [
                                "REG",
                                "sterilized sample"
                            ],
                            [
                                "REG",
                                "MDV medium"
                            ],
                            [
                                "Concentration",
                                "even distribution"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "REPEAT",
                        "slot": [
                            [
                                "String",
                                "adding sterilized sample"
                            ],
                            [
                                "String",
                                "MDV medium"
                            ],
                            [
                                "Container",
                                "culture flask"
                            ],
                            [
                                "REG",
                                "gently shaking"
                            ]
                        ],
                        "emit": "even distribution"
                    }
                },
                {
                    "i": 5,
                    "sentense": "Repeat these steps (2.2-2.5) for all samples, including positive controls.",
                    "operation": "REPEAT",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "REPEAT",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "analyzed results"
                    },
                    "result_baseline1": {
                        "opcode": "REPEAT",
                        "slot": [
                            [
                                "REG",
                                "2.2-2.5"
                            ],
                            [
                                "Container",
                                "all samples"
                            ],
                            [
                                "Container",
                                "positive controls"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "REPEAT",
                        "slot": [
                            [
                                "Time",
                                "2.2-2.5"
                            ],
                            [
                                "REG",
                                "all samples"
                            ],
                            [
                                "REG",
                                "positive controls"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    }
                }
            ]
        },
        "1": {
            "subject": "Ecology & Environmental Biology",
            "enum": 0,
            "protocol": "For habituation, mice were placed at the ladder's start and encouraged to move forward using air puffs, repeating until they were accustomed to walking on the rungs. Motor performance was assessed by recording the time and number of foot slips as mice crossed the ladder, with trials repeated 4-5 times daily after a 15-minute interval for 3-4 days to evaluate motor learning. Data analysis involved calculating daily averages of time and foot slips and comparing these between groups. If a mouse failed to place its paws correctly or slipped, this was noted for further analysis, and if video recording was possible, missteps were reviewed afterward.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "For habituation, mice were placed at the ladder's start and encouraged to move forward using air puffs, repeating until they were accustomed to walking on the rungs.",
                    "operation": "ENCOURAGE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "ALLOW",
                        "slot": [
                            [
                                "Time",
                                null
                            ],
                            [
                                "Temperature",
                                null
                            ],
                            [
                                "String",
                                null
                            ]
                        ],
                        "emit": "trained mice"
                    },
                    "result_baseline1": {
                        "opcode": "HABITUATE",
                        "slot": [
                            [
                                "Container",
                                "mice"
                            ]
                        ],
                        "emit": "acquainted with walking on the rungs"
                    },
                    "result_baseline2": {
                        "opcode": "HABITUATION",
                        "slot": [
                            [
                                "REG",
                                "mice"
                            ],
                            [
                                "Device",
                                "air puffs"
                            ]
                        ],
                        "emit": "walking on the rungs"
                    },
                    "result_baseline3": {
                        "opcode": "HABITUATION",
                        "slot": [
                            [
                                "REG",
                                "mice"
                            ],
                            [
                                "REG",
                                "ladder's start"
                            ],
                            [
                                "Device",
                                "air puffs"
                            ],
                            [
                                "REG",
                                "walking on the rungs"
                            ]
                        ],
                        "emit": "accustomed mice"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Motor performance was assessed by recording the time and number of foot slips as mice crossed the ladder, with trials repeated 4-5 times daily after a 15-minute interval for 3-4 days to evaluate motor learning.",
                    "operation": "RECORD",
                    "entity_list": [
                        [
                            "Time",
                            "time"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "RECORD",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Time",
                                "time"
                            ]
                        ],
                        "emit": "Motor learning data"
                    },
                    "result_baseline1": {
                        "opcode": "Motor Performance",
                        "slot": [
                            [
                                "REG",
                                "time"
                            ],
                            [
                                "Length",
                                "number of foot slips"
                            ],
                            [
                                "Container",
                                "ladder"
                            ],
                            [
                                "REG",
                                "trials"
                            ],
                            [
                                "Time",
                                "interval"
                            ],
                            [
                                "REG",
                                "days"
                            ],
                            [
                                "REG",
                                "motor learning"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "ASSESS",
                        "slot": [
                            [
                                "Device",
                                "ladder"
                            ],
                            [
                                "REG",
                                "time"
                            ],
                            [
                                "REG",
                                "number of foot slips"
                            ],
                            [
                                "REG",
                                "mice"
                            ],
                            [
                                "REG",
                                "trials"
                            ],
                            [
                                "REG",
                                "daily"
                            ],
                            [
                                "REG",
                                "interval"
                            ],
                            [
                                "REG",
                                "days"
                            ]
                        ],
                        "emit": "motor learning"
                    },
                    "result_baseline3": {
                        "opcode": "ASSESS",
                        "slot": [
                            [
                                "REG",
                                "motor performance"
                            ],
                            [
                                "Time",
                                "the time"
                            ],
                            [
                                "REG",
                                "number of foot slips"
                            ],
                            [
                                "REG",
                                "mice"
                            ],
                            [
                                "REG",
                                "ladder"
                            ],
                            [
                                "Time",
                                "15-minute interval"
                            ],
                            [
                                "Time",
                                "4-5 times daily"
                            ],
                            [
                                "Time",
                                "3-4 days"
                            ]
                        ],
                        "emit": "evaluation of motor learning"
                    }
                },
                {
                    "i": 2,
                    "sentense": "Data analysis involved calculating daily averages of time and foot slips and comparing these between groups.",
                    "operation": "COMPARE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "COMPARE",
                        "slot": [
                            [
                                "Temperature",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "Device",
                                null
                            ],
                            [
                                "String",
                                null
                            ]
                        ],
                        "emit": "comparison of groups' daily averages"
                    },
                    "result_baseline1": {
                        "opcode": "DATA_ANALYSIS",
                        "slot": [
                            [
                                "Time",
                                "daily averages"
                            ],
                            [
                                "String",
                                "foot slips"
                            ],
                            [
                                "String",
                                "comparing"
                            ],
                            [
                                "REG",
                                "groups"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "DATA_ANALYSIS",
                        "slot": [
                            [
                                "REG",
                                "daily averages"
                            ],
                            [
                                "REG",
                                "time"
                            ],
                            [
                                "REG",
                                "foot slips"
                            ]
                        ],
                        "emit": "comparison between groups"
                    },
                    "result_baseline3": {
                        "opcode": "ANALYSIS",
                        "slot": [
                            [
                                "Time",
                                "daily averages"
                            ],
                            [
                                "REG",
                                "foot slips"
                            ],
                            [
                                "String",
                                "comparing"
                            ],
                            [
                                "REG",
                                "groups"
                            ]
                        ],
                        "emit": "analysis result"
                    }
                },
                {
                    "i": 3,
                    "sentense": "If a mouse failed to place its paws correctly or slipped, this was noted for further analysis, and if video recording was possible, missteps were reviewed afterward.",
                    "operation": "NOTED",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "NOTE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "video recordings, missteps"
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "protocol",
                        "slot": [
                            [
                                "REG",
                                "mouse"
                            ],
                            [
                                "REG",
                                "paws"
                            ],
                            [
                                "Bool",
                                "correct placement"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "ANALYSIS",
                        "slot": [
                            [
                                "REG",
                                "mouse"
                            ],
                            [
                                "REG",
                                "paws"
                            ],
                            [
                                "String",
                                "failed to place correctly or slipped"
                            ],
                            [
                                "Bool",
                                "noted for further analysis"
                            ],
                            [
                                "Bool",
                                "video recording possible"
                            ],
                            [
                                "REG",
                                "missteps"
                            ],
                            [
                                "REG",
                                "review"
                            ]
                        ],
                        "emit": "adjudged performance of the mouse"
                    }
                }
            ]
        },
        "2": {
            "subject": "Ecology & Environmental Biology",
            "enum": 0,
            "protocol": "Premoisten 3 swabs with 1.5 mL of PBST solution and press out excess against the tube's wall. In parallel, for each sampling location, swab target surfaces three times using the 3 swabs together, rotating and switching order each time to ensure consistent application. Return swabs to the tube after breaking at the breakpoint. Collect two negative field controls, one at the start and end of the session, and prepare two unopened PBST tubes as negative media controls. Store all samples in a cooler with ice for up to 12 hours. This method emphasizes parallel actions in swabbing and sample preparation, aligning with a parallel-for execution model in experimental procedures.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Premoisten 3 swabs with 1.5 mL of PBST solution and press out excess against the tube's wall.",
                    "operation": "MOISTEN",
                    "entity_list": [
                        [
                            "Volume",
                            "1.5 mL"
                        ],
                        [
                            "Concentration",
                            "PBST solution"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "RINSE",
                        "slot": [
                            [
                                "Volume",
                                "1.5 mL"
                            ],
                            [
                                "Concentration",
                                "PBST solution"
                            ]
                        ],
                        "emit": "moistened swabs"
                    },
                    "result_baseline1": {
                        "opcode": "Premoisten",
                        "slot": [
                            [
                                "Volume",
                                "1.5 mL"
                            ],
                            [
                                "Concentration",
                                "PBST solution"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "Premoisten",
                        "slot": [
                            [
                                "REG",
                                "3 swabs"
                            ],
                            [
                                "Volume",
                                "1.5 mL"
                            ],
                            [
                                "REG",
                                "PBST solution"
                            ]
                        ],
                        "emit": "excess against the tube's wall"
                    },
                    "result_baseline3": {
                        "opcode": "PREMOISTEN",
                        "slot": [
                            [
                                "REG",
                                "3 swabs"
                            ],
                            [
                                "Volume",
                                "1.5 mL"
                            ],
                            [
                                "REG",
                                "PBST solution"
                            ],
                            [
                                "Container",
                                "tube"
                            ]
                        ],
                        "emit": "premoistened swabs"
                    }
                },
                {
                    "i": 1,
                    "sentense": "In parallel, for each sampling location, swab target surfaces three times using the 3 swabs together, rotating and switching order each time to ensure consistent application.",
                    "operation": "SWAB",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "RINSE",
                        "slot": [
                            [
                                "Device",
                                null
                            ],
                            [
                                "Device",
                                null
                            ],
                            [
                                "Concentration",
                                null
                            ],
                            [
                                "Time",
                                null
                            ]
                        ],
                        "emit": "swabbed surfaces"
                    },
                    "result_baseline1": {
                        "opcode": "SWAB",
                        "slot": [
                            [
                                "REG",
                                "target surfaces"
                            ],
                            [
                                "REG",
                                "3 swabs"
                            ],
                            [
                                "REG",
                                "rotating and switching order"
                            ],
                            [
                                "REG",
                                "consistent application"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "SWAB",
                        "slot": [
                            [
                                "REG",
                                "target surfaces"
                            ],
                            [
                                "REG",
                                "3 swabs"
                            ]
                        ],
                        "emit": "consistent application"
                    },
                    "result_baseline3": {
                        "opcode": "SWAB",
                        "slot": [
                            [
                                "String",
                                "each sampling location"
                            ],
                            [
                                "String",
                                "target surfaces"
                            ],
                            [
                                "REG",
                                "3 swabs"
                            ],
                            [
                                "REG",
                                "three times"
                            ],
                            [
                                "Bool",
                                "rotating"
                            ],
                            [
                                "Bool",
                                "switching order"
                            ]
                        ],
                        "emit": "consistent application"
                    }
                },
                {
                    "i": 2,
                    "sentense": "Return swabs to the tube after breaking at the breakpoint.",
                    "operation": "RETURN",
                    "entity_list": [
                        [
                            "REG",
                            "swabs"
                        ],
                        [
                            "Container",
                            "tube"
                        ],
                        [
                            "REG",
                            "breakpoint"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "RETURN",
                        "slot": [
                            [
                                "REG",
                                "swabs"
                            ],
                            [
                                "Container",
                                "tube"
                            ],
                            [
                                "REG",
                                "breakpoint"
                            ]
                        ],
                        "emit": "Returned swabs"
                    },
                    "result_baseline1": {
                        "opcode": "RETURN_TO_TUBE",
                        "slot": [
                            [
                                "REG",
                                "swabs"
                            ],
                            [
                                "Container",
                                "tube"
                            ],
                            [
                                "REG",
                                "breakpoint"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "RETURN_SWABS",
                        "slot": [
                            [
                                "Container",
                                "tube"
                            ],
                            [
                                "Bool",
                                "Break at breakpoint"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "Return",
                        "slot": [
                            [
                                "REG",
                                "swabs"
                            ],
                            [
                                "Container",
                                "tube"
                            ],
                            [
                                "REG",
                                "breakpoint"
                            ]
                        ],
                        "emit": "returned swabs in tube"
                    }
                },
                {
                    "i": 3,
                    "sentense": "Collect two negative field controls, one at the start and end of the session, and prepare two unopened PBST tubes as negative media controls.",
                    "operation": "COLLECT",
                    "entity_list": [
                        [
                            "Container",
                            "PBST tubes"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Container",
                                "PBST tubes"
                            ]
                        ],
                        "emit": "field controls, PBST tubes"
                    },
                    "result_baseline1": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "Container",
                                "negative field controls"
                            ],
                            [
                                "Container",
                                "unopened PBST tubes"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "REG",
                                "two negative field controls"
                            ],
                            [
                                "REG",
                                "one at the start and end of the session"
                            ],
                            [
                                "REG",
                                "PBST tubes"
                            ],
                            [
                                "REG",
                                "unopened"
                            ],
                            [
                                "REG",
                                "negative media controls"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "REG",
                                "negative field controls"
                            ],
                            [
                                "Time",
                                "start of session"
                            ],
                            [
                                "Time",
                                "end of session"
                            ],
                            [
                                "REG",
                                "unopened PBST tubes"
                            ],
                            [
                                "REG",
                                "negative media controls"
                            ]
                        ],
                        "emit": "collected samples"
                    }
                },
                {
                    "i": 4,
                    "sentense": "Store all samples in a cooler with ice for up to 12 hours.",
                    "operation": "STORE",
                    "entity_list": [
                        [
                            "Time",
                            "12 hours"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "Time",
                                "12 hours"
                            ]
                        ],
                        "emit": "Preserved samples."
                    },
                    "result_baseline1": {
                        "opcode": "STORE",
                        "slot": [
                            [
                                "Container",
                                "cooler with ice"
                            ],
                            [
                                "Time",
                                "12 hours"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "STORE",
                        "slot": [
                            [
                                "Container",
                                "cooler with ice"
                            ],
                            [
                                "Time",
                                "up to 12 hours"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "STORE",
                        "slot": [
                            [
                                "Container",
                                "cooler"
                            ],
                            [
                                "REG",
                                "samples"
                            ],
                            [
                                "Temperature",
                                "ice"
                            ],
                            [
                                "Time",
                                "up to 12 hours"
                            ]
                        ],
                        "emit": "stored samples"
                    }
                },
                {
                    "i": 5,
                    "sentense": "This method emphasizes parallel actions in swabbing and sample preparation, aligning with a parallel-for execution model in experimental procedures.",
                    "operation": "EMPHASIZE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "DEFINE",
                        "slot": [
                            [
                                "Time",
                                null
                            ],
                            [
                                "Time",
                                null
                            ],
                            [
                                "Time",
                                null
                            ],
                            [
                                "Length",
                                null
                            ],
                            [
                                "Container",
                                null
                            ]
                        ],
                        "emit": "prepared samples with parallel-for execution"
                    },
                    "result_baseline1": {
                        "opcode": "Entity List",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "PARALLEL-FOR",
                        "slot": [
                            [
                                "REG",
                                "swabbing"
                            ],
                            [
                                "REG",
                                "sample preparation"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "METHOD",
                        "slot": [
                            [
                                "String",
                                "Parallel actions"
                            ],
                            [
                                "REG",
                                "Swabbing"
                            ],
                            [
                                "REG",
                                "Sample preparation"
                            ]
                        ],
                        "emit": "Prepared samples"
                    }
                }
            ]
        },
        "3": {
            "subject": "Ecology & Environmental Biology",
            "enum": 0,
            "protocol": "Premoisten 3 swabs with 1.5 mL of buffer solution (Phosphate Buffered Saline with 0.02% Tween 80, PBST) in a 15 mL falcon tube. Press out excess solution inside the tube, swab target surfaces three times using 3 swabs together, ensuring consistent pressure and speed, and rotate swabs for each sampling. Break the swab at its breakpoint and return it to the falcon tube. Collect two negative field controls, one at the start and one at the end of sampling, and prepare two unopened tubes of PBST as negative media controls. Store all samples in a cooler with ice for up to 12 hours during collection. Proceed with swab extraction, sample aggregation, and subsequent cultivation as per the experimental setup.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Premoisten 3 swabs with 1.5 mL of buffer solution (Phosphate Buffered Saline with 0.02% Tween 80, PBST) in a 15 mL falcon tube."
                },
                {
                    "i": 1,
                    "sentense": "Press out excess solution inside the tube, swab target surfaces three times using 3 swabs together, ensuring consistent pressure and speed, and rotate swabs for each sampling.",
                    "operation": "PRESS",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "PRESS",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Time",
                                null
                            ]
                        ],
                        "emit": "samples of target surfaces"
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "PROCESS",
                        "slot": [
                            [
                                "REG",
                                "excess solution inside the tube"
                            ],
                            [
                                "REG",
                                "swab target surfaces"
                            ],
                            [
                                "Time",
                                "3 times"
                            ],
                            [
                                "REG",
                                "3 swabs together"
                            ],
                            [
                                "REG",
                                "consistent pressure and speed"
                            ],
                            [
                                "REG",
                                "rotate swabs"
                            ]
                        ],
                        "emit": "sampling"
                    },
                    "result_baseline3": {
                        "opcode": "EXPERIMENT",
                        "slot": [
                            [
                                "Volume",
                                "excess solution"
                            ],
                            [
                                "Device",
                                "tube"
                            ],
                            [
                                "REG",
                                "3 swabs"
                            ],
                            [
                                "REG",
                                "target surfaces"
                            ],
                            [
                                "REG",
                                "consistent pressure and speed"
                            ],
                            [
                                "Time",
                                "three times"
                            ],
                            [
                                "String",
                                "rotate swabs for each sampling"
                            ]
                        ],
                        "emit": "sampling result"
                    }
                },
                {
                    "i": 2,
                    "sentense": "Break the swab at its breakpoint and return it to the falcon tube.",
                    "operation": "RETURN",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "RETURN",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "Device",
                                null
                            ],
                            [
                                "Device",
                                null
                            ]
                        ],
                        "emit": "broken swab"
                    },
                    "result_baseline1": {
                        "opcode": "BREAK",
                        "slot": [
                            [
                                "Container",
                                "swab"
                            ],
                            [
                                "Container",
                                "falcon tube"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "EXPERIMENT",
                        "slot": [
                            [
                                "Container",
                                "swab"
                            ],
                            [
                                "Container",
                                "falcon tube"
                            ]
                        ],
                        "emit": "break the swab"
                    },
                    "result_baseline3": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    }
                },
                {
                    "i": 3,
                    "sentense": "Collect two negative field controls, one at the start and one at the end of sampling, and prepare two unopened tubes of PBST as negative media controls.",
                    "operation": "COLLECT",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "Control samples"
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "REG",
                                "two negative field controls"
                            ],
                            [
                                "Time",
                                "start"
                            ],
                            [
                                "Time",
                                "end"
                            ],
                            [
                                "REG",
                                "two unopened tubes of PBST"
                            ],
                            [
                                "String",
                                "negative media controls"
                            ]
                        ],
                        "emit": "PBST prepared tubes"
                    }
                },
                {
                    "i": 4,
                    "sentense": "Store all samples in a cooler with ice for up to 12 hours during collection.",
                    "operation": "STORE",
                    "entity_list": [
                        [
                            "Time",
                            "12 hours"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "Time",
                                "12 hours"
                            ]
                        ],
                        "emit": "Preserved samples"
                    },
                    "result_baseline1": {
                        "opcode": "STORE",
                        "slot": [
                            [
                                "REG",
                                "samples"
                            ],
                            [
                                "Device",
                                "cooler with ice"
                            ],
                            [
                                "Container",
                                "12 hours"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "Store",
                        "slot": [
                            [
                                "Container",
                                "cooler"
                            ],
                            [
                                "Time",
                                "12 hours"
                            ],
                            [
                                "REG",
                                "ice"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "STORE",
                        "slot": [
                            [
                                "Container",
                                "cooler"
                            ],
                            [
                                "Time",
                                "12 hours"
                            ],
                            [
                                "Temperature",
                                "ice"
                            ]
                        ],
                        "emit": "collected samples"
                    }
                },
                {
                    "i": 5,
                    "sentense": "Proceed with swab extraction, sample aggregation, and subsequent cultivation as per the experimental setup.",
                    "operation": "PROCEED",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "PROCEED",
                        "slot": [
                            [
                                "Device",
                                null
                            ],
                            [
                                "Device",
                                null
                            ],
                            [
                                "Device",
                                null
                            ],
                            [
                                "Device",
                                null
                            ]
                        ],
                        "emit": "cultured samples"
                    },
                    "result_baseline1": {
                        "opcode": "EXPERIMENT",
                        "slot": [
                            [
                                "REG",
                                "swab extraction"
                            ],
                            [
                                "REG",
                                "sample aggregation"
                            ],
                            [
                                "REG",
                                "subsequent cultivation"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "PROCEDURE",
                        "slot": [
                            [
                                "REG",
                                "swab extraction"
                            ],
                            [
                                "REG",
                                "sample aggregation"
                            ],
                            [
                                "REG",
                                "subsequent cultivation"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "PROCEED",
                        "slot": [
                            [
                                "REG",
                                "swab extraction"
                            ],
                            [
                                "REG",
                                "sample aggregation"
                            ],
                            [
                                "REG",
                                "subsequent cultivation"
                            ]
                        ],
                        "emit": "experimental setup"
                    }
                }
            ]
        },
        "4": {
            "subject": "Ecology & Environmental Biology",
            "enum": 0,
            "protocol": "Always ensure containers are not tightly sealed to prevent pressure buildup and heed warnings about ensuring adequate ventilation to avoid oxygen deficiency from inert gas displacement. Protect yourself against liquid nitrogen (LN2) splatter. Label cryogenic tubes with sample name, date frozen, and initials before aliquoting 1 mL samples. Fill an insulated pan with LN2 to about 2 cm depth and place a CoolRack in it to cool to -150\u00b0C in approximately 15 minutes; pre-chilling the CoolRack in a -80\u00b0C freezer can save LN2 and time. Place cryogenic tubes in the CoolRack on dry ice for snap freezing, leaving them for 1 minute before transferring to a freezer box with forceps, then store in a -80\u00b0C freezer. For warming, thaw tubes at 4\u00b0C.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Always ensure containers are not tightly sealed to prevent pressure buildup and heed warnings about ensuring adequate ventilation to avoid oxygen deficiency from inert gas displacement.",
                    "operation": "ENSURE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "MAINTAIN",
                        "slot": [
                            [
                                "Time",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "Time",
                                null
                            ]
                        ],
                        "emit": "data on pressure and ventilation"
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "protocol",
                        "slot": [
                            [
                                "Container",
                                "tightly sealed"
                            ],
                            [
                                "REG",
                                "pressure buildup"
                            ],
                            [
                                "REG",
                                "oxygen deficiency"
                            ],
                            [
                                "REG",
                                "inert gas displacement"
                            ],
                            [
                                "REG",
                                "adequate ventilation"
                            ],
                            [
                                "REG",
                                "warnings"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "Container",
                        "slot": [
                            [
                                "Bool",
                                "not tightly sealed"
                            ],
                            [
                                "String",
                                "warnings about adequate ventilation"
                            ],
                            [
                                "Bool",
                                "avoid oxygen deficiency from inert gas displacement"
                            ]
                        ],
                        "emit": ""
                    }
                },
                {
                    "i": 1,
                    "sentense": "Protect yourself against liquid nitrogen (LN2) splatter.",
                    "operation": "PROTECT",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "SECURE",
                        "slot": [
                            [
                                "Device",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "Device",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "Safety measures"
                    },
                    "result_baseline1": {
                        "opcode": "PROTECT",
                        "slot": [
                            [
                                "REG",
                                "liquid nitrogen (LN2)"
                            ],
                            [
                                "REG",
                                "splatter"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "PROTECT",
                        "slot": [
                            [
                                "String",
                                "liquid nitrogen (LN2) splatter"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "PROTECT",
                        "slot": [
                            [
                                "REG",
                                "liquid nitrogen (LN2) splatter"
                            ]
                        ],
                        "emit": "personal safety"
                    }
                },
                {
                    "i": 2,
                    "sentense": "Label cryogenic tubes with sample name, date frozen, and initials before aliquoting 1 mL samples.",
                    "operation": "LABEL",
                    "entity_list": [
                        [
                            "Container",
                            "cryogenic tubes"
                        ],
                        [
                            "REG",
                            "sample name"
                        ],
                        [
                            "Time",
                            "date frozen"
                        ],
                        [
                            "REG",
                            "initials"
                        ],
                        [
                            "Volume",
                            "1 mL samples"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "RECORD",
                        "slot": [
                            [
                                "Container",
                                "cryogenic tubes"
                            ],
                            [
                                "REG",
                                "sample name"
                            ],
                            [
                                "Time",
                                "date frozen"
                            ],
                            [
                                "REG",
                                "initials"
                            ],
                            [
                                "Volume",
                                "1 mL samples"
                            ]
                        ],
                        "emit": "Labeled cryogenic tubes."
                    },
                    "result_baseline1": {
                        "opcode": "Label",
                        "slot": [
                            [
                                "Container",
                                "cryogenic tubes"
                            ],
                            [
                                "REG",
                                "sample name"
                            ],
                            [
                                "Time",
                                "date frozen"
                            ],
                            [
                                "REG",
                                "initials"
                            ],
                            [
                                "Volume",
                                "1 mL samples"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "ALIQUOT",
                        "slot": [
                            [
                                "Container",
                                "cryogenic tubes"
                            ],
                            [
                                "String",
                                "sample name"
                            ],
                            [
                                "Time",
                                "date frozen"
                            ],
                            [
                                "String",
                                "initials"
                            ],
                            [
                                "Volume",
                                "1 mL"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    }
                },
                {
                    "i": 3,
                    "sentense": "Fill an insulated pan with LN2 to about 2 cm depth and place a CoolRack in it to cool to -150\u00b0C in approximately 15 minutes; pre-chilling the CoolRack in a -80\u00b0C freezer can save LN2 and time.",
                    "operation": "FILL",
                    "entity_list": [
                        [
                            "REG",
                            "LN2"
                        ],
                        [
                            "Length",
                            "2 cm"
                        ],
                        [
                            "Device",
                            "CoolRack"
                        ],
                        [
                            "Temperature",
                            "-150\u00b0C"
                        ],
                        [
                            "Time",
                            "15 minutes"
                        ],
                        [
                            "Device",
                            "CoolRack"
                        ],
                        [
                            "Temperature",
                            "-80\u00b0C"
                        ],
                        [
                            "REG",
                            "LN2"
                        ],
                        [
                            "Time",
                            "time"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "PLUG",
                        "slot": [
                            [
                                "REG",
                                "LN2"
                            ],
                            [
                                "Length",
                                "2 cm"
                            ],
                            [
                                "Device",
                                "CoolRack"
                            ],
                            [
                                "Temperature",
                                "-150\u00b0C"
                            ],
                            [
                                "Time",
                                "15 minutes"
                            ],
                            [
                                "Device",
                                "CoolRack"
                            ],
                            [
                                "Temperature",
                                "-80\u00b0C"
                            ],
                            [
                                "REG",
                                "LN2"
                            ],
                            [
                                "Time",
                                "time"
                            ]
                        ],
                        "emit": "\"Cooled CoolRack\""
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    }
                },
                {
                    "i": 4,
                    "sentense": "Place cryogenic tubes in the CoolRack on dry ice for snap freezing, leaving them for 1 minute before transferring to a freezer box with forceps, then store in a -80\u00b0C freezer.",
                    "operation": "PLACE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "PLACE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Device",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "Frozen cryogenic tubes"
                    },
                    "result_baseline1": {
                        "opcode": "SNAP FREEZE",
                        "slot": [
                            [
                                "REG",
                                "cryogenic tubes"
                            ],
                            [
                                "REG",
                                "CoolRack"
                            ],
                            [
                                "REG",
                                "dry ice"
                            ],
                            [
                                "Time",
                                "1 minute"
                            ],
                            [
                                "REG",
                                "freezer box"
                            ],
                            [
                                "REG",
                                "-80\u00b0C freezer"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "FREEZE",
                        "slot": [
                            [
                                "Device",
                                "CoolRack"
                            ],
                            [
                                "REG",
                                "dry ice"
                            ],
                            [
                                "Time",
                                "1 minute"
                            ],
                            [
                                "Container",
                                "freezer box"
                            ],
                            [
                                "REG",
                                "-80\u00b0C freezer"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "PLACE",
                        "slot": [
                            [
                                "Container",
                                "cryogenic tubes"
                            ],
                            [
                                "Device",
                                "CoolRack"
                            ],
                            [
                                "String",
                                "dry ice"
                            ],
                            [
                                "Time",
                                "1 minute"
                            ],
                            [
                                "Device",
                                "freezer box"
                            ],
                            [
                                "Device",
                                "forceps"
                            ],
                            [
                                "Device",
                                "-80\u00b0C freezer"
                            ]
                        ],
                        "emit": "Frozen tubes"
                    }
                },
                {
                    "i": 5,
                    "sentense": "For warming, thaw tubes at 4\u00b0C.",
                    "operation": "THAW",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "CHANGE",
                        "slot": [
                            [
                                "Time",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "Thawed tubes at 4\u00b0C"
                    },
                    "result_baseline1": {
                        "opcode": "WARM",
                        "slot": [
                            [
                                "REG",
                                "tubes"
                            ],
                            [
                                "Time",
                                "4\u00b0C"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "THAW",
                        "slot": [
                            [
                                "REG",
                                "tubes"
                            ],
                            [
                                "Temperature",
                                "4\u00b0C"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "WARMING",
                        "slot": [
                            [
                                "Temperature",
                                "4C"
                            ],
                            [
                                "Container",
                                "tubes"
                            ]
                        ],
                        "emit": "thawed tubes"
                    }
                }
            ]
        }
    },
    "Bioengineering & Technology": {
        "0": {
            "subject": "Bioengineering & Technology",
            "enum": 0,
            "protocol": "Grow yeast cells with GFP-fusion on solid media, transfer to a microscope slide covered with a coverslip, and acquire Z-sections using a spinning disk confocal microscope.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Grow yeast cells with GFP-fusion on solid media, transfer to a microscope slide covered with a coverslip, and acquire Z-sections using a spinning disk confocal microscope.",
                    "operation": "GROW",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "GROW",
                        "slot": [
                            [
                                "Temperature",
                                null
                            ],
                            [
                                "Time",
                                null
                            ]
                        ],
                        "emit": "GFP-fusion cells    Spinning disk confocal microscopy     "
                    },
                    "result_baseline1": {
                        "opcode": "GROW",
                        "slot": [
                            [
                                "REG",
                                "GFP-fusion"
                            ],
                            [
                                "REG",
                                "solid media"
                            ],
                            [
                                "Device",
                                "microscope slide covered with a coverslip"
                            ],
                            [
                                "Device",
                                "spinning disk confocal microscope"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "GROW",
                        "slot": [
                            [
                                "REG",
                                "GFP-fusion"
                            ],
                            [
                                "REG",
                                "solid media"
                            ],
                            [
                                "Device",
                                "spinning disk confocal microscope"
                            ]
                        ],
                        "emit": "Z-sections"
                    },
                    "result_baseline3": {
                        "opcode": "GROW",
                        "slot": [
                            [
                                "REG",
                                "yeast cells"
                            ],
                            [
                                "REG",
                                "GFP-fusion"
                            ],
                            [
                                "Container",
                                "solid media"
                            ],
                            [
                                "REG",
                                "microscope slide"
                            ],
                            [
                                "REG",
                                "coverslip"
                            ],
                            [
                                "Device",
                                "spinning disk confocal microscope"
                            ]
                        ],
                        "emit": "Z-sections"
                    }
                }
            ]
        },
        "1": {
            "subject": "Bioengineering & Technology",
            "enum": 0,
            "protocol": "Grow yeast cells transformed with GFP-fusion on solid media, then transfer them to a microscope slide and cover with a coverslip. Acquire Z-sections using a spinning disk confocal microscope as described.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Grow yeast cells transformed with GFP-fusion on solid media, then transfer them to a microscope slide and cover with a coverslip.",
                    "operation": "GROW",
                    "entity_list": [
                        [
                            "REG",
                            "GFP-fusion"
                        ],
                        [
                            "REG",
                            "solid media"
                        ],
                        [
                            "Device",
                            "microscope slide"
                        ],
                        [
                            "Device",
                            "coverslip"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "GROW",
                        "slot": [
                            [
                                "REG",
                                "GFP-fusion"
                            ],
                            [
                                "REG",
                                "solid media"
                            ],
                            [
                                "Device",
                                "microscope slide"
                            ],
                            [
                                "Device",
                                "coverslip"
                            ]
                        ],
                        "emit": "Microscope images"
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "GROW",
                        "slot": [
                            [
                                "REG",
                                "yeast cells transformed with GFP-fusion"
                            ],
                            [
                                "REG",
                                "solid media"
                            ],
                            [
                                "REG",
                                "microscope slide"
                            ],
                            [
                                "REG",
                                "coverslip"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "GROW",
                        "slot": [
                            [
                                "REG",
                                "yeast cells"
                            ],
                            [
                                "REG",
                                "GFP-fusion"
                            ],
                            [
                                "REG",
                                "solid media"
                            ],
                            [
                                "Container",
                                "microscope slide"
                            ],
                            [
                                "Device",
                                "coverslip"
                            ]
                        ],
                        "emit": "transformed cells"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Acquire Z-sections using a spinning disk confocal microscope as described.",
                    "operation": "ACQUIRE",
                    "entity_list": [
                        [
                            "Device",
                            "spinning disk confocal microscope"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "ACQUIRE",
                        "slot": [
                            [
                                "Device",
                                "spinning disk confocal microscope"
                            ]
                        ],
                        "emit": "Z-sections"
                    },
                    "result_baseline1": {
                        "opcode": "ACQUIRE",
                        "slot": [
                            [
                                "Device",
                                "spinning disk confocal microscope"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "ACQUIRE_Z_SECTIONS",
                        "slot": [
                            [
                                "Device",
                                "spinning disk confocal microscope"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "Acquire",
                        "slot": [
                            [
                                "Device",
                                "spinning disk confocal microscope"
                            ]
                        ],
                        "emit": "Z-sections"
                    }
                }
            ]
        },
        "2": {
            "subject": "Bioengineering & Technology",
            "enum": 0,
            "protocol": "Prior to the onset of directed differentiation, pluripotent stem cells are cultured in maintenance medium with 1% or 2% DMSO for 24-48h. Proceed with desired differentiation protocol after this treatment.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Prior to the onset of directed differentiation, pluripotent stem cells are cultured in maintenance medium with 1% or 2% DMSO for 24-48h.",
                    "operation": "CULTURE",
                    "entity_list": [
                        [
                            "REG",
                            "DMSO"
                        ],
                        [
                            "Time",
                            "24-48h"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "CULTURE",
                        "slot": [
                            [
                                "REG",
                                "DMSO"
                            ],
                            [
                                "Time",
                                "24-48h"
                            ]
                        ],
                        "emit": "modified pluripotent stem cells"
                    },
                    "result_baseline1": {
                        "opcode": "CULTURE",
                        "slot": [
                            [
                                "Container",
                                "pluripotent stem cells"
                            ],
                            [
                                "REG",
                                "maintenance medium"
                            ],
                            [
                                "Time",
                                "24-48h"
                            ]
                        ],
                        "emit": "cultured cells"
                    },
                    "result_baseline2": {
                        "opcode": "CULTURE",
                        "slot": [
                            [
                                "Container",
                                "pluripotent stem cells"
                            ],
                            [
                                "String",
                                "maintenance medium"
                            ],
                            [
                                "Concentration",
                                "1% or 2% DMSO"
                            ],
                            [
                                "Time",
                                "24-48h"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "Prior to the onset of directed differentiation",
                        "slot": [
                            [
                                "REG",
                                "pluripotent stem cells"
                            ],
                            [
                                "Container",
                                "maintenance medium"
                            ],
                            [
                                "Concentration",
                                "1% or 2% DMSO"
                            ],
                            [
                                "Time",
                                "24-48h"
                            ]
                        ],
                        "emit": ""
                    }
                },
                {
                    "i": 1,
                    "sentense": "Proceed with desired differentiation protocol after this treatment.",
                    "operation": "PROCEED",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "PROCEED",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "Differentiated cells"
                    },
                    "result_baseline1": {
                        "opcode": "PROCESS",
                        "slot": [
                            [
                                "String",
                                "Proceed with desired differentiation protocol after this treatment."
                            ],
                            [
                                "Container",
                                []
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "PROCEED",
                        "slot": [
                            [
                                "String",
                                "desired differentiation protocol"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "PROCEED",
                        "slot": [
                            [
                                "REG",
                                "desired differentiation protocol"
                            ]
                        ],
                        "emit": "desired results"
                    }
                }
            ]
        },
        "3": {
            "subject": "Bioengineering & Technology",
            "enum": 0,
            "protocol": "Place larvae in a 1m^3 box filled with dirt, feed them the specified food 3-4 times a day at 2-3 hour intervals for optimal growth. Continue until larvae become pupae, at which point increase food quantity. Once pupae develop into adults, introduce water to the environment for mating. After mating, collect the new larvae.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Place larvae in a 1m^3 box filled with dirt, feed them the specified food 3-4 times a day at 2-3 hour intervals for optimal growth.",
                    "operation": "PLACE",
                    "entity_list": [
                        [
                            "Volume",
                            "1m^3"
                        ],
                        [
                            "Time",
                            "3-4 times"
                        ],
                        [
                            "Time",
                            "2-3 hour"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "PLACE",
                        "slot": [
                            [
                                "Volume",
                                "1m^3"
                            ],
                            [
                                "Time",
                                "3-4 times"
                            ],
                            [
                                "Time",
                                "2-3 hour"
                            ]
                        ],
                        "emit": "Well-fed and growing larvae."
                    },
                    "result_baseline1": {
                        "opcode": "FEED",
                        "slot": [
                            [
                                "Container",
                                "1m^3 box filled with dirt"
                            ],
                            [
                                "Time",
                                "3-4 times"
                            ],
                            [
                                "Time",
                                "2-3 hour"
                            ]
                        ],
                        "emit": "optimal growth"
                    },
                    "result_baseline2": {
                        "opcode": "FEED",
                        "slot": [
                            [
                                "REG",
                                "larvae"
                            ],
                            [
                                "REG",
                                "specified food"
                            ],
                            [
                                "Time",
                                "2-3 hour intervals"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "PLACE",
                        "slot": [
                            [
                                "REG",
                                "larvae"
                            ],
                            [
                                "Container",
                                "1m^3 box"
                            ],
                            [
                                "REG",
                                "dirt"
                            ],
                            [
                                "REG",
                                "specified food"
                            ],
                            [
                                "Time",
                                "3-4 times a day at 2-3 hour intervals"
                            ]
                        ],
                        "emit": "optimal growth"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Continue until larvae become pupae, at which point increase food quantity.",
                    "operation": "INCREASE",
                    "entity_list": [
                        [
                            "REG",
                            "larvae"
                        ],
                        [
                            "REG",
                            "pupae"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "INCREASE",
                        "slot": [
                            [
                                "REG",
                                "larvae"
                            ],
                            [
                                "Device",
                                null
                            ],
                            [
                                "REG",
                                "pupae"
                            ]
                        ],
                        "emit": "Increased pupal size."
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "CONTINUE",
                        "slot": [
                            [
                                "REG",
                                "larvae"
                            ],
                            [
                                "REG",
                                "pupae"
                            ],
                            [
                                "REG",
                                "Increase food quantity"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "CONTINUE",
                        "slot": [
                            [
                                "REG",
                                "larvae"
                            ],
                            [
                                "REG",
                                "pupae"
                            ],
                            [
                                "String",
                                "increase food quantity"
                            ]
                        ],
                        "emit": "pupae"
                    }
                },
                {
                    "i": 2,
                    "sentense": "Once pupae develop into adults, introduce water to the environment for mating.",
                    "operation": "INTRODUCE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "LAUNCH",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "Mated adults."
                    },
                    "result_baseline1": {
                        "opcode": "INTRODUCE_WATER",
                        "slot": [
                            [
                                "Container",
                                "environment"
                            ],
                            [
                                "String",
                                "mating"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "INTRODUCE_WATER",
                        "slot": [
                            [
                                "Container",
                                "environment"
                            ],
                            [
                                "REG",
                                "water"
                            ],
                            [
                                "Time",
                                "once pupae develop into adults"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "INTRODUCE",
                        "slot": [
                            [
                                "REG",
                                "water"
                            ],
                            [
                                "Container",
                                "environment"
                            ],
                            [
                                "REG",
                                "adults"
                            ],
                            [
                                "REG",
                                "pupae"
                            ]
                        ],
                        "emit": "mating"
                    }
                },
                {
                    "i": 3,
                    "sentense": "After mating, collect the new larvae.",
                    "operation": "COLLECT",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "Device",
                                null
                            ]
                        ],
                        "emit": "new larvae"
                    },
                    "result_baseline1": {
                        "opcode": "COLLECT_LARVAE",
                        "slot": [
                            [
                                "REG",
                                "new larvae"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "REG",
                                "larvae"
                            ]
                        ],
                        "emit": "new larvae"
                    },
                    "result_baseline3": {
                        "opcode": "MATING",
                        "slot": [],
                        "emit": "new larvae"
                    }
                }
            ]
        },
        "4": {
            "subject": "Bioengineering & Technology",
            "enum": 0,
            "protocol": "Recruit 7 mandibular models and apply radio opaque markers. Record 10 predetermined linear measurements, perform CBCT scanning of each model, and convert DICOM files into STL format. Use SLS and FFF printers for 3D printing the models. Record the same 10 linear measurements on the printed models and compare these values against the reference models and each other.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Recruit 7 mandibular models and apply radio opaque markers.",
                    "operation": "RECRUIT",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "LOCATE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "labeled mandibular models"
                    },
                    "result_baseline1": {
                        "opcode": "Recruit",
                        "slot": [
                            [
                                "REG",
                                "7 mandibular models"
                            ],
                            [
                                "REG",
                                "radio opaque markers"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "Recruit",
                        "slot": [
                            [
                                "REG",
                                "7 mandibular models"
                            ],
                            [
                                "REG",
                                "radio opaque markers"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "RECRUIT",
                        "slot": [
                            [
                                "REG",
                                "7 mandibular models"
                            ],
                            [
                                "REG",
                                "radio opaque markers"
                            ]
                        ],
                        "emit": ""
                    }
                },
                {
                    "i": 1,
                    "sentense": "Record 10 predetermined linear measurements, perform CBCT scanning of each model, and convert DICOM files into STL format.",
                    "operation": "RECORD",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "RECORD",
                        "slot": [
                            [
                                "Container",
                                null
                            ],
                            [
                                "Time",
                                null
                            ]
                        ],
                        "emit": "CBCT images in STL format"
                    },
                    "result_baseline1": {
                        "opcode": "protocol",
                        "slot": [
                            [
                                "Container",
                                "model"
                            ],
                            [
                                "Volume",
                                10
                            ],
                            [
                                "Length",
                                "linear measurements"
                            ],
                            [
                                "Device",
                                "CBCT scanning"
                            ]
                        ],
                        "emit": "STL format"
                    },
                    "result_baseline2": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "RECORD",
                        "slot": [
                            [
                                "REG",
                                "10 predetermined linear measurements"
                            ],
                            [
                                "Device",
                                "CBCT scanner"
                            ],
                            [
                                "REG",
                                "DICOM files"
                            ]
                        ],
                        "emit": "STL format"
                    }
                },
                {
                    "i": 2,
                    "sentense": "Use SLS and FFF printers for 3D printing the models.",
                    "operation": "PRINT",
                    "entity_list": [
                        [
                            "Device",
                            "SLS"
                        ],
                        [
                            "Device",
                            "FFF"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "PRINT",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "Device",
                                "SLS"
                            ],
                            [
                                "Device",
                                "FFF"
                            ]
                        ],
                        "emit": "3D printed models with SLS and FFF printers."
                    },
                    "result_baseline1": {
                        "opcode": "PRINT",
                        "slot": [
                            [
                                "Device",
                                "SLS"
                            ],
                            [
                                "Device",
                                "FFF"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "PRINT",
                        "slot": [
                            [
                                "Device",
                                "SLS printer"
                            ],
                            [
                                "Device",
                                "FFF printer"
                            ]
                        ],
                        "emit": "3D printed models"
                    },
                    "result_baseline3": {
                        "opcode": "3D PRINT",
                        "slot": [
                            [
                                "Device",
                                "SLS printer"
                            ],
                            [
                                "Device",
                                "FFF printer"
                            ],
                            [
                                "REG",
                                "models"
                            ]
                        ],
                        "emit": "3D printed models"
                    }
                },
                {
                    "i": 3,
                    "sentense": "Record the same 10 linear measurements on the printed models and compare these values against the reference models and each other.",
                    "operation": "RECORD",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "RECORD",
                        "slot": [
                            [
                                "Container",
                                null
                            ],
                            [
                                "Time",
                                null
                            ]
                        ],
                        "emit": "Comparison of measurements"
                    },
                    "result_baseline1": {
                        "opcode": "RECORD",
                        "slot": [
                            [
                                "REG",
                                "10"
                            ],
                            [
                                "REG",
                                "linear measurements"
                            ],
                            [
                                "REG",
                                "printed models"
                            ],
                            [
                                "REG",
                                "reference models"
                            ],
                            [
                                "REG",
                                "each other"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "RECORD",
                        "slot": [
                            [
                                "Volume",
                                "printed models"
                            ],
                            [
                                "REG",
                                "reference models"
                            ],
                            [
                                "REG",
                                "each other"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    }
                }
            ]
        }
    },
    "Bioinformatics & Computational Biology": {
        "0": {
            "subject": "Bioinformatics & Computational Biology",
            "enum": 0,
            "protocol": "To evaluate CSC triage algorithms, review clinical data and existing algorithms, define the crisis, select and devise algorithms, define clinical endpoints, and select patient cohorts. Obtain IRB approval, create a case report form, choose a secure data management system, determine data entry method, conduct pilot data acquisition, complete data acquisition, apply triage algorithms, and calculate priority scores. Test algorithm accuracy using AUROC, simulate clinical decision-making in small patient groups using a bootstrap method, format input files with patient outcomes and priority scores, run simulations, and analyze decision-making efficacy.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "To evaluate CSC triage algorithms, review clinical data and existing algorithms, define the crisis, select and devise algorithms, define clinical endpoints, and select patient cohorts.",
                    "operation": "EVALUATE",
                    "entity_list": [
                        [
                            "REG",
                            "CSC triage algorithms"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "DETERMINE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Device",
                                null
                            ],
                            [
                                "REG",
                                "CSC triage algorithms"
                            ]
                        ],
                        "emit": "CSC triage algorithms evaluation"
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "EVALUATE",
                        "slot": [
                            [
                                "REG",
                                "CSC triage algorithms"
                            ],
                            [
                                "REG",
                                "clinical data"
                            ],
                            [
                                "String",
                                "existing algorithms"
                            ],
                            [
                                "String",
                                "define the crisis"
                            ],
                            [
                                "String",
                                "select and devise algorithms"
                            ],
                            [
                                "String",
                                "define clinical endpoints"
                            ],
                            [
                                "String",
                                "select patient cohorts"
                            ]
                        ],
                        "emit": "Evaluation results"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Obtain IRB approval, create a case report form, choose a secure data management system, determine data entry method, conduct pilot data acquisition, complete data acquisition, apply triage algorithms, and calculate priority scores."
                },
                {
                    "i": 2,
                    "sentense": "Test algorithm accuracy using AUROC, simulate clinical decision-making in small patient groups using a bootstrap method, format input files with patient outcomes and priority scores, run simulations, and analyze decision-making efficacy.",
                    "operation": "TEST",
                    "entity_list": [
                        [
                            "REG",
                            "AUROC"
                        ],
                        [
                            "REG",
                            "bootstrap method"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "DETERMINE",
                        "slot": [
                            [
                                "REG",
                                "AUROC"
                            ],
                            [
                                "Device",
                                null
                            ],
                            [
                                "REG",
                                "bootstrap method"
                            ]
                        ],
                        "emit": "decision-making efficacy"
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "TEST",
                        "slot": [
                            [
                                "REG",
                                "AUROC"
                            ],
                            [
                                "REG",
                                "clinical decision-making"
                            ],
                            [
                                "REG",
                                "small patient groups"
                            ],
                            [
                                "Container",
                                "bootstrap method"
                            ],
                            [
                                "REG",
                                "patient outcomes"
                            ],
                            [
                                "REG",
                                "priority scores"
                            ],
                            [
                                "Device",
                                "simulations"
                            ]
                        ],
                        "emit": "decision-making efficacy"
                    }
                }
            ]
        },
        "1": {
            "subject": "Bioinformatics & Computational Biology",
            "enum": 0,
            "protocol": "Download and install STNMF from GitHub, link: https://github.com/jiankliu/STNMF-SNN. Process data by generating effective spike-triggered stimulus images (STE) from neuron spike trains and stimulus array, applying Singular Value Decomposition (SVD) for spatial and temporal filters. Use STNMF on STE to infer subunits' spatial receptive field, obtaining weight matrix W and module matrix M. Analyze M and W to infer temporal filters, nonlinearity, and synaptic weights of subunits. For detailed computational analysis, apply algorithms to calculate temporal filter, nonlinearity, and classify spikes into modules based on synaptic connection weights, aiming to reveal complex neuronal network dynamics.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Download and install STNMF from GitHub, link: https://github.com/jiankliu/STNMF-SNN.",
                    "operation": "DOWNLOAD",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "COPY",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "Length",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "Code"
                    },
                    "result_baseline1": {
                        "opcode": "DOWNLOAD",
                        "slot": [
                            [
                                "String",
                                "STNMF"
                            ],
                            [
                                "String",
                                "https://github.com/jiankliu/STNMF-SNN"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "INSTALL",
                        "slot": [
                            [
                                "REG",
                                "STNMF"
                            ],
                            [
                                "String",
                                "https://github.com/jiankliu/STNMF-SNN"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "DOWNLOAD",
                        "slot": [
                            [
                                "REG",
                                "STNMF"
                            ],
                            [
                                "String",
                                "https://github.com/jiankliu/STNMF-SNN"
                            ],
                            [
                                "Device",
                                "GitHub"
                            ]
                        ],
                        "emit": "Installed STNMF"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Process data by generating effective spike-triggered stimulus images (STE) from neuron spike trains and stimulus array, applying Singular Value Decomposition (SVD) for spatial and temporal filters.",
                    "operation": "PROCESS",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "PROCEED",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Length",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "filtered stimulus images"
                    },
                    "result_baseline1": {
                        "opcode": "PROCESS",
                        "slot": [
                            [
                                "REG",
                                "data"
                            ],
                            [
                                "REG",
                                "stimulus images"
                            ],
                            [
                                "REG",
                                "neuron spike trains"
                            ],
                            [
                                "REG",
                                "stimulus array"
                            ],
                            [
                                "REG",
                                "Singular Value Decomposition (SVD)"
                            ],
                            [
                                "REG",
                                "spatial filters"
                            ],
                            [
                                "REG",
                                "temporal filters"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "PROCESS",
                        "slot": [
                            [
                                "REG",
                                "effective spike-triggered stimulus images"
                            ],
                            [
                                "REG",
                                "neuron spike trains"
                            ],
                            [
                                "REG",
                                "stimulus array"
                            ],
                            [
                                "REG",
                                "Singular Value Decomposition"
                            ]
                        ],
                        "emit": "spatial and temporal filters"
                    },
                    "result_baseline3": {
                        "opcode": "PROCESS",
                        "slot": [
                            [
                                "REG",
                                "neuron spike trains"
                            ],
                            [
                                "REG",
                                "stimulus array"
                            ],
                            [
                                "Device",
                                "Singular Value Decomposition (SVD)"
                            ]
                        ],
                        "emit": "spike-triggered stimulus images (STE)"
                    }
                },
                {
                    "i": 2,
                    "sentense": "Use STNMF on STE to infer subunits' spatial receptive field, obtaining weight matrix W and module matrix M. Analyze M and W to infer temporal filters, nonlinearity, and synaptic weights of subunits.",
                    "operation": "ANALYZE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "DETERMINE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Device",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "Temporal filters, nonlinearity, and synaptic weights of subunits."
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "STNMF",
                        "slot": [
                            [
                                "REG",
                                "STE"
                            ]
                        ],
                        "emit": "W and M"
                    },
                    "result_baseline3": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    }
                },
                {
                    "i": 3,
                    "sentense": "For detailed computational analysis, apply algorithms to calculate temporal filter, nonlinearity, and classify spikes into modules based on synaptic connection weights, aiming to reveal complex neuronal network dynamics.",
                    "operation": "APPLY",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "APPLY",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "modules with synaptic connection weights"
                    },
                    "result_baseline1": {
                        "opcode": "APPLY",
                        "slot": [
                            [
                                "String",
                                "algorithms"
                            ],
                            [
                                "REG",
                                "temporal filter"
                            ],
                            [
                                "REG",
                                "nonlinearity"
                            ],
                            [
                                "REG",
                                "classify spikes"
                            ],
                            [
                                "REG",
                                "synaptic connection weights"
                            ]
                        ],
                        "emit": "complex neuronal network dynamics"
                    },
                    "result_baseline2": {
                        "opcode": "COMPUTATIONAL_ANALYSIS",
                        "slot": [
                            [
                                "String",
                                "temporal filter"
                            ],
                            [
                                "String",
                                "nonlinearity"
                            ],
                            [
                                "String",
                                "classify spikes into modules"
                            ],
                            [
                                "String",
                                "synaptic connection weights"
                            ]
                        ],
                        "emit": "complex neuronal network dynamics"
                    },
                    "result_baseline3": {
                        "opcode": "ANALYSIS",
                        "slot": [
                            [
                                "REG",
                                "temporal filter"
                            ],
                            [
                                "REG",
                                "nonlinearity"
                            ],
                            [
                                "REG",
                                "synaptic connection weights"
                            ],
                            [
                                "Device",
                                "algorithms"
                            ]
                        ],
                        "emit": "complex neuronal network dynamics"
                    }
                }
            ]
        },
        "2": {
            "subject": "Bioinformatics & Computational Biology",
            "enum": 0,
            "protocol": "Access PAD2 for TF colocalization analysis by selecting signal files from the database for targeted analysis within specific genomic regions identified by ChromHMM. Open PAD2 website, navigate to select signals, and choose TFs or histone marks of interest. Optionally, upload personal signal files for analysis. After selection, specify the genomic region of interest for colocalization assessment through Pearson\u2019s correlation of ChIP-seq profiles. Investigate signal correlation within these regions by viewing and downloading heatmap and ranked correlation plots. This streamlined approach involves selecting signal files, determining genomic regions for analysis, and utilizing correlation data to understand protein colocalization, all performed through the PAD2 platform.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Access PAD2 for TF colocalization analysis by selecting signal files from the database for targeted analysis within specific genomic regions identified by ChromHMM.",
                    "operation": "ACCESS",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "USE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "TF colocalization analysis"
                    },
                    "result_baseline1": {
                        "opcode": "Access",
                        "slot": [
                            [
                                "REG",
                                "PAD2"
                            ],
                            [
                                "REG",
                                "signal files"
                            ],
                            [
                                "REG",
                                "database"
                            ],
                            [
                                "REG",
                                "targeted analysis"
                            ],
                            [
                                "REG",
                                "specific genomic regions"
                            ],
                            [
                                "REG",
                                "ChromHMM"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "Access",
                        "slot": [
                            [
                                "REG",
                                "PAD2"
                            ],
                            [
                                "REG",
                                "TF colocalization analysis"
                            ],
                            [
                                "Container",
                                "signal files"
                            ],
                            [
                                "Container",
                                "database"
                            ],
                            [
                                "REG",
                                "targeted analysis"
                            ],
                            [
                                "REG",
                                "specific genomic regions"
                            ],
                            [
                                "REG",
                                "ChromHMM"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "ACCESS",
                        "slot": [
                            [
                                "REG",
                                "PAD2"
                            ],
                            [
                                "REG",
                                "TF colocalization analysis"
                            ],
                            [
                                "REG",
                                "specific genomic regions"
                            ],
                            [
                                "REG",
                                "ChromHMM"
                            ],
                            [
                                "Device",
                                "database"
                            ]
                        ],
                        "emit": "selected signal files"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Open PAD2 website, navigate to select signals, and choose TFs or histone marks of interest."
                },
                {
                    "i": 2,
                    "sentense": "Optionally, upload personal signal files for analysis.",
                    "operation": "UPLOAD",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "SELECT",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "Analysis results"
                    },
                    "result_baseline1": {
                        "opcode": "UPLOAD",
                        "slot": [
                            [
                                "Container",
                                "signal files"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "ANALYSIS",
                        "slot": [
                            [
                                "REG",
                                "personal signal files"
                            ]
                        ],
                        "emit": "analysis results"
                    },
                    "result_baseline3": {
                        "opcode": "UPLOAD",
                        "slot": [
                            [
                                "String",
                                "personal signal files"
                            ],
                            [
                                "Bool",
                                "Optional"
                            ]
                        ],
                        "emit": "analysis"
                    }
                },
                {
                    "i": 3,
                    "sentense": "After selection, specify the genomic region of interest for colocalization assessment through Pearson\u2019s correlation of ChIP-seq profiles."
                },
                {
                    "i": 4,
                    "sentense": "Investigate signal correlation within these regions by viewing and downloading heatmap and ranked correlation plots."
                },
                {
                    "i": 5,
                    "sentense": "This streamlined approach involves selecting signal files, determining genomic regions for analysis, and utilizing correlation data to understand protein colocalization, all performed through the PAD2 platform."
                }
            ]
        },
        "3": {
            "subject": "Bioinformatics & Computational Biology",
            "enum": 0,
            "protocol": "Install STNMF by downloading from GitHub (https://github.com/jiankliu/STNMF-SNN) and adding to MATLAB path. Preprocess data by generating effective spike-triggered stimulus images from stimulus array and spike trains, using Singular Value Decomposition for spatial and temporal filters, and forming an N\u00d7P matrix STE. Decompose STE with STNMF to obtain weight matrix W and module matrix M, preset subunits number, reshape M for stimulus frame size. Analyze M and W to infer subunits' temporal filter, nonlinearity, and synaptic connection weights by calculating spatial filter and temporal filter convolution, creating generator signal, and visualizing nonlinearity. Obtain synaptic connection weights and spike trains by averaging W matrix columns, determining ON-OFF attribute, and classifying spikes into corresponding modules.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "Install STNMF by downloading from GitHub (https://github.com/jiankliu/STNMF-SNN) and adding to MATLAB path.",
                    "operation": "INSTALL",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "BUILD",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "String",
                                null
                            ],
                            [
                                "String",
                                null
                            ],
                            [
                                "String",
                                null
                            ]
                        ],
                        "emit": "software tool"
                    },
                    "result_baseline1": {
                        "opcode": "INSTALL",
                        "slot": [
                            [
                                "String",
                                "STNMF"
                            ],
                            [
                                "String",
                                "https://github.com/jiankliu/STNMF-SNN"
                            ],
                            [
                                "String",
                                "MATLAB path"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "INSTALL",
                        "slot": [
                            [
                                "REG",
                                "STNMF"
                            ],
                            [
                                "REG",
                                "MATLAB path"
                            ],
                            [
                                "String",
                                "https://github.com/jiankliu/STNMF-SNN"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "INSTALL",
                        "slot": [
                            [
                                "REG",
                                "STNMF"
                            ],
                            [
                                "REG",
                                "GitHub"
                            ],
                            [
                                "String",
                                "https://github.com/jiankliu/STNMF-SNN"
                            ],
                            [
                                "REG",
                                "MATLAB path"
                            ]
                        ],
                        "emit": "Installed STNMF"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Preprocess data by generating effective spike-triggered stimulus images from stimulus array and spike trains, using Singular Value Decomposition for spatial and temporal filters, and forming an N\u00d7P matrix STE.",
                    "operation": "GENERATE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "GENERATE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "Spike-triggered stimulus images."
                    },
                    "result_baseline1": {
                        "opcode": "PREPROCESS",
                        "slot": [
                            [
                                "REG",
                                "stimulus array"
                            ],
                            [
                                "REG",
                                "spike trains"
                            ],
                            [
                                "String",
                                "Singular Value Decomposition"
                            ],
                            [
                                "String",
                                "spatial and temporal filters"
                            ],
                            [
                                "REG",
                                "N\u00d7P matrix STE"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "PREPROCESS",
                        "slot": [
                            [
                                "Container",
                                "stimulus array"
                            ],
                            [
                                "Container",
                                "spike trains"
                            ],
                            [
                                "String",
                                "Singular Value Decomposition"
                            ],
                            [
                                "String",
                                "spatial filters"
                            ],
                            [
                                "String",
                                "temporal filters"
                            ],
                            [
                                "REG",
                                "N\u00d7P matrix STE"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "PREPROCESS",
                        "slot": [
                            [
                                "REG",
                                "effective spike-triggered stimulus images"
                            ],
                            [
                                "REG",
                                "stimulus array"
                            ],
                            [
                                "REG",
                                "spike trains"
                            ],
                            [
                                "Device",
                                "Singular Value Decomposition"
                            ],
                            [
                                "Container",
                                "N\u00d7P matrix STE"
                            ]
                        ],
                        "emit": "Preprocessed Data"
                    }
                },
                {
                    "i": 2,
                    "sentense": "Decompose STE with STNMF to obtain weight matrix W and module matrix M, preset subunits number, reshape M for stimulus frame size."
                },
                {
                    "i": 3,
                    "sentense": "Analyze M and W to infer subunits' temporal filter, nonlinearity, and synaptic connection weights by calculating spatial filter and temporal filter convolution, creating generator signal, and visualizing nonlinearity.",
                    "operation": "ANALYZE",
                    "entity_list": [
                        [
                            "REG",
                            "M"
                        ],
                        [
                            "REG",
                            "W"
                        ],
                        [
                            "REG",
                            "subunits'"
                        ],
                        [
                            "REG",
                            "temporal filter"
                        ],
                        [
                            "REG",
                            "synaptic connection weights"
                        ],
                        [
                            "REG",
                            "spatial filter"
                        ],
                        [
                            "REG",
                            "temporal filter convolution"
                        ],
                        [
                            "REG",
                            "generator signal"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "DETERMINE",
                        "slot": [
                            [
                                "REG",
                                "M"
                            ],
                            [
                                "REG",
                                "W"
                            ],
                            [
                                "REG",
                                "subunits'"
                            ],
                            [
                                "REG",
                                "temporal filter"
                            ],
                            [
                                "REG",
                                "synaptic connection weights"
                            ],
                            [
                                "REG",
                                "spatial filter"
                            ],
                            [
                                "REG",
                                "temporal filter convolution"
                            ],
                            [
                                "REG",
                                "generator signal"
                            ]
                        ],
                        "emit": "Inference of subunits' temporal filter, nonlinearity, and synaptic connection weights."
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "Analyze",
                        "slot": [
                            [
                                "REG",
                                "M"
                            ],
                            [
                                "REG",
                                "W"
                            ],
                            [
                                "REG",
                                "subunits' temporal filter"
                            ],
                            [
                                "REG",
                                "nonlinearity"
                            ],
                            [
                                "REG",
                                "synaptic connection weights"
                            ],
                            [
                                "REG",
                                "spatial filter"
                            ],
                            [
                                "REG",
                                "temporal filter convolution"
                            ],
                            [
                                "REG",
                                "generator signal"
                            ],
                            [
                                "REG",
                                "visualizing nonlinearity"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "ANALYZE",
                        "slot": [
                            [
                                "REG",
                                "M"
                            ],
                            [
                                "REG",
                                "W"
                            ],
                            [
                                "String",
                                "subunits' temporal filter"
                            ],
                            [
                                "String",
                                "nonlinearity"
                            ],
                            [
                                "String",
                                "synaptic connection weights"
                            ],
                            [
                                "String",
                                "spatial filter"
                            ],
                            [
                                "String",
                                "temporal filter convolution"
                            ],
                            [
                                "REG",
                                "generator signal"
                            ],
                            [
                                "String",
                                "visualizing nonlinearity"
                            ]
                        ],
                        "emit": "inferred subunits' values"
                    }
                },
                {
                    "i": 4,
                    "sentense": "Obtain synaptic connection weights and spike trains by averaging W matrix columns, determining ON-OFF attribute, and classifying spikes into corresponding modules.",
                    "operation": "OBTAIN",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "COLLECT",
                        "slot": [
                            [
                                "Container",
                                null
                            ],
                            [
                                "Length",
                                null
                            ],
                            [
                                "Time",
                                null
                            ]
                        ],
                        "emit": "synaptic connection weights"
                    },
                    "result_baseline1": {
                        "opcode": "OBTAIN",
                        "slot": [
                            [
                                "REG",
                                "synaptic connection weights"
                            ],
                            [
                                "REG",
                                "spike trains"
                            ],
                            [
                                "REG",
                                "W matrix columns"
                            ],
                            [
                                "REG",
                                "ON-OFF attribute"
                            ],
                            [
                                "REG",
                                "spikes"
                            ],
                            [
                                "REG",
                                "modules"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "Obtain",
                        "slot": [
                            [
                                "REG",
                                "synaptic connection weights"
                            ],
                            [
                                "REG",
                                "spike trains"
                            ],
                            [
                                "REG",
                                "W matrix columns"
                            ]
                        ],
                        "emit": "spikes into corresponding modules"
                    },
                    "result_baseline3": {
                        "opcode": "OBTAIN",
                        "slot": [
                            [
                                "REG",
                                "synaptic connection weights"
                            ],
                            [
                                "REG",
                                "spike trains"
                            ],
                            [
                                "REG",
                                "W matrix columns"
                            ],
                            [
                                "REG",
                                "ON-OFF attribute"
                            ],
                            [
                                "REG",
                                "corresponding modules"
                            ]
                        ],
                        "emit": "Average and Classification results"
                    }
                }
            ]
        },
        "4": {
            "subject": "Bioinformatics & Computational Biology",
            "enum": 0,
            "protocol": "To format phosphoproteomic data for CausalPath analysis, first ensure the data is in the required format, potentially using R for reformatting. Adjust parameters in parameters.txt to match your analysis needs, including specifying input files and analysis options. Execute the CausalPath algorithm via command line with the necessary files in the same directory, producing results in various formats for detailed network analysis. Visualization of the phosphoproteomic network can be done through the CausalPath website or alternative tools like Newt or ChiBE, providing insights into causal relationships and network dynamics. This process involves critical steps such as data preparation, parameter adjustment, algorithm execution, and result visualization, each contributing to the comprehensive analysis of phosphoproteomic data.",
            "compile": [
                {
                    "i": 0,
                    "sentense": "To format phosphoproteomic data for CausalPath analysis, first ensure the data is in the required format, potentially using R for reformatting.",
                    "operation": "FORMAT",
                    "entity_list": [
                        [
                            "REG",
                            "phosphoproteomic data"
                        ],
                        [
                            "REG",
                            "CausalPath analysis"
                        ]
                    ],
                    "result_dsl": {
                        "opcode": "COPY",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                "phosphoproteomic data"
                            ],
                            [
                                "Length",
                                null
                            ],
                            [
                                "REG",
                                "CausalPath analysis"
                            ]
                        ],
                        "emit": "formatted data, restructured data"
                    },
                    "result_baseline1": {
                        "opcode": "FORMAT",
                        "slot": [
                            [
                                "REG",
                                "phosphoproteomic data"
                            ],
                            [
                                "REG",
                                "CausalPath analysis"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "FORMAT",
                        "slot": [
                            [
                                "REG",
                                "phosphoproteomic data"
                            ],
                            [
                                "String",
                                "required format"
                            ],
                            [
                                "REG",
                                "R"
                            ]
                        ],
                        "emit": "reformatted data"
                    },
                    "result_baseline3": {
                        "opcode": "FORMAT",
                        "slot": [
                            [
                                "REG",
                                "phosphoproteomic data"
                            ],
                            [
                                "REG",
                                "CausalPath analysis"
                            ],
                            [
                                "Device",
                                "R"
                            ]
                        ],
                        "emit": "Reformatted data"
                    }
                },
                {
                    "i": 1,
                    "sentense": "Adjust parameters in parameters.txt to match your analysis needs, including specifying input files and analysis options.",
                    "operation": "ADJUST",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "CHANGE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "Device",
                                null
                            ],
                            [
                                "Container",
                                null
                            ],
                            [
                                "Time",
                                null
                            ]
                        ],
                        "emit": "data analysis results"
                    },
                    "result_baseline1": {
                        "opcode": "",
                        "slot": [],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "ADJUST_PARAMETERS",
                        "slot": [
                            [
                                "Container",
                                "parameters.txt"
                            ],
                            [
                                "REG",
                                "input files"
                            ],
                            [
                                "REG",
                                "analysis options"
                            ]
                        ],
                        "emit": "analysis needs"
                    },
                    "result_baseline3": {
                        "opcode": "ADJUST",
                        "slot": [
                            [
                                "REG",
                                "parameters.txt"
                            ],
                            [
                                "String",
                                "analysis needs"
                            ],
                            [
                                "REG",
                                "input files"
                            ],
                            [
                                "REG",
                                "analysis options"
                            ]
                        ],
                        "emit": "adjusted parameters"
                    }
                },
                {
                    "i": 2,
                    "sentense": "Execute the CausalPath algorithm via command line with the necessary files in the same directory, producing results in various formats for detailed network analysis.",
                    "operation": "EXECUTE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "EXECUTE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "results"
                    },
                    "result_baseline1": {
                        "opcode": "EXECUTE",
                        "slot": [
                            [
                                "REG",
                                "CausalPath algorithm via command line"
                            ],
                            [
                                "REG",
                                "necessary files in same directory"
                            ]
                        ],
                        "emit": "results in various formats for detailed network analysis"
                    },
                    "result_baseline2": {
                        "opcode": "EXECUTE",
                        "slot": [
                            [
                                "REG",
                                "CausalPath algorithm"
                            ],
                            [
                                "REG",
                                "command line"
                            ],
                            [
                                "Bool",
                                "true"
                            ]
                        ],
                        "emit": "various formats for detailed network analysis"
                    },
                    "result_baseline3": {
                        "opcode": "EXECUTE",
                        "slot": [
                            [
                                "REG",
                                "CausalPath algorithm"
                            ],
                            [
                                "Device",
                                "command line"
                            ],
                            [
                                "Container",
                                "same directory"
                            ]
                        ],
                        "emit": "various formats for detailed network analysis"
                    }
                },
                {
                    "i": 3,
                    "sentense": "Visualization of the phosphoproteomic network can be done through the CausalPath website or alternative tools like Newt or ChiBE, providing insights into causal relationships and network dynamics."
                },
                {
                    "i": 4,
                    "sentense": "This process involves critical steps such as data preparation, parameter adjustment, algorithm execution, and result visualization, each contributing to the comprehensive analysis of phosphoproteomic data.",
                    "operation": "ANALYZE",
                    "entity_list": [],
                    "result_dsl": {
                        "opcode": "DETERMINE",
                        "slot": [
                            [
                                "REG",
                                null
                            ],
                            [
                                "Device",
                                null
                            ],
                            [
                                "REG",
                                null
                            ]
                        ],
                        "emit": "comprehensive analysis of phosphoproteomic data"
                    },
                    "result_baseline1": {
                        "opcode": "PROCESS",
                        "slot": [
                            [
                                "String",
                                "data preparation"
                            ],
                            [
                                "String",
                                "parameter adjustment"
                            ],
                            [
                                "String",
                                "algorithm execution"
                            ],
                            [
                                "String",
                                "result visualization"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline2": {
                        "opcode": "PROCESS",
                        "slot": [
                            [
                                "String",
                                "data preparation"
                            ],
                            [
                                "String",
                                "parameter adjustment"
                            ],
                            [
                                "String",
                                "algorithm execution"
                            ],
                            [
                                "String",
                                "result visualization"
                            ],
                            [
                                "REG",
                                "phosphoproteomic data"
                            ]
                        ],
                        "emit": ""
                    },
                    "result_baseline3": {
                        "opcode": "EXPERIMENT_PROTOCOL",
                        "slot": [
                            [
                                "String",
                                "data preparation"
                            ],
                            [
                                "String",
                                "parameter adjustment"
                            ],
                            [
                                "String",
                                "algorithm execution"
                            ],
                            [
                                "String",
                                "result visualization"
                            ]
                        ],
                        "emit": "comprehensive analysis of phosphoproteomic data"
                    }
                }
            ]
        }
    }
}