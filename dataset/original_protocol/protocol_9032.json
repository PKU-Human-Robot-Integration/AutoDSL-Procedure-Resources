{
  "id": 9443,
  "origin_website": "Jove",
  "title": "Designing and Implementing Nervous System Simulations on LEGO Robots",
  "procedures": [
    "1. Building the Robot Model \nChoose a model organism to study that is well represented in the neuroethological literature. Invertebrates generally make good candidates because their relatively simple nervous systems have been well studied and are primarily comprised of innate reflexes. We will demonstrate this approach using the American Lobster, Homarus americanus.  \nSelect well-studied reflexive behaviors for modeling purposes. We have chosen the lobster's responses to antennal bend and to claw bump detection as the animal reflexively responds to bending of antennae to elicit rheotaxis (orientation to water flow) while claw contacts mediate obstacle avoidance. Simple reflexes relying on decussating neural connections from bilaterally symmetrical sensors are well suited for this type of study1.\nBuild or choose a robotic platform with appropriate sensors for the selected behaviors in order to run the neural network simulation. While a dedicated robot can be constructed such as RoboLobster12  or the Sprawl (cockroach) robot family13, here we use a commercially available kit to expedite the experimental process. The LEGO Mindstorms NXT 2.0 kit, providing templates, modular components and established sensors, allows for the rapid physical construction of the robot. \nSelect or build sensors to match the modalities of the behaviors selected in step 1.2. Premade sensors from the LEGO Mindstorms kit can be used or homebrew sensors can be engineered14,15. We have selected the included LEGO touch sensor and a custom antennal bend sensor consisting of a FlexPoint bend sensor spliced to an NXT connector. To build a custom resistive connector, cut an NXT connector wire and solder the black and white cables to the leads of the sensor.",
    "Use previously published neuroethological studies to find or develop a hypothetical neural network for modeling purposes. The literature has proposed various neural networks to explain behavior in various model organisms, from lobsters16  to lamprey17. Functional neural units should be identified and their synaptic connections theorized. Novel neuroethological experiments can also be developed and implemented if laboratory circumstances allow.\n  \n2. Programming the Nervous System\nUse LabVIEW software along with the LabVIEW Module for LEGO MINDSTORMS NXT to create Virtual Instruments (VIs) that run equations for a mathematical neuron and synapse model. While any published model can be used, we recommend the discrete time map-based (DTM) model18. This allows for computationally efficient real time operation while maintaining a variety of neuronal firing output regimes. Two control parameters, alpha and sigma, determine the dynamics of the simulated neuron to produce varied neural output including tonic spiking, chaotic firing, bursting and intrinsic silence.  LabVIEW VIs for LEGO Mindstorms for this neuron model can be found online here: http://myfiles.neu.edu/blustein.d/neurobots[href=http://myfiles.neu.edu/blustein.d/neurobots]\nPlace VIs into a While Loop so that the network will update iteratively. \nConnect presynaptic neuron spike outputs through synapses to postsynaptic neurons. \nPass iteratively updating parameters through shift registers to the next calculation cycle. The DTM model updates fast (x) and slow (y) dynamical variables that are passed to the next iteration of calculations.",
    "Set synapse parameters to define network characteristics. For each synapse, the synaptic strength (gsyn), the relaxation rate (gamma), and the reversal potential (xrp) are coefficients in the DTM model equations that determine synaptic behavior. The value of gsyn is a multiplier that determines the magnitude of the synaptic current effect from a spike event, ranging from 0.0 (no effect) to 1.0 (100% effect).  The value of gamma is a multiplier that determines the rate of decay of the synaptic current regardless of spike events, ranging from 0.0 (complete decay) to 1.0 (no decay). The value of xrp determines the level of excitation or inhibition of the synapse, values typically range from -3.0 to 3.0 with positive values representing excitation and negative values representing inhibition. Values can be tuned for your specific network characteristics. Here we use the following settings: gamma= 0.95, gsyn= 0.60 and xrp = 2.2 (excitatory synapse) or -1.8 (inhibitory synapse).    \nAdjust alpha and sigma control parameters to modify baseline neuron activity. The dynamics of the model for varied control parameters are described in detail elsewhere18 but typically, alpha < 4 produces intrinsically silent neural activity for low sigma values or tonic spiking for high sigma values. The transition between 'low' and 'high' sigma values generally occurs between -1.0 and 1.0 depending on the alpha value. Bursting neuron activity is produced for alpha > 4 when sigma values are near zero. Here we use alpha = 4.05 and sigma = -3.10.    \nUse LabVIEW VIs to input sensor information into your network. For provided sensors, the VIs are already available within the Mindstorms LabVIEW module. For custom resistive sensors, use the Light Sensor VI as a programming framework. Information about creating homebrew sensors can be found elsewhere14.",
    "Insert graphical charts on the front panel of the LabVIEW program to visualize neuronal activity. \nTemporarily replace sensor inputs with front panel control boxes in order to manually manipulate the sensor information going to the neural network. \nRun the neuronal network and manually adjust the front panel controls to present varied sensory input. Confirm that the network qualitatively functions as predicted for known conditions. \nAdjust the network as needed by changing the neuron and synapse parameters. First attempts at tuning the network should be done by changing synaptic strength (gsyn) of the various synapses. Other parameters may need to be adjusted as well. \nOnce the network functions with qualitative accuracy, replace the front panel control boxes with the sensor input VIs. \n3. Nervous System Simulation Testing\nSet up a controlled environment in which to observe the animal and the robot under similar conditions. We use a rectangular tank containing rock obstacles (Figure 1).  The tank can be emptied to accommodate the LEGO robot in the same space.    \nMount a video camera overhead to record the animal/robot behavior. Make sure the contrast between the subject and the background is high to allow for automatic tracking. We painted the bottom of the test tank white. \nPlace the animal in the controlled environment and video record the behavior. Be sure to limit the sensory capabilities of the lobster to match those of the robot. Here we restrict the lobster's sensory capabilities by covering the eyes with an aluminum foil mask and deafferenting chemoreceptors with freshwater19. \nAdjust the environment to suit a LEGO robot (removing water if necessary) and run the robot in the same controlled environment.\nUse a MATLAB script to automatically track the markers on the specimens. We use MouseLabTracker20. \nCreate and compare vector plots of the animal and robot movements.",
    "Modify the nervous system and repeat steps 3.3-3.6 to observe how different aspects of the electronic nervous system affects the robot's behavior. Here we adjust the synaptic strength between the claw bump sensor neurons and the motor system and monitor robot performance compared to that of a lobster. Alternatively, the sensory conditions in the test arena can be modified and the effects observed in robot and animal. For example, the arena described here could be subjected to different water flow rates.\nSubscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Neuroscience"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research"
  ]
}