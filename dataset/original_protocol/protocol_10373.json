{
  "id": 10784,
  "origin_website": "Jove",
  "title": "Robotic Mirror Therapy System for Functional Recovery of Hemiplegic Arms",
  "procedures": [
    "All of the procedures were reviewed and approved by the Institutional Review Board of Seoul National University Hospital.\n1. Mirror Therapy Tasks\nExamples of 2-dimensional mirror therapy tasks (Figure 3)\n\t\nFreely move the healthy arm while looking in the mirror about 5 min for warm-up exercise.\n\t\tNOTE: One may utilize a metronome so that the patient can exercise the motion of the healthy arm in a rhythmic manner.\nOn healthy side, dribble and place a small ball into the chosen hole similar to billiards for about 5 min (\"Ball in holes\" task). Dribble and place a small ball into a goal similar to soccer for about 5 min (\"Soccer game\" task).\nUsing numbered stickers placed on a table, move the handle on healthy side in numerical order and return in reverse direction (\"Dots tracing\" task). Repeat for about 5 min.\nUsing any object in daily life such as a cup, using handle on healthy side, push it to a chosen place (\"Moving a cup\" task). Repeat for about 5 min.\n2. Components of the Mirror Robot System\nAHRS sensor settings\n\t\nObtain 3 commercially available AHRS sensors.\n\t\tNOTE: AHRS sensors consist of a magneto sensor, accelerometer, and gyro sensors (total 9-axis).\nConnect the AHRS sensor to a PC with a USB connector.\nUse hyperterminal or other communication software to configure general sensor settings.\nFor each AHRS sensor, set to RS232 communication and select COM port. Then, set baud rate to 115,200 bits per sec, data bits to 8, parity to none, stop bits to 1, and flow control to none.\n\t\t\nTo check the COM port, click home button on bottom left corner. Right click on computer. Then click Properties. Click Device Manager. Expand Port (COM & LPT) tab by clicking it.",
    "Once the communication has been established, set channel to 100 and assign IDs for each sensor.\n\t\tNOTE: Some sensors may need calibration of the accelerometer, gyroscope, and magnetometer before use.\nSet output format as quaternions and set sensors to display battery reserve.\n\t\tNOTE: Quaternions are used to speed up computing as well as to eliminate gimbal lock singularities.\nBrushless DC motor settings\n\t\nPrepare 2 high-performance brushless DC motors and controllers.\nFor each controller, connect the power cable to a power supply. Also, connect the motor cable, Hall sensor cable, and encoder cable to the motor.\nConnect CAN-CAN cable to another controller.\n\t\tNOTE: CANopen is used for communication between devices.\nSet node ID for each controller to distinguish between devices.\nConnect the USB cable to the PC for general configuration.\nSwitch on the power supply to power up the controllers and motors.\nUse the motor manufacturer-provided system configuration software to configure and tune the motor, Hall sensor, and encoder.\n\t\tNOTE: Angle limits and home position must be configured for safe operation.\nAssembly of frame and motors\n\tNOTE: Every custom-made part is named in quotation mark. Please refer to the Table of Materials & Equipment and from Figure 4 to Figure 13.\n\t\nFor the elbow joint motor, put one of the coupling bodies with keyway on the motor shaft and secure it using an M5 hex socket set screw (Figure 4).\nSecure \"Elbow coupling hollow cylinder cover\" to the elbow motor using 4x M5 socket head screws (10 mm) and place the buffer part of the couplings (middle slider part) on the top of the coupling body that was attached in step 2.3.1 (Figure 4).\nPlug the ball bearing into \"Elbow rooftop frame\" and secure it with 4x M4 socket head screws (8 mm) (Figure 5).",
    "Plug \"Elbow motor force dispersion shaft\" into \"Lower elbow support\" and secure it with 4x M3 socket head screws (6 mm). Then, place \"Upper elbow support\" on top of the \"Lower elbow support\" and secure it using 8x M3 socket head screws (12 mm) (Figure 6).\nPlace the assembly in step 2.3.4 on top, the assembly in step 2.3.3 in the middle, and the last part of the coupling body at the bottom. Join all together and secure the coupling body with M5 hex socket set screws (10 mm) (Figure 7).\nSecure assembly in step 2.3.5 and assembly in step 2.3.2 using 4x M5 socket head screws (15 mm) (Figure 7). Rotate assembly in step 2.3.2 to secure all 4 points.\nSecure \"Lower wrist coupling hollow cylinder cover\" with the wrist motor using 4x M4 socket head screws (10 mm). Then, place one of the coupling bodies with keyway on the motor shaft and secure it using M4 hex socket set screws; then, place the buffer part of the couplings on top of the coupling body (Figure 8).\nAttach \"Friction reduction ring\" on top of \"Wrist rooftop frame\" with double-sided tape or any type of adhesive (Figure 9).\nPlug \"Wrist motor force dispersion shaft\" into \"Handle\" and secure it using 4x M2.5 socket head screws (4 mm) (Figure 10).\nPlace assembly in step 2.3.9 on top, assembly in step 2.3.8 in the middle, and the last part of the coupling body at the bottom. Join all together and secure the coupling body with M4 hex socket set screws (10 mm) (Figure 10).\nSecure \"Wrist motor2roof2\" with the assembly in step 2.3.10 using 4x M3 socket head screws (Figure 11).\nSecure assembly in step 2.3.11 and assembly in step 2.3.7 using 4x M3 socket head screws (15 mm) (Figure 11).",
    "Secure 2 \"Joint movement limiter\" and 2 shaft collars using 4x M4 socket head screws (15 mm) (Figure 12A).\nUse shaft collars to secure shafts and \"Wrist rooftop frame\" using 8x M3 socket head screws (8 mm) (Figure 12B).\nSlide shaft collars in assembly 2.3.13 into the shafts in assembly 2.3.14 and secure additional shaft collars with \"Lower elbow support\" using 4x M4 socket head screws (15 mm). Then, join the two parts and secure with lever (Figure 13A).\nSecure \"Support wall\" to the assembly in step 2.3.15 using 6x M4 socket head screws (15 mm) (Figure 13B). Secure the table stand and assembly in step 2.3.16 using 6x M6 socket head screws (15 mm) (Figure 13C).\n3. Design of Mirror Robot System\nMathematical model for automatic control\n\t\nSet dynamic model for automatic control of upper limb motion (Figure 14).\n\t\tNOTE: A dynamic model of human upper limb motion can be expressed using kinematics of joints and links. Therefore, using an equation for the robot manipulator, the modeling can be obtained as shown below:\nimgsrc://cloudfront.jove.com/files/ftp_upload/54521/54521eq1.jpg\n\t\tNOTE: (imgsrc://cloudfront.jove.com/files/ftp_upload/54521/54521eq2.jpg: Joint position vector, imgsrc://cloudfront.jove.com/files/ftp_upload/54521/54521eq3.jpg: Joint velocity vector, imgsrc://cloudfront.jove.com/files/ftp_upload/54521/54521eq4.jpg: Joint acceleration vector, H: Inertia matrix, F: Coriolis and centrifugal force matrix, G:Vector of gravitational forces, E: Torque matrix due to interaction with the environment, imgsrc://cloudfront.jove.com/files/ftp_upload/54521/54521eq5.jpg: Vector of generalized forces applied to the joints) The hemiplegic and healthy arm show different aspects of motion. That is, the hemiplegic arm cannot move in time due to paralyzed muscles or cannot provide enough torque needed for motion. Therefore, the system is designed such that the rehabilitation training can be done via normal motion through the hemiplegic arm; in other words, the rehabilitation robot is attached to the patient's hemiplegic arm in order to deliver motions from the healthy arm and can be simply formulated as follows:",
    "Motion of rehabilitation robot) = (Healthy arm motion) - (hemiplegic arm motion).\nWith a rehabilitation robot, attach the patient's paralyzed arm to the manipulator, and observe additional torque and time delay due to the paralyzed arm causing errors in the overall system. Detect this via a manipulator on the hemiplegic side.\nMeasure errors (s(t): tracking error) as a mathematical equation:\nimgsrc://cloudfront.jove.com/files/ftp_upload/54521/54521eq6.jpg\n\t\tNOTE: (s: Tracking error, imgsrc://cloudfront.jove.com/files/ftp_upload/54521/54521eq7.jpg: Positive definite design parameter matrix, imgsrc://cloudfront.jove.com/files/ftp_upload/54521/54521eq8.jpg: Error between desired and actual position, imgsrc://cloudfront.jove.com/files/ftp_upload/54521/54521eq9.jpg: Error between desired and actual velocity) The above tracking error can be combined with a dynamic model of human upper limb motion and can be expressed as:\nimgsrc://cloudfront.jove.com/files/ftp_upload/54521/54521eq10.jpg\n\t\tNOTE: (KD : Derivative gain value with feedback compensation that changes over time, imgsrc://cloudfront.jove.com/files/ftp_upload/54521/54521eq11.jpg: Inertia error matrix, imgsrc://cloudfront.jove.com/files/ftp_upload/54521/54521eq12.jpg: Coriolis and centrifugal force error matrix)\nTo control each joint of the rehabilitation robot, use Lagrangian dynamics8. A dynamic equation of motion for each joint is:\nimgsrc://cloudfront.jove.com/files/ftp_upload/54521/54521eq13.jpg\n\t\tNOTE: (D: Coefficient matrix, imgsrc://cloudfront.jove.com/files/ftp_upload/54521/54521eq14.jpg: Actuator inertia matrix) Coefficient D in the equation above affects the torque between joints with inertial coupling effect between joints8. The automatic control model using this mathematical model can be illustrated by the block scheme in Figure 14.\nSoftware protocol (Figure 15)\n\t\nWhen the program starts, establish communication with motors and sensors, and initialize the values. Once the motors and sensors are at the initial position (see 4.1.3), move on to the main loop.\n\t\tNOTE: For sampling frequency of the main loop, we recommend 50 - 200 samples/sec. For the maximum delay, we recommend 2 sec at most. In addition, for torque limits, we recommend to regulate the motor current value with software so that the elbow motor can exert 25 - 40 Nm and wrist motor can exert 10 - 20 Nm.",
    "As it is not interrupted by a stop button, continuously read the Attitude and Heading Reference System (AHRS) sensors' current position values to transmit the values to the motors.\n\t\tNOTE: The data output is in quaternions, and should be properly transformed into the desired angle for robot motion. Choose one of the sensor coordinate frames as a reference, and reset the other sensor coordinate frames. With calculated frames as a reference, use inverse kinematics to obtain the final output yaw angles.\nAs it is not interrupted by a stop button, continuously check the motors' positions and update the values to accomplish movement to the desired position provided by the AHRS sensors.\n\t\tNOTE: The motor position is provided by motor's encoder that can be checked inside the software with the motor company's provided software library command.\nMeanwhile, record all angles and angular velocities from the AHRS sensors.\nOnce the tasks are completed and the user presses the stop button, exit the loop and finalize the robot by moving it to the initial position.\nGraphical user interface (GUI) (Figure 16)\n\t\nAdd \"error in\" and \"error out\" functions to detect and debug errors during execution.\nAdd patient-side button to choose the robot operation side (patient's paretic side).\nConstruct a patient information box to identify the patients.\nAdd motor status indicators.\nAdd angle limitation controls for safety.\nConfigure the maximum velocity, acceleration, and deceleration for each motor to prevent muscle and tendon injuries due to a stiff upper limb.\n\t\tNOTE: The system reflects the acceleration and deceleration of the hemiplegic arm.\nAdd indicators to retrieve motor position and velocity, and input current information.\nBuild a VISA resource name control to establish communication between AHRS sensors and the system.\nAdd a calibration function to eliminate accumulated sensor drift errors.",
    "Arrange the indicator for the sensors in order to retrieve sensor information.\n\t\tNOTE: The sensor information includes the joint angles (angle between two consecutive sensors) and battery reserve.\nOvercoming arm spasticity during mirror robot operation\n\t\nSelect motors that can exert enough torque to overcome spasticity for each joint.\n\t\tNOTE: Wrist motor should have torque output higher than 10 Nm, and elbow motor higher than 25 Nm.\nIn order to firmly transfer the robot motion to the patient's arm, use straps that are made of semi-elastic material to fix the forearm in the robot exoskeleton.\n\t\tNOTE: Semi-elastic straps, such as stretch fabrics straps or polyester/nylon elastic braided straps, are recommended. If the straps are too elastic, it will not hold the arm in position. If the straps are not elastic at all, muscle or tendon injuries may occur in the case of a high degree of elbow spasticity.\nIn order to isolate elbow and wrist motion, use 2 solid frames combined with a shaft collar to fix the wrist by squeezing it in the frames.\n\t\tNOTE: Shaft collars are used to prevent muscle and tendon injuries if the stiffness in the wrist is excessive.\nUse straps around the handle to fix the hand to the robot.\n4. Clinical Application of the Mirror Robot System\nConducting robotic mirror therapy\n\t\nAdjust height and width of the task table in accordance with the patient's condition.\nSet up a mirror in the midline between both arms, and set it on a table or platform.\nPlace AHRS sensors on handle, wrist frame, and edge of platform on healthy side aligning in parallel with the robot's orientation.\n\t\tNOTE: The sensor's internal yaw axis should be pointing up.\nExecute the therapy software in a computer.\nChoose the hemiplegic side by clicking the Patient-Side switch button.",
    "Set the maximum joint angle limits in accordance with patient's joint condition. For safe operation, use elbow flexion limit less than 50º, elbow extension limit more than -70º, wrist flexion limit less than 80º, and wrist extension limit more than -60º.\n\t\tNOTE: Plus and minus signs are automatically corrected and limits are also corrected if out of bounds in software level.\nSet maximum velocity, acceleration, and deceleration. For these values, use velocity value between 0 and 22.5 rpm for elbow motor and use velocity value between 0 and 33 rpm for wrist motor.\n\t\tNOTE: For conventional mirror therapy, set all values to zero to immobilize the robot.\nFill out patient information.\nTurn on all AHRS Sensors before running the program.\nRun the program by clicking the arrow button in the upper left corner of the program.\nOnce the \"save as\" prompt pops up, write proper file names for result data on the string box and press ok.\nWhile the robot and the healthy arm are at initial position (both hands away from the body and parallel to each other), press the calibration button to initialize sensor values to zero for the initial position.\n\t\tNOTE: See steps 1.1.1 - 1.1.4 for the hands used in this task.\nPress STOP button when all the tasks are completed.\n\t\tNOTE: For the robotic mirror therapy, a biomedical engineer should act as the main coordinator, and the occupational therapist should assist the patient.\nClinical a study on healthy subjects\n\t\nConduct a clinical study on healthy subjects to confirm safety and feasibility8. Give the instruction (\"Do not move your hemiplegic arm on your own.\") to the subjects for completely passive movement of hemiplegic arm.\nPlace both forearms on the frames, and hands on the handles. Then, fix the forearms with straps.\nEvaluation of therapeutic effects",
    "Before the therapy, conduct functional evaluations such as Fugl-Meyer assessment scale9, modified Ashworth scale10, modified Barthel index11, Jebsen hand function test, hand power measurement, hemispatial neglect test, and motor evoked potential test for the patients.\nConduct clinical trial for stroke patients with 2-dimensional mirror robot for 30 - 60 min per day. Give the instruction (\"Do not move your hemiplegic arm on your own.\") to the patients.\nAfter the patients accomplish last session, conduct follow-up functional evaluations.\nSubscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Bioengineering"
  ],
  "bigAreas": [
    "Bioengineering & Technology"
  ]
}