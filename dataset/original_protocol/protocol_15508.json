{
  "id": 19334,
  "origin_website": "Jove",
  "title": "Modeling the Functional Network for Spatial Navigation in the Human Brain",
  "procedures": [
    "NOTE: All the software used here is shown in the Table of Materials. The data used in this study for demonstration purposes were from the Human Connectome Project (HCP: http://www. humanconnectome.org)15. All experimental procedures were approved by the Institutional Review Board (IRB) at Washington University. Imaging data in the HCP dataset were acquired using a modified 3T Siemens Skyra scanner with a 32-channel head coil. Other image acquisition parameters are detailed in an earlier paper16. Minimal preprocessed data were downloaded for the demonstration, which had finished following preprocessing steps: gradient distortion correction, motion correction, field map preprocessing, spatial distortion correction, spatial normalization to the Montreal Neurological Institute (MNI) space, intensity normalization, and bias field removal. Resting-state fMRI data from researchers' projects can also be used.\n1. Data preprocessing\nCheck data quality and exclude participants with missing retest data and excessive head motion (3 mm in translation and 3° in rotation).\n\tNOTE: Five participants were removed, and 38 young adults (22-35 years old) were included in the main analyses.\nOpen the graph theoretical network analysis (GRETNA) toolbox17 in MATLAB to perform further preprocessing steps. Click the batch of FC Matrix Construction. Select the path of the functional dataset to load the NIFTI documents and execute the following steps, as shown in the pipeline option in Figure 1:\n\t\nRemove the first 10 images by double-clicking Time Point Number to Remove in Remove First Images and entering 10.\nSpatially smooth (full width at half-maximum [FWHM] = [4 4 4] by double-clicking FWHM (mm) in Spatially Smooth and entering [4 4 4]).\nRegress out covariates. Choose White matter signals, CSF signals, and Head Motion as TRUE. Select the appropriate mask according to the actual voxel size, for example, mask with 2 mm here, and choose Friston-24 parameters for Head Motion.",
    "Temporally filter. Input the value of TR according to the repetition time of the MRI scan (e.g., 720 ms here) and remove high-frequency and low-frequency noise by double-clicking Band (Hz) and entering [0.01 0.1].\n\t\tNOTE: Results with and without regression of whole brain signals are presented below. When using unpreprocessed data, well-established pipelines such as fMRI-prep18 and Data Processing Assistant for Resting-State fMRI (DPARSF)19 are also recommended.\nimgsrc://cloudfront.jove.com/files/ftp_upload/65150/65150fig01.jpg\nFigure 1: Rs-fMRI preprocess and functional network connectivity estimation. The settings of preprocess (removing first 10 images, spatially smoothing with FWHM of 4 mm, linear temporally detrending, regressing out white matter signals, cerebrospinal fluid (CSF) signals, and head motion with 24 parameters, filtering the band of 0.01-0.1 HZ) and the static correlation with fisher' Z transformed. Abbreviations: Rs-fMRI = resting-state functional magnetic resonance imaging; FWHM = full width at half-maximum; CSF = cerebrospinal fluid. Please click here to view a larger version of this figure.[href=https://www.jove.com/files/ftp_upload/65150/65150fig01large.jpg]\n2. Network construction and analyses\nNOTE: The general workflow for the construction and analyses of the navigation network are summarized into three main steps (Figure 2).\nimgsrc://cloudfront.jove.com/files/ftp_upload/65150/65150fig02v2.jpg\nFigure 2: General workflow for the construction and analyses of the navigation network. (A) Choose navigation as the term to be searched in Neurosynth database. (B) A list of activation coordinates can be generated. (C) Run a meta-analysis using functions from the Neurosynth to get several brain maps. (D,E) By incorporating the meta-analytic map and a whole-brain parcellation atlas (AICHA), nodes (ROI) can be generated. (F) The construction of a navigation network using the resulting navigation nodes and their functional connectivity (Connectivity Estimation and Network Analysis). Abbreviations: ROI = region of interest; AICHA = atlas of intrinsic connectivity of homotopic areas. Please click here to view a larger version of this figure.[href=https://www.jove.com/files/ftp_upload/65150/65150fig02large.jpg]\nNetwork node definition",
    "Download the latest Neurosynth database (neurosynth.org)20 by typing the command in Python:\n\t\t   \n\t\t>import neurosynth as ns\n\t\t>ns.dataset.download (path='./', unpack = True)\n\t\t   \n\t\tNOTE: The dataset archive ('current_data.tar.gz') contains two files: 'database.txt' and 'features.txt'. These contain all the activation coordinates from neuroimaging articles and meta-analysis tags that occur at a high frequency in that article, respectively.\nGenerate a new Dataset instance from the database.txt and add featuresto these data by typing the command:\n\t\t   \n\t\t> from neurosynth.base.dataset import Dataset\n\t\t> dataset = Dataset('data/database.txt')\n\t\t> dataset.add_features('data/features.txt')\n\t\t   \nRun a meta-analysis with the term of interest (i.e., 'navigation')by typing the command:\n\t\t   \n\t\t> ids = dataset.get_ids_by_features ('navigation', threshold=0.01)\n> ma = meta.MetaAnalysis (dataset, ids)\n\t\t> ma.save_results('.', 'navigation')\n\t\t   \n\t\tNOTE: The meta-analysis results in several brain maps in NIFTI format. A false discovery rate (FDR) threshold of 0.01 was applied to control the false positive rate. Filed knowledge is needed at this step for ensuring that the commonly-reported regions are included in the meta-analytic map. Similar steps can be applied to run meta-analyses for other cognitive functions such as language and memory.\nDefine clusters of interest by incorporating the meta-analytic map and a whole-brain parcellation atlas by typing the command from FSL:\n\t\t   \n\t\t>fslmaths navigation_0.01.nii.gz -bin navi_bin.nii.gz\n\t\t>fslmaths navi_bin.nii.gz -mul AICHA/AAL.nii.gz navi_label_aicha/aal.nii.gz\n\t\t>fslmaths navi_label_aicha/aal.nii.gz -thr n -uthr n label _n.nii.gz\n\t\t>cluster -i label _n.nii.gz -t 0.2 -o cluster_n.nii.gz\n\t\t>fslmaths cluster_n.nii.gz -thr m -uthr m cluster_n_m.nii.gz\n\t\t>fslmaths cluster_n_m.nii.gz -bin -mul x node_x.nii.gz\n\t\t>fslmaths node_1.nii.gz -add … -add node_x.nii.gz navi_AICHA/AAL_mask.nii.gz",
    "NOTE: Two atlas were used here: AAL and AICHA. The AAL is the atlas that was used in the original study for the node definition12. This atlas was created based on the anatomical profiles. The atlas of intrinsic connectivity of homotopic areas (AICHA)21 has a much finer resolution and higher functional homogeneity. We defined the regions of interest using each of the atlas.\nType scripts in Python for checking the size of each region in the map:\n\t\t   \n>for i in np.arange(n)+1:\n>____region_list.append(i)\n>____size1_list.append(np.sum(img_dat==i))\n>____size2_list.append(np.sum(aicha_img_dat==i))\n>____pct_list.append(np.sum(img_dat==i)/np.sum(aicha_img_dat==i))\n\t\t   \n\t\tNOTE: The integer n in the script indicates the total number of regions within the AICHA and AAL parcellation (384 and 128, respectively). To avoid the effects of spurious clusters, it is suggested that clusters with relatively small sizes (e.g., 100 voxels) could be removed. The AICHA atlas used here is generated using functional connectivity data, with each region showing homogeneity of functional temporal activity within itself.\nNetwork connectivity estimation\n\tNOTE: The GRETNA toolbox is used for connectivity estimation and network analysis.\n\t\nClick the batch of FC Matrix Construction. Load the preprocessed rs-fMRI data by selecting the path of the functional dataset. Click the static correlation option. Upload the node obtained in the previous step as an atlas to calculate the static correlation of rs-fMRI signals of each pair of regions and transfer them into Fisher's z scores for improving normality.\n\t\tNOTE: The detailed operation is shown in Figure 1. The navigation network matrices of N × N (N represents the number of nodes) for each participant would be obtained in .txt format.\nGet a positive and weighted network with the following steps, as shown in Figure 3.\n\t\t\nClick the batch of Network Analysis. Add the network matrixes into the Brain Connectivity Matrix window and choose one output directory for preparation.",
    "For the pipeline option of Network Configuration, select positive in the Sign of matrix, which will set negative connections in the function connection matrix to 0 and eliminate ambiguous connections22. Choose the network type as weighted to get the undirected weighted network.\n\t\t\tNOTE: Besides the weighted networks, one could also binarize the networks to create binary networks for subsequent analyses (with different approaches), but the weighted one is often considered to show higher reliability23,24.\nNetwork analysis\n\t\nAdd small world, global efficiency, clustering coefficient, shortest path length, degree centrality, and local efficiency to the GRETNA network metric analysis pipeline, as shown in Figure 3.\n\t\tNOTE: Small world and global efficiency are two global network metrics. Specifically, the network with small-worldness can maximize the efficiency of information transfer at a comparatively low wiring cost. Global efficiency reflects the transmission efficiency parallel information in the transportation network. For nodal network metrics, the degree centrality measures the number of links connected to a node. The shortest path length, as its name, is a basis for measuring integration. The clustering coefficient indicates the degree to which the nodes' neighbors are interrelated with each other. Local efficiency is the efficiency of communication with the node and its neighbors (the detailed formula and usage are shown in these papers) 17,25. Brain connectivity toolbox (BCT)25 and other toolboxes can also be used for the calculation of the network metrics.\nSelect Network Sparsity in the thresholding method to exclude the confounding effects of spurious connections, and enter a set of threshold sequences (i.e., 0.05, 0.1, 0.15, 0.2, 0.25, 0.3, 0.35, 0.4, 0.45, 0.5 is used here) to further determine the appropriate threshold according to the statistical results.",
    "NOTE: The ratio of edges to the maximum number of edges in a network with the sample number of nodes is known as the sparsity threshold. A sparsity threshold guarantees that different individuals have the same number of edges. We chose to explore different thresholds for validation, which could provide helpful data for choosing an optimal threshold in future studies.\nSet the random network number as 1,000 to generate random networks using a Markov wiring algorithm26. Click Run to run the pipeline in GRETNA after all steps are set up.\n\t\tNOTE: Similar to genuine brain networks, the random networks maintain the same number of nodes, edges, and degree distribution. To determine whether they are considerably non-randomly topologically constructed, they will be compared to brain networks. After running the pipeline, a group of scores for the network metrics for each of the thresholds would be obtained for further statistical analyses.\nDetermine the optimal number of modules in the network in four steps.\n\t\t\nCalculate the averaging navigation network. Click the bath of Metric Comparison and choose Connection. Load the network matrixes obtained above and choose the Averaged (Functional) operation. Select an output direction to preserve the averaged network matrix; see Figure 4 for more details.\nDivide the average network obtained from the above step into 2, 3, 4, and 5 modules using the function spectralcluster in MATLAB.\nCalculate the proportion of nodes divided into the same module in REST 1 and REST 2 after aligning the module divisions using the script procrustes_alignment.m. Use the proportion as the index of repeatability of the module partition.\nSelect the number of modules with the highest repeatability.\nStatistical analyses\n\tNOTE: The following analyses are mainly for validation and would not be necessary when applying this protocol to individual variation studies.",
    "Examine the similarity of these network metrics between two networks with different types of strategies for node definition (i.e., the new one generated in the present study, termed as NaviNet_AICHA and the earlier one from Kong et al., termed as NaviNet_AAL)12. Calculate the Pearson correlation using the function corrcoef in MATLAB and repeat the analyses for each sparsity threshold.\n\t\tNOTE: After extracting the network metrics, one can conduct any statistical analyses they are interested in.\nCheck the test-retest reliability of these network metrics using the function ICC in MATLAB27,28, which implements the calculation of the Intraclass Correlation Coefficient.\n\t\tNOTE: The original uncorrected p values were reported in the representative results section. 0.2 < ICC < 0.4 is interpreted as indicative of a fair test-retest reliability and ICC > 0.4 is interpreted as moderate to good test-retest reliability29,30. Negative ICC scores were set to zero, given the fact that the presence of negative ICCs is meaningless and difficult to interpret31.\nimgsrc://cloudfront.jove.com/files/ftp_upload/65150/65150fig03.jpg\nFigure 3: Network metrics analysis. This analysis defines the weighted positive networks with 10 thresholds. Calculate two global network metrics of small word and efficiency, four nodal network metrics of clustering coefficient, shortest path length, efficiency, and degree centrality. Please click here to view a larger version of this figure.[href=https://www.jove.com/files/ftp_upload/65150/65150fig03large.jpg]\nimgsrc://cloudfront.jove.com/files/ftp_upload/65150/65150fig04.jpg\nFigure 4: The calculation of average navigation networks. The averaged (functional) operation helps to calculate the average networks of all participants. Please click here to view a larger version of this figure.[href=https://www.jove.com/files/ftp_upload/65150/65150fig04large.jpg]Subscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Neuroscience"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research"
  ]
}