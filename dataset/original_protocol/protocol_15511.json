{
  "id": 19337,
  "origin_website": "Jove",
  "title": "New Framework for Understanding Cross-Brain Coherence in Functional Near-Infrared Spectroscopy (fNIRS) Hyperscanning Studies",
  "procedures": [
    "The study was conducted at Florida Atlantic University (FAU) and was approved by the FAU Institutional Review Board (IRB).\n1. Using Homer3 software (Table of Materials) to perform the pre-processing of the fNIRS hyperscanning data\nNOTE: Homer3 is a MATLAB application that analyzes fNIRS data to obtain estimates and maps of brain activation29. Homer3 can be downloaded and installed from the following link (https://openfnirs.org/software/homer/).\nOpen MATLAB, and navigate to the folder where the raw .nirs files are saved. Select and open the folder.\nType Homer3 into the command window of MATLAB to launch the Homer3 GUI. Homer3. will detect the .nirs files and ask to convert to .snirf format (a universal file format for storing and sharing NIRS data independently of any specific application-specific file format such as MATLAB) to proceed with the pre-processing of the data.\nAfter importing the .nirs files into .snirf format in Homer3, click on the Tools option in the Homer3 GUI, and select Edit Processing Stream.\nIn the ProcStreamEdit GUI, select the pre-processing steps from the Registry Function column to the Current Processing Stream column by clicking on Add. The included pre-processing steps are as follows:\n\t\nUse hmrR_intensity2OD to convert the intensity data to optical density.\nUse hmrR_MotionCorrectWavelet to correct motion artifacts using the appropriate filtering function.\nUse hmrR_OD2conc to convert the OD data to concentration.\nUse hmR_BlockAvg to calculate the Block Average on concentration Data.\n\t\tNOTE: The selection of the pre-processing steps may vary depending on the type of dataset.\nTo save the current processing stream, click on the Save option, and then exit the ProcStreamEdit GUI.",
    "To run the pre-processing stream in the main Homer3 GUI, click on the RUN option. After Homer3 finishes running the selected processing stream, it will save the pre-processed time series for each participant in a .mat file format containing Hbo, Hbr, and Hbt for all the channels and events. A folder named homer output will be created by Homer3 in the currently selected folder to store these files.\nA folder named derivatives will be created by Homer3 in the selected folder to store these files. Select the homer folder located in derivatives folder. Choose the .mat file for each brain and export Hbo, Hbr, Hbt.\n\tNOTE: The name of the output folder created by Homer3 is dependent on the Homer3 version.\n2. Getting started with the LeaderFollowerByPhase toolbox\nTo analyze the type of interaction that occurs in a hyperscanning recording, use the LeaderFollowerByPhase toolbox, as described in the process shown in Figure 3. In MATLAB, select the .mat files for each brain, and load the Hbo (or Hbr) data of the specific channel and specific event into a one-dimension vector as signal1 and signal2.\nIn the MATLAB command line, define the parameters\n\t\nlowFreq, highFreq: Type lowFreq = [low FOI], and highFreq = [high FOI]. The default values are lowFreq = 0.01 Hz, highFreq = 1 Hz.\n\t\tNOTE: The parameters of the functions lowFreq and highFreq define the frequency of interest (FOI) range. WTC calculates the coherence across the two brains at each time point and frequency. The coherence values are typically averaged within a particular FOI.\nDefine the parameter phaseRange; type phaseRange = [range in deg].",
    "NOTE: The default value is phaseRange = 90°. The phase ranges between 0° to 360° due to the circular modulo nature of the phase. The phase ranges are divided according to a range that surrounds four points. In the presented toolbox, a new approach for classifying asymmetric interactions is presented (Figure 4) by examining the coupling directionality using the phase angle values according to the ranges corresponding to lagged synchronization with Signal 1 leading (a range surrounding −90°) or Signal 2 leading (a range surrounding 90°), Signal 1, Signal 2 in-phase synchronization (a range surrounding 0), and Signal 1, Signal 2 anti-phase synchronization (a range surrounding +180° or −180°).\nDefine the Threshold parameter. Type threshold = [threshold rsq val]. The default value is Threshold = 0.\n\t\tNOTE: The toolbox allows for the specification of a threshold coherence value by specifying the threshold parameter. This allows the researcher to select time points with a specified minimum coherence value. Consequently, only time points with coherence values that are higher than the specified threshold are taken into consideration.\nDownload the LeaderFollowerByPhase toolbox from the following link (https://www.ariel.ac.il/wp/sns/download/ or https://github.com/Minisharmaa/Leader-Follower-By-Phase).\nExecute the MATLAB function LeaderFollowerByPhase by entering the command cohervalues = LeaderFollowerByPhase(signal1, signal2, lowFreq, highFreq, phaseRange, threshold) into the command line.\n\tNOTE: The coherence and phase calculations are performed using the WTC and XWT functions in MATLAB, respectively30.\nExamine the in-phase, Signal 1 leading, Signal 2 leading, and anti-phase synchronization values:\n\t\nInspect the plots in MATLAB. The toolbox generates one figure with four plots.\n\t\t\nCoherence by type of interaction: Inspect the box chart plot on the top-left part of the figure, which shows the R-Squared (Rsq) according to each type of interaction (in-phase, Signal 1 leading, Signal 2 leading, anti-phase).",
    "NOTE: For a detailed description of the MATLAB box chart built-in function, see the following link (https://www.mathworks.com/help/matlab/ref/boxchart.html).\nCentral indices by type of interaction: Inspect the bar graph on the top-right part of the output figure, which displays the max mean and median according to each type of interaction (in-phase, Signal 1 leading, Signal 2 leading, anti-phase).\n\t\t\tNOTE: For a detailed description of the MATLAB bar built-in function, see the following link (https://www.mathworks.com/help/matlab/ref/bar.html).\nCoherence over time: Inspect the scatterplot at the bottom-left part of the output figure, which displays the values of coherence and the types of interaction over time. The colored dots represent different types of interaction (black dots represent in-phase synchronization, dark grey dots represent Signal 1 leading, light grey dots represent Signal 2 leading, and purple dots represent anti-phase synchronization).\n\t\t\tNOTE: The figure shows the dynamics of the interaction: the exchange between the four types of interaction throughout the full-time series. For a detailed description of the MATLAB scatter function, see the following link (https://www.mathworks.com/help/matlab/ref/scatter.html).\nTime percentage: Inspect the pie chart at the bottom right part of the output figure, which displays the division of time according to the different types of interactions.\n\t\t\tNOTE: For a detailed description of the MATLAB pie function, see the following link (https://www.mathworks.com/help/matlab/ref/pie.html).\nInspect the output table with the statistic values (i.e., mean, max, median, and standard deviation) for each type of interaction (in-phase synchronization, Signal 1 leading, Signal 2 leading, anti-phase synchronization). The table also presents the percentage of time for which each type of interaction occurred. Each type of interaction appears in a different column.\nExamine the output value in the extracted spreadsheet file (i.e., datatable.xlsx located in the current folder).\nimgsrc://cloudfront.jove.com/files/ftp_upload/65347/65347fig03.jpg",
    "Figure 3: Overview of the workflow. (A) Mother-child dyads engaged in free play while hyperscanning fNIRSdata were collected. (B) Illustration of a mother-child time series.(C) Pre-processing of the time series using Homer3.(D,E) The use of a toolbox to examine different types of interactions, such as in-phase synchronization, anti-phase synchronization, and lagged synchronization. Please click here to view a larger version of this figure.[href=https://www.jove.com/files/ftp_upload/65347/65347fig03large.jpg]\nimgsrc://cloudfront.jove.com/files/ftp_upload/65347/65347fig04.jpg\nFigure 4: Classification of four different types of interactions based on phase. This represents the phase difference of the two neural time series in a 360° modulo. The phase difference can be thought of as a time lag between two values and is measured in degrees and radians or fractions of the wavelength. Here, the 360° modulo is divided into four different ranges depicting four different phases of interaction: (A) Signal 1 leading (a range around 90°, between 45° to 135°), (B) anti-phase synchronization between Signal 1 and Signal 2 (a range around 180° or −180°, between 135 to −135°), (C) Signal 2 leading (between −135° to −45°), (D) in-phase synchronization (a range around 0, between −45° to 45°). This division is the default approach (45° around each point); however, the toolbox allows one to configure a different division. While other configurations may not cover all 360°, it may yield a more exact definition of each type of interaction. Please click here to view a larger version of this figure.[href=https://www.jove.com/files/ftp_upload/65347/65347fig04large.jpg]Subscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Neuroscience"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research"
  ]
}