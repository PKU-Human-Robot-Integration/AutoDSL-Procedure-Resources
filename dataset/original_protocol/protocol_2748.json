{
  "id": 2903,
  "origin_website": "Cell",
  "title": "Quantitative analysis of myofiber type composition in human and mouse skeletal muscles",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nCryosectioning of muscle biopsies\nTiming: 20–30 min per muscle biopsy\n    \n      The purpose of this step is to cryosection muscle biopsies for\n      immunofluorescence staining.\n    \nNote: For users unfamiliar with\n      cryosectioning, we recommend reading the article by Ross et al.,10[href=https://www.wicell.org#bib10]\n      which provides a detailed protocol.\n    \nHere, we describe the procedure for collecting cryosections:\nClean all the equipment with 70% alcohol.\n        Adjust the chamber temperature and the object temperature to −20°C and\n        −22°C, respectively.\n      \n        Place all the materials required for cutting (e.g., tweezers, specimen\n        holder) inside the cryostat chamber to equilibrate to the temperature.\n      \n        Install the anti-roll glass and a blade inside the cryostat chamber.\n      \n        Adjust the thickness (we recommend cryosections of 16 μm thick for human\n        tissue and 10 μm thick for mouse, but 8–16 μm thick leads to acceptable\n        results).\n      \nTransport the muscle biopsy in liquid nitrogen to the cryostat.\n        Leave the biopsy inside the cryostat chamber to equilibrate to the\n        temperature for 15–30 min.\n      \n        Put some Tissue-Tek (depending on the biopsy size) on the specimen\n        holder and place the muscle biopsy in the Tissue-Tek (using tweezers).\n      \n        Place the specimen holder in the cryostat block when the muscle biopsy\n        is completely fixed.\n      \n        Collect the cryosections onto the SuperFrost slide.\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2410-Fig2.jpg\n              Figure 2. A representative image of muscle cryosection\n            \n              The green arrow shows an area with cross-sections of myofibers,\n              while the red arrow represents an area with longitudinal sections\n              of myofibers. These regions with longitudinal sections are\n              automatically excluded from the analyses later in the protocol.\n              Scale bar 500 μm.\n            \nNote: The tissue quality should be\n      assessed by checking the first section under a normal bright-field\n      microscope. Samples with extensive freezing damage should be excluded. In\n      addition, since the purpose of this protocol is to perform myofiber typing",
    "for which cross-sections of myofibers are required, therefore you should\n      examine if there are more cross-sections of myofibers rather than\n      longitudinal sections of myofibers (Figure 2[href=https://www.wicell.org#fig2]). If\n      needed, the muscle biopsy should be detached from the specimen holder and\n      placed again with the correct orientation to get cross-sections.\n    \nPer biopsy, collect three cryosections onto SuperFrost slides.\nNote: These three cryosections are used as\n      technical replicates. Therefore, when pasting them onto a slide, make sure\n      there is enough space around each cryosection to draw a circle using\n      immunopen (step 15).\n    \nStore the slides at −20°C prior to staining.\nNote: The slides can be stored at −20°C\n      for several years.\n    \nImmunofluorescence\nTiming: A day and a half per\n      experimental batch\n    \n      This section describes immunofluorescence staining using antibodies for\n      three myosin heavy chain (MyHC) isoforms (MyHC1, MyHC2A, and MyHC2X) and\n      laminin. Our protocol for immunofluorescence staining with the antibody\n      mix of MyHC isoforms and laminin was described.11[href=https://www.wicell.org#bib11]\nNote: For conducting immunofluorescence\n      staining in multiple experimental batches samples across groups should be\n      randomized in different batches using a single antibody master mix. The\n      antibody master mix can be stored at 4 degrees for 1–2 weeks.\n    \n      Here, we provide step-by-step directions for conducting this experiment:\n    \n        If slides were stored at −20°C, air dry them for 30 min at room\n        temperature (RT). This incubation is important to limit detachment of\n        the tissue during the incubations.\n      \n        Outline each cryosection with an immunopen about 2–3 mm from the tissue\n        edge.\n      \nNote: Do not draw the line too close to\n      the muscle cryosections as it will introduce an artifact in the image\n      processing step.\n    \nWash the cryosections in PBST in the staining box.\nBlocking.\nIncubate slides in PBST + 5% milk for 30 min.\n        Wash the slides three consecutive times with a large volume of PBST,",
    "each time for 5 min.\n      \n        Primary antibody incubation. Incubate sections with a mixture of the\n        following primary antibodies for 2 h at RT:\n        \nRabbit anti-laminin,\n            Mouse anti-6H1 detecting MyHC2X.\n            \nNote: The volume of the primary\n              antibodies depends on the section area and you should make sure\n              that the entire cryosection is covered with the antibodies.\n            \n        Wash the slides three consecutive times with an excessive volume of\n        PBST, each time for 5 min.\n      \n        Secondary antibody incubation. Incubate sections with a mixture of the\n        following secondary antibodies for 1 h at RT:\n        \nGoat anti-rabbit-conjugated-Alexa Fluor® 750,\n            Goat anti-mouse-conjugated-Alexa Fluor® 488.\n            \nNote: keep slides in the dark from\n              step 21 onwards.\n            \n        Wash the slides three consecutive times with an excessive volume of\n        PBST, each time for 5 min.\n      \n        Conjugated MyHC antibody mix incubation. Incubate the sections with a\n        mixture of fluorescently conjugated monoclonal antibodies overnight at\n        4°C:\n        \nBA-D5-conjugated-Alexa Fluor® 350, detecting MyHC1,\n            SC-71-conjugated-Alexa Fluor® 594, detecting MyHC2A.\n            \nNote: Make sure that the sections\n              don’t dry out overnight. The slides can be carefully placed on wet\n              tissue.\n            \n        Wash the slides three consecutive times with an excessive volume of PBST\n        for 5 min.\n      \nWash the slides once with an excessive volume of PBS for 5 min.\n        Mounting.\n        \nCover the sections with ProLong™ Gold antifade reagent.\n            Cover the slide with a cover slip.\n            \nNote: Avoid any air bubbles on the\n              sections as they will affect the image acquisition.\n            \nFix the cover slip with nail polish.\nPlace the mounted sample on a flat, dry surface.\nIncubate for 24 h at room temperature in the dark.\nStore slides at 4°C prior to imaging.\nImage acquisition\nTiming: 10–15 min (per sample)\n    \n      Here, we describe the imaging of the entire muscle sections using an Axio\n      Scan.Z1 slidescanner (Carl Zeiss, Germany) image capturing using ZEN 2",
    "(blue edition) software (the v2.6 was used in this protocol).\n    \nAlternatives: Other microscopes\n      with high capacity image acquisition equipped with four fluorescence\n      channels can be used.\n    \nNote: The imaging settings should be\n      optimized on a test slide to specify the exposure time and intensity per\n      fluorophore, as exposure time and focusing algorithm fade the fluorophore\n      signal.\n    \nNote: We recommend using the channel with\n      the highest signal-to-noise ratio (in this dataset the MyHC2A\n      conjugated-Alexa Fluor® 594 channel) to define the focus plane.\n    \nNote: For each fluorophore/channel, the\n      intensity and exposure time should be optimized to get the best\n      signal-to-noise ratio, without bleaching the fluorophores.\n    \n        Make images with a 10×/0.45 Plan-Apochromat objective lens (Figure 3[href=https://www.wicell.org#fig3]).\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2410-Fig3.jpg\n              Figure 3. A representative immunostaining image\n            \n              The left image shows the entire section, in the red box is a\n              zoom-in image of the composite image and each myosin heavy chain\n              isoform and laminin separately. Scale bar 500 μm.\n            \n        Use single band filters for all channels:\n        \n            Channel 1 (MyHC1, Alexa Fluor® 350): 335 nm–383 nm excitation,\n            420 nm–470 nm emission in combination with 385 nm LED excitation\n            wavelengths;\n          \n            Channel 2 (MyHC2A, Alexa Fluor® 594): 574 nm–599 nm excitation,\n            612 nm–682 nm emission in combination with 567 nm LED excitation\n            wavelengths;\n          \n            Channel 3 (MyHC2X, Alexa Fluor® 488): 450 nm–490 nm excitation,\n            500 nm–550 nm emission in combination with 475 nm LED excitation\n            wavelengths;\n          \n            Channel 4 (Laminin, Alexa Fluor® 750): 672 nm–747 nm excitation,\n            765 nm–855 nm emission in combination with 735 nm LED excitation\n            wavelengths.\n          \nNote: The same image acquisition settings\n      must be used for all slides over all batches.\n    \nNote: When you perform the staining in\n      multiple batches, the imaging should be also done in the same order and\n      batches to keep the same duration between staining and imaging for all\n      batches.",
    "Note: For each slide, the output is a Carl\n      Zeiss Image format (CZI) dataset, which includes an image for each\n      section.\n    \nImage preprocessing\nTiming: 1–2 min (per sample)\n    \nNote: A video walkthrough of the image\n      preprocessing and image processing steps described below can be found in\n      Methods video S1[href=https://www.wicell.org#mmc2].\n    \n        Your browser does not support HTML5 video.\n      \n          Methods Video S1. Video walkthrough of the image preprocessing and\n          image processing steps\n        \n      Before the acquired images can be processed, the data needs to be curated,\n      and some preprocessing might be required as explained below. The result of\n      steps 32 and 33 should be a folder of multi-channel tiff files with a\n      pixel size between 1 and 5 μm that can be imported by Fiji.6[href=https://www.wicell.org#bib6]\n        Calculating shading profile.\n        If the acquired images exhibit a significant amount of shading (Figure 4[href=https://www.wicell.org#fig4]A), this should be corrected since these intensity variations are not\n        related to differences between distinct myofibers (Figure 3[href=https://www.wicell.org#fig3]). The acquisition software offers a number of functions for shading\n        correction: as an online process during the acquisition, or as a\n        post-processing step.\n        When these options do not give satisfactory results, it is possible to\n        calculate ‘averaged’ shading profiles and use these for post-processing.\n        When imaging with Axio Scan.Z1 slidescanner, this is achieved using ZEN\n        Lite (v3.3 used for this protocol) and Fiji as below:\n        \n            Calculate a shading profile using the ‘Shading Reference From Tile\n            Image’ in ZEN Lite for each channel in each slide.\n            \n                This will produce a shading profile for each channel per slide.\n              \n            Load all shading profiles for one specific channel into Fiji and\n            combine them into a stack using the ‘Images to stack’ command.\n          \n            Using ‘Z Project’ with ‘Projection type’ set to ‘Median’, calculate\n            the median shading profile for this channel.\n          \nRepeat steps b-c for all channels.",
    "Use the median shading profiles for the shading correction using\n            ‘Shading Correction’ in ZEN Lite. This can only be done one channel\n            at a time (Figure 4[href=https://www.wicell.org#fig4]).\n          \n        Converting image format. Depending on the slide scanner used, this can\n        be achieved in a multitude of ways. When using the Axio Scan.Z1\n        slidescanner the following procedure can be used in Fiji:\n        \nOpen Fiji.\n            Run “0.Convert_CZI_to_Tiff.ijm” macro to convert the slidescanner\n            datasets from CZI to multichannel 16-bit TIFF files using\n            BioFormats.12[href=https://www.wicell.org#bib12]\n            Provide a directory with CZI datasets.\n            \n                Running this macro, the images will be downsampled (4×) by\n                averaging to improve the processing speed and reduce the\n                required data storage.\n              \n                The effective pixel size is 2.6 μm after downsampling.\n                \nNote: The effective pixel size\n                  will depend on the magnification of the acquisition. One\n                  should modify this to achieve a pixel size between 1 and 5 μm.\n                  It can be tuned by changing the scale parameter in\n                  “0.Convert_CZI_to_Tiff.ijm” macro (line 39). The amount of\n                  downscaling should be evaluated carefully by checking the\n                  output of the subsequent segmentation steps. If the\n                  segmentation quality is not sufficient, consider reducing the\n                  amount of downsampling.\n                \n            For each image in each CZI dataset, a tiff file that ends with\n            “_s[X]_merged” will be saved in the input directory provided.\n            \n                X shows the image number in the CZI dataset (starting from\n                zero).\n              \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2410-Fig4.jpg\nFigure 4. Shading correction\n          (A and B) A representative image before shading correction (A) and\n          after shading correction (B). Scale bar 500 μm.\n        \nImage processing\nTiming: 5–10 min (per sample)\n    \n      Image processing will be performed using Fiji and Ilastik7[href=https://www.wicell.org#bib7]\n      software.\n    \nNote: A modular set of macros that process\n      each step independently is created. All the macros are publicly available\n      on GitHub:\n      https://github.com/tabbassidaloii/ImageProcessing/tree/main/MyofiberTyping/Macros[href=https://github.com/tabbassidaloii/ImageProcessing/tree/main/MyofiberTyping/Macros]. In the steps below, we specify which macro should be used.\n    \nNote: Macros save intermediate image files",
    "to facilitate debugging and rerunning certain steps when required.\n    \n        Generating tissue mask. This step is a semi-automated process that uses\n        an automated mask generation algorithm, followed by a manual step to\n        check and correct the generated masks.\n        \nNote: The aim of these manual\n          corrections is to remove artifacts such as tissue folds, out-of-focus\n          regions, scratches, and dirt objects.\n        \nNote: The image processing steps below\n          expect a folder that contains multichannel 16 bit tiff files that have\n          a filename that ends with “_merged.tif”. These files should have an\n          effective pixel size of approximately 2.6 μm.\n        \nOpen Fiji.\nSelect Freehand Selection Tool.\n            Run “1.Tiff_to_Mask.ijm” macro to generate a mask for each image.\n          \n            Provide a directory with merged tiff images.\n            \n                The first image will pop up with a mask generated automatically\n                and a question box: “Is the mask OK?”\n              \n                Press the OK button, if the generated mask is accurate.\n                Otherwise, the mask can be adjusted (Figure 5[href=https://www.wicell.org#fig5]):\n                        Zoom in or zoom\n                out on the area of interest by holding Ctrl and scrolling the\n                mouse wheel.\n                        Hold Shift and\n                Right Click on the area of the image that needed to be added to\n                the mask;\n                        Hold Alt and\n                Right Click on the area of the image that needed to be removed\n                from the mask.\n                        Press OK when\n                the mask is accurate to go to the next image.\n                \nNote: This manual process is\n                  the most time-consuming step in image processing.\n                \n            For each image, a tiff file that ends with “_Mask” will be saved in\n            the input directory provided.\n          \n        Generating ‘masked’ copy of the laminin channel. In this step, to reduce\n        any possible artifacts due to this binary mask, a gaussian blur is\n        applied to the mask and the pixel values of the laminin channel outside",
    "the mask are set to the median intensity of these pixels.\n        \nNote: We typically use a gaussian blur\n          of 4 pixels (sigma = 4), but this can be tuned if the masks blur\n          details too much (troubleshooting 1[href=https://www.wicell.org#sec8.1]).\n        \nOpen Fiji.\n            Run “2.Masked_Lamin.ijm” macro to generate a masked copy of laminin\n            for each image.\n          \nProvide a directory with “_Mask” tiff images.\n            For each image, a tiff file that ends with “_Lamin_Masked” will be\n            saved in the input directory provided.\n          \n        Laminin segmentation using Ilastik. In this step, to segment the\n        myofibers, the masked laminin images will be fed into an Ilastik7[href=https://www.wicell.org#bib7] pixel classification algorithm.\n        \nNote: To train this classifier only a\n          small number of annotations on a small subset of images is required.\n          After this training, the classifier can then be run on the entire\n          dataset.\n        \nNote: For users unfamiliar with pixel\n          classification in Ilastik, we recommend reading\n          the Ilastik documentation here:\n          https://www.ilastik.org/documentation/pixelclassification/pixelclassification[href=https://www.ilastik.org/documentation/pixelclassification/pixelclassification].\n        \nRun Ilastik software.\nCreate a new “Pixel Classification” project.\n            Input data.\n            \nSelect “1. Input Data” menu on the left.\nClick on “Add New” button to add a separate image(s).\n                Select multiple images (output of the previous step with\n                “_Lamin_Masked” extension) that represent your dataset.\n              \nClick on “Open” button.\n            Feature selection.\n            \nSelect “2. Feature Selection” menu on the left.\n                Define features by clicking on “Select Features…” button as\n                shown in Figure 6[href=https://www.wicell.org#fig6].\n              \n            Training.\n            \nSelect “3. Training” menu on the left.\n                To train the classifier, define labels corresponding to two\n                classes: ‘myofiber boundary’ and ‘not myofiber boundary’ (Figure 7[href=https://www.wicell.org#fig7]).\n                        Zoom in on\n                different areas to annotate the classes.\n                        Select one of\n                the classes.\n                        Select the pen\n                with the proper size to annotate the pixels which belong to the\n                class selected.\n                        Select the other\n                class and repeat step 3.\n                        Evaluate the\n                classifier performance by clicking on “Live Update” button and",
    "selecting “Segmentation” option (from “Group Visibility”).\n                        If required,\n                improve the pixel annotation in each class.\n                        Train and\n                evaluate the classifier on at least three different input images\n                by selecting them from “Current View”.\n                \nNote: Annotate pixels in\n                  multiple areas of each section representing the tissue\n                  characteristics.\n                \nNote: Avoid overtraining the\n                  algorithm on a single section or area, as this will reduce the\n                  classifier performance across the whole dataset.\n                \nNote: When the classifier\n                  works as you expect, we recommend continuing with image\n                  processing and evaluating the performance of the classifier\n                  based on the output of the next step.\n                \n            Prediction export.\n            \nSelect “4. Prediction Export” from the menu on the left.\n                Define the export image settings by clicking on “Choose Export\n                Image Settings” as shown in Figure 7[href=https://www.wicell.org#fig7].\n              \n                Save the project.\n                \nNote: An example of an\n                  Ilastik classifier file can be found on GitHub (https://github.com/tabbassidaloii/ImageProcessing/tree/main/MyofiberTyping/Macros[href=https://github.com/tabbassidaloii/ImageProcessing/tree/main/MyofiberTyping/Macros]) under the name of ‘3.Pixelclass_Lamin_Masked.ilp’.\n                \n            Run classifier.\n            \n                Use this classifier to process all images.\n                        Open Command\n                Prompt.         Run the\n                command below by providing paths required:\n                \n“[Path to Ilastik]\\ilastik.exe” --headless\n                      --project=\"[Path to classifier\n                      saved]\\3.pixelclass_lamin_masked.ilp” [Path to\n                      image]\\∗_Lamin_Masked.tif\n                        For each image,\n                a tiff file that ends with “Masked_Probabilities” will be saved\n                in the image directory.\n              \n        Laminin segmentation and myofiber region-of-interest (ROI)\n        generation.\n        In this step, laminin segmentation is used to generate the\n        regions-of-interest (ROI) (individual myofibers) for each image.\n        \nOpen Fiji.\n            Run “4.Segment_Lamin.ijm” macro to segment and generate the ROIs for\n            each image.\n          \nProvide a directory with “Masked_Probabilities” tiff images.\n            For each image.\n            \n                a tiff file (with “_Segmentation” extension) in the input\n                directory provided.\n                and,\n              \n                an ROI file that ends with “_ROI” in the ROI subdirectory will\n                be saved (Figure 8[href=https://www.wicell.org#fig8]).\n              \n        Extracting the mean-fluorescence-intensity and ROI properties. In this\n        step, the mean-fluorescence-intensities (MFIs), as well as other\n        properties in ROIs in all fluorescence channels, are extracted using the",
    "Fiji measurements: “Area”, “Mean gray value”, “Standard deviation”,\n        “Modal gray value”, “Min & max gray value”, “Shape descriptors”,\n        “Median”.\n        \nNote: Macro, used in this step, adds\n          an extra channel (channel 5) to show the results of the\n          pixel-classification step. This ‘classification’ channel is the output\n          of the pixel classification algorithm (step 36). The segmentation\n          quality is evaluated using the “Mean gray value” on the border (strip\n          of 3-pixels around ROI) of each ROI. This measurement allows\n          assessment of the myofiber ‘segmentation certainty’ by looking at the\n          ‘classification’ channel, i.e., the certainty is high when the\n          pixel-classification is high for the ‘myofiber boundary’ class all\n          around the myofiber and low in the interior of the myofiber.\n        \nOpen Fiji.\n            Run “5.Export_MFI_and_Laminin_Int_and_Distance.ijm” macro for the\n            laminin segmentation and generate the regions-of-interest (ROI)\n            (individual myofibers) for each image.\n          \nProvide a directory with tiff images.\n            For each image, a file and three images will be saved.\n            \n                a tab-delimited text file that ends with “_MFI” in the ROI\n                subdirectory (Table 2[href=https://www.wicell.org#tbl2]).\n              \n                three jpeg images that end with “_check[X]” in the check\n                subdirectory.\n                \nNote: The distance of each\n                  myofiber to the edge of the tissue (Table 2[href=https://www.wicell.org#tbl2]) can be used to remove myofibers in case of suspected\n                  artifacts, such as close to the tissue borders (troubleshooting 2[href=https://www.wicell.org#sec8.3]).\n                \nNote: To aid interpretation\n                  and verification of the results, visualizations of the\n                  segmentation, as well as the measured parameters such as mean\n                  fluorescence intensity are generated (jpeg images ending with\n                  “_check[X]”).\n                \nNote: All the steps detailed\n                  above can be executed by running two Windows Batch Files\n                  provided on GitHub:\n                  https://github.com/tabbassidaloii/ImageProcessing/tree/main/MyofiberTyping/Macros/BatchFiles[href=https://github.com/tabbassidaloii/ImageProcessing/tree/main/MyofiberTyping/Macros/BatchFiles].\n                \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2410-Fig5.jpg\nFigure 5. Tissue mask generation\n(A) An automated tissue mask (thin yellow line).\n          (B) The adjusted mask excludes staining artifacts on the edges,\n          out-of-focus regions, scratches, and dirt objects. Scale bar 500 μm.\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2410-Fig6.jpg",
    "Figure 6. Feature selection and export settings in Ilastik\n          (A and B) The overview of features that should be selected (A) and the\n          required settings for the Export Image Settings (B) for the pixel\n          classification algorithm in Ilastik.\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2410-Fig7.jpg\nFigure 7. Training the classifier\n          (A) The annotation of the pixels which belong to the ‘myofiber\n          boundary’ (yellow) and ‘not myofiber boundary’ (blue).\n        \n          (B) result of the pixel classification showing the probability for\n          each pixel belonging to the ‘myofiber boundary’ class (ranging from 0\n          in black, to 1 in white).\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2410-Fig8.jpg\nFigure 8. The ROI generation\n          A representative image of myofiber ROI segmentation. Scale bar 500 μm.\n        \ntable:files/protocols_protocol_2410_5.csv\n      The Mean values for channels 1, 2 and 3 will be used to determine myofiber\n      type in subsequent analysis. Channel 4 is not used in subsequent analysis.\n      Channel 5 is the ‘pixel classification score’ that enables us to verify\n      the quality of the segmentation. Please note that some values are\n      duplicates (e.g., area and circularity only depend on the shape of the\n      ROIs, and are therefore the same for all channels), and not all values are\n      used for downstream analysis, these have been grayed out.\n      Label consists of a unique identifier of the ROI and the channel\n      number. Area is the cross-sectional area (CSA). Mean is the\n      mean gray value intensity inside the object. Circ. is the\n      circularity. Mean_boundary and StdDev_boundary are the mean\n      gray value intensity and the standard deviation of the intensity on the\n      object’s boundary. Mean_distance is the object’s mean distance to\n      the edge of the section.\n    \nMyofiber type composition analysis\nTiming: Half a day (depends on the\n      dataset size)\n    \n      In this section, we explain the filtering of non-myofiber ROIs and\n      myofiber type classification. Here, we perform all the analyses in RStudio\n      Software (v1.3.959 used for this protocol)9[href=https://www.wicell.org#bib9] using R",
    "Statistical Software (v4.0.2 used for this protocol).8[href=https://www.wicell.org#bib8]\n      The R Markdown file is available on GitHub:\n      https://github.com/tabbassidaloii/ImageProcessing/blob/main/MyofiberTyping/Rscript/MyofiberTyping.Rmd[href=https://github.com/tabbassidaloii/ImageProcessing/blob/main/MyofiberTyping/Rscript/MyofiberTyping.Rmd]. In the steps below, we specify which R code chunk in this R markdown\n      file should be used.\n    \nNote: The threshold used in the R markdown\n      file is specific to one example dataset that was used in this protocol.\n      The filtering threshold should be tuned for each dataset.\n    \n        Exclusion of non-myofiber ROIs. In image processing, the laminin\n        segmentation is automated, which may include non-myofiber ROIs in the\n        dataset. Therefore, the first step is to filter out the non-myofiber\n        ROIs. We consider percentiles of ‘segmentation certainty’, CSA, and\n        circularity values.\n        \nNote: Filtering out using a\n          statistical value could result in removing true myofibers ROIs.\n          However, due to the large myofiber ROIs, the dataset outcome is\n          unaffected by small changes in percentile cutoff values.\n        \nNote: We verify the thresholds applied\n          by visualizing the filtered ROIs using “6.Visual_Check_Filtering.ijm”\n          macro available on GitHub:\n          https://github.com/tabbassidaloii/ImageProcessing/tree/main/MyofiberTyping/Macros[href=https://github.com/tabbassidaloii/ImageProcessing/tree/main/MyofiberTyping/Macros]. The visualization can be performed after each filtering step to\n          justify the threshold. Here we only show an example of filtered\n          myofibers after the last filtering step.\n        \n            Filtering based on segmentation certainty. The measurement in the\n            ‘classification’ channel can be used to assess the segmentation\n            certainty and filter out non-myofiber ROIs (Table 2[href=https://www.wicell.org#tbl2]).\n            \nNote: The measurements which are\n              based on the “Mean gray value” are: Mean, laminin intensity\n              inside the object (the smaller the better); Mean_boundary,\n              laminin intensity on the boundary (the larger the better);\n              StdDev_boundary, standard deviation of laminin intensity on\n              the boundary (the smaller the better).\n            \n                Pool all the data from all the samples by running “readDataset”\n                R code chunk.\n              \n                Draw a density plot for each metric to define a filtering\n                threshold by running “Filt1_segmentationMetrics_denPlot” R code\n                chunk.\n              \n                Define the threshold based on the density distribution and apply",
    "filtering for Mean and Mean_boundary by running\n                “Filt1_segmentationMetrics_filtering” R chunk code. In our\n                dataset, including 369073 ROIs, we excluded ROIs from the top\n                and bottom 5th percentile (Figure 9[href=https://www.wicell.org#fig9]).\n                \nNote: In this example,\n                  filtering based on StdDev_boundary is not used, because the\n                  StdDev_boundary has been improved by filtering for two other\n                  metrics.\n                \nNote: The filtering thresholds\n                  should be tuned for other input datasets. We recommend\n                  iteratively assessing the thresholds applied by visualizing\n                  the filtered ROIs.\n                \n            Filtering based on CSA (μm2). The next filtering step uses the CSA:\n            large CSA values could represent multiple myofibers that were not\n            individually segmented due to the absence of laminin staining or\n            small CSA values might be either small non-myofiber cells or a space\n            between contiguous myofibers.\n            \n                Draw a density plot to define a filtering threshold by running\n                “Filt2_CSA_denPlot” R code chunk (Figure 10[href=https://www.wicell.org#fig10]A).\n              \n                Apply filtering for CSA by running “Filt2_CSA_filtering” R chunk\n                code.\n                \nNote: Include all ROIs\n                  including those that are filtered in the segmentation\n                  certainty filtering step.\n                \nNote: Depending on the dataset\n                  characteristic, CSA could have a diverse distribution across\n                  sample groups. Therefore, when the distribution is not the\n                  same, the filtering based on CSA should be separately applied\n                  to each group. However, applying filtering separately may\n                  introduce a bias, therefore these decisions about the study\n                  design require careful consideration. This is an important\n                  consideration to preserve biological differences between\n                  sample groups. We show an example for CSA across different\n                  muscles, we notice that the mean CSA differed between muscles,\n                  therefore the CSA-based filtering was made per muscle group.\n                \nNote: When the normal CSA\n                  range for a given sample group is known, filtering for CSA can\n                  be implemented by removing ROIs out of range.\n                \nNote: Since there is a\n                  right-skewed distribution, one may use different thresholds",
    "for both sides of the distribution (Figure 10[href=https://www.wicell.org#fig10]B).\n                \nNote: Verify the thresholds\n                  can be made by visualization of the filtered ROIs using the\n                  “6.Visual_Check_Filtering.ijm” macro available on GitHub.\n                \n            Filtering based on circularity. The circularity is an ROI measure,\n            which ranges between 0 (elongated shape) and 1 (circle). This\n            measure is used to filter out longitudinally sectioned myofibers and\n            elongated ROIs that may represent multiple myofibers (mis-segmented\n            ROIs).\n            \n                Draw a density plot of the entire dataset to define a filtering\n                threshold by running “Filt3_circularity_denPlot” R code chunk\n                (Figure 11[href=https://www.wicell.org#fig11]A).\n              \n                Apply filtering for circularity by running\n                “Filt3_circularity_filtering” R chunk code. Based on density\n                distribution, we include ROIs with Circularity > 1st\n                percentile (Figure 11[href=https://www.wicell.org#fig11]B).\n                \nNote: Apply filtering based on\n                  the percentile of all ROIs including those that are filtered\n                  in the previous filtering steps.\n                \n        Visualizing and justifying the thresholds.\n        In this step, we perform a spatial assessment of the excluded and\n        included myofibers by visualizing the filtered ROIs using the\n        “6.Visual_Check_Filtering.ijm” macro available on GitHub.\n        \n            Save a tab-delimited text file (with “_Filt” extension) in the ROI\n            subdirectory by running “save_visualizationInput” R chunk code.\n            In each filtering step, the script adds a column with 0 and 1 values\n            to the tab-delimited text file specifying which ROIs are included\n            (1) or excluded (0). The script also adds an extra column with\n            values between 0 and 1 to show the aggregated filtering results.\n            These values will be used to give a distinct color to ROI excluded\n            in each filtering step:\n            \n0: ROIs filtered based on segmentation certainty.\n0.4: ROIs included after filtering based on laminin\n                segmentation certainty.\n              \n0.7: ROIs included after filtering based on CSA.\n1: ROIs included after filtering based on circularity.\n              \nOpen Fiji.\n            Run “6.Visual_Check_Filtering.ijm” macro to visualize the filtered\n            ROIs.\n          \nProvide directory with tiff images and ROI subdirectory.",
    "For each sample, a jpeg file that ends with “_check4” will be saved\n            in the image directory (Examples are in\n            Figure 12[href=https://www.wicell.org#fig12]).\n          \nSelecting one replicate per sample.\n      In this step, one section per sample is selected for further analysis. We\n      recommend selecting the section with the highest number of myofibers after\n      all filtering steps considering the quality of the sections. We consider\n      only samples with a minimum of one hundred myofibers for downstream\n      analysis.\n    \n        classification of myofiber types. The protocol for data-driven myofiber\n        classification is detailed in Raz et al.13[href=https://www.wicell.org#bib13] Myofiber\n        classification, depending on the specific bandwidth, could result in 3–8\n        clusters, encompassing single MyHC myofiber type, hybrids, and\n        potentially a cluster with all three MyHC isoforms and a cluster with\n        only low MyHC intensity.\n        \n            Scaling and transformation.\n            The MFI values for each of the three MyHC isoforms are scaled for\n            each myofiber per sample (without centering) using\n            “ScalingAndTransformation” R chunk code.\n          \n            Clustering. This step implements the mean-shift algorithm, a\n            density-based clustering approach, implemented in the LPCM R package\n            (v0.46-7)14[href=https://www.wicell.org#bib14],15[href=https://www.wicell.org#bib15] to cluster the objects based on the\n            transformed (natural logarithm) MFI values. The transformed scaled\n            values for each MyHC isoform are used for clustering.\n            \n                Cluster the myofibers by running “clustering” R chunk code.\n                \nNote: The optimum bandwidth\n                  (h) is arbitrary and should be selected based on the\n                  dataset characteristic. We suggest using h values\n                  ranging from 0.01 to 0.05 to find the optimum value. In\n                  general, a lower value assigns myofibers to many small\n                  clusters, whereas a higher value would result in grouping the\n                  myofibers in larger clusters. We expect to have three to eight\n                  clusters as potentially biologically relevant.\n                \n                Remove the cluster with a low proportion of myofibers\n                (typically < ∼2%).\n              \n                Draw boxplots to visualize the myofibers clusters (an example is\n                in Figure 13[href=https://www.wicell.org#fig13]).",
    "Generate a spatial visualization of the clustering assignment\n                per myofiber (an example is in Figure 14[href=https://www.wicell.org#fig14]).\n              \nBiological interpretation.\n      The proportion of myofibers in each cluster can be then calculated per\n      sample and can be used to compare myofiber type composition.\n    \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2410-Fig9.jpg\n          Figure 9. The distribution of three measurements defined to assess\n          segmentation certainty\n        \n          (A and B) The density plots of Mean, Mean_boundary, and\n          StdDev_boundary across all the samples before (panel A) and after\n          filtering (panel B).\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2410-Fig10.jpg\n          Figure 10. The CSA distribution in each muscle\n        \n          (A and B) The CSA density plot before (A) and after (B) filtering.\n          Here, we include ROIs with 10th\n          percentile < CSA < 99th percentile. In this protocol,\n          we used human samples collected from six leg muscles, gracilis (GR),\n          semitendinosus (ST), rectus femoris (RF), vastus lateralis (VL),\n          vastus medialis (VM), and gastrocnemius lateralis (GL) muscles. We\n          also included biopsies from the middle (STD) and distal (STM) end of\n          the semitendinosus muscle to investigate differences within one\n          muscle. For this dataset, we tested different thresholds. Visualizing\n          the myofibers excluded, we realized that if we exclude more than 1% on\n          the right side, we would filter out ‘real’ myofibers (visual base).\n          The small non-myofiber ROIs are not entirely excluded, but if we\n          exclude more than 10% from the left (small ROIs), we would also filter\n          out ‘real’ myofibers.\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2410-Fig11.jpg\n          Figure 11. The circularity distribution in each muscle\n        \n          (A and B) The circularity density plot before (A) and after\n          (B) filtering.\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2410-Fig12.jpg\n          Figure 12. Visualization of myofiber filtering\n        \n(A) Immunostained images of two muscle sections.\n          (B) Visualization of excluded myofibers after filtering for\n          segmentation certainty (black), CSA (dark gray), and circularity\n          (light gray). Scale bar 500 μm.\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2410-Fig13.jpg\n          Figure 13. Myofiber types clustering example\n        \n          Each dot represents a myofiber. In the dataset used for this protocol,",
    "we found three main clusters. Each myofiber cluster has a major MyHC\n          isoform: MyHC2A is the major isoform in Cluster 1 (red), MyHC1 is the\n          major isoform in cluster 2 (blue) and MyHC2X is the major isoform in\n          cluster 3 (green). Boxplots show the MFI of the corresponding MyHC\n          isoforms in three different clusters.\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2410-Fig14.jpg\n          Figure 14. Visualization of myofiber clusters\n        \n(A) Immunostained images of a muscle section.\n          (B) Myofibers assigned to Cluster 1, Cluster 2, and Cluster 3 are\n          depicted in red, blue, and green, respectively. Myofibers assigned to\n          the small clusters or filtered in the filtering steps are shown in\n          gray. Panel B was generated by visualization of the clustering result\n          using the ImageJ macro “6.Visual_Check_Filtering.ijm”, followed by a\n          colorization step using image editing software. Scale bar 500 μm.\n        \nNote: The expression of MyHC isoforms\n      describes contraction capacity. Changes in myofiber type composition were\n      reported in pathological and physiological conditions. A quantitative\n      assessment of myofiber type composition can help in understanding disease\n      progression,13[href=https://www.wicell.org#bib13] and of a therapeutic assessment.16[href=https://www.wicell.org#bib16]\n      The biological relevance of myofiber type composition clusters is not\n      fully exploited. However, it allows recognizing hybrids, which are\n      implicated in aging.13[href=https://www.wicell.org#bib13] Myofiber type clusters differ\n      between muscle groups in both mouse and human,1[href=https://www.wicell.org#bib1],17[href=https://www.wicell.org#bib17],18[href=https://www.wicell.org#bib18] although not fully understood, it could suggest a\n      relevance for muscle physiology and function."
  ],
  "subjectAreas": [
    "Microscopy",
    "High Throughput Screening"
  ],
  "bigAreas": [
    "Bioengineering & Technology"
  ]
}