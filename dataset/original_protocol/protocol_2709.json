{
  "id": 2860,
  "origin_website": "Cell",
  "title": "Computational approach to evaluate scRNA-seq data quality and gene body coverage with SkewC",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nSkewC setup and testing\nTiming: 10–20 min\nTo setup SkewC, the user needs to carefully follow the instructions and implement the following steps:\nGet the Git (version control system) source and version compatible with your operating system.\nTest the installation of Git by using the git command.\n$ git --version\nIn case Git is not installed, follow the instructions from here[href=https://git-scm.com/] to install Git.\nInstall docker/udocker/singularity (key resources table[href=https://www.wicell.org#key-resources-table]). We give the user three options, but the user’s choice is dependent on the computing environment and user permissions on the machine (admin / ordinary user).\nInstall docker: If you are installing SkewC to your personal computer and have admin authority, we recommend installing docker.\nInstall udocker: if you want to run the pipeline in a Linux environment where you don’t have any admin authority (and can’t run docker).\nInstall singularity: currently singularity more recommended than udocker.\nInstall SkewC: after completing the installation of git and any of docker/udocker/singularity, the user will be able to install SkewC using a single command in the terminal:\n$ git clone https://github.com/LSBDT/SkewC.git\nNote: After cloning SkewC, a new folder (SkewC) will be created under the user’s home directory with the structure seen in (Figure 1[href=https://www.wicell.org#fig1]).\nCritical: If singularity installed as container in step 2, the next step after completing the installation of singularity is to build the Singularity Image File (SIF).\nTo build SIF from a docker image stored in docker hub, please use this command:\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2364-Fig2.jpg\nFigure 2. Typical workflow for running SkewC on scRNA-seq data",
    "Two types of input are accepted by SkewC. 1) Barcoded BAM files together with the barcodes.tsv file generated by the 10x Genomics protocol. 2) List of BAM files generated by non 10x Genomics scRNA-seq protocols. The output of SkewC is provided in html format with multiple plots and text files. The yellow-colored boxes are for 10x Genomics dataset, green-colored box for non 10x Genomics, gray-colored box for all datasets.\n$ cd SkewC.\n∼/SkewC$ singularity build skewc.sif docker://moirai2/skewc:latest.\nNote: The skewc.sif file will be added to the SkewC work directory (Figure 1[href=https://www.wicell.org#fig1]). Check the existence of the SIF file built under the work directory of SkewC before continuing with the protocol.\nNote: All the subsequent batch commands are executed from the SkewC root directory as outlined in (Figure 2[href=https://www.wicell.org#fig2]).\nTesting SkewC; To demonstrate the implementation of SkewC, we provide users with three types of test datasets under the directory ∼/SkewC/TestData. Under the TestData folder there are three subfolders:\nTo test SkewC with the 10xGenomics (Neurons_900) dataset, use the following commands:\n$ cd SkewC/\n∼/SkewC$ bash 0_split10XbyBarcode.sh TestData/10xGenomics/barcoded.bam TestData/10xGenomics/barcodes.tsv.gz\n∼/SkewC$ bash 1_geneBodyCoverage.sh mm10\n∼/SkewC$ bash 2_SkewC.sh\nTo test SkewC with the non10x (E-MTAB-2600) dataset, use the following commands:\n$ cd SkewC/\n∼/SkewC$ bash 1_geneBodyCoverage.sh mm10\n∼/SkewC$ bash 2_SkewC.sh\nTo test SkewC with a pre-computed gene body coverage file, use the following commands:\n$ cd SkewC/\n∼/SkewC$ bash 2_SkewC.sh TestData/coverage.r\nSplit barcoded BAM file\nTiming: 45–60 min\nSplit the barcoded BAM file into a set of BAM files based on the list of barcodes provided in the (barcode.tsv) file. This is achieved using the following command:\n∼/SkewC$ bash 0_split10XbyBarcode.sh $bam $barcode $outdir\nArguments:\n$bam – BAM file from 10Xgenomics analysis.\n$barcode – barcodes.tsv.gz under 10Xgenomics outs/filtered_feature_bc_matrix/.\n$outdir – directory to store split BAM files (default = ’input’).",
    "Critical: This step is required for scRNA-seq datasets generated by 10x Genomics.\nNote: If you don’t wish to designate a specific output directory, you can omit the $outdir argument.\nThe bash script 0_split10XbyBarcode.sh will create multiple BAM files (one BAM file per cell barcode) under the specified output directory (default = 'input').\nCompute gene body coverage\nTime (The time depends on the number and size of the BAM files).\nA critical step in SkewC is the gene body coverage computation. This step will enable computation of the gene body coverage for each BAM file (cell). The bash script 1_geneBodyCoverage.sh is used for the gene body coverage computation. Another alternative to use Perl command.\nRun the gene body coverage bash script:\n∼/SkewC$ bash 1_geneBodyCoverage.sh $species $indir $outdir\nArguments:\n$species - human 'hg38' or mouse 'mm10' (default = 'hg38′).\n$indir - directory where split BAM and index files are stored (default = 'input').\n$outdir - directory to store geneBodyCoverage.pl output files (default = 'coverage').\nCompute gene body coverage through the command line using Perl:\nPerl bin/geneBodyCoverage.pl -o coverage reference/hg38_Gencode_V28.norRNAtRNA.bed input/example.TTTGTCATCTAACGGT-1.bam > coverage/example.TTTGTCATCTAACGGT-1.log\nNote: geneBodyCoverage.pl will create an index file under a reference directory (default = 'reference') at the beginning of the first iteration. From the second iteration onwards, indexed reference files will be used to speed up calculation.\nNote: It’s not recommended to run geneBodyCoverage.pl in parallel when it's creating an index file.\nOptional: Parallelization is available on SkewC by running multiple “1_geneBodyCoverage.sh” scripts in parallel. By calling five shell scripts, each script calculates gene body coverage of separated BAM files.\n./1_geneBodyCoverage.sh &\n./1_geneBodyCoverage.sh &\n./1_geneBodyCoverage.sh &\n./1_geneBodyCoverage.sh &\n./1_geneBodyCoverage.sh &\nAnalysis of the gene body coverage and output preparation\nTiming: 1–2 min (for steps 9 and 10)",
    "The final step in a typical SkewC workflow is the analysis of the gene body coverage and the preparation of the output folder.\nRun bash script 2_SkewC.sh to analyze gene body coverage.\n∼/SkewC$ bash 2_SkewC.sh $prjname $indir $outdir $alpha\nArguments:\n$prjname - project name of sample (default = 'COV'). $prjname will be printed on PDF outputs.\n$indir - a directory where geneBodyCoverage.pl output files are stored (default = 'coverage').\n$outdir - a directory to store skewc analysis files with index HTML (default = 'skewc').\n$alpha - alpha for tclust computation with three modes:\n(Not defined) - alpha value is decided by highest value from ctlcurves.\n1.0–1.0 - tclust will be computed with this user specified value.\nUse of the alpha value in SkewC, please see the detailed description in the SkewC original publication.1[href=https://www.wicell.org#bib1] Here are the three possible values for alpha.\nbash 2_SkewC.sh test input output - tclust computation with auto alpha value.\nbash 2_SkewC.sh test input output 0.1 - tclust computation with alpha = 0.1.\nbash 2_SkewC.sh test input output 0.1 0.2 0.3 0.4 - tclust computation with alpha = 0.1, 0.2, 0.3, 0.4.\nPre-filtering of the cells\nTiming: 2–5 min\nRun the bash script 3_filter.sh as follows:\n∼/SkewC$ bash 3_filter.sh $filter $indir $matchdir $unmatchdir\nArguments:\n$filter - Filter file with list of IDs.\n$indir - Input directory (Default = coverage).\n$matchdir - match directory with filter list (Default = match).\n$unmatchdir - unmatch directory with filter list (Default = unmatch).\nOptional: This step is executed only when a user needs to filter out certain cells. The user will need to prepare a text file with a list of cellIDs/barcodes that will be removed from SkewC computation. Example of a list of cell IDs (ERR1211178, ERR1211176, and ERR1211180).",
    "After filtering out unwanted cells with '3_filter.sh', run '2_SkewC.sh' again whilst specifying $indir as follows:\n∼/SkewC$ bash 2_SkewC.sh $prjname $indir $outdir $alpha\nR Markdown files description\nThe bash script 2_SkewC.sh utilizes four R Markdown files. These files can either be run within 2_SkewC.sh or in the RStudio environment. Here we are going to describe these R Markdowns in more details. The four R Markdown files are available from SkewC GitHub repository here[href=https://github.com/LSBDT/SkewC/tree/master/RMarkdown].\nSkewC_Create_Coverage_Matrix.Rmd\nThis R Markdown creates the coverage matrix. The input for this file is the vector of normalized values which was created by bash script 1_geneBodyCoverage.sh and stored in the coverage.r. In this file, each single cell has a vector of numerical values (n = 100), and each cell has a cell id / barcode as identifier. The result of running the SkewC_Create_Coverage_Matrix.Rmd is a set of R data frames. After initializing some variables, the script reads the coverage.r file and converts it to the R data frame Coverage_DF. The Coverage_DF data frame consists of 101 columns with each row in the data frame representing the gene body coverage of a single cell. The Coverage_DF is used to compute the mean coverage matrix (Coverage_means_DF). The data frame name Coverage_means_DF consists of 10 columns [pmean10...pmean100] plus the cell ID/ barcode column \"Annotation\". The Coverage_means_DF data frame is processed to generate the data frame Coverage_means_DF_Clust.\nSkewC_Plot_Gene_Body_Coverage.Rmd\nThis R Markdown uses the R data frame Coverage_DF (output from SkewC_Create_Coverage_Matrix.Rmd) to generate two types of plots: The Full gene body coverage plot and the mean coverage plot (Figure 3[href=https://www.wicell.org#fig3]).\nSkewC_TrimClustering.Rmd",
    "The R Markdown SkewC_TrimClustering.Rmd performs the trim clustering implemented in R tclust function.15[href=https://www.wicell.org#bib14] The input to this R Markdown is the R data frame Coverage_means_DF_Clust and alpha value. SkewC enables the user to either select the alpha value or SkewC will auto approximate the optimal trimming level for alpha (please see1[href=https://www.wicell.org#bib1]). The output of this R Markdown is two text files (.tsv), one for the list of typical cells and one with the list of skewed cells. This R Markdown generates a plot CLUSTResult which shows the clustering result of tclust (Figure 4[href=https://www.wicell.org#fig4]).\nSkewC_Plot_Typical_Skewed_Coverage.Rmd\nThis R Markdown uses the output from SkewC_TrimClustering.Rmd (list of IDs from typical and skewed cells) and the R data frame Coverage_DF to plot two plots: the gene body coverage for the typical cells and the gene body coverage of the skewed cells (Figure 5[href=https://www.wicell.org#fig5])."
  ],
  "subjectAreas": [
    "Rnaseq",
    "Single Cell",
    "Bioinformatics"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}