{
  "id": 2793,
  "origin_website": "Cell",
  "title": "Somatic variant detection from multi-sampled genomic sequencing data of tumor specimens using the ith.Variant pipeline",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nWe describe the stepwise methodology to perform SSNV and SCNA detection on multiple related samples with the ith.Variant pipeline. At the beginning, the repository was cloned to the specified working directory and the dependencies listed in the key resources table[href=https://www.wicell.org#key-resources-table] were either installed and loaded into the shell session in Linux or pre-installed.\nDownload the raw read Fastq files, create directories and establish linkages\nTiming: <30 min\nCreate a folder for the raw data (FASTQ files).\nNote: The folder does not have to be in the path of the parent directory. The folder fastq will store the raw data files.\nDownload the raw data.\nNote: The files we used are found at the link provided in the key resources table[href=https://www.wicell.org#key-resources-table]. They are in FASTQ format and gzipped (.fq.qz). Transfer the FASTQ files from your local machine to the folder fastq located in your remote environment.\nCreate a folder for the protocol analysis. Within this folder, create a subfolder called root that will serve as your working directory. Shown below are the commands to create and navigate to the parent directory.\n$ mkdir CRC_singleGland_pipeline_run/root -p\n$ cd CRC_singleGland_pipeline_run\nNote: Here we created CRC_singleGland_pipeline_run to be the parent directory, containing the subfolder root. Once implementation of the protocol is complete, the folder root will contain the output of the results for individual samples.\nCreate a file for mapping the reads to the reference genome.\nNote: This file somaticInfo.O is named using a patient identifier (i.e., Patient O) and can be in the previously made parent directory CRC_singleGland_pipeline_run. It is in tab-delimited ASCII text format and consists of two columns: one column for the name of the tumor samples, and the other column for the name of the corresponding normal samples as shown in Figure 2[href=https://www.wicell.org#fig2]A.",
    "Note: The somaticInfo.O file used in the protocol here shows varying normal samples (ON and ONs). These normal samples correspond to specific tumor samples that were originally sequenced using different exon-capture protocols. This is negligible, but the proper exome target file for a sample must be indicated in the configuration file (config.tsv, see key resources table[href=https://www.wicell.org#key-resources-table]) for analysis.\nInside the parent directory CRC_singleGland_pipeline_run, create soft links to the pertinent files. The first soft link can be to the folder containing the raw FASTQ files. The second soft link can be to the name mapping file. The commands for both tasks are shown below.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2301-Fig2.jpg\nFigure 2. Prepare to and run the first step of ith.Variant\n(A) The somaticInfo.O file listing the tumor-normal pairing information. There must be two columns: the first for the names of the tumor samples, and the second for the respective normal samples. The names are tab-delimited.\n(B) A screenshot of the options given by the perl script for submitting jobs to the Slurm queuing system. The parameters are given with their description. They are user-specified and passed when the perl script is invoked on the command-line interface.\n(C) A screenshot of the output directories from mapping each sample to the reference genome. The top directory contains the raw paired-end sequencing data files for one sample with soft links to the original data files (fq.qz). The bottom directory contains the mapped and preprocessed files for the same sample.\n(D) A screenshot of the output files for single-gland WES sample CRCTumorOA1 after mapping is complete. The files include the mapped and sorted file (.bam) and an index file (.bai) for random access.\n$ ln -s /path/to/fastq/ ./\n$ ln -s /path/to/somaticInfo.O ./\nMap read files against Hg38\nTiming: ∼13 h (depending on your dataset) (for step 7)",
    "As preparation for downstream variant calling, the sequencing read files are mapped against a human reference genome. Here we chose the human genome build 38 (hg38) with further details available on the GitHub. The reference genome hg38 is chosen as the latest developed reference genome, representing more human genomic variation, and thus leading to higher sensitivity in variant callers. The outcome of this step will be mapped reads in BAM format that can be used for further analysis.\nCheck the options of the perl script wrapper for submitting jobs.\n$ perl/path/to/ith.Variant/pipeline/exome/submit_slurm.pl -h\nNote: The submit_slurm.pl perl script is wrapped to ease invoking the commands in ith.Variant. It can be found in the key resources table[href=https://www.wicell.org#key-resources-table]. The parameters in the perl script will be user-specified via a text editor like Emacs and Nano and are shown in Figure 2[href=https://www.wicell.org#fig2]B.\nMap the FASTQ data to the reference genome. The parameters are described below and are shown in Figure 2[href=https://www.wicell.org#fig2]B. Edit the command for your use-case including the data being used, the pathway to the ith.Variant package, and the names of the parent and working directories. Here are the modifiable parameters that will be used to submit the Slurm job.\nsubmit_slurm.pl is the main perl program for the pipeline. When a command is executed for each step in the protocol, it calls this perl program which passes various command-line arguments including Slurm programs and other perl programs.\n--root is $YOUR_ROOT_FOLDER. This parameter is the working directory. Here we use root. It will contain the output of mapping/aligning and pre-processing each sample.\n--workhard is $YOUR_SLURM_SCRIPT. This parameter is the step-specific job submission script. The mapping step corresponds to step0_mapping.slurm.",
    "--readpool is $YOUR_FASTQ_FOLDER. This parameter is the fastq files. The FASTQ files’ names should have unique prefixes, matching the sample names shown in the somaticInfo.O file.\n--somaticInfo is $SOMATICINFO_FILE. This parameter is the name mapping file.\n--config is $YOUR_CONFIG_FILE. This parameter is the configuration file. Note that users can make a custom configuration file by following the same format of the example configuration file (see key resources table[href=https://www.wicell.org#key-resources-table]) to indicate the locations of executables and other required files.\n--samples is $YOUR_SAMPLENAMES. This parameter is a comma-delimited list containing the names of your samples for analysis.\n$ perl /path/to/ith.Variant/pipeline/exome/submit_slurm.pl\n--root /path/to/CRC_singleGland_pipeline_run/root/\n--workhard /path/to/ith.Variant/pipeline/exome/step0_mapping.slurm --readpool /path/to/CRC_singleGland_pipeline_run/fastq/\n--somaticInfo /path/to/CRC_singleGland_pipeline_run/somaticInfo.O --config /path/to/ith.Variant/confs/exome/config_hg38_wxs_ss.tsv\nsamplesOA,OB,CRCTumorOA1,CRCTumorOA2,CRCTumorOA3,CRCTumorOA4,CRCTumorOB1,ON",
    "Note: The FASTQ data (fq.qz) is located in the fastq folder. This step runs the Slurm script step0_mapping.slurm by which the user can submit the mapping job to the Slurm system, automating the mapping/alignment and detailed preprocessing of the read alignment files. The example Slurm script used in the protocol for this along with the other Slurm scripts can be configured to your environment and are found in the key resources table[href=https://www.wicell.org#key-resources-table] under the directory called pipeline. This step consists of the following: each sample is mapped and aligned to the hg38 genome using the efficient BWA-MEM algorithm for short-read alignment17[href=https://www.wicell.org#bib17]; the resulting BAM file is sorted by SAMtools13[href=https://www.wicell.org#bib13]; and duplicate reads are marked by Picard’s MarkDuplicates.21[href=https://www.wicell.org#bib21] Specifically, the BWA-MEM algorithm is applied as our Illumina paired-end reads encompass approximately 150 bp per paired-end read, falling within the algorithm’s recommended range. Upon alignment, SAMtools sorts the aligned reads by coordinates, and MarkDuplicates performs further pre-processing to retain one representative copy of each read. For instance, here we mapped seven tumor samples and two normal samples, specifying these samples in the parameter --samples. The output will be directories under each sample and include several sorted files as shown in Figures 2[href=https://www.wicell.org#fig2]C and 2D, respectively.",
    "Optional: If reads are contained in pre-mapped/aligned BAM files instead of raw FASTQ files, users can re-map these reads against a new reference genome. Here we show an example where reads for the sample ONs were previously mapped and thus already in BAM format. We remap the reads from the original BAM file against a new reference genome using the command line below. This step is estimated to have a similar runtime as the mapping of FASTQ files contingent on data size. The parameters are like those of the previous step, except for a few changes including an additional parameter:\n--prembamDir is $YOUR_BAM_FOLDER. This parameter is the directory containing the relevant BAM file(s) to be remapped. Note that the name of the BAM file should have a unique prefix matching the sample name stated in the somaticInfo.O file.\n$ perl/path/to/ith.Variant/pipeline/exome/submit_slurm.pl\n--root/path/to/CRC_singleGland_pipeline_run/root/\n--workhard/path/to/ith.Variant/pipeline/exome/step0_reMapping.slurm\n--somaticInfo/path/to/CRC_singleGland_pipeline_run/somaticInfo.O\n--config/path/to/ith.Variant/confs/exome/config_hg38_wxs_ss.tsv\n--prembamDir /path/to/CRC_singleGland_pipeline_run/bam/\n--samples ONs\nOptional: When running the ith.Variant pipeline, the following parameters for initiating various methods of preprocessing can be omitted. This alternative step generates relatively similar variant calls with greater efficiency. To skip the additional preprocessing, eliminate the following argument from step0_mapping.slurm:\n--skipTask indelRealignment,BaseRecalibration,recalMD\nNote: To ensure the Slurm job is running, use the command below. If there is an error, the time will keep showing zero and no results will be generated. Confirm the parameters are correctly modified and the directories and files are in the appropriately specified locations. The following command can be executed to retrieve details related to job status.\nsqueue -a -u <name_of_user>\nNote: The overall timing of this step is based on the number of samples representing input files and their data format (i.e., whether they require remapping).\nGenerate candidate SSNVs and germline SNPs for each tumor sample",
    "Timing: ∼9 h and ∼6 h for steps 8 and 9, respectively (for step 8)\nWith the read alignment files generated from the previous step, we perform variant detection of somatic single-nucleotide variants (SSNVs) and germline single-nucleotide polymorphisms (SNPs) for Patient O. Relative to germline SNPs, somatic variants can present at low-allelic frequencies which can complicate calling. As an initial scan for candidate variants in individual samples, we apply the variant caller MuTect, leveraging its sensitivity to variants at low allelic frequencies. Similarly, we use SAMtools to generate the list of candidate germline SNPs. The outcome will be candidate SSNVs and SNPs for later processing.\nPerform initial variant scanning for SSNVs with the BAM files for tumor and normal samples. The command is below.\nThis step will produce a directory 04_SNV (Figure 3[href=https://www.wicell.org#fig3]A), containing the raw candidate SSNV calls files (Figure 3[href=https://www.wicell.org#fig3]B). The primary output is the file [SampleName].mutect.genome.sorted.vcf.hg38_multianno.mod.vcf. For example, see the file for sample CRCTumorOA1 (Table 2[href=https://www.wicell.org#tbl2]). The file contains the candidate variant calls labeled by the functional annotation software for genetic variants known as Annovar.27[href=https://www.wicell.org#bib27] To distinguish exonic (protein-coding) variants from those that are non-coding,29[href=https://www.wicell.org#bib29],30[href=https://www.wicell.org#bib30] ith.Variant uses Annovar to perform region-based annotation on variants in WES/WGS for a more comprehensive calling.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2301-Fig3.jpg\nFigure 3. Candidate somatic and germline calls generated by variant callers\n(A) Output directory O4_SNV after running MuTect and SAMtools. This directory contains the candidate list of SSNVs and SNPs for a specific sample.\n(B) Output files from MuTect and SAMtools scanning. Here is the list of candidate SSNVs generated by MuTect and candidate SNPs by SAMtools for sample CRCTumorOA1.\ntable:files/protocols_protocol_2301_2.csv",
    "This is a preview of file ([SampleName].mutect.genome.sorted.vcf.hg38_multianno.mod.vcf) generated by MuTect, containing candidate SSNV calls in sample CRCTumorOA1. Here the first five genomic positions along Chromosome 1 of the reference genome hg38 are shown with the reference and alternate alleles, quality score, filter status and other information.\nThe file CRCTumorOA1.mutect contains numerous features of the sequencing data originally returned by MuTect. It reports a table with contig position, reference and alternate alleles, and metadata including coverage power, filters, and strand bias.\nThe other two files (.vcf) are converted from the MuTect output table. They are in standard variant call format (VCF),20[href=https://www.wicell.org#bib20] and they contain MuTect-generated metadata like genomic coordinates and associated filtering flag (i.e., “Reject” or “Pass”).\nTroubleshooting 1[href=https://www.wicell.org#sec6.1].\nTroubleshooting 2[href=https://www.wicell.org#sec6.3].\n$ perl\n/path/to/ith.Variant/pipeline/exome/submit_slurm.pl\n--root /path/to/CRC_singleGland_pipeline_run/root/\n--workhard/path/to/ith.Variant/pipeline/exome/step1_muTect.slurm\n--somaticInfo/path/to/CRC_singleGland_pipeline_run/somaticInfo.O\n--config/path/to/ith.Variant/confs/exome/config_hg38_wxs_ss_java6.tsv\n--samplesOA,OB,CRCTumorOA1,CRCTumorOA2,CRCTumorOA3,CRCTumorOA4,CRCTumorOB1\nNote: The variant caller is MuTect which is based on the Bayesian model of joint-allele frequencies of a tumor-normal sample pair. By framing the variant detection task as a Bayesian model of allelic frequencies, MuTect does not hold the common assumption of clonal mutations being in a pure, diploid tumor of fixed 50% allelic frequencies. The processed BAM files are used as input for the algorithm.\nPerform initial scanning for germline SNPs with the previous tumor-normal sample BAM files. The command is below:\nBy default, the pipeline uses the SAMtools mpileup program with --ignore-RG set. This allows the program to ignore the read group tag in the BAM file and treat all reads in one BAM file as one sample.\nUsers can also delete the --CfiftyOff 1 option in the Slurm script step2_samtools.slurm to allow downgrading mapping quality for reads containing excessive mismatches. This will set --adjust-MQ to be 50, as recommended by SAMtools (please refer to https://samtools.github.io/hts-specs/VCFv4.2.pdfs[href=https://samtools.github.io/hts-specs/VCFv4.2.pdfs] for more details).\ntable:files/protocols_protocol_2301_3.csv",
    "This is a preview of file [SampleName].samtools.genome.sorted.vcf generated by SAMtools, containing candidate germline SNPs in sample CRCTumorOA1. Here the first five genomic positions along Chromosome 1 of the reference genome hg38 are shown with the reference and alternate alleles, quality score, filter status and other information.\n$ perl /path/to/ith.Variant/pipeline/exome/submit_slurm.pl\n--root/path/to/CRC_singleGland_pipeline_run/root/\n--workhard/path/to/ith.Variant/pipeline/exome/step2_samtools.slurm\n--somaticInfo/path/to/CRC_singleGland_pipeline_run/somaticInfo.O\n--config/path/to/ith.Variant/confs/exome/config_hg38_wxs_ss.tsv\n--samplesOA,OB,CRCTumorOA1,CRCTumorOA2,CRCTumorOA3,CRCTumorOA4,CRCTumorOB1\nNote: Here we use SAMtools which is based on joint genotype analysis, coupling a pair of tumor and normal samples with the assumption of a diploid genome. With this assumption, the tool calculates the log-likelihood ratio of the two genotypes with a larger ratio indicating greater confidence. SAMtools detects possible germline SNPs and small INDELS (insertions and deletions) using the previously mapped BAM files. Here the primary output is the file [SampleName].samtools.genome.sorted.vcf, consisting of a table of chromosome, position, allele, quality of read, and other metadata for each candidate SNP (please refer to https://samtools.github.io/hts-specs/VCFv4.2.pdf[href=https://samtools.github.io/hts-specs/VCFv4.2.pdf] for more details). For example, see the file for sample CRCTumorOA1 (Table 3[href=https://www.wicell.org#tbl3]).\nNote: The only difference between the configuration files used in steps 8 and 9 is that the former requires its configuration file to contain a path to Java resources. Please refer to the key resources table[href=https://www.wicell.org#key-resources-table] for how to run MuTect for step 8.\nMerge candidate lists for variants across multiple tumor samples\nTiming: ∼1 h 30 min",
    "To allow variant analysis across multiple tumor samples, we need to merge the candidate calls across the samples. These raw candidate calls were generated by MuTect and SAMtools in steps 8 and 9, respectively. We use a custom algorithm for bringing multiple lists of candidate variant calls from all samples into unified tables (ASCII text) for SSNVs and germline SNPs, separately. This algorithm is coded in the following perl file mergeMut.pl (found on ith.Variant[href=https://github.com/SunPathLab/ith.Variant]). It combines all VCF files (i.e., variant calls) into one master table, containing genomic regions by samples with the table’s cells populated by delimited features. The variant annotations derived from ANNOVAR27[href=https://www.wicell.org#bib27] are incorporated in these tables as well. The merged files for SSNVs and germline SNPs can be found in the root directory.\nRun the following command to merge the candidate lists.\n--samples can be set to one sample. This sample is any one of the tumor samples listed in your file somaticInfo.O.\ntable:files/protocols_protocol_2301_4.csv\nThe output file is named mutect.snv.table.annotated, and it contains unified calls generated by MuTect and their annotations.\ntable:files/protocols_protocol_2301_5.csv\nThe output file is named samtools.snv.table.annotated, and it contains unified calls generated by SAMtools and their annotations.\n$ perl/path/to/ith.Variant/pipeline/exome/submit_slurm.pl\n--root/path/to/CRC_singleGland_pipeline_run/root/\n--workhard/path/to/ith.Variant/pipeline/exome/step3_mergeCalls.slurm\n--somaticInfo/path/to/CRC_singleGland_pipeline_run/somaticInfo.O\n--config/path/to/ith.Variant/confs/exome/config_hg38_wxs_ss.tsv\n--samples OA\nNote: The output files can be found in the parent directory. Previews of both merged candidate SSNV and germline SNPS are shown (Tables 4[href=https://www.wicell.org#tbl4] and 5[href=https://www.wicell.org#tbl5], respectively).\nExtract the mapping features of the candidate calls\nTiming:  < 30 min (for steps 11 and 12, individually)",
    "After collecting the candidate SSNV and germline SNPs into two separate lists, this step will extract the mapping features surrounding each candidate variant along the sample genomes. This is performed by checking the sorted BAM file for the sample. The feature extraction will be performed on all samples including normal samples, generating files with the suffix “rechecked” (Figure 4[href=https://www.wicell.org#fig4]). This will prepare a feature table of the candidate SSNVs and SNPs for each sample, which will be placed under the 04_SNV folder. These mapping features will be used for the variant filtration and final variant calling.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2301-Fig4.jpg\nFigure 4. Generated merged tumor samples and extracted mapping features\nThe files with suffix “rechecked” for CRCTumorOA1, containing the mapping features from SSNV and SNP candidate calls, respectively. The output is in the 04_SNV directory.\nExtract the mapping features for the candidate SSNVs. The Slurm script indicated by the parameter --workhard reflects the name of the MuTect algorithm that had generated the calls.\n$ perl /path/to/ith.Variant/pipeline/exome/submit_slurm.pl\n--root/path/to/CRC_singleGland_pipeline_run/root/\n--workhard/path/to/ith.Variant/pipeline/exome/step4_extractFeatures_muTect.slurm\n--somaticInfo/path/to/CRC_singleGland_pipeline_run/somaticInfo.O\n--config/path/to/ith.Variant/confs/exome/config_hg38_wxs_ss.tsv\n--samplesOA,OB,CRCTumorOA1,CRCTumorOA2,CRCTumorOA3,CRCTumorOA4,CRCTumorOB1,ON,ONs\nNote: The SSNV features for sample CRCTumorOA1 are shown (Table 6[href=https://www.wicell.org#tbl6]).\nExtract the mapping features for the candidate germline SNPs. The Slurm script indicated by the parameter --workhard includes the name SAMtools.\ntable:files/protocols_protocol_2301_6.csv\ntable:files/protocols_protocol_2301_7.csv\n$ perl /path/to/ith.Variant/pipeline/exome/submit_slurm.pl\n--root/path/to/CRC_singleGland_pipeline_run/root/\n--workhard/path/to/ith.Variant/pipeline/exome/step5_extractFeatures_samtools.slurm\n--somaticInfo/path/to/CRC_singleGland_pipeline_run/somaticInfo.O\n--config/path/to/ith.Variant/confs/exome/config_hg38_wxs_ss.tsv\n--samplesOA,OB,CRCTumorOA1,CRCTumorOA2,CRCTumorOA3,CRCTumorOA4,CRCTumorOB1,ON,ONs\nNote: The germline SNP features for sample CRCTumorOA1 are shown (Table 7[href=https://www.wicell.org#tbl7]).\nPerform the final variant calling for SSNVs and SNPs\nTiming: minutes\nUsing the merged calls and extracted mapping features, ith.Variant performs the final calling of SSNVs and SNPs across the samples.\nGenerate the file gloh_x.tsv of the complete set of homozygous SNPs on the X chromosome. Run the following command to create the file.\n$ perl /path/to/ith.Variant/bin/gloh_x.pl\n/path/to/CRC_singleGland_pipeline_run/somaticInfo.O\n/path/to/CRC_singleGland_pipeline_run/gloh_x.tsv",
    "Note: This step is necessary when there is no heterozygous chromosome in the case of analyzing a tumor sample from a male patient (such as Patient O). The file is shown (Table 8[href=https://www.wicell.org#tbl8]).\nImplement the final point mutation calling. Run the following command to create the final list of SSNVs and SNPs.\ntable:files/protocols_protocol_2301_8.csv\nHere is the prerequisite table of germline heterozygous SNPs for sample CRCTumorOA1. This was generated in tandem with the final SSNV and germline SNP calling in step 14 and is used in the final SCNA calling.\ntable:files/protocols_protocol_2301_9.csv\nHere is the generated mutect.snv.res.filtered.classified.founds.nopara.somatic.table.simplified file under the parent directory. This is a table of the final SSNV calls.\ntable:files/protocols_protocol_2301_10.csv\nHere is the generated samtools.snv.res.filtered.nopara file under the parent directory. This is a table of the final post-filtration SNP calls also used to generate the prerequisite files for the tool TitanCNA under the directory titan.\nPass the gloh_x.tsv file as the argument --xloh.\n$ perl /path/to/ith.Variant/pipeline/exome/submit_slurm.pl\n--root/path/to/CRC_singleGland_pipeline_run/root/\n--workhard/path/to/ith.Variant/pipeline/exome/step6_varSummary.slurm\n--somaticInfo/path/to/CRC_singleGland_pipeline_run/somaticInfo.O\n--config/path/to/ith.Variant/confs/exome/config_hg38_wxs_ss.tsv\n--samples OA\n--xloh/path/to/CRC_singleGland_pipeline_run/gloh_x.tsv\nNote: The table of final SSNV and SNP calls will be placed under the user’s parent directory as MuTect and SAMtools, respectively. The latter will be simultaneously used to generate the directory titan, which will contain prerequisite files for the next step involving the algorithm TitanCNA. The final SSNV and final germline SNP mutations are shown (Tables 9[href=https://www.wicell.org#tbl9] and 10[href=https://www.wicell.org#tbl10], respectively).\nPerform the final variant calling for SCNAs\nTiming: ∼ 30 min",
    "After generating the final list of point mutations, the user performs the final step of calling the SCNAs. We apply the variant caller TitanCNA, a two-factor-HMM-based approach to jointly infer the genomic sequences of segmental copy number alteration (CNA) and loss of heterozygosity (LOH) events as well as their clonality.14[href=https://www.wicell.org#bib14] By leveraging an HMM, the approach retains the spatial relationship underlying segmental CNAs of contiguous SNPs along the chromosome. The hidden states are the genotype and clonal membership of CNA and LOH events with the related observable data being the log ratio of tumor-normal read depths and tumor allelic counts. By assuming a mixed population of cells (normal, tumor, and tumor with the CNA or LOH event) in a sample, the method can identify major subclonal SCNAs and improve sensitivity against other existing methods. There are two generated plots of the read-depth ratio of tumor to normal on a normalized logarithmic scale (Log R) and the B-allele frequency (BAF) across the genome, as well as clustering of the copy number states using the two measurements.\nGenerate wiggle or depth of coverage files for the matched tumor and normal samples to perform the SCNA calling. The output is found in the directory 03_STATS and has the suffix “wig” (Figures 5[href=https://www.wicell.org#fig5]A and 5B, respectively).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2301-Fig5.jpg\nFigure 5. Prerequisites and final calling for somatic and germline variants\n(A) The list of directories under each sample, containing mapped reads, coverage files, and final variant calls.\n(B) The contents of the newly made 03_STATS directory include the CRCTumorOA1.wig which is the depth of coverage file for CRCTumorOA1 to be used in the subsequent SCNA calling for the sample (right panel).",
    "Include the normal samples under the parameter --samples to produce the depth of coverage files for both tumor and normal samples, which are required by TitanCNA.\n$ perl/path/to/ith.Variant/pipeline/exome/submit_slurm.pl --root\n/path/to/CRC_singleGland_pipeline_run/root/\n--workhard/path/to/ith.Variant/pipeline/exome/step2_stats.slurm\n--somaticInfo/path/to/CRC_singleGland_pipeline_run/somaticInfo.O\n--config/path/to/ith.Variant/confs/exome/config_hg38_wxs_ss.tsv\n--samplesOA,OB,CRCTumorOA1,CRCTumorOA4,CRCTumorOB1,ON\nOptional: If WGS samples were sequenced using different exome targeted sequencing kits from each other, we require the parameter --config be set to the appropriate configuration file which points to the correct target BED file. Here samples CRCTumorOA2, CRCTumorOA3 and ONs require the appropriate change. The command to generate the coverage file for these samples is below.\n$ perl/path/to/ith.Variant/pipeline/exome/submit_slurm.pl\n--root/path/to/CRC_singleGland_pipeline_run/root/\n--workhard/path/to/ith.Variant/pipeline/exome/step2_stats.slurm\n--somaticInfo/path/to/CRC_singleGland_pipeline_run/somaticInfo.O\n--config/path/to/ith.Variant/confs/exome/config_hg38_wxs_nrce.tsv\n--samples CRCTumorOA2,CRCTumorOA3,ONs\nImplement the final calling. Run the following command to create the final list of SCNAs.\nTroubleshooting 3[href=https://www.wicell.org#sec6.5].\nTroubleshooting 4[href=https://www.wicell.org#sec6.7].\n$ perl /path/to/ith.Variant/pipeline/exome/submit_slurm.pl\n--root/path/to/CRC_singleGland_pipeline_run/root/\n--workhard/path/to/ith.Variant/pipeline/exome/step7_CNA.slurm\n--somaticInfo/path/to/CRC_singleGland_pipeline_run/somaticInfo.O\n--config/path/to/ith.Variant/confs/exome/config_hg38_wxs_ss.tsv\n--samplesOA,OB,CRCTumorOA1,CRCTumorOA4,CRCTumorOB1\nNote: TitanCNA requires input of the full set of germline heterozygous SNP loci identified from the normal sample and the corresponding read depth and allele ratios at these SNP positions from the tumor. Upon completion, the step will generate SCNA calls for one clone and two-subclones solutions (i.e., allowing for up to two subclone fitting of the data) in the form of tabular text files (Tables 11[href=https://www.wicell.org#tbl11] and 12[href=https://www.wicell.org#tbl12]) and graphical representations of the Log R and BAF across the genome (Figure 6[href=https://www.wicell.org#fig6]A, upper and lower panels, respectively), as well as their correlation with each other (Figure 6[href=https://www.wicell.org#fig6]B).\nOptional: Here the corresponding configuration file containing the appropriate target BED file is used as the argument --config to process the rest of the tumor samples. The command that passes this argument is below.\n$ perl /home/ruping/maese004/ith.Variant/pipeline/exome/submit_slurm.pl\n--root/home/ruping/maese004/CRC_singleGland_pipeline_run/root/\n--workhard/home/ruping/maese004/ith.Variant/pipeline/exome/step7_CNA.slurm\n--somaticInfo/home/ruping/maese004/CRC_singleGland_pipeline_run/somaticInfo.O\n--config/home/ruping/maese004/ith.Variant/confs/exome/config_hg38_wxs_nrce.tsv\n--samples CRCTumorOA2,CRCTumorOA3\ntable:files/protocols_protocol_2301_11.csv",
    "Here is a preview of the generated CRCTumorOA1_nclones1.TitanCNA.corrIntCNseg.txt file. It consists of the segmented genome of sample CRCTumorOA1 based on using the original TitanCNA settings for maximum integer copy number. The original value is 8, assuming the normal genome is diploid. Shown are the chromosomal and genomic coordinates for regions along with copy number state and metrics like median Log R value.\ntable:files/protocols_protocol_2301_12.csv\nHere is a preview of the generated CRCTumorOA1_nclones1.TitanCNA.segments.txt file. It consists of the segmented genome of sample CRCTumorOA1 based on using the corrected settings for maximum integer copy number. It allows estimation of copy number for extremely high gains. Here the corrected integer copy number is set to 14, assuming the genome is haploid with regards to Chromosomes X and Y. Therefore, there are some regions that require correction of chromosomal state.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2301-Fig6.jpg\nFigure 6. Chromosomal events and analysis of the final copy number calls for sample CRCTumorOA1",
    "(A) Plot of log read ratio (upper panel) and allelic ratio (lower panel) for sample CRCTumorOA1. The integer copy number (upper panel) for each genomic region is derived from the normalized log-base-2 of tumor and normal read depths. Here both copy number gains (log ratio greater than 1 in the upper panel) and losses (imbalanced BAF in the lower panel) are rampant. The allelic fraction (lower panel) is the proportion of reads matching the reference genome. Among the observable duplicated regions, Chromosomes 1 and 2 as well as 5, 6, 7 and 8 show evidence of gains on both alleles, retaining a heterozygous allelic copy number profile of 4:2. There is a suspected LOH event at Chromosomes 12 and 15 as the normal copy number is coupled with an uneven allelic fraction. Based on model selection by TitanCNA, the estimates for normal contamination (normC), average tumor ploidy (pl) and clonal cellular prevalence (cellularity) are shown.\n(B) Mapping of allelic ratio to copy number profile across the genome for sample CRCTumorOA1. We set the baseline prior (i.e., log ratio of 0) according to the model complexity in explaining the log read ratio and BAF of individual SNPs. For example, on Chromosome 3, if we set the baseline to the log ratio shown, it will lead to an introduction of a subclone to explain the partial allelic imbalance of the chromosome. Similarly, on Chromosome 14, if we set the baseline to a log ratio of 0.25, it is impossible to explain the chromosome’s heterozygous state. Thus we establish a baseline of 0, reflecting a copy number profile of 2 that is holistically reasonable across chromosomes such as the adjacent Chromosome 15 which we can infer has a copy neutral loss of heterozygosity event."
  ],
  "subjectAreas": [
    "Genomics",
    "Bioinformatics",
    "Health Sciences",
    "Cancer",
    "Sequencing"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}