{
  "id": 4620,
  "origin_website": "Bio",
  "title": "Whole Genome Bisulfite Sequencing and DNA Methylation Analysis from Plant Tissue",
  "procedures": [
    "Note: For all the scripts used in the Procedure, please download here[href=https://os.bio-protocol.org/attached/file/20220818/Pignatta scripts GB.zip].  Quality control of sequenced readsCopy sequencing reads to desired location on local computer or server. Unzip and untar sequence files if needed.gunzip file_name.txt.tar.gztar xvfp file_name.txt.tarRun quality control of sequencing reads with fastqc (http://hannonlab.cshl.edu/fastx_toolkit/).Usage: fastqc file_name.txtExamine the fastqc report to determine if/how to filter and/or trim reads. Discard adapters and low quality reads (less than 75% quality scores above 25) if necessary.Usage: fastq_quality_filter –q25 –p 75 –i file_name. txt –o file_name_trimmed.fastqRe-run quality control to check final quality of the reads.Usage: fastqc file_name_trimmed.fastqAlign bisulfite reads with BismarkAlign the reads to the reference genome of your choice using Bismark (Krueger and Andrews, 2011).We strongly encourage the reader to consult the review written by the authors of Bismark (http://www.ncbi.nlm.nih.gov/pubmed/22290186[href=http://www.ncbi.nlm.nih.gov/pubmed/22290186]) before starting the data analysis. Here, we describe alignment of single end reads, but alignment of paired end reads is also possible.Prepare bisulfite-treated genome for future mapping (only needs to be done once).Usage: bismark_genome_preparation --path_to_bowtie reference_genome/fasta/Map BS-reads to converted genome (map forward and reverse reads separately).Usage: bismark --non_directional -o bismark_file_name_trimmed.n1l50 -n 1 -l 50 reference_genome file_name.trimmed.fastqOptions are as follows:-non_directional: reads are not strand-specific (a strand-specific option is also available)-o output directory-n max number of mismatches-l length of seed (first number of nt that are mapped with <n mismatches)*fastq: short reads in fastq formatFrom this point onwards the analysis follows different steps based on the genotype of the sample used to prepare the library. Option #1: Libraries from a single inbred strainConvert Bismark aligned reads from SAM to BAM, sort, and indexcd bismark_file_name_trimmed.n1l50 Usage: SAM_to_BAM_sort_index.pl file_name.fastq_bismark.samExpected output file: file_name.fastq_bismark.sorted.bamConvert sorted BAM file to SAM formatUsage: samtools view -h file_name.fastq_bismark.sorted.bam > file_name_sorted.sam Samtools (Li et al.",
    ", 2009)Eliminate redundant readsUsing a sorted SAM file, keep only one sequence per strand that maps to the same start and end position. This eliminates PCR duplicates. A log file (SAM_redundancy_stats.log.txt) of counts for each read is created.Usage: ./make_sorted_SAM_non-redundant_fewest_MM.pl file_name_sorted.sam > file_name_sorted_nr.samThis is how it works:The script reads a sorted SAM file and gets all the reads that map to the same position and strand and thenSorts them by decreasing prevalence and then by increasing number of mismatches (not counting bisulfite conversions) to the genome.The most prevalent read with the total highest quality string is kept. In the case of a tie, the read with the fewest number of mismatches is retained.In the case of another tie, it prints out every unique read.The output SAM file also has 3 new fields added on the end:CT == count = number of times this read was found in the input fileMM == mismatches = number of mismatches compared to the genome sequence (not counting conversions)QS == quality score = total quality score for this readCalculate a methylation value for each cytosineRun Bismark’s supplementary script “bismark_methylation_extractor” on sorted SAM files.Usage: bismark_methylation_extractor –s file_name_sorted_nr.",
    "sam -o bismark_outputThis script creates 12 output files with methylation status of each C in three different contexts (CpG, CHG, CHH) with 4 mappings:OT - original top strand CTOT - complementary to original top strand OB - original bottom strand CTOB - complementary to original bottom strandShorthand for methylation call according to context:z: unmethylated C in CpG context Z: methylated C in CpG context x: unmethylated C in CHG context X: methylated C in CHG context h: unmethylated C in CHH context H: methylated C in CHH context Calculate bisulfite conversion efficiencyThe mean bisulfite conversion rate for each library is calculated based on the methylation status of each cytosine from reads mapping to the chloroplast genome, which is expected to be unmethylated. Run Usage: ./methylation_summarizer_1.pl bismark_output > bismark_SampleName.summary_step1.txtGet info about methylation status of each nucleotide from each read mapping to the chloroplast.Usage: grep ChrC bismark_*_trim3.n1l50.summary_step_1.txt > bismark_*_trim3.n1l50.summary_step_1.chloroplast.txt./methylation_summarizer_2_conversion.plbismark_*_trim3.n1l50.summary_step_1.chloroplast.txt >bismark_*_trim3.n1l50.conversion.txtThe output file contains the conversion at each position, and the mean C conversion across the chloroplast is printed to the screen.Option #2: Libraries from F1 crosses Map reads from hybrid librariesIn the case of F1 hybrid libraries, two parental genomes may be available as reference. You may decide to map reads to both the parental genomes to maximize the number of mapped reads using Bismark as described above. To do that, first map all the reads to the best reference genome, then align the “unmapped” reads to the other genome. Make file of unmapped reads from the fastq file (e.g., reads not in SAM file).Usage: ./get_fastq_reads_not_in_SAM.pl fastqFile samFile > reads.unmapped.fastqTo assign reads to a particular strain and to retain as many unique reads as possible, separate the reads by strand.Script: split_bismark_SAM_by_read_strand.plUsage: split_bismark_SAM_by_read_strand.pl file_name_bismark.",
    "samClassify reads by parent-of-origin (allele specific DNA methylation analysis)Classify the forward reads according to their parent-of-origin with a bedfile where the C>T SNPs between the two genomes of interest are ignored but all other SNPs are retained, and classify the reverse reads with a bedfile where the G>A SNPs between the two genomes of interest are ignored but all other SNPs are retained. There is only one bedfile, but read strand has to be specified (pos or neg). Script: split_bismark_SAM_by_read_strand.pl Usage: split_bismark_SAM_by_read_strand.pl file_name_bismark.samExpected output files: file_name_bismark.pos.sam, file_name_bismark.neg.samScript: classify_bismark_reads_by_parent.one_strand.pl Usage: classify_bismark_reads_by_parent.one_strand.pl file_name_bismark.pos.sam SNPs.bed pos > file_name_bismark.pos_class.sam\"Usage: classify_bismark_reads_by_parent.one_strand.pl file_name_bismark.neg.sam SNPs.bed neg > file_name_bismark.neg_class.sam\"Reads are classified based on their sequence at known SNP positions. After classification, redundant reads from each class are eliminated. To differentiate between 4 cases: ST:Z: maternalST:Z: paternalST:Z: NE means no evidence for either genomeST:Z: both means evidence for both (conflicting data)awk -F\"\\t\" '$19 == \"ST:Z: maternal \" {print $0}' file_name_bismark.pos_class.sam > maternal.samawk -F\"\\t\" '$19 == \"ST:Z: paternal \" {print $0}' file_name_bismark.pos_class.sam > paternal.samawk -F\"\\t\" '$19 == \"ST:Z:NE\" {print $0}' file_name_bismark.pos_class.sam > NE.samawk -F\"\\t\" '$19 == \"ST:Z:both\" {print $0}' file_name_bismark.pos_class.sam > both.samRun similar commands with file_name_bismark.neg_class.samCombine the SAM filesExample: cat file_name_neg.sam file_name_pos.sam > file_name_pos_neg.samYou may delete the individual pos and neg files after checking the size of the combined files.Prefix the header to the sam filecat header file_name_pos_neg.sam > file_name_pos_neg.header.samConvert SAM to BAM, sort, and indexSAM_to_BAM_sort_index.pl file_name_pos_neg.header.samExpected outputfile: file_name_pos_neg.sorted.bamConvert sorted BAM file to SAM formatsamtools view -h file_name_pos_neg.sorted.bam > file_name_pos_neg.sorted.samEliminate redundant reads (see step 5)Script: make_sorted_SAM_non-redundant_fewest_MM.plUsage: make_sorted_SAM_non-redundant_fewest_MM.pl file_name_pos_neg.sorted.sam > file_name_pos_neg.sorted_nr.samCalculate a methylation value for each cytosine (see step 6)Run methylation extractor for each set of classified reads as well as for all reads combined. Usage: methylation_extractor -s file_name_pos_neg.sorted_nr.samCombine all the nr.sam files into an “allreads_nr.sam” file with cat command and run methylation_extractor again.",
    "Summarize the methylation status across genomic windowsFor each class, organize the 12 methylation extractor files in the output files folder. Divide the genome into 300 nt (windowWidth) windows, overlapping by 100 nt (windowOverlap). Script: make_genome_windows_bed.pl (requiring a file of each chromosome and its length) Usage: make_genome_windows_bed.pl chromInfo.txt windowWidth windowOverlap > genome_300nt_100_windows.bedScript: Summarize_by_window.shUsage: bash Summarize_by_window.sh methylation_outputfiles genome_300nt_100_windows.bedSummarize_by_window.sh features: This script summarizes methylation status across overlapping genomic windows of defined size by converting the processed Bismark methylation extractor output files into a set of bed files and determining weighted methylation values as described in Schultz et al. (2012). Bedgraph files for viewing in a genome browser are created in the bedgraph folder. Bismark's methylation extractor output by chr position (after sorting) is summarized by converting the methylation string into ummethylated counts, methylated counts, and percent methylation, producing output in BED-like format (scorePerPos folder). The folder weighted_summaries_by_window has three bed files, which merge sites across each window. For each window it provides counts and weighted percent methylation.Identify differentially methylated regions (DMRs)At least 5-read coverage at each site is required. Differential methylation is assayed by calculating the difference between samples (sample A-sample B of weighted methylation fractions), and confidence (p-value from Fisher's exact test) for each window in all sequence contexts is assigned. P values are corrected with the Benjamini and Hochberg False Discovery Rate (FDR). CG and CHG DMRs were defined as regions with a minimum overlap of 3 informative Cs between windows and, for example, a weighted methylation difference of at least 35 and a corrected p value < 0.01. CHH DMRs were defined as windows with a minimum 10 overlapping informative cytosines and, for example, a weighted methylation difference of at least 10 and a p value < 0.01. The user can use their own criteria for defining DMRs.",
    "To compare mC window counts in two samples the following scripts are needed:merge_bedgraph_data_counts_etc.plcompare_methylation_counts_by_window.RMake matrix of counts for 2 samples, each in 2 contexts using files in the 'weighted_summaries_by_window' folders.Example:./merge_bedgraph_data_counts_etc.pl genome_300nt_100_windows.bed sample_A_reads/weighted_summaries_by_window/CpG.bed sample_B_reads/weighted_summaries_by_window/CpG.bed sample_A_reads/weighted_summaries_by_window/CHG.bed sample_B_reads/weighted_summaries_by_window/CHG.bed sample_A_reads/weighted_summaries_by_window/CHH.bed sample_B_reads/weighted_summaries_by_window/CHH.bed > sample_A_vs_sample_B_reads.300nt_100_windows.txtThe resulting file should have window counts in this order:sample_A/weighted_summaries_by_window/CpG.bedsample_B/weighted_summaries_by_window/CpG.bedsample_A/weighted_summaries_by_window/CHG.bedsample_B/weighted_summaries_by_window/CHG.bedsample_A/weighted_summaries_by_window/CHH.bedsample_B/weighted_summaries_by_window/CHH.bedCompare counts across two samples in the same context.compare_methylation_counts_by_window.R inputCountsFile outputStatsFileUsage:compare_methylation_counts_by_window.R sample_A_vs_sample_B_reads.300nt_100_windows.txtsample_A_vs_sample_B_reads.300nt_100_windows.stats.txt\"For each window, the output file will have (a) the raw Fisher's exact test p-value reflecting whether the fraction of meth/unmeth counts is the same for both samples, and (b) the difference (sample A-sample B) in weighted methylation fraction. Methylation fractions appear next to the results of each statistical calculation.Overlap genomic features (genes, transposable elements, etc.) with the windowsOpen the stats file in Excel and sort based on p value.Copy the rows representing selected DMRs [(with a FDR below your threshold (0.01) and with a methylation difference above your threshold (e.g. 35%)] into another file and delete all but the desired 5 columns (chr, start, end, difference, FDR value).Save the file with the extension “bed” and intersect with genomic features using Bedtools (Quinlan and Hall, 2010). Run:bedtools intersect -wao -a sample_A_vs_sample_B.CpG.bed -b genome_GFF3_genes.gff > intersect_ sample_A_vs_sample_B_genes.txtbedtools intersect -wao -a sample_A_vs_sample_B.CpG.bed –b genome_GFF3_transposable_element.gff > intersect_ sample_A_vs_sample_B.CpG.bed _TE.txt"
  ],
  "subjectAreas": [
    "Molecular Biology",
    "Plant Science",
    "Systems Biology"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics"
  ]
}