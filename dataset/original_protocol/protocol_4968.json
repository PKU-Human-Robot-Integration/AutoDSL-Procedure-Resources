{
  "id": 5284,
  "origin_website": "Bio",
  "title": "Protocol for Molecular Dynamics Simulations of Proteins",
  "procedures": [
    "A schematic representation of the workflow is shown in Figure 1. The key steps along with Gromacs commands are explained below.imgsrc:https://en-cdn.bio-protocol.org/attached/image/20161128/20161128221052_2239.jpgFigure 1. Steps to perform MD simulations in general (Gajula et al., 2007; 2008; 2013; 2015; Abé et al., 2011)Obtain the protein coordinates The basic ingredient to start MD simulations is a protein structure coordinate file in PDB format that can be downloaded from RCSB website (http://www.rcsb.org/pdb/home/home.do[href=http://www.rcsb.org/pdb/home/home.do]). RasMol tool is used for visual inspection of the protein structure and also for graphics rendering. Gedit tool is used to open and edit the text files.Note: The Protein Databank (http://www.pdb.org/[href=http://www.pdb.org/]) contains thousands of high resolution protein structures that are derived by X-ray/neutron scattering and NMR methods. When the protein structure of our interest is not available, a homology model as an initial starting structure may be built by a variety of software tools like Modeller, iTassar, Discovery Studio, Pepbuild web server etc. However, once the PDB is available and downloaded, it is necessary to pre-format it depending on the presence of ligands or water molecules in the structure. It occurs that ligand coordinates are present in the PDB file and the GROMACS software doesn’t recognize the ligand. In this case, ligand chemistry needs to be explicitly defined by extracting the coordinates of the ligand and separated from main PDB file. A separated topology is constructed manually for the ligand and the information is added in the main topology file. It is also advised to remove external water molecules that are present in the PDB file.For this study, we have prepared a protein coordinate file named ‘protein.pdb’. And, every MD simulations software follows their specific format to handle the files. First, the PDB file is converted into a GROMACS specific molecular geometry file format (.",
    "GRO) by using the pdb2gmx command as shown below. The <.GRO> file contains the molecular structure coordinates with continuous atom numbering. Moreover, pdb2gmx command also generates a very important file called topology with ‘.top’ extension. The topology file contains the molecular description such as molecular parameters, bonding, force field and charges etc. It is noticeable that the pdb2gmx program adds the missing hydrogen atoms in the structure by default.pdb2gmx -f protein.pdb -p protein.top -o protein.growhere, -f flag reads the pdb file, -p flag is used for output of the topology file, -o flag is used to write into the Gromacs coordinate format.Note: The pdb2gmx prompts you to select an appropriate force field for the simulations. For example, in Gromacs v 5.1, a force field ‘ffG53A7’ is recommended for the simulations of proteins with explicit solvent.Periodic Boundary Conditions (PBC): Setup the box for simulationsPeriodic Boundary Conditions were applied for the protein to be simulated to keep track of the motion of all particles and to avoid/minimize the edge effect on the surface atoms. For this purpose, a box (supercell) is defined, and that supercell is surrounded by infinitely replicated, periodic images of itself (Li, 2005). Therefore a surface particle may interact not only with particles in the same supercell but also with particles in adjacent image supercells (Li, 2005).The command to generate a cubic box around the protein with a box edge of approximately 14A° from the proteins periphery is:editconf -f  protein.gro -o protein_editconf.gro -bt cubic -d 1.4 –cThe -c flag keeps the protein in the center of the box. The default measurement units are represented in nanometers. There are also other box types available, e.g., Triclinic, dodecahedron, rhombic dodecahedron and octahedron.",
    "While cubic is a rectangular box with all sides equal, whereas dodecahedron represents a rhombic dodecahedron, a truncated version of octahedron. Note: An ideal value for the distance is at least 1.0Å or more for most systems.Solvate the boxTo mimic the physiological environment for a protein, the simulation system (box around the protein) need to be solvated. This step is not necessary for simulations in vacuum. However, it is an essential step for the simulations of protein both in water and/or membrane. To solvate the protein, the ‘solvate’ command needs to be used. The ‘solvate’ command adds the required number of water molecules around the protein based upon the dimensions/box type that is specified in ‘editconf’ of step 2 above.gmx solvate -cpprotein_editconf.gro  -p protein.top  -o protein _water.groNote: The topology (.top) file is updated and now it contains the topology of water molecules in addition to protein topology.It is necessary to neutralize the system prior to simulations. For that it is necessary to add counter ions according to the total charge of the system by using ‘genion’ command. Prior to use ‘genion’ command, a gromacs pre-processor file has to be generated which contains the atomic description + topology of the molecule being studied.PreprocessingThe preprocessing in Gromacs is done by using ‘grompp’ command that is used to collect parameters, topology, and coordinates into a single run input file for next step, e.g., protein_b4em.tpr as shown below. It is in binary format. Once the .tpr file is generated, it is possible that the simulation can be run from any computer/cluster.grompp -f em.mdp -c protein_water -p protein.top -o protein_b4em.tprwhere,-f flag requires a parameter file, usually denoted as ‘.mdp’ file that can be obtained from Gromacs website (http://manual.gromacs.org/online/mdp.html[href=http://manual.gromacs.org/online/mdp.html]). The generated .tpr file then passed into ‘genion’ command as shown below:genion -s protein_b4em.tpr -o protein_genion.",
    "gro -nn 3 -nq -1 -n index.ndxHere,The flag -s is used to input the pre-processed file generated by ‘grompp’, -o flag is to output after neutralizing the system, -nn for number of counter ions to be added, -nq for the charge of the ion (in case of positive ions -np 1 should be used). For example, in the case the system has a net charge of + 3.00. Therefore, it is needed to add three chloride ions to neutralize the overall charge. The index.ndx can be used to merge the groups and to setup up coupling groups, let’s say ‘Protein and Ligand’ as one group.Energy minimizationIn general, energy minimization is commonly used to refine low-resolution experimental structures and to remove steric hindrance that may be caused due to added hydrogen atoms. Gromacs supports different minimization algorithms: the most commonly used are steepest descent and conjugate gradient. The steepest descent algorithm is the quickest in removing the largest strains in the system but converges slowly when close to a minimum.The ‘grompp’ command processes and prepares the input file necessary for energy minimization run.grompp -f em -c protein_genion.gro -p protein.top  -o protein_em.tprOnce, the .tpr file is ready, submit the job for energy minimization by following command:mdrun -s protein_em.tpr -e minim_ener.edr -o protein_em.trr -c protein_b4md.groHere the mdrun command is used to perform energy minimization. Mdrun reads the input file with -s flag and generates four output files after successful execution. The energy file (.edr) contains state variables temperature, pressure, etc., and much more information that can be used for further analysis of simulation data. The trajectory file is generated by specifying ‘-o’, flag and it contains coordinates and velocities. The structure file (-c) contains the final coordinates and velocities of the last step of MD simulations. A ‘.",
    "log’ file is generated by default. It is to be noted that the same mdrun command is used to perform final molecular dynamics simulations as well. However, the input parameter (.mdp) file needs to be edited accordingly.Note: There is another step called ‘position restraining’ before we go for final MD setup. The process is the same as in step 5. This is required to allow the water molecules to adjust with the protein system. Here we restrict the positions of protein atoms and allow the water molecules to flow. Position restraint run is not necessary for simulations in vacuo. The output of this is then passed into the ‘mdrun’ command, which actually performs the simulation.MD simulationsNow we enter into the final phase of MD simulations. The parameter file (md.mdp) needs to be adjusted accordingly. The difference between position restraint run/equilibration and production run is minimal: For production run, the position restraints and pressure coupling are turned off and simulations are carried significantly longer, say 1ns to 1ms depends on the research question and availability of resources. grompp -f md.mdp -c protein_b4md.gro -p protein -o protein _md.tprmdrun -nice 4 -s protein _md.tpr -o protein _md.trr -g md_log.log -e ener_protein _md.tpr   -c protein _aft_md–vHere ‘-v’ displays the live flow of execution on your monitor. After completing a simulation with ‘mdrun’, four output files are generated same as in earlier case; these are a trajectory file (.trr) and an energy file (.edr), structure file(.gro) and log (.log) file. These files can be used for further analysis. However, it is necessary to relax the system first before making the production run.Note: A most common issue with MD simulations run is abnormal termination of the job. The end user may tend to repeat the whole procedure.",
    "However, if the termination is due to power failure or queue limits etc., then the run can be continued from where it has stopped by using a command called ‘tpbconv’. Moreover, the same command can be used to extend the simulations further for more time period. The usage of tpbconv is similar to ‘grompp’. Instead of grompp, use ‘tpbconv’ command to produce input file required for mdrun. It is required to have the last checkpoint file ‘.cpt’ in order to extend the run.tpbconv -s previous_md.tpr -extend (new time to be extended) -o new.tprThe command flags are same as in steps above. Now, issue the final mdrun command as shown below:mdrun -s new.tpr -cpiprevious_run.cpt -o protein_new_md.trr -g new_md_log.log-enew_ener -c protein _new_md–vIn general the final mdrun is performed on computer cluster or super computer. The remote servers can be connected via ssh clients like putty from windows desktop machines and the file transfers can be performed by using WinSCP tool."
  ],
  "subjectAreas": [
    "Biochemistry",
    "Systems Biology"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics"
  ]
}