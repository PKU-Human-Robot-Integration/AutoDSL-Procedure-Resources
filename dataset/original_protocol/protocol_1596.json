{
  "id": 1702,
  "origin_website": "Cell",
  "title": "Identifying tumorigenic non-coding mutations through altered cis-regulation",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nEvaluate gene-level ASE and identify somatic mutations\nTiming: [1-h hands-on; computational time scales with sample number and resources]\nOutline of workflow for the major Driver-ASE scripts:\nUse 0_Download_SNPArray_Table_From_GDC.pl to download the annotation table without the genotyping SNP array data.\nDownload the SNP array table using the commands below, specify the cancer types to download with ‘-c’ (e.g., BRCA, OV, PRAD), and the data type with ‘-a’ (either “Genotypes” or “Copy number estimate”).\nUse the shell script ‘0_Download_ALL_SNPArray_Table_From_GDC.sh’, to download SNPArray sample information for all GDC legacy cancer types. Download by wrapping the following commands. See ‘potential problem 3[href=https://www.wicell.org#sec5.5]’ to resolve download issues.\n> cd /Driver-ASE/Driver_ASE_Lib/Driver_ASE_Scripts\n#download sample information of BRCA SNPArrays from GDC\n#run it in docker image or conda drivease environment\n> ./0_Download_SNPArray_Table_From_GDC.pl \\\n> -c BRCA -a Genotypes\n# Displays GDC sample IDs as well as corresponding GDC\n# uuids for downloaded SNPArrays\n>\nhead ../../Analysis/BRCA/BRCA_tables/BRCA.Genotypes.id2uui\nd.txt\n#download sample information of BRCA copy number estimate\nfrom GDC\n> ./0_Download_SNPArray_Table_From_GDC.pl \\\n> -c BRCA -a \"Copy number estimate\"\n# Displays GDC sample IDs and corresponding GDC uuids for\n# downloaded Copy Number Estimates\n> head ../../Analysis/BRCA/BRCA_tables/BRCA.Copy\\ number\\\nestimate.id2uuid.txt\nDownload SNP-Array Genotyping or “Copy number estimate” using 0_Download_SNPArray_From_GDC.pl\nRun the script by specifying the cancer type ‘-c’, the data type ‘-a’ (either “Genotypes” or “Copy number estimate”), the full path to the GDC key ‘-k’ and the use of downloading software curl or aria2c using ‘-d’.\nThe script downloads and generates GDC tables if it cannot locate preexisting tables of targeted samples. If tables already exist, the script will begin downloading the files.",
    "Note: The path to the GDC downloading key must also be specified with ‘-k’ if it is moved from the default path of (‘/Driver-ASE/Database/gdc.key’). See ‘potential problem 4[href=https://www.wicell.org#sec5.7]’ to resolve GDC authentication errors.\n#download raw SNPArray data from GDC\n> ./0_Download_SNPArray_From_GDC.pl \\\n> -c BRCA -a Genotypes \\\n> -k /Driver-ASE/Database/gdc.key -d curl\n#download raw SNPArray copy number estimates from GDC\n> ./0_Download_SNPArray_From_GDC.pl \\\n> -c BRCA -a \"Copy number estimate\" \\\n> -k /Driver-ASE/Database/gdc.key -d curl\nPrepares the SNP-Array genotype annotation data for imputation using 1.0_Prep_SNPs_for_Imputation_and_Plink.pl\nUnzip ‘GenomeWideSNP_6.na35.annot.csv.zip’ from the Database directory into a new directory called ‘affy6’.\nRun the script, specifying the cancer type with the parameter ‘-c’ as illustrated below:\n> ./1.0_Prep_SNPs_for_Imputation_and_Plink.pl –c BRCA\nNote: The script first parses annotation information from the file ‘GenomeWideSNP_6.na35.annot.csv’ and outputs data into a file called ‘snp6.anno.txt’. Next, the script outputs annotated SNPs to a file called ‘snp6.cd.txt’. If these files already exist, the script will not execute and it will bypass this step.\nParse the genotype files and create the plink1.9 formatted (.map and .ped) files for input into plink1.9 (Chang et al., 2015[href=https://www.wicell.org#bib1]) using 1.1_Birdseed_to_ped_and_maps.pl\nRun the script, specifying the sample type with ‘-s’ (0 for normal, 1 for tumor and 2 for both), the cancer type ‘-c’ and/or enter the path to the plink1.9 ‘-p’.\n> ./1.1_Birdseed_to_ped_and_maps.pl \\\n> -p /usr/local/bin/anaconda2/bin/plink \\\n> -s 0 -c BRCA\nNote: plink1.9 performs quality control by keeping SNPs with minor allele frequency >0.01 on these data, which is required by shapeit. If users prefer genotypes called from WGS data, supply these genotypes in plink binary bed format, using the sister Perl script ‘1.1_plink_binary_bed_to_ped_and_maps.pl’ to prepare the input data. This sister script uses the same parameters, except for the ‘-b’ parameter for supplying plink binary bed file.\nPhase genotyping data using 1.2_Shapeit_and_Imputation.pl",
    "Phase genotypes as shown below, specifying the cancer type after the parameter ‘-c’.\n> ./1.2_Shapeit_and_Imputation.pl -c BRCA\nNote: Shapeit uses the genotyping data in the ‘peds’ and ‘maps’ directories and outputs the phased result to a new directory called ‘phased’ (Delaneau et al., 2011[href=https://www.wicell.org#bib3]).\nShapeit only extracts chromosome sizes, generating a file called ‘chr_lens_grep_chr’ from which it parses only chr1-22 and X for imputation. The imputation results, including SNP calls and phased haplotype data are printed to the directory ‘phased_imputed_raw_out’, and unnecessary files removed. See ‘potential problem 5[href=https://www.wicell.org#sec5.9]’ to resolve issues accessing plink format data of peds and maps.\nExtract heterozygous SNPs and make a heterozygous SNP Bed file for gene-level ASE calculation using 1.3_Make_het_cds.pl\nMake a heterozygous SNP Bed file using the command below, ensuring that the cancer type is specified after the parameter ‘-c’.\n> ./1.3_Make_het_cds.pl -c BRCA\nExtract copy number estimates to call CNVs using 2.0_Prep_For_Bad_SNPs_CNVs.pl (optional).\nNote: Copy number estimate files must be downloaded as described above using the script ‘0_Download_SNPArray_From_GDC.pl’ before proceeding.\nExtract copy number estimates using the command below and specifying the cancer type after the parameter ‘-c’.\n> ./2.0_Prep_For_Bad_SNPs_CNVs.pl -c BRCA\nIdentify SNPs that overlap CNVs for ASE evaluation using 2.1_Get_Bad_SNPs_and_CNVs.pl\nIdentify SNPs that overlap CNVs with the command below, ensuring that the cancer type is specified after the parameter ‘-c’.\n> ./2.1_Get_Bad_SNPs_and_CNVs.pl -c BRCA\nNote: This script requires outputs from scripts 1.1, 1.2, 1.3 and 2.0 to run.\nDownload RNA-Seq or WGS data and run mpileup on them to aggregate reads by genomic coordinates using 3.0_Download_RNASeq_WGS_and_do_Mpileup.pl\nDownload data and run mpileup as shown below, specifying:\ncancer type with ‘-c’\ndata type with ‘-E’ (e.g., ‘RNA-Seq’ or ‘WGS’)\npath to the gdc key with ‘-k’\ntotal number of BAMs for downloading with the parameter ‘-n’",
    "‘-i’ ‘yes’ to download samples with available RNA-Seq and WGS data (optional)\nUse ‘-o download’ to download BAM files without running mpileups or ‘-o all’ to download BAMs and do mpileups (optional)\n‘-d aria’ to download with it instead of the default, ‘-d curl’ (optional)\n#download RNA-Seq BAMs and do mpileup\n> ./3.0_Download_RNASeq_WGS_and_do_Mpileup.pl -E RNA-Seq \\\n> -c BRCA -o all -i yes -n 50 -d curl \\\n> -k /Driver-ASE/Database/gdc.key\n#download WGS BAMs and call somatic mutations\n> ./3.0_Download_RNASeq_WGS_and_do_Mpileup.pl -E WGS \\\n> -c BRCA -o all -i yes -n 10 -d curl -k /Driver-ASE/Database/gdc.key\nNote: The script uses preexisting sample tables or downloads the sample table from GDC for the specified cancer type, and downloads BAM files for the samples included in the table. After downloading and indexing the specified BAM files, the script will run samtools mpileups on them.\nCreate an RNA-Seq or WGS annotation table of GDC sample ids and corresponding BAM ids using 3.0_Dwnld_RNASeq_WGS_Table_From_GDC.pl as shown below. Specify:\ncancer type with ‘-c’ (or multiple types separated by commas: e.g., OV, PRAD)\nexperimental strategy with ‘-E’ (either ‘RNA-Seq’ or ‘WGS’)\ngdc key path with ‘-k’ (optional)\n‘-d aria’ to download with it instead of the default, ‘-d curl’ (optional)\n‘-o’ to restrict analysis to samples with overlapping WGS and RNA-seq (optional)\nNote: The wrapper shell script, ‘3.0_Download_RNAseq_WGS_Tables_From_GDC.sh’, will run the commands of ‘3.0_Dwnld_RNASeq_WGS_Table_From_GDC.pl’ for all cancer types from GDC legacy portal.\n#download RNA-Seq sample table from GDC\n> ./3.0_Dwnld_RNASeq_WGS_Table_From_GDC.pl -E RNA-Seq \\\n> -c BRCA -d curl -o no -k /Driver-ASE/Database/gdc.key\n#download WGS sample table from GDC and overlap WGS table with RNA-Seq samples\n> ./3.0_Dwnld_RNASeq_WGS_Table_From_GDC.pl -E WGS -c BRCA \\\n> -d curl -o yes -k /Driver-ASE/Database/gdc.key\nPerform gene-level ASE analysis using 3.1_Gene_Level_ASE_Analysis.pl",
    "Run gene-level ASE analysis using the command below and specifying the cancer type after the parameter ‘-c’. Restrict the gene-level ASE evaluation to only samples with overlapping RNA-Seq, WGS and Genotype TCGA IDs using ‘-o’.\n#download RNA-Seq sample table from GDC\n> ./3.1_Gene_Level_ASE_Analysis.pl -c BRCA -o yes\nPrepare the data for analysis in MATLAB using 3.2_Export_ASE_Data.pl\nPrepare for MATLAB analysis using the command below, ensuring that the cancer type ‘-c’ is specified. If intersecting RNA-Seq, WGS, and Genotype data tables, specify ‘-o yes’ and ensure the TCGA sample IDs are present in each dataset.\nInclude annotation of SNPs associated with CNV by running scripts 0, 2.0 and 2.1 to download and process GDC copy number data.\n> ./3.2_Export_ASE_Data.pl -c BRCA\nFilter the Varscan2 mutation calls for somatic mutations using 4.0_Somatic_Variants.pl\nFilter the Varscan2 mutation calls using the command below and specifying the cancer type ‘-c’. Optionally, specify:\nread cutoff with ‘--readcutoff'\ntumor frequency with ‘--tfreq’\nnormal frequency of mutated allele with ‘--nfreq'\nrestrict filtering of somatic mutations to only samples with overlapping RNA-Seq, WGS and Genotypes TCGA IDs, use ‘-o’.\n> ./4.0_Somatic_Variants.pl -c BRCA --readcutoff 20 --tfreq 0.2 --nfreq 0.02 -o yes\nMap somatic mutations to different regulatory regions, including TF-binding site, CpG islands, DNase sensitive sites, broad histone modification regions, 3′UTR, 5′UTR, coding regions, intronic regions from UCSC or generated based on ENCODE data using 4.1_Upstream_Downstream_Analysis.pl\nMap somatic mutations to different regulatory regions using the command below ensuring the cancer type is specified with ‘-c’.\n> ./4.1_Upstream_Downstream_Analysis.pl -c BRCA\nNote: The bed files (hg19) are pre-built for each feature and included in the directory ‘/Driver-ASE/Database/reg’ from ‘Database.zip’. Users can replace these bed files with custom files as necessary.\nAssociate gene-level ASE with somatic mutations\nTiming: [20 mins]",
    "Gene-level ASE and somatic mutations in different regulatory regions can be correlated with M1_Import_ASE_and_Mutation_data.m or its executable file. MATLAB version 2014b or more recent versions will run the script. Alternatively, the executable file ‘M1_Import_ASE_and_Mutation_data’ can be run with MATLAB Runtime version 90 in a local Linux system or online cluster.\nDownload the MATLAB scripts (‘Driver_ASE_MatLab_Lib’) and its corresponding database (‘MatLab_Analysis.zip’) from GitHub (https://github.com/mikevermeulen/Driver-ASE/[href=https://github.com/mikevermeulen/Driver-ASE/]). If users installed Driver-ASE with the shell script, ‘Driver_ASE_Installation_with_conda.sh’, these directories and data are automatically available.\nDecompress the association scripts to a new directory ‘MatLab_Analysis’ by double clicking and extracting all files or the ‘unzip MatLab_Analysis.zip’ command in Linux.\nCreate a subdirectory for each cancer type (e.g., ‘BRCA’ was created for demo; n=46) with required nested directories of ‘somatic_calls’, ‘mutations’, ‘annotations’ and ‘matrix’ (Figure 5[href=https://www.wicell.org#fig5]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1160-Fig5.jpg\nFigure 5. Directory tree of Driver-ASE to associate gene-level ASE with somatic mutations\nMake Driver_ASE functions and scripts accessible to MATLAB by adding the directory path containing relevant subfolders (‘Driver_ASE_MatLab_Lib’, ‘MatLab_Variables’, ‘Driver_ASE_MatLab_Scripts’) to the MATLAB environment variable path.\nIn MATLAB, click ‘Home’ -> ’Set Path’ -> ’Add folder’ sequentially to add the directory ‘Driver_ASE_MatLab_Lib’ with default setting. These steps are illustrated in Figure 6[href=https://www.wicell.org#fig6].\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1160-Fig6.jpg\nFigure 6. Screenshot of how to add the Driver_ASE scripts into the MATLAB global path\nStart MATLAB, navigate to the Driver_ASE_MatLab_Scripts’ directory, and run the function: ‘M1_Import_ASE_and_Mutation_data.m’.\nSpecify the cancer type (‘cancer_type’) and regulatory feature (‘rgx4feature’) parameters for the ASE-Mut association analysis. Supply a custom FDR cutoff if desired, the default is 0.2. To evaluate all 18 regulatory or genomic features from ‘4.1_Upstream_Downstream_Analysis.pl’, the user can specify ‘.∗’ (see Figure 7[href=https://www.wicell.org#fig7]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1160-Fig7.jpg\nFigure 7. Sample MATLAB commands to run ASE-Mut association on BRCA data\n%In matlab\n> cd ‘your_fullpath_to_the_dir_Driver_ASE_MatLab_Scripts’\n> cancer_type=’BRCA’;\n> rgx4feature=’.∗’;\n> fdrcutoff=0.2;\n%FDR cutoff can be supplied after rgx4feature, with the",
    "default value being 0.2.\n>\n[All_Assoc,Top_assoc]=M1_Import_ASE_and_Mutation_data(canc\ner_type,rgx4feature,fdrcutoff);\nNote: For the association results, MATLAB outputs all (‘All_Assoc’) and the top-ranked (‘Top_assoc’) ASE-Mut association results separately for each tested feature (FDR <= user-defined FDR cutoff in each tested feature).\nRun the MATLAB executable function to associate gene-level ASE with somatic mutations.\nExport the global variable ‘LD_LIBRARY_PATH’ for MATLAB runtime.\nNavigate to the working directory 'Driver_ASE_MatLab_Scripts’ where the executable is located and follow the commands below to perform the association.\n> export\nLD_LIBRARY_PATH=$MCR_v90/runtime/glnxa64:$MCR_v90/bin/glnxa64:$MCR_v90/sys/os/glnxa6\n4:$MCR_v90/sys/opengl/lib/glnxa64\n> cd\n/Driver_ASE/Driver_ASE_MatLab/Driver_ASE_MatLab_Lib/Driver_A\nSE_MatLab_Scripts\n#Parameters required by the executable file.\n#./M1_Import_ASE_and_Mutation_data <cancer type, such as\nBRCA> <feature_rgx, such as chipseq> <FDR cutoff, e.g., 0.2>\n#This will print help information for the MATLAB executable\nfile;\n> ./M1_Import_ASE_and_Mutation_data\n#When running the following command in a Linux terminal, the\nMATLAB executable will generate the same results as that\nexecuting in MATLAB shown in the previous section of\n‘Expected Outcomes’.\n#Note: the regular expression ‘.∗’' will match all 18\nregulatory features\n> ./M1_Import_ASE_and_Mutation_data BRCA '.∗' 0.2\nNote: MATLAB runtime version 90 must be installed in a local Linux system or online cluster, the installation of which should be completed when running the shell script for the installation of Driver-ASE in the system via conda. See ‘potential problem 6[href=https://www.wicell.org#sec5.11]’ to resolve issues in running the MATLAB executable file in a local Linux system."
  ],
  "subjectAreas": [
    "Genomics",
    "Rnaseq",
    "Sequence Analysis",
    "Bioinformatics",
    "Cancer"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}