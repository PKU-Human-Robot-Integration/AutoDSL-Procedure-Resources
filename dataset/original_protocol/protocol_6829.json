{
  "id": 7199,
  "origin_website": "Bio",
  "title": "Computational Analysis and Phylogenetic Clustering of SARS-CoV-2 Genomes",
  "procedures": [
    "The individual steps involved in this protocol and the Augur modules used in each step are summarized in Figure 1.Downloading and installing requisite software tools and datasets Install Docker EngineDocker is an open-source technology based on virtualization, which is used for developing and running software applications in the form of containers. The Docker Engine can be installed using the following commands:sudo apt-get update sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg[href=https://download.docker.com/linux/ubuntu/gpg] | sudo apt-key add - sudo apt-key fingerprint 0EBFCD88 sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu[href=https://download.docker.com/linux/ubuntu] $(lsb_release -cs) stable\" sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io To activate and test Docker installation, execute the following commands:sudo groupadd docker sudo usermod -aG docker $USER newgrp docker docker run hello-world imgsrc:https://en-cdn.bio-protocol.org/attached/image/e3999/bioprotoc-11-08-3999-g001.jpgFigure 1. The different steps described in this protocol and the Augur modules used in each of the analysis steps Install AnacondaAnaconda is an open-source distribution of Python that simplifies the management of Python packages and environments. To install Anaconda, use the following commands:wget https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh[href=https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh] bash Anaconda3-2020.02-Linux-x86_64.sh Proceed with the installation by following the on-screen instructions. You can find the anaconda3 folder in the directory shown in the installer script. You can activate and test your installation by running the following commands:source ~/.bashrc conda list Install Nextstrain-CLINextstrain is available as a Python package and can be installed using pip.python3 -m pip install nextstrain-cli To check whether Nextstrain has been successfully installed, use the following command:nextstrain version The version number shown in the output should be 1.16.1 or higher.Install AugurAugur is the toolkit provided by Nextstrain for phylogenetic analysis. Augur is also available as a Python package and can be installed using the following command:python3 -m pip install nextstrain-augur Install MAFFTMAFFT (Multiple Alignment using Fast Fourier Transform) is required by Augur to perform multiple-sequence alignments.",
    "To download and install this tool, use the following command:sudo apt-get install mafft Install IQ-TREEIQ-TREE is an open-source tool for constructing maximum-likelihood trees using phylogenetic data. IQ-TREE is required by Augur for constructing a phylogenetic tree from sequence data. To install IQ-TREE use the following command:sudo apt-get install iqtree It is recommended to use IQ-TREE version 1.6.1 (default version installed for Ubuntu 18.04 LTS) or higher.Download the SARS-CoV-2 sequence datasetThe Global Initiative on Sharing All Influenza Data (GISAID) is the most updated public repository of SARS-CoV-2 genome sequences. For this phylogenetic clustering protocol, we downloaded the dataset of ~15,000 complete (as of 1st May 2020) SARS-CoV-2 genome sequences from GISAID. The database can be accessed by registering for a GISAID account. Upon successful activation, the sequence dataset can be downloaded by logging into the GISAID EpiCoVTM database and navigating to the Browse option (https://www.epicov.org/epi3/frontend[href=https://www.epicov.org/epi3/frontend]).To create the metadata file required by Augur, you will also need to download the Acknowledgment Table for all submissions provided by GISAID, which can also be found on the Browse page.Download the SARS-CoV-2 reference genomeBefore proceeding with the analysis, you also need to download the reference genome for SARS-CoV-2 from NCBI in GenBank (.gb). For this analysis, we downloaded the genome with the accession number MN908947.3.Preparing input filesTo use Nextstrain for phylogenetic analysis and visualization, you need to prepare the following input files (Table 1):Table 1. List of input files required to run the different steps in the analysis pipeline imgsrc:https://en-cdn.bio-protocol.org/attached/image/20210414/20210414202503_6874.pngsequences.fastaA single FASTA file containing a collection of pathogen sequences to be analyzed. For this analysis, we used the sequence dataset downloaded from GISAID. Each sequence in the FASTA file should have the strain ID of the virus as the sequence header. A sample sequence record for the FASTA file is shown in Figure 2.imgsrc:https://en-cdn.bio-protocol.org/attached/image/e3999/bioprotoc-11-08-3999-g002.",
    "jpgFigure 2. Sample record for the hCoV-19/India/1-27/2020 SARS-CoV2 strain in the sequences.fasta formatmetadata.tsvA tab-delimited metadata file that describes the sequences given in the FASTA file. The various fields to be included in the metadata file are as follows:Required fields: Strain, Virus, DateFor each strain ID in the sequences.fasta file, there should be an entry under the strain column in the metadata file.Additional fields (if using published data): Accession, Authors, URL, Title, Journal, Paper_URL.To infer ancestral traits, additional information fields such as region, country, state, and city need to be included in the metadata file.The information for the various fields in the metadata file can be taken from the Acknowledgment Table downloaded from GISAID. A sample metadata spreadsheet is linked here as Supplementary Data 1[href=https://os.bio-protocol.org/attached/file/20210322/3999%20Supplementary%20file%20Data%201%20s1.xlsx].clades.tsvThis file is required for the addition of clade labeling to the phylogenetic tree. The file specifies the mutations (amino acid or nucleotide) specific to a particular clade of the virus (Figure 3). The clades.tsv file should contain the following fields:clade: To describe the name of a clade.gene: The name of the gene in which the mutation lies (for nucleotide changes, the gene name should be ‘nuc’).site: The position of the mutation within the genome.alt: The mutated amino acid or nucleotide found at that position.For this analysis, we used the clades definition for SARS-CoV-2 genomes defined by Nextstrain ( https://github.com/nextstrain/ncov [href=https://github.com/nextstrain/ncov]).imgsrc:https://en-cdn.bio-protocol.org/attached/image/e3999/bioprotoc-11-08-3999-g003.jpgFigure 3. Summary screenshot of the clades.tsv file provided by Nextstrain for SARS-CoV-2 genomes auspice_config.jsonThis file is needed to set various display options for visualization. A sample config file is linked here as Supplementary Data 2[href=https://os.bio-protocol.org/attached/file/20210322/3999 Supplementary file Data 2 s2.txt].lat_longs.tsvA tab-separated file containing latitudes and longitudes for all regions, countries, states, and cities in the dataset (Figure 4). This file will be used to display geographic traits during visualization.imgsrc:https://en-cdn.bio-protocol.org/attached/image/e3999/bioprotoc-11-08-3999-g004.jpgFigure 4. Summary screenshot of the lat_longs.",
    "tsv file required by Nextstrain for visualizing geographic traitsQuality assessmentIn this visualization, we would also like to segregate high-quality FASTA sequences in the dataset from low-quality ones. Accordingly, we added an additional field, ‘quality,’ to the metadata file. The following quality metrics define a high-quality sequence:Percentage identity to the reference genome after pairwise alignment: >99%Percentage of gaps in the alignment: <1%Percentage of N (unknown nucleic acid residue) bases in the sequence: <1%No degenerate bases in the sequenceBased on the above criteria, the ‘quality’ metadata field can hold the values, ‘High,’ ‘Low,’ and ‘Not Assessed.’To visualize the quality assessment, we created an additional configuration file ‘colors.tsv,’ a tab-delimited file containing hex codes for each value of the sequence quality field that you want to represent. In this analysis, high-quality is shown in green, low-quality in red, and unassessed sequences in yellow by specifying the corresponding hex codes for the required colors in the ‘colors.tsv’ file (Figure 5).       imgsrc:https://en-cdn.bio-protocol.org/attached/image/e3999/bioprotoc-11-08-3999-g005.jpg        Figure 5. Summary screenshot of the colors.tsv file created for visualizing sequence quality"
  ],
  "subjectAreas": [
    "Systems Biology"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics"
  ]
}