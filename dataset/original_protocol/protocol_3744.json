{
  "id": 3947,
  "origin_website": "Cell",
  "title": "Protocol for detecting introgressed archaic variants with SPrime",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nStep-1: Install SPrime\nTiming: 1 min\nThe SPrime software has been included in the SPrime pipeline download. The latest version of the software can be downloaded from the github page: https://github.com/browning-lab/sprime[href=https://github.com/browning-lab/sprime]. Place the software file “sprime.jar” in the “tools” folder. Check that it is working and print out information on the parameters by running “java -jar sprime.jar” (Figure 1[href=https://www.wicell.org#fig1]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/669-Fig1.jpg\nFigure 1. Screenshot showing the contents of the tools folder and sprime.jar’s help message\nStep-2: Prepare input data for the SPrime analysis\nTiming: 5 h\nSPrime takes the genotype data and recombination map as required inputs, along with a file specifying the outgroup samples. The example genotype data are downloaded from the 1000 Genomes Project. In this protocol we will use an East Asian population, the CHB (Han Chinese in Beijing, n=103), as the target group, and an African population, YRI (Yoruba in Ibadan, n=108), as the outgroup. We need to extract the samples of both the target group and the outgroup for each chromosome, and filter to remove all variants that are not bi-allelic SNPs as follows:\npfile=../download/1000genome/integrated_call_samples_v3.20130502.ALL.panel\ngrep -E \"(YRI|CHB)\" ${pfile} | cut -f1 > sample.txt\ngrep YRI ${pfile} | cut -f1 > outgroup.txt\necho -n \"\" > vcf.file.list\nfor chr in {1..22}; do\nvcf=../download/1000genome/ALL.chr${chr}.phase3_shapeit2_mvncall_integrated_v5a.20130502.genotypes.vcf.gz\noutvcf=../tmp/chr${chr}.vcf.gz\necho ${outvcf} >> vcf.file.list\nbcftools view --samples-file sample.txt ${vcf} | bcftools view -c1 -m2 -M2 -v snps | bcftools annotate -x INFO,ˆFORMAT/GT -Oz > ${outvcf}\ndone\nExtracting samples and filtering SNPs for all chromosomes takes about 5 h. The maximum memory in use is 13.5Mb.",
    "We concatenate all autosomes into one file, because SPrime needs whole genome data to estimate key parameters. Although we will analyze the chromosomes one by one in order to parallelize computation, SPrime will obtain information about relative mutation rates from the whole autosome.bcftools concat --file-list vcf.file.list --naive --output-type z --output all.auto.vcf.gz\nStep-3: Run SPrime to detect introgressed variants\nTiming: 1 h\nWe use the HapMap combined LD map as the input recombination map in this example, following the analysis in (Browning et al., 2018[href=https://www.wicell.org#bib2]). The recombination map must be in plink format (https://www.cog-genomics.org/plink/1.9/formats#map[href=https://www.cog-genomics.org/plink/1.9/formats#map]) and have the same genome build version and chromosome identifiers as the genotype data. Since the phase 3 1000 Genomes Project data uses GRCh37 coordinates, we use a build 37 map here.map=../download/plinkmap/plink.all.GRCh37.map\nSPrime requires specification of the genotype data “gt=[file]”, the outgroup sample list “outgroup=[file]”, the recombination map “map=[file]”, and the output prefix “out=[string]”. One can also specify the chromosome using “chrom=[chrom]”, or the target region using “chrom= [chrom]:[start]-[end]”. Here we parallelize the analysis by chromosome, so we use the “chrom=” parameter.\noutgroup=../step2/outgroup.txt\ngt=../step2/all.auto.vcf.gz\nfor chr in {1..22}; do\nmap=../download/plinkmap/plink.all.GRCh37.map\nout=chb.yri.${chr}\njava -jar ../tools/sprime.jar gt=${gt} outgroup=${outgroup} map=${map} out=${out} chrom=${chr}\ndone\nIt takes approximately 1 h to run SPrime on all autosomes. The maximum memory in use for one chromosome is 4.6GB.\nStep-4: Calculate match rates to a known archaic genome\nTiming: 1.5 h",
    "SPrime is able to detect archaic introgression without knowing the archaic genome by utilizing a purported non-admixed population as an outgroup. For Neanderthal or Denisovan introgression, a West African population is typically used as the outgroup, for example the YRI from the 1000 Genomes Project. If a relevant archaic genome has been sequenced, one can map the detected variants to the archaic genome to confirm the source of introgression. We use the genome of the Altai Denisovan and the genome of the Vindija Neanderthal to represent two different sources of archaic introgression. The archaic genomes are in VCF format and the mask files are in BED (Browser Extensible Data) format.\nFor each variant detected by SPrime, map it to the archaic genome, resulting in “match”, “mismatch”, or “notcomp” to the archaic genome. The three states mean the detected variant is present in the archaic genome, is not present in the archaic genome, or is not comparable because genotype quality in the archaic genome is low for that locus. To complete this step, we have an C script named “map_arch”, which adds the match status for each variant as an additional column to SPrime’s output. In the following code, we add match status to the Neanderthal genome and match status to the Denisovan genome.\nmaparch=\"../tools/map_arch_genome/map_arch\"\nfor chr in {1..22}; do\nscript=o.script.${chr}.sh\n#map variants to the Neanderthal genome\nbedfile=\"../download/archaic_genome/RecalledVindija/chr${chr}_mask.bed.gz\"\narchaicfile=\"../download/archaic_genome/RecalledVindija/chr${chr}_mq25_mapab100.vcf.gz\"\nreftag=\"AltaiNean\"\nscorefile=\"../step3/chb.yri.${chr}.score\"\noutmscore=\"out.chr${chr}.mscore\";\ntmpprefix=../tmp/${RANDOM}\necho \"\n#! /bin/bash\n${maparch} --kp --sep '\\t' --tag ${reftag} --mskbed ${bedfile} --vcf ${archaicfile} --score ${scorefile} > ${tmpprefix}.tmp1.${chr}.mscore\n\" >${script}\n#map variants to the Denisovan genome\nbedfile=\"../download/archaic_genome/RecalledDenisova/chr${chr}_mask.bed.gz\"\narchaicfile=\"../download/archaic_genome/RecalledDenisova/chr${chr}_mq25_mapab100.vcf.gz\"\nreftag=\"AltaiDeni\"\necho \"\n${maparch} –kp –sep '\\t' –tag ${reftag} –mskbed ${bedfile} –vcf ${archaicfile} --score ${tmpprefix}.tmp1.${chr}.mscore > ${tmpprefix}.tmp2.${chr}.mscore\nmv ${tmpprefix}.tmp2.${chr}.mscore ${outmscore}\nrm ${tmpprefix}.tmp∗.${chr}.mscore\nrm ${script}\n\" >> ${script}\nsh ${script}\ndone",
    "The mismatch analysis takes 7 mins for chromosome 2 and 81 mins for all autosomes. The maximum memory in use for one chromosome is 10GB.\nStep-5: Find multiple sources of archaic introgression\nTiming: 1 min\nThis is an optional step for those who are interested in population history. Once we know the match status of each detected variant to the archaic genome, we are able to calculate the match rate for each reported introgression segment. The match rate for a segment is the number of matching positions divided by the sum of matching and mis-matching positions (the match rate is undefined if all the SPrime variants in the segment are not comparable to the archaic genome). If a segment has high match rate to a particular archaic genome, this segment probably shares close ancestry with that archaic genome. By calculating the match rate to different archaic genomes, we may find evidence of different sources of introgression as in Figure 2[href=https://www.wicell.org#fig2] (Browning et al., 2018[href=https://www.wicell.org#bib2]). The commands to generate this figure are:\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/669-Fig2.jpg\nFigure 2. Contour plot of CHB results showing three sources of archaic admixture\nThe peak in the upper left represents ancestry from a group that is closely related to the Altai Denisovan, the peak in the middle left represents ancestry from a group that is distantly related to the Altai Denisovan, the peak on the lower right represents ancestry from Neanderthals, and the peak in the lower left represents other segments which may be false positive introgression calls or introgression from another source.\n# calculate match rate for each introgressed segment\n## Rscript ../tools/score_summary.r [directory with annotated score files from step 4] [output filename]\nRscript ../tools/score_summary.r ../step4 match.summary.txt\n# contour plot show different waves of archaic introgression\n## Rscript ../tools/plot_contour.r [input summary file] [prefix of plot output]",
    "Rscript ../tools/plot_contour.r match.summary.txt chb.contour"
  ],
  "subjectAreas": [
    "Bioinformatics",
    "Genetics"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}