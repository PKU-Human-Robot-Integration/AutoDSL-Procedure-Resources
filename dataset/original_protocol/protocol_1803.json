{
  "id": 1912,
  "origin_website": "Cell",
  "title": "A simplified protocol for performing MAGMA/H-MAGMA gene set analysis utilizing high-performance computing environments",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nWe will recapitulate the H-MAGMA analysis in Figure 4C of Yao et al. (2021)[href=https://www.wicell.org#bib14], with an added section of standard MAGMA analysis using a user-generated annotation file instead of the gene annotation file provided by H-MAGMA from Hi-C data.\nRun gene annotation\nTiming: 30 min to 1 h. Store intermediate data for more flexible scheduling on human and computing resources allocation.\nHere we will start with a clean slate by directly using the .bim file (the SNP location file of the plink bim/bed/fam file sets) associated to the g1000_eur data set (SNP_Loc_File, download links included in KRT) and one revised version of the gene location file from the original MAGMA gene location build 37 file (Gene_Loc_File, download links included in KRT). As an example, we could use the .bim file (such as the g1000_eas.bim or g1000_eur.bim files from the 1000 Genome Project, downloadable in KRT) as the SNP_Loc_File and the Rev.NCBI37.3.gene.loc (also in KRT) as the Gene_Loc_File as a start.\nPre-run preparations.\nConfirmation of data format compatibility. It is of utmost importance that all files use the same naming rules during the analysis since different data files, especially reference data files, may be acquired from distinct sources. The common fields that could cause incompatibility and therefore error during analysis include, but are not limited to:\nChromosome names: check the first few lines of both SNP_Loc_File and Gene_Loc_File and confirm whether the chromosome names are consistent (e.g., both “1” or “chr1”). Since the SNP_Loc_File (.bim) file usually comes with chromosome names in 1, 2, …, in most cases it would be the Gene_Loc_File that has an excessive “chr” prefix to the chromosome names. To remove the prefix, simply run the following bash script:\nawk -F '\\t' '{gsub(\"chr\",\"\",$2)}1' Gene_Loc_File > New_Gene_Loc_File",
    "Gene names: Different Gene_Loc_File may use different strings (gene symbols, ENSEMBL gene ID, NCBI gene ID, etc.) in the first column of Gene_Loc_File. This column needs to be consistent with the names used in the gene set file (Set_File) that will be mentioned later. If different gene symbols (such as ENSEMBL gene symbols vs UCSC gene names) were used between the two files, some lookup table-based conversion may need to be performed. Some basic (but very handy) conversion can be performed on g:Profiler (https://biit.cs.ut.ee/gprofiler/convert[href=https://biit.cs.ut.ee/gprofiler/convert]) and the user could consult additional web resources, such as R biomaRt package, for more in-depth study themselves.\n(Rare) 0-based or 1-based gene tracks. In some rare cases when the gene annotation file (Annot_File) was pre-generated rather than made de novo (as in the case of H-MAGMA), a 0-based Annot_File might be used together with a 1-based Set_File (especially when genomic intervals were used instead of gene names). In order to avoid such misadventure, it is recommended to spot-check a few known SNP and genes for their positions to see if they are consistent.\nDecide the size of the annotation window around genes.\nIn order to include up/down-stream SNPs into genes of interest for analysis, it is necessary to set a sliding window around the genes using the --annotate flag. Although there is no universally agreed value in setting the size of the sliding window, users are recommended to check related published results for optimized results.\n(!) Warning: if the ignore-strand modifier is used, all genes will be assumed to be located on the positive (+) strand with the strand column information ignored. Use with caution.\nRun the annotation.",
    "It is recommended to write and save each command as a separate bash script for easy debugging and code recycling using editors such as Vim, GNU Emacs, or VS Code.\nIt is also recommended to pre-define the location of all data files as variables instead of embedding them in the magma command line, for easy code recycling.\nAssuming that the magma executable path has been added to your $PATH variable.\nHere we will run a standard annotation using window size of 100 kb upstream, 20 kb downstream, output file prefix is miR137_100k_20k and the output file will be sent to the current directory. If performing H-MAGMA analysis rather than the standard MAGMA model, skip from here to step 3. Save the following code as gene_annotation.sh.\n#!/bin/bash\nSNP_Loc_File=\"/data/your-name/magma-aux-files/SNP_Loc_File\"\nGene_Loc_File=\"/data/your-name/magma-aux-files/Gene_Loc_File\"\nOutput_Prefix=\"miR137_100k_20k\"\nmagma \\\n  --annotate window=100,20 \\\n  --snp-loc $SNP_Loc_File \\\n  --gene-loc $Gene_Loc_File \\\n  --out $Output_Prefix\nNote: users should carefully choose the path of “/data/your-name/magma-aux-files/” section since they need to define this part themselves. The Output_Prefix is customizable as long as it is kept consistent in all subsequent steps. This rule applies in all subsequent steps and associated code blocks.\nThen execute the following command in the console.\nbash ./gene_annotation.sh\nAfter this operation, the user will find two files: miR137_100k_20k.genes.annot and miR137_100k_20k.log generated under the current directory. The .log file recorded the actual commands that were executed as well as some details during the program execution. Nevertheless, here we focused on the generated.genes.annot file (Annot_File) for the next step of gene analysis. If we examine the content of the Annot_File, we will find a row-based file that each gene was marked by an interval of its length plus the window size, followed by the id of all the SNPs that fall within the interval.\nGene analysis\nTiming: 30 min to 1 h",
    "During this step, we will calculate the p-values and associate metrics of each gene and store them in the generated .genes.out and .genes.raw files for subsequent gene-level analysis uses. Moreover, we will take advantage of the parallel computing ability of modern computers/clusters to boost the process to a significantly faster degree.\nIdentify and confirm the available system resources to use.\nIdentify the numbers of system CPUs/threads. In the console, type in:\nlscpu | grep \"CPU\"\nThen the system should return a few lines of system information. The content may vary depending on the computer/cluster model and configuration. Nevertheless, the general format should look like this: What we are looking at here is the second line. Here we have 64 logical CPUs/threads at our disposal for the subsequent parallel run.\nCPU op-mode(s):        32-bit, 64-bit\nCPU(s):                 64\nOn-line CPU(s) list:   0-63\nCPU family:             6\nModel name:            Intel(R) Xeon(R) Gold 6226R CPU @ 2.90GHz\nCPU MHz:                 3019.667\nCPU max MHz:             3900.0000\nCPU min MHz:             1200.0000\nNUMA node0 CPU(s):       0-15,32-47\nNUMA node1 CPU(s):       16-31,48-63\nIdentify the size of available memory to use.\nIn the console, type in:\nfree -h\nThe console returns:\n        total    used    free  shared  buff/cache  available\nMem:  503Gi  40Gi    5.7Gi   920Mi      456Gi      458Gi\nSwap:  35Gi   3.8Gi  32Gi\nSo we can see there are 458 GiB of memory at our disposal.\nCompose the main code part for gene analysis using SNP p-value data with parallel processing.\nVerify GNU Parallel is installed on the system. In the console, type in:\nparallel --version\nSee if the console successfully returns the current version of the parallel installed.",
    "Calculate the appropriate number of parallel threads to use. As a general rule, each MAGMA session would use approximately 1 GiB of memory. Hence, the maximum theoretical parallel thread numbers we can set will be the size of available memory divided by 1 GiB. However, we should also consider the fact that the number of parallel threads cannot exceed the count of logical cores of the system, i.e., the number we collected from step 3a. Also, we need to reserve some resources for system use. Hence, it is generally recommended that the number of parallel threads to use should not exceed 10 on computers < 16 logical cores and not exceed 40 in mainframe clusters, as long as the user-available memory permits.\nPrepare a temp working folder for storing intermediate batch files and write the code. Here we will use the data file from the Psychiatric Genomics Consortium Schizophrenia Wave 3 (scz2021) (The Schizophrenia Working Group of the Psychiatric Genomics Consortium et al., 2020[href=https://www.wicell.org#bib13]) as the SNP_Pval_File). The download link has been included in the key resource table.\nIn a text editor, type in the following code and save it as gene_analysis.sh\n#!/bin/bash\nmkdir temp_annot # make a temporary directory to host the intermediate files\nData_File=\"/data/your-name/magma/aux-files/g1000_eur\"\nAnnot_File=\"miR137_100k_20k.genes.annot\"\nSNP_Pval_File=\"/data/your-name/PGC3/PGC3_SCZ_wave3_public.2021.v2.tsv\"\nOutput_Prefix=\"miR137_PGC_SCZ_w3\"\n# run magma in parallel, 8 threads in this case\nparallel magma \\\n  --batch {} 8 \\\n  --bfile $Data_File \\\n  --gene-annot $Annot_File \\\n  --gene-model snp-wise=mean \\\n  --pval $SNP_Pval_File ncol=Nca \\\n  --out temp_annot/$Output_Prefix \\\n  ::: {1..8}\n# merge all intermediate files generated under the temp_annot files\n# and send out for one single file set\nmagma \\\n  --merge temp_annot/$Output_Prefix \\\n  --out temp_annot/$Output_Prefix\n# extract merged files for subsequent analysis\ncp temp_annot/$Output_Prefix.genes.∗ .\n# remove the temporary directory\nrm -r temp_annot\nThen execute the following command in the console.\nbash ./gene_analysis.sh",
    "This snippet will automatically perform a series of operations as the in-line comments have noted. Finally, it will generate three files started with the Out_Prefix: a .genes.raw file contains the raw permutation results, a .genes.out file contains the per-gene statistics, and a .log file records the commands used.\nUsers may want to tweak the gene analysis model used during analysis and see if which one fits their data better. Indeed, there are three base analysis models in MAGMA: the principal components regression (linreg) model, the SNP-wise mean (snp-wise-mean) model, and the SNP-wise Top 1 (snp-wise=top) model.\nHere we choose the SNP-wise mean model for our PGC Schizophrenia analysis since we know that mental disorders tend to be of cumulative, non-mendelian inheritance, therefore a model that is more attuned to the mean SNP association and skews towards associations in areas of higher LD in individual genes is preferable. However, the in-depth discussion on the statistical basis and their associated disease application would be too complex and beyond the scope of this protocol. For further discussion on all the modifiers, their statistical basis, and the potential impact on the performance, we recommend the user read the official MAGMA manual and original publications.\nUsers should also note the N/ncol modifier under the --pval option that is used to specify the sample size. First, not all the SNP_Pval_File has the sample size column. In these cases, the sample size is usually stated in the associated README file and users should specify N = [sample_size] (e.g., N = 25350) instead of using the ncol modifier. Secondly, SNP_Pval_File from different sources may have different names for their sample size column (e.g., Nca, Neff, Ngt). User should manually check the first few lines of the SNP_Pval_File file and confirm the column name before applying in code.",
    "The MAGMA user manual contains a detailed explanation of the structures and columns of the generated .genes.out file. Users may want to refer to the corresponding section for the information contained in each column if interested.\nCritical: If performing H-MAGMA analysis instead of standard MAGMA analysis, it is crucial to use the H-MAGMA provided Annot_File corresponding to your cell/tissue of interest instead of the one generated in step 2.\nGene set analysis\nTiming: 15–30 min\nIn this section, we will integrate the gene-level analysis results derived from the previous section together with a list containing one or more gene sets for a linear regression model-based test.\nNote: the original H-MAGMA package provided input files using gene names in ENSEMBL gene ID without the sub-version numbers, which are different from the record in most GENCODE or ENSEMBL GTF annotation files (e.g., ENSG00000153266 instead of ENSG00000153266.13). Users are advised to verify their own gene list to make sure they are compatible.\nPrepare the gene set list file.\nThe gene set (Set_Annot_File) could be written in either row-based or column-based format (see Appendix A of the MAGMA manual for details). From our experience, the column-based format allows greater versatility and better clarity when working in conjunction with other bioinformatic package outputs, although using the column-based input file format does require the addition of the “col” modifier (see below). Another note is each line of the Set_Annot_File needs to terminate with the newline (\\n) character only but not the Windows carriage return (\\r\\n), hence, some tab-delimited files exported directly from Microsoft Excel in Windows may not work before having their \\r character stripped.\nIn a text editor, type in the following code and save it as gene_set_analysis.sh\n#!/bin/bash\nGene_Results_File=\"miR137_PGC_SCZ_w3.genes.raw\"\nSet_Annot_File=\"/data/your-name/analysis-results/miR137_gene_set_list_4_magma.txt\"\nOutput_Prefix=\"miR137_100k_20k_gene_set_results\"\nmagma \\\n  --gene-results $Gene_Results_File \\\n  --set-annot $Set_Annot_File col=2,1 \\\n  --out $Output_Prefix",
    "Then execute the following command in the console.\nbash ./gene_set_analysis.sh\nWe also provided another file set for the readers to recapitulate the analysis in the Figure 4C of Yao et al. (2021)[href=https://www.wicell.org#bib14] using the iPS-derived neuron Hi-C data from H-MAGMA (Figure 2[href=https://www.wicell.org#fig2]A). The corresponding file set can be found in the GitHub repository of this article.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1392-Fig2.jpg\nFigure 2. Data from Figure 1 shown in bubble plot format\n(A and B) Analysis output of H-MAGMA using iPSC-derived neuron Hi-C gene annotation; the diameter of points corresponds to each BETA value and the shade of points corresponds to each -log10P value of the sample shown. Note that the iPS have a negative beta value hence no point was plotted in the panel.\nThe structure and columns of the output .gsa.out file has been well-documented in the MAGMA manual. Essentially, we will need the beta (regression coefficient) and P values to see if our different gene sets are more concordant to our disease model (PGC3 schizophrenia here).\nOptional: Make bubble plots using R and ggplot2 to show beta and enrichment value.\nTiming: 15–30 min\n#!/usr/bin/Rscript\n# init\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(RColorBrewer)\n# plot panel B\ndf_raw <- read_table2(\"Apr122021_set_analysis.gsa.out\",\n                        skip = 4)\ndf_raw$`-log10P` <- 0 - log10(df_raw$P)\ndf_raw$VARIABLE <- factor(df_raw$VARIABLE,\nlevels = c(\"Glut\", \"NPC\", \"DA\", \"GABA\", \"iPS\"))\ndf_raw$TYPE <- \"PGC_SCZ_w3\"\nggplot(df_raw, aes(x = VARIABLE,\n                      y = TYPE,\n                      size = BETA,\n                      fill = `-log10P`)) +\nscale_fill_gradient(low = \"white\",\n                      limits = c(0, 7),\n                      high = \"darkred\") +\nscale_size_area(limits = c(0, 0.5)) +\ngeom_point(shape = 21) +\nxlab(\"Cell type\") +\nylab(\"\") +\ntheme_bw() +\ntheme(legend.position = \"bottom\",\n      legend.box = \"horizontal\",\n      axis.text = element_text(size = 14),\n      axis.title = element_text(size = 16))",
    "To replot the Figure 4C of Yao et al. (2021)[href=https://www.wicell.org#bib14], create a new R project and a new R code window in RStudio. Ensure that library ggplot2and RColorBrewer has been installed. Then type in:\nThen execute the whole code block in RStudio (select-all then ctrl + ENTER) or execute line-by-line (ctrl + ENTER). The generated ggplot2 graph will appear in the plot window of the RStudio. This will generate panel B in Figure 2[href=https://www.wicell.org#fig2]. To generate Figures 1[href=https://www.wicell.org#fig1] and 2[href=https://www.wicell.org#fig2]A, use the code provided in the GitHub repository."
  ],
  "subjectAreas": [
    "Genomics",
    "Neuroscience",
    "Bioinformatics",
    "Genetics"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}