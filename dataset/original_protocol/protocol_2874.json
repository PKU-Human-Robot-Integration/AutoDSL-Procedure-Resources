{
  "id": 3040,
  "origin_website": "Cell",
  "title": "Isolating peripheral blood mononuclear cells from HIV-infected patients for single-cell RNA sequencing and integration analysis",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nEnrollment of study subjects\nTiming: 2 days\n      Males are dying at a disproportionately higher rate than females, and over\n      half of the HIV patients are aged 30–50 years. Therefore, only male\n      participants aged 30–50 years are recruited for the present experiment.\n      Inclusion and exclusion criteria for enrolling HIV-infected IRs and INRs:\n    \n        Inclusion criteria for HIV-infected IRs and INRs.\n        The number of CD4+ T cells can reflect the immune status\n        after ART in HIV-infected patients. Therefore, IRs and INRs samples are\n        distinguished by CD4+ T cell number at the same periods of\n        effective ART.\n        \nMale gender.\n            Patients who have been infected and examined as HIV positive in the\n            past.\n          \n30–50 years of age.\n            Patients have sustainable viral load suppression (<50 copies/mL\n            plasma) over 2 years after antiretroviral treatment (ART).\n          \n            The duration of infection and time to start ART among patients are\n            similar.\n          \nHave not blipped HIV viral load during ART.\n            No immune reconstitution inflammatory syndrome (IRIS) occurred\n            during ART.\n          \n            IRs are defined as CD4+ T cell count >500 cells/μL.\n            INRs are defined as CD4+ T cell count <350 cells/μL.\n          \n        Exclusion criteria for HIV infected IRs and INRs.\n        To study the effects of HIV infection on B-cell function, the diseases\n        that may affect the immune system must be excluded.\n        \n            Coinfection with pathogens such as hepatitis virus, syphilis, or\n            herpes simplex virus.\n          \n            Having tuberculosis and serious liver, kidney, heart, or brain\n            dysfunction.\n          \n            Having immune reconstitution inflammatory syndrome (IRIS) occurs\n            during ART.\n          \nHaving HIV viral load blipped during ART.\nIsolate PBMCs\nTiming: 1 h\n        Add 5 mL peripheral blood of participants into EDTA-anticoagulant tube,\n        turn over the tube gently (3 times), then put into a water bath\n        (Bluepard, Cat#BWS-10) preheated to 25°C for 20 min.\n      \n        An equal volume of modified HBSS buffer is added to dilute peripheral\n        blood.",
    "The Ficoll-Paque PREMIUM (GE health, Cat#17-5442-03) is inverted to make\n        thoroughly mix, and then the polypropylene cap is snapped off and\n        removed. A syringe is used to withdraw 3 mL of Ficoll-Paque PREMIUM,\n        which is then added to a 15 mL centrifuge tube (Nest, Cat#601002).\n      \n        Gently layer the bathed blood samples on top of Ficoll-Paque PREMIUM.\n        Blood samplse and Ficoll Histopaque should stay as two different layers.\n      \nCritical: Do not mix the layer of the\n      blood sample and Ficoll-Paque PREMIUM.\n    \n        Layer PBMCs between blood platelets and Ficoll after centrifugation\n        (Eppendorf 5810R, Cat#5811000495) at 400 × g for 30 min at 25°C\n        (Figure 1[href=https://www.wicell.org#fig1]A).\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2583-Fig1.jpg\n              Figure 1. Cell numbers and cell viability of PBMCs\n            \n              (A) PBMCs are layered by centrifugation of the peripheral blood\n              with Ficoll-Paque PREMUIM.\n            \n              (B) Calculate the number of isolated PBMCs in the blood counting\n              chamber.\n            \n              (C) Viable cells in the counting area of the blood cell counting\n              chamber in the field of the microscope (40×).\n            \nCritical: Set the function of “speed\n      down” to no break before centrifugation.\n    \n        Discard the upper layer of plasma, and transfer the lymphocyte to a\n        clean 15 mL centrifuge tube.\n      \n        Then, 10 mL of modified HBSS buffer is added into the centrifuge tube,\n        and the cells are gently suspended.\n      \n        Centrifuge at 130 × g for 10 min at 25°C, and repeat wash once.\n      \n        The supernatant is removed, and the PBMCs are resuspended in 1 mL of\n        RPMI 1640 complete medium.\n      \nCell viability assay\nTiming: 30 min\n        Resuspend the PBMCs in 1 mL of RPMI 1640 complete medium, avoid heavy\n        bubbles.\n      \n        Ten microliters of trypan blue (0.4%) (Solarbio, Cat# C0040) is added to\n        90 μL of cell suspension in a 1.5 mL microcentrifuge tube, and the\n        mixture is incubated at 25°C for 3 min after mixing.",
    "Ten microliters of mixed cells is added to the blood counting chamber,\n        and the cell numbers and viability are detected (Figures 1[href=https://www.wicell.org#fig1]B and 1C).\n      \nCritical: PBMC viability should be\n      maintained at least 90%, and the cell concentration should be at least\n      1000 cells/μL.\n    \n        PBMCs are diluted to 0.7–1.2 × 106 cells/mL, and GEM\n        generation is performed for PBMCs on a 10× Chromium Controller (10×\n        Genomics, Cat# PN110203).\n      \n      GEM generation, library construction, scRNA-seq BCR V(D)J, and\n      transcriptomic analysis\n    \nTiming: 22 h plus\n    \n      The generation of GEMs containing single cells , reverse transcription,\n      cDNA amplification, and library construction are performed by using\n      Chromium Next GEM Single Cell V(D)J Reagent Kits v1.1 (https://www.10xgenomics.com/support/single-cell-immune-profiling/documentation/steps/library-prep/chromium-single-cell-v-d-j-reagent-kits-v-1-1-chemistry[href=https://www.10xgenomics.com/support/single-cell-immune-profiling/documentation/steps/library-prep/chromium-single-cell-v-d-j-reagent-kits-v-1-1-chemistry]) according to the manufacturers’ guidelines (Figure 2[href=https://www.wicell.org#fig2]). 10× Genomics Gem codeGemcode is used to pack barcoded single-cell 5′\n      gel beads (10× Genomics, PN-1000020, PN-1000009, PN-1000003), a Master Mix\n      with cells, and partitioning oil on a microfluidic chip to generate\n      single-cell GEMs. The detailed process is listed below (Figure 2[href=https://www.wicell.org#fig2]).\n    \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2583-Fig2.jpg\n          Figure 2. Flow diagram of single-cell RNA sequencing\n        \n          GEM generation, cDNA amplification, library construction, and scRNA\n          sequencing were performed on the NovaSeq 6000 platform.\n        \n        Approximately 16 000 cells per sample are loaded onto the genomics\n        chromium controller chip.\n      \n        GEMs are generated by mixing the Master Mix with cells, and partitioning\n        oil on chromium next GEM Chip G (10× Genomics, Cat# PN-2000177). The gel\n        beads are dissolved and lysed copartitioned cells to release\n        oligonucleotides, the latter are mixed with cell lysate and a Master\n        Mix, poly-adenylated mRNA is reversed transcription to 10× full-length\n        cDNA.\n      \n        Recycle and purify the GEMs by Dynabeads MyOne™ SILANE (10× Genomics,\n        Cat# PN-2000048) cleanup mix and Buffer EB (Qiagen, Cat# 19086), and\n        then break the GEMs and recover pooled post-GEM-RT.\n      \n        Amplify 10× barcoded full-length cDNA via polymerase chain reaction",
    "(PCR) with primers against common 5′ and 3′ ends. cDNA amplifications\n        are purified using the SPRIselect Reagent Kit (Beckman Coulter, Cat#\n        B23318), and then the quality test of cDNA amplifications is performed\n        on a 2100 Bioanalyzer instrument (Agilent, Cat# SD-UF0000034 Rev. D) (Figure 3[href=https://www.wicell.org#fig3]A).\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2583-Fig3.jpg\n              Figure 3. Quality control of amplified cDNA libraries and\n              filtration of raw sequences data\n            \n              (A) Under the electropherogram, the region map (left) shows that\n              the peak shapes are distributed in the region of 700–2,000 bp,\n              which corresponds to the segment line on the map of agarose gel\n              electrophoresis (right).\n            \n              (B) Available cell diagrams (one sample). The abscissa represents\n              the barcode number, and the ordinate represents the UMI number.\n              The barcode in green is the valid cell, and the gray line is the\n              background.\n            \n              (C) Filtration of abnormal cells. The top panel shows the\n              information of cells in each group before filtering; the bottom\n              panel shows the information of cells in each sample after\n              filtering. The left side shows the gene number in a single cell.\n              The middle shows the UMI in a single cell. The right side shows\n              the percentage of mitochondrial genes in a single cell.\n            \n              (D) The gene number of a single cell after filtering in each\n              sample. A dot represents a single cell.\n            \n        Construct BCR V(D)J and 5′ gene expression (GEX) libraries:\n        \n            Enrich the 10× barcoded full-length V(D)J segments (Chromium Single\n            Cell V(D)J Enrichment Kit, 10× GENOMICS, Cat# PN-1000016) and 5′\n            gene segments (Chromium Single Cell 5′ Library Kit, 10× GENOMICS,\n            Cat# PN-1000002) from cDNA amplifications (step 19), respectively.\n          \n            Perform enzymatic fragmentation and size selection to generate\n            variable length segments.\n            \n                Add the sample index P7, an Illumina Read 2 primer sequence,\n                A-tailing, adapter ligation.\n              \n                sample index PCR on a thermal cycler to construct BCR V(D)J\n                libraries.",
    "Note: The BCR V(D)J libraries are cleaned\n      using the SPRIselect Reagent Kit, and the final V(D)J enriched libraries\n      and 5′ gene expression libraries are sequenced on the NovaSeq 6000\n      platform (Illumina, Cat#20012850).\n    \n        The raw data of single-cell sequencing are prepared for downstream\n        analysis, and uploaded to BioProject, which is mentioned in the\n        “Deposited data” section of the\n        key resources table[href=https://www.wicell.org#key-resources-table].\n      \nProcess single-cell BCR V(D)J sequencing data\nTiming: 4 h\n      The processing of single-cell BCR V(D)J sequencing data is based on Cell\n      Ranger (https://support.10xgenomics.com/single-cell-vdj/software/overview/welcome[href=https://support.10xgenomics.com/single-cell-vdj/software/overview/welcome]), and the detailed procedures are listed below.6[href=https://www.wicell.org#bib6],7[href=https://www.wicell.org#bib7]\nData preparation.\n      Transfer the BCL format (raw data) to Fastq format using the Cellranger\n      Mkfastq.\n    \n        Cell filtering.\n        A small part of 10× V(D)J microdroplets contains no cells with detected\n        barcode sequences, which is the background noise and may influence the\n        accuracy of downstream analysis. Effective barcodes are selected based\n        on the following criteria (Figure 3[href=https://www.wicell.org#fig3]B).\n        \nBarcodes should contain effective, highly convincing contigs.\n            Each barcode contains at least three filtered UMIs, and each UMI\n            contains at least two read pairs.\n          \nThe cells with barcodes are removed as below:\nN\n50\nL\nm\na\nx\n<\n3\n%\n      N50: When all the UMI read lengths are summed in descending order until\n      the total length is over 50% of the genome, the length of the last UMI is\n      N50. Lmax: The maximum length of all UMI read lengths.\n    \nReads filter.\n      Align all sequencing reads to the reference of V(D)J segments. The read\n      pairs with over 15 bp nucleotides that aligned referenced segments are\n      reserved. The reserved read pairs are used for contig V(D)J genes (Figures 3[href=https://www.wicell.org#fig3]C and 3D).\n    \n        Contig assembly.\n        \n            Construct a De Bruijn directed graph based on k-mers in every\n            single-cell barcode.8[href=https://www.wicell.org#bib8]\n            Expand k-mers to generate the paths (putative contigs) based on UMI\n            and the base quality of reads.",
    "Assign each UMI to a single path based on the alignment scores of\n            reads.\n          \nOutput the paths with at least one UMI (Contig).\n        Contig annotation.\n        The assembled contig is aligned to the reference sequence of the germ\n        cell line to annotate the regions of V, D, J, C, and the 5′UTR using the\n        Smith Waterman algorithm. Then, the CDR3 region is identified in the\n        contigs, and the contigs are selected based on the following criteria:\n        \n            Full length: extending from the beginning of the V gene to the end\n            of the J gene.\n          \n            Initiation codon: annotated V gene contains an identifiable\n            initiation codon.\n          \nCDR3 region: contains an annotated CDR3 region.\n            No termination codon: no termination codon in the region from the V\n            gene to the J gene.\n          \n            Special structure: | Lvj – Dvj\n            | < 25.\n            Lvj: The sum of the lengths of the V gene and the J gene.\n            Dvj: The length of the region from the beginning of the V\n            gene to the end of the J gene. IgH: -55 < Lvj – Dvj\n            < +25.\n          \nContig selection.\n      Each cell barcode corresponds to two contigs, including the heavy and\n      light chains of the BCR. The contig with the maximum number of UMIs is\n      defined as the “Top Contig” by Cell Ranger. A contig is selected under the\n      following conditions: contained CDR3 region and at least 2 UMIs; the\n      number of UMIs is over 20% of the Top Contig.\n    \n        Assembly of the consensus sequence and classification of clonotypes.\n      \n      The selective contigs are assembled and polymorphic sites are integrated\n      to obtain the consensus sequence. A clonotype is defined as cells with the\n      same CDR3 nucleotide sequence. The efficacious barcodes are the abundance\n      of this certain clonotype.\n    \nAnalysis of BCR V(D)J sequencing data\nTiming: 2–4 weeks\n    \nCharacter analysis.",
    "The characteristics of CDR3, the V/J gene, and V-J pairs are analyzed\n      using Cell Ranger. In this section, the length of CDR3 amino acids, the\n      distribution and frequencies of V/J gene segments, and the frequencies of\n      V-J pairs are presented.\n    \nAnalysis of the BCR clonotypes among different samples.\n      The clonotypes with the same CDR3 nucleotides may be named differentially\n      among different samples, and these clonotypes are renamed by merging into\n      one. The statistical analysis of overlapping and nonoverlapping clonotype\n      numbers is carried out with the Sunflower diagram (Figure 4[href=https://www.wicell.org#fig4]).\n    \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2583-Fig4.jpg\nFigure 4. The characteristics of BCR\n(A) The distribution of BCR IGHV gene segments in naïve B cells.\n(B) The distribution of BCR IGHJ gene segments in naïve B cells.\n(C) The distribution of BCR V-J pairs in naïve B cells.\n          (D) The distribution of CDR3 amino acid lengths in naïve B cells in\n          IRs.\n        \n          (E) The distribution of CDR3 amino acid lengths in naïve B cells in\n          INRs.\n        \n      Processing of 5′ gene expression of single-cell RNA-seq data\n    \nTiming: 4 h\nFilter the scRNA-seq data.\n      Low-quality barcodes and UMIs are removed to obtain clean reads (Figures 3[href=https://www.wicell.org#fig3]C and 3D), and UMI numbers are counted to obtain a gene matrix and then\n      imported to Seurat 3.1.1.3[href=https://www.wicell.org#bib3] The code for filtering the\n      scRNA-seq data is shown in Code box 1.\n    \nCODE BOX 1. FILTER THE scRNA-SEQ DATA\nlibrary(Seurat)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(patchwork)\ndata_name =\n          c(\"INR-1\",\"INR-2\",\"INR-3\",\"INR-4\",\"INR-5\",\"INR-6\",\"INR-7\",\"INR-8\",\"IR-1\",\"IR-2\",\"IR-3\",\"IR-4\",\"IR-5\",\"IR-6\",\"IR-7\",\"IR-8\",\"IR-9\",\"IR-10\")\nobject.list <- list()\nfor (i in seq(data_name)) {\nmat <- Read10X(data.dir = data_name[i], gene.column = 1)\nobject.list[[i]] <- CreateSeuratObject(counts = mat, project =\n          data_name[i], assay = assay)}\n## merge Seurat object\nobject <- merge(x = object.list[[1]], y = unlist(object.list[-1]),\n          add.cell.ids = data_name)\n## filtering\nobject <- PercentageFeatureSet(object, pattern = \"ˆMT-\",\n          col.name = \"Percent_mito\")\nobject <- subset(object, subset = Percent_mito < 10)",
    "object <- subset(object, subset = nCount_RNA < 8000)\nobject <- subset(object, subset = nFeature_RNA > 500 &\n          nFeature_RNA < 4000)\n        Normalize the gene expression data and perform batch effect correction.\n        \n            The gene expression of a single cell is normalized by performing the\n            global-scaling normalization method “LogNormalize”.\n            \nCritical: The UMI count data\n              for each gene are divided by the total UMI count of each cell.\n              Then, the scale factor is multiplied. Finally, log transformation\n              is used for normalization.\n            \n            Batch effects are corrected using canonical correlation analysis and\n            mutual nearest neighbor (MNN) analysis in Seurat 3.1.1 to aggregate\n            all samples.9[href=https://www.wicell.org#bib9] A total of 2000 highly variable\n            genes are selected from each sample based on a variance stabilizing\n            transformation, anchors are identified between two individual data\n            points, and correction vectors are calculated to generate an\n            integrated expression matrix, which is used for subsequent cell\n            clustering.\n          \n        CODE BOX 2. NORMALIZE THE GENE EXPRESSION AND CORRECT BATCH EFFECT\n      \n## integration\nobject <- NormalizeData(object, normalization.method =\n          \"LogNormalize\",scale.factor = 10000)\nobject <- FindVariableFeatures(object, selection.method =\n          \"vst\",nfeatures = 2000)\nobject <- ScaleData(object = object, vars.to.regress =\n          NULL,features = rownames(object))\nobject.list <- SplitObject(object, split.by =\n          \"orig.ident\")\nobject.list <- SplitObject.Image(object.list)\nobject <- FindIntegrationAnchors(object.list, dims = 1:50,\n          normalization.method = \"LogNormalize\", anchor.features =\n          3000, k.filter = 200)\n        Perform dimensional reduction and cell clustering.10[href=https://www.wicell.org#bib10]\n            The normalized data of 2000 highly variable genes (step 32) are\n            subjected to principal component (PC) analysis.\n          \n            The variability between two single cells is plotted in a\n            two-dimensional diagram with the parameters of 50 PCs, and the\n            uniform manifold approximation and projection (UMAP) and\n            t-distributed stochastic neighbor embedding (t-SNE) are employed to\n            reduce the dimensionality.\n          \n            Similar cells with the same PC parameters are clustered using\n            “FindClusters” in Seurat based on graph-based clustering.\n          \n            The cell clusters are visualized through t-SNE and UMAP diagrams.",
    "CODE BOX 3. DIMENSIONAL REDUCTION AND CELL CLUSTERING\n## Find clusters\nobject <- FindNeighbors(object, reduction = \"pca\",\n          dims = seq(50),force.recalc = TRUE)\nobject <- FindClusters(object, resolution = \"pca\",\n          temp.file.location = getwd())\n## Draw PCA scatter plot\nDimPlot(object, reduction = \"pca\")+ NoLegend()\n## Draw tsne plot\np1 <- DimPlot(object, reduction = '\ntsne', group.by = \"orig.ident\",\n          cols=rainbow(nlevels(object@meta.data$orig.ident)), label = FALSE)\np2 <- DimPlot(object, reduction = '\ntsne', group.by = \"seurat_clusters\",\n          cols=rainbow(nlevels(object@meta.data$seurat_clusters)), label = TRUE)\nggsave(p1+p2, file = \" tsne.pdf\")\n## Draw UMAP plot\np1 <- DimPlot(object, reduction = 'umap', group.by =\n          \"orig.ident\", cols=rainbow(nlevels(object@meta.data$orig.ident)), label = FALSE)\np2 <- DimPlot(object, reduction = 'umap', group.by =\n          \"seurat_clusters\", cols=rainbow(nlevels(object@meta.data$seurat_clusters)), label = TRUE)\nggsave(p1+p2, file = \"UMAP.pdf\")\n## Save data object\nDefaultAssay(object) <- \"RNA\"\nsave(object, file = \"obj.Rda\")\nIdentification of B cell subpopulations\nTiming: 1 day\n        Identify B cell subpopulations.\n        \n            Based on SingleR R packages, six cell populations (NK cells, B\n            cells, T cells, DCs, platelets and monocytes) are annotated,\n            including three B cell subtypes based on the expression of specific\n            marker genes (Figure 5[href=https://www.wicell.org#fig5]).\n            \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2583-Fig5.jpg\n                  Figure 5. Identification of B cell subpopulations by scRNA\n                  sequencing\n                \n(A) PCA of valid cells for cell clustering.\n                  (B) T-SNE plot displaying clustering and annotation of\n                  sequenced and bioinformatically evaluated six cell\n                  populations.\n                \n                  (C) UAMP plot displaying clustering and annotation of\n                  sequenced and bioinformatically evaluated six cell\n                  populations.\n                \n                  (D) UAMP plot displaying the expression of specific marker\n                  genes of naïve B cells, memory B cells and plasma cells.\n                \n                  (E) The dotplot diagram shows the expression of marker genes\n                  of naïve B cells, memory B cells and plasma cells.\n                \n            The “FindAllMarkers” function in the Seurat package is employed to\n            investigate the expression of specific marker genes of B cell\n            subtypes using Wilcoxon rank sum test.11[href=https://www.wicell.org#bib11] The\n            specific marker genes of naïve B cells are TCL1A,",
    "IL4R and CD69. The specific marker genes of memory B\n            cells are AIM2 and TNFRSF13B. The specific marker\n            genes of plasma B cells are JCHAIN, MZB1 and\n            XBP1 (Figures 5[href=https://www.wicell.org#fig5]D and 5E).\n          \nCritical: Specific marker genes are\n      defined genes that are highly expressed in one B cell subtype.\n    \nCODE BOX 4. IDENTIFY B CELL SUBPOPULATIONS\n## Find DE Gene\nIdents(object) <- \"seurat_clusters\"\nobj.markers <- FindAllMarkers(object = object, only.pos =\n          TRUE,\nmin.pct = 0.25, logfc.threshold = 0.25,\nreturn.thresh = 0.01, pseudocount.use = 0)\nsave(obj.markers, file = \"markers.Rda\")\n## Express distribution of marker genes\numapplot1 <- DimPlot(recluster_B, reduction = \"umap\",\n          group.by = \"orig.ident\", pt.size = 1.5)\nFeaturePlot(cluster_B, features = c(\"TCL1A\")\nstat<-table(cluster_B$orig.ident,cluster_B$seurat_clusters)\nstat\n## Draw Dotplot diagram\nmarker <-\n          c(\"CD19\",\"MS4A1\",\"CD79A\",\"CD79B\",\"TCL1A\",\"IL4R\",\"CD69\",\"AIM2\",\"TNFRSF13B\",\"CD27\",\"JCHAIN\",\"MZB1\",\"XBP1\")\nDotPlot(cluster_B, features = marker)+coord_flip()+\ntheme_bw()+\ntheme(panel.grid = element_blank(), axis.text.x=element_text(hjust =\n          1,vjust=0.5))+\nlabs(x=NULL,y=NULL)+guides(size=guide_legend(order=3))+\nscale_color_gradientn(values = seq(0,1,0.2),colours =\n          c('#007799','#CCEEFF','#FFC8B4','#C63300'))\n      Analysis of the differentiation trajectory of B cell subtypes\n    \nTiming: 2 weeks\n      The differentiation trajectory is analyzed using the Monocle R package\n      with the parameters of sigma = 0.001, lambda = NULL, and param. gamma =\n      10, and tol = 0.001.12[href=https://www.wicell.org#bib12] Monocle develops BEAM to test\n      specific gene expression of cellular differentiation.5[href=https://www.wicell.org#bib5]\n      In addition, Monocle identified the genes that are differentially\n      expressed in different B cell subtypes. The main processes and the code\n      are listed below.\n    \nInformation selection.\n      Select specific genes for trajectory analysis using the normalized\n      expression profiles of B cell subtypes.\n    \nPlot cell trajectory.\n      Dimension reduction for the distribution of single cells is performed\n      using selected genes (step 35) by the DDRTree reduction approach.5[href=https://www.wicell.org#bib5]\n      After dimension reduction, cells are distributed in two-dimensional space.\n      Then, the centroids of B cell subtypes are identified using K-mean and\n      these centroids are linked by fitted lines (forming a tree). Each single\n      cell is updated to the nearest tree trunk (current trajectory). Small",
    "redundant branches are filtered, and the two-dimensional tree is\n      transformed into a higher dimensional structure to obtain optimum cell\n      trajectories (Figure 6[href=https://www.wicell.org#fig6]A).\n    \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2583-Fig6.jpg\n          Figure 6. Functional analysis of B cell subtypes\n        \n          (A) Differentiation trajectory of B cell subtypes. Cells with similar\n          differentiation are clustered together. Two cell subtypes with the\n          same differentiation track may have a differentiation relationship. A\n          dot represents a single cell.\n        \n          (B) Heatmap of the differentially expressed genes in naïve B cells\n          between the IR and INR groups.\n        \n          (C) GSEA-scoring plots of the gene expression profile in naïve B cells\n          from the IR and INR groups.\n        \nCritical: The origin of the cellular\n      trajectory is determined by the biological background.\n    \nCODE BOX 5. ANALYZE THE DIFFERENTIATION TRAJECTORY\nlibrary(Seurat)\nlibrary(monocle)\nlibrary(cowplot)\nlibrary(igraph)\nlibrary(dplyr)\n#Trajectory\n##obj created by Seurat\nload(\"obj.Rda\")\nobj@meta.data$Samples<-obj@meta.data$orig.ident\n        obj@meta.data$Clusters<-obj@meta.data$seurat_clusters\n      \ndata <- as(as.matrix(obj@assays$RNA@counts),\n          \"sparseMatrix\")\npd <- new(\"AnnotatedDataFrame\", data =obj@meta.data)\nfData <- data.frame(gene_short_name = row.names(data),row.names =\n          row.names(data))\nfd <- new(\"AnnotatedDataFrame\", data = fData)\nmnc_obj <- newCellDataSet(data, phenoData = pd, featureData =\n          fd,lowerDetectionLimit = 0, expressionFamily =\n          negbinomial.size())\nmnc_obj <- setOrderingFilter(mnc_obj, ordering_genes =obj@assays[[\"RNA\"]]@var.features)\nmnc_obj <- reduceDimension(mnc_obj, method = 'DDRTree',\n          verbose = F, scaling = T, max_components = 2, norm_method =\n          'none', maxIter = 10, ncenter = NULL, tol = 0.001, sigma = 1,\n          lambda = NULL, param.gamma = 10 )\nmnc_obj <- orderCells(mnc_obj)\npData(mnc_obj) <- droplevels(pData(mnc_obj))\n##draw\np1 <- plot_cell_trajectory(mnc_obj, color_by =\n          \"Samples\",show_branch_points = F)\np2 <- p1 + facet_wrap(∼Samples,nrow = 1)\np3 <- plot_cell_trajectory(mnc_obj, color_by =\n          \"Clusters\",show_branch_points = F)\np4 <- p3 + facet_wrap(∼Clusters,nrow = 1)\np5 <- plot_cell_trajectory(mnc_obj, color_by =\n          \"State\",show_branch_points = F)\np6 <- p5 + facet_wrap(∼State,nrow = 1)\n##state diff\ndiff_state_res <- differentialGeneTest(mnc_obj,\n          fullModelFormulaStr = \"∼State\", cores = 4)\nsaveRDS(diff_state_res, file = \"diff_state.rds\")\nsig_gene_names <-\n          rownames(subset(diff_state_res[order(diff_state_res$qval),],\n          qval < 1e-7))\np1 <- plot_genes_jitter(mnc_obj[head(sig_gene_names, 10),],\n          grouping = \"State\", color_by = \"State\", ncol =\n          5)",
    "ggsave(\"Diff.state.pdf\", p1, width = 12, height = 5,\n          limitsize = FALSE)\n##pseudotime diff\ndiff_Pseudotime_res <- differentialGeneTest(mnc_obj,\n          fullModelFormulaStr = \"∼sm.ns (Pseudotime)\", cores =\n          cores)\nsaveRDS( diff_Pseudotime_res, file = \"diff_Pseudotime.rds\"\n          )\nsig_gene_names <- rownames(subset(\n          diff_Pseudotime_res[order(diff_Pseudotime_res$qval),],\n          qval < 1e-7))\np1 <- plot_genes_in_pseudotime(mnc_obj[head(sig_gene_names,10),],\n          ncol = 5, color_by = \"Samples\")\np2 <- plot_pseudotime_heatmap(mnc_obj[sig_gene_names,],\n          num_clusters = nlevels(pData(mnc_obj)$Clusters), cores = 4,\n          show_rownames = T, return_heatmap = T)\nggsave(\"Diff.genes_in_pseudotime.pdf\", p1, width = 12,\n          height = 5, limitsize = FALSE)\nggsave(\"Diff.pseudotime_heatmap.pdf\", p2, width = 10,\n          height = 30, limitsize = FALSE)\n##branch diff\nBEAM_res <- BEAM(mnc_obj, branch_point = 1, cores = 4)\nsaveRDS(BEAM_res, file = \"BEAM.1.rds\")\nsig_gene_names <- rownames(subset(BEAM_res[order(BEAM_res$qval),],\n          qval < 1e-7))\np1 <-\n          plot_genes_branched_pseudotime(mnc_obj[head(sig_gene_names,10),],\n          branch_point = 1, color_by = \"Samples\", ncol = 5)\np2 <- plot_genes_branched_heatmap(mnc_obj[sig_gene_names,],\n          branch_point = 1, num_clusters = 5, cores = 4, show_rownames = T,\n          return_heatmap=T)\nggsave(\"Branch.1.genes_pseudotime.pdf\", p1, width = 12,\n          height = 5, limitsize = FALSE)\nggsave(\"Branch.1.genes_heatmap.pdf\", p2, width = 10,\n          height = 30, limitsize = FALSE)\n      Analysis of the transcriptome and the function of B cells\n    \nTiming: 2 weeks\n        Differentially expressed genes (DEGs) are analyzed among different\n        groups. DEGs are identified under the condition of log2Fold\n        change (FC) ≥1 and adjusted p < 0.05 (Figure 6[href=https://www.wicell.org#fig6]B). Gene set enrichment analysis (GSEA) (GSEA 4.2.3,\n        https://www.gsea-msigdb.org/gsea/index.jsp[href=https://www.gsea-msigdb.org/gsea/index.jsp]) is employed to analyze the functions of B cells using the B cell\n        transcriptome with 1,000 permutations. The functions with Nom\n        p < 0.05, FDR < 0.25 and |NES| >1 are significantly\n        enriched (Figure 6[href=https://www.wicell.org#fig6]C)."
  ],
  "subjectAreas": [
    "Rnaseq",
    "Sequence Analysis",
    "Immunology",
    "Bioinformatics",
    "Cell Isolation",
    "Cell Biology",
    "Cell-Based Assays",
    "Molecular Biology",
    "Single Cell"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology",
    "Bioengineering & Technology"
  ]
}