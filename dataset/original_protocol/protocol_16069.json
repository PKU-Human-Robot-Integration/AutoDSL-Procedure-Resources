{
  "id": 19899,
  "origin_website": "Wiley",
  "title": "Repeated Measurement of Microglia-Dendritic Spine Interactions Using Multi-Photon Imaging",
  "procedures": [
    "For the accurate measurement of microglial dynamics, the upper and lower limits of the ROI should be set, and the collection of image stacks should be continually looped, with minimal time between the final slice of one image stack and the first slice of the next stack. Manual collection can also be performed, although this approach can be more prone to error. This protocol details the collection of images from a live mouse at 1-min intervals. At the end of the protocol, you will have 45-60 image stacks of a region measuring approximately 100 µm × 100 µm × 30 µm. Each stack consists of 30 z-slices, each slice separated by 1-µm intervals in the z plane, allowing structures to be tracked in three dimensions (3D). The protocol also outlines how to set up the ROI so future imaging sessions can image the same location, allowing for comparisons over days, weeks, and months.\nMaterials\nAll breeding and animal protocols must be approved by your Institute prior to experimentation.",
    "Mice with cranial windows: This protocol used male CX3CR1+/gfp × Thy-1egfp mice on a C57BL/6J background. CX3CR1+/gfp and Thy-1egfp mice are available from Jackson Laboratories and can be cross-bred. Animals were housed with unlimited access to food and water in a 12-hr day-night cycle facility. Whenever possible, siblings are group housed. Cranial windows were implanted at 2 months of age. Mice were then housed singly for 1 hr before returning to their cage and being given 3 weeks to recover prior to imaging. All breeding and animal protocols were approved by the University of Tasmania Animal Ethics Committee (A16806) and in accordance with the Australian code of practice for the care and use of animals for scientific purposes. See Holtmaat et al. (2009[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-bib-0005]) and Kılıç et al. (2020[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-bib-0007]) for detailed protocols for cranial window implantation. (Note: This protocol can be done with any model with fluorescence-marked neurons and microglia. This includes other genotypes as well as virally transfected fluorescent animals.)\nIsoflurane\nOxygen\nTissues\nEye lubricant (Poly Visc Lubricating Eye Ointment)\nWater (tap or MilliQ is suitable).\nMulti-photon microscope\nStereotaxic frame\nHeating pad\nAnesthetic vaporizer for induction and maintenance of anesthetic, i.e., isoflurane\nFiji\nMATLAB\n1. Anesthetize the mouse with a cleared cranial window.\nIsoflurane (5% in oxygen at 1.0 L/min) in an induction chamber is commonly used to induce anesthesia. After induction, maintain anesthesia with isoflurane levels at 2%-3% in oxygen at a flow rate of 0.3 L/min, delivered via a nose cone.\n2. Once anesthetized, transfer the mouse to a stereotaxic frame with a small heat pad on the base of the stereotaxic frame set to 37°C.",
    "A key danger to the mouse is hypothermia due to the extended anesthesia. Body temperature should be closely monitored throughout the image capture session. A tissue blanket can be placed over the mouse's body if the body temperature drops.\n3. Periodically check the vital signs of the mouse. At a minimum, these checks should include body temperature, breathing rate, reflex response (e.g., pedal withdrawal or tail pinch), oxygen flow rate, and the flow rate of any anesthetic. The mouse must be kept under a light anesthetic, with steady breathing between 50 and 70 breaths per minute, no reflex response, and a temperature of approximately 37°C. Health checks should occur regularly throughout the imaging session, with the time of each check recorded to avoid any skewing of the data due to any variation in time between image stacks.\nOne must ensure delivery of an appropriate dose of isoflurane (overdose/toxicity or insufficient/waking up). Inadequate anesthesia can severely affect image quality. For example, if the breath becomes gasp-like, there is a risk to the animal's health, and image quality will be poor due to large amounts of movement. Gasp-like breaths can occur due to a low oxygen flow rate or a high anesthetic flow rate. If this occurs, check the positioning of the animal's head, as awkward positioning can lead to difficulty breathing. Also, check the flow rate of both the anesthetic and oxygen. If gasp-like breaths become common during anesthesia, consider other methods of anesthesia, such as a ketamine/xylene injection.\nIf breathing is becoming rapid (above 70 breaths/min), it is likely that the animal is not sufficiently anesthetized, i.e., waking up. Check the level of isoflurane and make any required adjustments. Checking the mouse every 8 min ensures adequate body temperature and anesthetic levels while maintaining consistent imaging acquisition times.",
    "4. Coat the eyes with eye lubricant to avoid them drying out.\n5. Using the stereotaxic frame, immobilize the head.\nAdditional care must be taken at this stage to ensure the head is fully immobilized, as even small levels of movement will result in irreparable drift in the final images. Here we used a stereotactic frame to ensure the head was firmly held in the desired position.\n6. Once the head is immobilized, place the mouse under the microscope and use a 20× magnification water immersion lens to find an easily identifiable vasculature landmark under bright field imaging conditions. Capture an image of the landmark for reference in future sessions.\nThe landmark will act as a reference point in future sessions, allowing you to find the exact imaging location easily.\n7. Switch the microscope to multiphoton mode at wavelength 910 nm, gain −670, and power at the imaging site set between 0.7 mW and 0.8 mW.\nWe recommend starting imaging at a lower power and shifting towards your target power to avoid damaging the brain if the power fluctuates. For our imaging, we used the parameters outlined in step 7.\nThere will be some variation in fluorescence intensity between regions and between animals. Use this step to establish and record the ideal image capture settings for each ROI.\n8. Set the zoom to a low magnification and examine the area for a potential region of interest (ROI) (Fig. 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0002]).",
    "For our study, the ideal ROI position would include at least one dendrite closely aligned to a single Z-plane (parallel to the cortical surface) and multiple dendritic spines and branches that allowed the dendrite to be mapped back to the soma. Record the location of the ROI in a manner that will make it easy to find in the next imaging session. This can be done by recording the x, y, and z coordinates or sketching a location map, including the field of view movement from the reference imaging starting position.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/c5a444d9-64ee-4b60-a7ea-812badb427bc/cpz1791-fig-0002-m.jpg</p>\nFigure 2\nExample multiphoton images illustrating clear landmarks desired for a region of interest. A clear window will enable imaging of well-defined, easily identifiable microglia and dendrites. An overview of the region of interest (ROI) is captured at the start of the imaging series (A). The ROI is selected based on easily identifiable dendritic landmarks. The large clear patches moving out from the bottom left are blood vessels. These vessels make for an ideal landmark as they are visible both with and without fluorescence. In the top right of the image, auto-fluorescing neuropil are visible. These are sometimes captured in overview images due to the angle of the animal. Provided they do not cover the ROI, they do not affect the analysis. The image is then magnified (B), and the ROI is selected and centered to capture as much of the dendritic structure as possible (green). The image on the right is a single z-slice from the middle of the ROI. A triangular structure of dendrites can be seen running from the top right to the bottom left. Above the dendrites, a single microglial cell body can be seen with its processes spreading toward the dendrites. Scale bar = 50 µm.",
    "9. Set a 512 × 512-pixel field of view.\nThe intent is to create a field of view that can be captured by the microscope in 2 s. For example, if using a 20× magnification lens, a zoom setting of 4.2 will give a field of view of 102 × 102 µm and will be captured in 2 s (Fig. 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0002]). If these settings do not capture an image in 2 s, adjust your settings until the image can be acquired in 2 s. The rest of the protocol can then be run without change. By capturing each image in 2 s, the image stack can contain 30 slices and be acquired in 1 min. If each image slice takes longer than 2 s to capture, the total thickness of the stack will need to be reduced accordingly to enable image collection at 1-min intervals.\nWhen setting your field of view, keep in mind the structures that you are trying to measure. The accuracy of the measurements is limited to one pixel. This means that with the current field of view, you will have a measurement limit of 0.2 µm. If you require smaller measurements, you can reduce the field of view further.\n10. Set the z-step distance to 1 µm and set the points for the top and the bottom of the stack, creating a z depth of 30 µm.\nThese settings create a Z-stack that can be captured in 1 min. The target dendrite should be placed in the middle of the Z-stack. Fast image stack acquisition was required in this study. If fast acquisition is not required, these parameters can be changed to increase the ROI, width, depth, or resolution of the image stack but must be consistent across sessions.",
    "11. Set the software to loop at 1-min intervals for 8 min.\nSetting the software to loop means that it will capture a stack at the allotted intervals. If you require a different image acquisition rate, set the loop to the desired rate.\n12. Check the animal's health and make any required adjustments before starting the imaging.\n13. Start the loop and begin capturing images.\nEnsure you periodically check the vital signs of the mouse. Setting these checkups for the end of a loop is most convenient.\n14. Once the loop is done, compare the first image with the last. This can be done in Fiji. Check if the image has drifted in the x, y, or z axis and correct for any detected drift before starting the next loop.\nCare must be taken when reviewing any potential drift in the field of view in any of the three planes (x, y, and z). Large amounts of x-y drift can render an imaging session useless, and failing to correct large amounts of Z drift can dramatically increase the work required during image processing. Pay close attention to the edges/corners of the image where small positional movements are most easily detected.\n15. Continue capturing image stacks in this manner for the duration of the imaging session.\n16. When the imaging session is complete, turn off the flow of anesthetic and remove the mouse from the stereotaxic frame. Return the mouse to a clean cage, heated via a heating pad under the cage, and monitor carefully during recovery.\n17. This imaging protocol can be repeated in future imaging sessions according to the timeline for the study or as long as the cranial window remains clear (open).",
    "Each time the animal is secured to the stage for imaging, the head position and imaging angle may differ slightly. Take notes of the posture of the animal and any key landmarks when imaging. This information will help you locate the same ROI in subsequent imaging sessions.",
    "Following collection, the image stacks acquired in Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-prot-0001] require preparation before analysis. This process can be broken into three stages: 1) denoising, 2) z-drift correction, and 3) the creation and alignment of a hyperstack. A hyperstack is a four-dimensional stack with sliders for time and depth. The amount of time and effort required in this protocol depends on the quality of the images collected, that is, how much noise is present in the images and how much drift on the x-, y-, and z-axis may have occurred during image collection. Noise can occur within an image for various reasons, such as fluctuations in laser power, overexposure, or use of a high-gain setting. The result is an image with random illuminated pixels that make it difficult to analyze fine structures. Removing the noise and realigning the image makes for a more accurate analysis of microglial process movement.\nTo save time, we recommend performing Basic Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-prot-0002] in batches, step by step, i.e., adjusting images from multiple imaging sessions simultaneously. For example, doing all the denoising, then all the z-drift corrections, and then the hyperstack alignment, rather than taking a single imaging session through to completion before moving on to the next one.\nMaterials\nThe image preparation and analysis processes require two programs and plugins. A list of the programs and plugins and the version used in the protocol are listed below.\nPrograms and plugins:\nMATLAB (CANDLE is less stable in newer versions of MATLAB; we used version 2013b)\nCANDLE multi-photon denoising (Coupé et al., 2012[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-bib-0003]) plugin for MATLAB (see Internet Resources)\nFiji 2.3.0 (or a similar version)\nHyperStackReg – plugin for Fiji (see Internet Resources)",
    "NOTE: The computing power required for these plugins will vary based on the images being analyzed. As a frame of reference, this protocol was tested and ran smoothly on a PC with 16 GB of RAM and an i9-8950HK processor.\nNOTE: Before opening MATLAB, ensure all images to be denoised are located in animal-specific folders, with each imaging session contained within a subfolder.\nDenoising\n1. Open MATLAB 2013b.\n2. Ensure the file path is set to the correct location.\nThe path can be seen in the address bar at the top of the program console (Fig. 3A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0003]). It should be set to the location of the CANDLE.m script; if it is not, click the browse button on the left side of the address bar (visible in Fig. 3B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0003]) and find and select the folder containing the CANDLE.m script.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/91ab7385-9b9c-447b-93f3-dc2c06288346/cpz1791-fig-0003-m.jpg</p>\nFigure 3\nA screenshot of the basic default MATLAB layout. Note that the address in the address bar (A) will vary based on where MATLAB is installed and where CANDLE is saved. (B) Browse for the folders button. (C) Current folder window showing the contents of the currently selected folder. The content displayed here will vary based on where MATLAB is installed and what is in the folder. The current image shows the launch script for the spine annotation. If we were using the CANDLE script, it would appear in this window instead of the launch script. (D) The console or command window is used to control MATLAB and to view currently running functions.\n3. Run the script.\nYou can run the script by either right-clicking on the script in the window on the right-hand side (Fig. 3C[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0003]) and selecting “run” or by typing ‘CANDLE’ into the console (Fig. 3D[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0003]).",
    "4. A window will open, asking you to select the images for denoising. Select all the images you wish to denoise.\n5. You will be prompted to enter the parameters for denoising. The following parameters are recommended:\nSmoothing parameter = 0.1, Patch radius = 2, Search Volume Radius = 3, and fast background processing enabled.\nThese settings provide effective denoising without significantly altering the image or over-taxing a computer's computational power. Each setting can be altered, though this is likely unnecessary. For a complete explanation of each setting, see https://sites.google.com/site/pierrickcoupe/softwares/denoising/multiphoton-image-filtering?authuser=0[href=https://sites.google.com/site/pierrickcoupe/softwares/denoising/multiphoton-image-filtering?authuser=0].\n6. Leave the script to run.\nThe script may take some time to run (up to several minutes per image). While running, it will say ‘busy’ on the bottom left-hand side of the MATLAB screen. Once the script is finished, it will say ‘ready’, as displayed in Figure 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0003]. When finished, MATLAB and any pop-up windows can be safely closed.\n7. The denoised files will appear sequentially in the same folder as the original files with the suffix ‘_denoised’.\nThis script copies and denoises your images; it will not overwrite your original images. The pop-ups that occur while the script is running are so that you can compare the two versions of the image and can be closed without fear of deleting either the original or the denoised image.\nAdjust for drift in the z-plane via stack alignment\nEach imaging session yielded approximately 45 stacks of images, i.e., one for every minute. To align each slice within each ROI image stack, we added a series of empty slices to the top and bottom of the z stack and then shifted the position of the image slices within the stack so they are consistently aligned across sessions (Fig. 4[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0004]). The following steps outline how to achieve this.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/d261b878-0095-4fca-9e81-ff6e6ad97660/cpz1791-fig-0004-m.jpg</p>\nFigure 4",
    "Example images demonstrate the z-plane adjustment such that all image stacks are the same depth with landmarks on the same plane. This can be achieved by selecting an image stack as the representative stack for the session—typically the first image stack—and finding a landmark (LM) within it. With the landmark chosen, blank slices are added to the start and end of all image stacks to set the landmark at the same z-slice in all stacks from that imaging session. These are then concatenated to make a four-dimensional stack known as a hyperstack.\n8. Open Fiji.\n9. Create an empty stack.\nTo do this, use File > New > Image > and create a stack of images with the exact measurements as the images you collected. In this example, we used a 512 × 512-pixel image filled with black, with 30 slices set to 8 bits.\n10. Save this image as a tiff and close it.\n11. Open your first denoised image for the first imaging session.\n12. Open the stack sorter and select ‘add slices’.\nTo add slices, go to Images > Stacks > Tools > Stack Sorter > Insert File and select the blank stack made in step 9.\n13. When asked how many slices to add, select 5. This will add five slices after the slice currently visible on your stack.\nIf you are at the top of the stack, it will add five slices after the first image. To return the first image to where it should be (now the sixth position in the stack), use the < and > keys at the top of the stack sorter. These buttons will shift the visible image back and forth by one position.",
    "14. Scroll to the bottom of the image and add five blank slices in the same manner as steps 12-13. You should now have your image stack flanked by 5 blank slices at the top and bottom of the stack.\nYou will not need to adjust the position of the slices, as they will be added after the final slice.\n15. Scroll through the stack of images slice by slice and find an easily identifiable landmark within the stack. Note what slice it is on.\nAt the top of the frame, Fiji will tell you the slice number you are currently viewing (z = x). Find an easily identifiable landmark and make note of the z-slice number. This is the slice number you need the landmark to be on in all your image stacks for this ROI.\n16. Open the next image stack and find the same landmark. Compare the slice number and determine how many slices need to be added or subtracted to have both landmarks on the same z-slice. For example, if the landmark is on the 20th slice in the first image stack and the 14th slice in the second (before any blank slices are added), you must add six slices to the start of the image to bring the landmark to the 20th slice. After this, add four slices to the bottom to generate an image stack of the same thickness as the first image stack. Continue this process for all image stacks in the time series (Fig. 4[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0004]), repeating steps 11-16 until all image stacks for ROI in the imaging session are aligned.",
    "In preparation for creating a hyperstack, all the image stacks must have the same number of slices. If you increase one stack to account for a large amount of drift, you must make the same increase to all the stacks. For example, if your image stack starts with 30 slices and you needed to add 12 to the start of an image to bring the landmarks in line, you would end up with a stack containing 42 slices. If you have followed steps 11-16, all other stacks now contain 40 slices. To adjust for the difference, you would need to go through and add two slices to the end of all the image stacks to bring them up to 42 slices each.\nHyperstack creation and alignment\nA hyperstack is a four-dimensional image stack with sliders for depth (z) and time (t) at the bottom of the image. Creating a hyperstack allows for the measurement of time and distance in the x, y, and z planes.\n17. Open all the images from the image session that went through z-alignment in the previous stage of the protocol.\nOpening all images together can be most efficiently achieved by opening the folder, storing them, selecting all the images, and dragging them into Fiji. Provided they are ordered appropriately in the folder, they will open in the correct order.\n18. Create a hyperstack using Images > Stacks > Tools > Concatenate. Select ‘All open windows’, and you will be prompted to name the image. We suggest using a title for the image that includes the animal identifier and imaging session number and select ‘Open as 4D image’. You do not need to select ‘Keep original images’ as this will not alter the source images.",
    "This process will produce an image with two sliders at the bottom. If you get an image with a single slider, it is likely that not all the stacks are the same size. Go back to the z-alignment stage and check the images. One slider can be used to scroll through the z-plane of the image and will be labeled with the letter z. The other slider, labeled with the letter t, can be used to scroll through each stack collected in the imaging session.\n19. With the image still open, select Plugins > HyperStackReg\n20. Select > Rigid Body Alignment > and click ok. This alignment can take some time, depending on the power of the PC.\nHyperStackReg will align each image in a hyperstack on the X and Y planes. The time this takes will vary. The computer it was tested on took an average of 5 to 10 min per hyperstack.\n21. Once the alignment is complete, save the file as a .tiff. These images will be used in step 25 of Basic Protocol 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-prot-0003].",
    "This protocol describes the software and steps needed to track and correlate dendritic spine and microglial process movements over time, both within and across multiple time points. Spine annotation can be done via numerous software packages, some of which are freely available (Fiji), while others require a license fee (Neurolucida, MicroDynamix). We used MATLAB, which also requires a license fee. Image annotation can be broken into two stages. The first is the dendritic spine annotation using ScanImage in MATLAB. A single image stack from each time point is annotated with all dendritic spines being marked and then correlated across all time points. The correlation allows for spine gain, loss, size, and maintenance to be tracked across time. Microglial processes are tracked in Fiji using the plugin TrackMate. The dendritic arbor is a fixed structure, which means we can use an image of the spine annotation as a guide for microglial contact annotation. Each microglial process can be identified and followed across a time series, and all dendritic spine contacts can be measured. Once both steps are complete, this protocol will combine all data into autogenerated spreadsheets with dendritic sizes across time as well as three additional spreadsheets. The first spreadsheet will provide information on the measurements within an image, such as process size and location. The second spreadsheet will provide information on the differences between each image, such as the distance moved by each spot between images. The third spreadsheet combines the first two to provide averages for all tracks. Across these spreadsheets, you will obtain microglial process speed, size, dwell time, and branching, and a labeled flow chart showing microglial process life span, branching, and contacts.\nMaterials",
    "The preparation and analysis processes require two programs and several plugins. Below is a list of the programs, plugins, and versions used in the protocol.\nPrograms and plugins:\nMATLAB (ScanImage is compatible with all versions 2013b to 2022; we have not tested this protocol in versions post-2022)\nScanImage (Pologruto et al., 2003[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-bib-0011])\nFiji 2.3.0\nTrackMate (Included with Fiji since August 2022)\nSpine annotation using ScanImage\n1. Open MATLAB.\n2. Set the directory so that the folder containing the launch.m script is displayed.\nThe correct folder address should be set in the top address bar (Fig. 3A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0003]); if it is not, click the ‘browse for folder’ button to the left of the address bar (Fig. 3B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0003]) and select the desired folder.\n3. Run the launch.m script by right-clicking the script (Fig. 3C[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0003]) and selecting ‘run’ or typing ‘launch’ into the console (Fig. 3D[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0003]).\n4. Two windows will open: in the ‘stack browser control’ window (Fig. 5A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005]), click the arrow pointing to the right (highlighted with a red box), select ‘none’ under filter, and then select ‘new browser window’, which will open three windows. The ‘stack browser units’ window (Fig. 5B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005]) sets the scale for the annotations, the ’stack browser annotations’ window (Fig. 5C[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005]) lists the annotations as they are made, and the ‘stack browser’ window (Fig. 5D[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005]) displays the image and annotations.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/9cf0127d-dcaf-41b7-932c-1f4673afe0ca/cpz1791-fig-0005-m.jpg</p>\nFigure 5",
    "Screenshots of the windows used in the annotation process in MATLAB, labeled in order of appearance. When the script is launched, window a (StackBrowserContol) will open to provide overall control of the annotation process. When ‘new browser window' is selected in window a, windows b (‘StackBrowserUnits’), c (‘StackBrowserAnnotations’), and d (‘StackBrowser') will open. Window b sets the units of measurement for the annotation, window c lists the annotations that have been made, and window d displays the image and is used to place the annotations. When ‘correlate annotations’ is selected in window a, window e (‘AnnotationCorrelation’) will open. Window e is used to set the old and new images during correlation and to correlate the individual annotations.\n5. In the ‘stack browser’ window (Fig. 5D[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005]), select ‘browse’ on the top right and choose the image of interest.\nWe recommend using the first image from each imaging session to keep the annotations consistent. We recommend using a single stack from the imaging session for the dendritic spine analysis, not the hyperstack created at the end of Basic Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-prot-0002]. While the annotation will work with the hyperstack, large image files will decrease the computer processing speed, which is more noticeable when sequential image stacks are opened (refer to step 12 below).\n6. In the ‘stack browser units’ window (Fig. 5B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005]), select ‘enable unitary conversions’ and enter the scale and unit of measurement in the labeled locations.\nBased on the microscope settings used in Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-prot-0001], this is 0.2 for the x and y plane and 1 for the z plane. The units for all panes are micrometers.\n7. With the image displayed in the window, familiarize yourself with the controls labeled ‘Frame’, Zoom’, ‘Location’, and ‘Look up table’, which control the z-layer, zoom, x-y location, and contrast, respectively.",
    "8. Adjust the image contrast so that the dendrites can be seen clearly.\nThese adjustments may be different for each image depending on the brightness when the image was recorded. Adjust both the black and white scale bars (located at the bottom right of Fig. 5D[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005]) until the image is clear. Only adjust the contrast before any annotations have been made. By increasing/decreasing the contrast for a single image stack, you can also increase or decrease the noise level in the image. Adjusting the contrast during the annotation process in different image stacks could lead to inaccurate measurements.\n9. Annotation can now begin. Starting at one end of the dendrite and at the top of the stack, zoom in (10× to 13× zoom is recommended (bottom, 5d)) and move along the dendrite using the ‘Frame’ and ‘Location’ buttons. Once you have located a spine, click ‘annotate’, click the cursor in the middle of the dendritic shaft at the base of the spine, and then double-click at the outer-most edge of the pixel at the tip of the spine. This should create a numbered line running from the center of the dendritic shaft to the end of the dendritic spine (Fig. 6[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0006]). Continue navigating along the dendritic shaft, annotating each spine within the ROI in the same way.\nMeasurements are taken from the middle of the dendrite as this provides a consistent starting point for all spines. Measurements can be adjusted to account for this increased distance (shaft width) later in the protocol.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/05fc96cd-40e9-4f46-9833-119e77ff1e0f/cpz1791-fig-0006-m.jpg</p>\nFigure 6",
    "The annotation of dendritic spines can be broken down into steps. (Top) Tracking along the dendrite, looking for spines. (A) Identify the spine. (B) Select annotate in the Stack Browser Window and start the annotation by clicking in the middle of the dendrite, at the base of the spine, marked here with a green x. (C) Move the cursor to the outermost grey pixel and finalize the annotation by double-clicking at the end of the dendrite to create a red line with a small brown section at the start and a number at the end. The spine has now been annotated. When correlating the spines, as described in protocol 3, steps 15-19, the annotations will change color depending on the categorization of each spine. (D) This new spine was not present in the preceding time point and has changed to pink, visually indicating a synaptic gain. (E) Light green indicates a stable spine in both preceding and subsequent time points. (F) Cyan indicates a synaptic loss, being the last time point where the spine was observed. Scale bar = 1 µm.\n10. Save the annotation as an .ann file in the stack browser control window (Fig. 5A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005]) using ‘Data > Save’.\nThis saved file will store the annotation data for the whole imaging series, with data from images later in the series being added to this file as you open and annotate them. It can be helpful to update the title at the end of each annotation setting to include which time point has been annotated. For example, using the convention Animal ID_session ID.ann, updating the session ID each time the annotation is saved. This update becomes helpful when annotating large data sets as it allows you to immediately open the correct image.",
    "11. Open a new window using ‘new browser window’ in the stack browser control window (Fig. 5A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005]) and repeat steps 9 and 10 for the next image stack in the time series, working your way along the dendrite and annotating spines as per steps 5, 6, 9, and 10. Save the .ann file periodically, updating the name as suggested in step 10.\n12. Repeat step 11 for all image stacks of the dendrite in the time series. Once you have annotated the final image stack in the time series, save the .ann file again (see step 10) and close MATLAB.\nEnsure you annotate the images in chronological order. Annotating images out of sequence can lead to issues with MATLAB recognizing which images should be first when it comes time to correlate the annotations (see step 15).\nClosing MATLAB once the annotations have been placed and before the annotations are correlated (step 15 below) is recommended but may not be required. MATLAB will keep all the annotated images in its active memory until it is shut down. In practical terms, this means that MATLAB will continue to slow down as more and more data are added. It is good practice to save and close MATLAB at the end of the annotation process to avoid a significant slowdown. The necessity of this step will be dependent on the processing power of your computer. You may also find that keeping only a small number of images open at a time will help, preferably keeping the most recent images open and closing the earliest images in the time sequence as you go.",
    "Annotation data are not coded into the images but recorded in an overlay above the image and always saved separately as an .ann file. In practical terms, this means two things. First, the annotation process does not alter the images. Second, it is possible to import annotations from one series of images and accidentally overlay them onto a different series of images. This error will not be identified by the program but will be visually obvious as the line of spine annotations will not match the trajectory of the dendritic segment in the images. If this occurs, simply close the files (both the annotation file and image file) and start again, making sure to open the matching annotation file once you have loaded at least one of the images in the ‘Stack Browser’ window (Fig. 5D[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005]).\nWhen MATLAB is closed, it will prompt you to save changes in the .ann file for each image as its window closes. This is not necessary. The annotation data only needs to be saved once at the end of the annotation process to save all annotations across the image series, as described in Step 10, meaning these popup windows can be ignored. This is a quirk of the script and is normal behavior for the program.\nThe next step in the process is to correlate the annotated spines across each time point to track spine stability, gains, and losses.\n13. Restart MATLAB, going through steps 1-6 of this protocol. Open the first annotated image for the imaging series. Import the annotation data using ‘data > load’ (Fig. 5A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005]) and select the saved .ann file.\n14. Open the second image in the time series using ‘new browser window’ in the stack browser control window (Fig. 5A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005])",
    "You should see the spine annotations within this image stack as soon as it has loaded.\n15. In the ‘Stack browser control’ window (Fig. 4A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0004]), select ‘Correlate annotations’. The ‘Annotation Correlator’ window will appear (Fig. 4E[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0004]), with three buttons at the top (‘loss’, ‘=’, and ‘gain’) and two drop-down menus (‘new’ and ‘old’). Select the first image in the time series in the ‘old’ menu and the second image in the time series (opened in step 14) in the ‘new’ menu (Fig. 5E[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005]).\nBe sure to correlate images in the correct order. If the images are correlated in the wrong order, the error can only be fixed by returning to the last known correct image and re-correlating every annotation in every image after that image.\n16. Navigate along the same dendrite in each image, checking if the spines are present in both images or only in one of the images. If they are present in both images, click on the spine in both images and then click ‘=’. Both annotation lines will turn green, and the number of each annotation will now be the same. This is considered a stable spine.\nIf the spine is present in the new image and not the old image, click on the new spine in the new image, do not make any further selections (clicks) in the new image, and click ‘gain’ in the ‘Annotation Correlator’ window. This is considered a spine gain. The annotation line will turn pink in the new image, to visually indicate the first session in which this spine is present.",
    "If the spine is present in the old image and not the new image, select the spine in the old image and, without selecting any other spines, click ‘loss’. The spine will then turn blue to indicate that this is the last time the spine was visible. An example of this process can be found in Figure 6[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0006].\nTo make the navigation process easier, you can select ‘lock ROI movement’, ‘lock frame movement’, and ‘lock zoom’, which will cause any adjustments on one image to be made on the other, which helps when navigating along the dendrite in multiple image stacks at the same time.\n17. Move along the dendrite until all spines in the pair of image stacks have been considered. Remember to save the .ann file periodically.\n18. Open the next (third) image in the time series using ‘new browser window’ in the stack browser control window (Fig. 5A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005]).\n19. Select the next combination of new and old images in the ‘Annotation Correlator’ window. The second image in the time series is now considered the ‘old’ image, and the third image in the time series is considered the ‘new’ image.\nAs you open new images, the program will automatically adjust which images are set as old and new. Errors can occur during this adjustment; therefore, always check which image is set as old or new as you go.\n20. Follow step 15 for the second and third images in the time series.\n21. Repeat steps 15-19 until all image stacks in the time series have been considered.\nImage stacks must be opened and considered in chronological order.",
    "The annotation process can be computationally demanding. You may need to close the image stacks sequentially at the start of the time series, depending on how many images you have. It is best to only keep the images you are examining open. If you find that MATLAB is slowing down, save your progress as outlined in step 10 and restart MATLAB, picking up where you left off.\n22. The annotated images make for a useful reference tool when doing microglia analysis. After each image stack is correlated, take a screenshot of the image and save it for future use.\nThe color coding of the correlated annotations makes it easy to distinguish which spines are stable and which are gains or losses. This image can then be opened during the microglia annotation process to guide which microglial processes are contacting stable spines and which are contacting spines as they develop or diminish.\n23. Once all the images have been correlated, in the ‘Stack browser control’ select ‘Data > Export > Comma Separated’ to export the data as a .CSV file.\nThis step will provide you with a spreadsheet containing timepoint rows for each measured spine and columns for each time point. If a spine was not recorded at a time point, it will appear as a zero on the spreadsheet.\nMicroglia annotation using TrackMate\n24. Open Fiji.\n25. Drag and drop the hyperstack you want to analyze into Fiji.\n26. Check the image properties are correct using ‘Image > properties’. You are looking to make sure the units of measurement are correct.\nAs in spine annotation step 5, each pixel was set to equal 0.2 µm, each z-slice was 1 µm, and the frame interval was set to 60 s.\n27. Open TrackMate, ‘Plugins > tracking > manual tracking with TrackMate’.",
    "28. This will open a window, as shown in Figure 7A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0007].\nIf a different window has opened, use the arrow buttons at the bottom right to scroll through the windows and locate the correct one.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/d943e014-a027-4215-825f-d6ab10c3f621/cpz1791-fig-0007-m.jpg</p>\nFigure 7\nScreenshots of TrackMate and TrackScheme windows. The TrackMate window (A) works as the control panel for the TrackMate plugin. Key points include the TrackScheme, Tracks, Spots, and Save buttons at the bottom of the window. The TrackScheme button produces an interactive map of annotations (B). Each annotation is represented by a text box on the map connected by colored lines. These colored lines correspond to the coloring of the tracking lines on the image. Key points include the refresh layout button on the top left. This will refresh the map to include any new annotations. The style option in the top left will let you swap between the full map (shown) and a simplified version. The export button is the far-right camera icon in the middle of the top toolbar. This button will export the TrackScheme map as an image.\n29. Next, open a screenshot of the annotation for the image you are looking at. This can be done in any image viewing software, but avoid opening the image in Fiji as this could interfere with the microglia annotation.\nThis screenshot was created in the spine annotation stage (step 17). The screenshot can be used as a reference point to direct your attention to the spines of interest and any nearby microglial processes.",
    "30. Search the first image (the first t-slice) in the hyperstack for microglial processes. When you have found a process, hover the reticule (white cross) over it and press ‘a’ on the keyboard to add a spot (red circle). The spot size can be increased or decreased by selecting it and using the ‘q’ and ‘e’ keys, respectively. The spot can be moved by holding the space bar and dragging the reticule. If you make a mistake and need to delete a spot, press ‘d’.\n31. Ensure you make consistent placement and size decisions to avoid inconsistencies in the data.\nFor example, place the reticule between the first and second pixel at the tip of the process and set the width according to the second row of pixels near the tip (Fig. 8[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0008]).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/49ad8402-51b3-423a-8d79-9f6d7da6d17a/cpz1791-fig-0008-m.jpg</p>\nFigure 8",
    "Example multi-photon images of Thy-1+/gfp neuronal elements and CX3CR1+/gfp microglial processes. Images (A-D) illustrate the tracking of microglial processes. In image (A), the red arrow indicates a dendritic spine, and the blue arrow indicates the microglial processes. At the end of the microglial process, a faint, thin structure protrudes from the main process. The reticule is placed over the structure between the first and second pixel, and the diameter is adjusted to fit the width of the structure. This is the tip of the microglial process that will be analyzed for movement. Image (B) shows how the structure has thickened and advanced toward the dendritic spine. Image (C) shows definite contact between the processes and the spine. This is noted on the TrackScheme map, and the reticule is adjusted accordingly. Image (D) shows the main body of the process beginning to pull away from the dendrite; however, as the leading edge is still in contact, the reticule remains in place, and the size is adjusted to account for the change in process size.\n32. With the first spot placed, move to the second t slice, find the same process, and place a spot over it in the same way as step 30.",
    "33. At this point, one of two things will happen, depending on the settings in Fiji. The spots may automatically link, in which case you will see a colored line linking the two locations (Fig. 6[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0006], orange line). You can move through the hyperstack, selecting and tracking the process at each time point as you go. If they do not automatically link, select both spots by clicking on the first spot, holding the shift key, and then clicking on the second spot. With both spots selected, press ‘‛l’ (l = link)’ on the keyboard to link the selected spots, then press ‘shift + L’ on the keyboard again to start the automatic linking function. With automatic linking turned on, you can now move through the hyperstack, selecting and tracking the microglial process as you go. At the end of the tracking processes, you can visually inspect the tip movement across the time series using the orange line (Fig. 6[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0006]).",
    "The automatic linking function is very good at tracking which spots it should link to, but it does have limitations. It can become confused by spots being added before the current spot or on the same z-slice as the current spot. To avoid issues, track a single process in its entirety (from its first visible image to its last visible image) before going back and tracking another process in the same image. If a process branches while you are tracking it, follow one branch tip until the end of the series and then move back to the point where it branched and follow the second branch. The same logic can be applied if two processes merge and retract into a single process. Follow one entirely and then the other. If two spots you want to link do not link automatically, as can happen with branching and merging processes, simply select the two processes and press ‘L’.\n34. While the tracking is taking place, you can click the ‘TrackScheme’ button on the control panel (Fig. 5A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005], bottom). This button opens an interactive map of the points called ‘TrackScheme’ (Fig. 7B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0007]). Use this map to record any notes associated with specific spots.\nFor example, when microglial processes contact a spine, you should record the spine number (as displayed in the image created in step 22 of the spine annotation) and mark when they break contact with a spine.",
    "35. Once all microglial processes have been tracked via spot placement, press the ‘tracks’ and ‘spots’ buttons in the control panel window (Fig. 5A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.791#cpz1791-fig-0005]). This will open a window containing three spreadsheets labeled, Spots, Edges, and Tracks. These provide information on the individual spots, the links between the spots, and the averages for each process. These can then be exported using the ‘Export to CSV’ button in the top left of the window. The TrackScheme map can be exported using the export function located on the top toolbar of the TrackScheme window.\n36. Finally, save your tracking. To do this, click the save button at the bottom left of the control panel and save it to a safe location. This file can be accessed later using ‘Plugins > tracking > load a TrackMate file’.\nIt should be noted that the save file is not attached to the image but saves a file path to the image. In practical terms, this means if you save your data and then move the image from its original location, the TrackMate file will not be able to find and open it. If this happens, you have two options. The first is to move the file back to its original location. The second option is to change the file path in the save code. For more information on how to do this, see the TrackMate guidelines (see Internet Resources for more details)."
  ],
  "subjectAreas": [
    "Neuroscience"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research"
  ]
}