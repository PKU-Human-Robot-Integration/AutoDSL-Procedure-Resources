{
  "id": 3016,
  "origin_website": "Cell",
  "title": "huva: A human variation analysis framework to predict gene perturbation from population-scale multi-omics data",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nWe will exemplify here the main steps required to run a huva in silico experiment (graphically summarized in Figure 1[href=https://www.wicell.org#fig1]). We will show how to run the experiment and how to explore the results generating both, summary statistics (e.g., differentially expressed genes, fold-change and p-value of metadata and cell annotation, GSEA results) and graphical visualizations (e.g., GOI expression histogram, boxplot of the expression of selected genes, metadata and annotation boxplot and correlation plot with the GOI, heatmap of differentially expressed genes, dotplot of GSEA results).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2559-Fig1.jpg\nFigure 1. Overview of the huva framework workflow\n(A) Graphical visualization of the exploratory huva experiment workflow.\n(B) Graphical visualization of the huva gene experiment workflow.\nAll code shown here is also available in the GitHub repository of this manuscript (https://github.com/lorenzobonaguro/STAR_protocol_human_variation[href=https://github.com/lorenzobonaguro/STAR_protocol_human_variation]).\nFurthermore, the huva R package includes a vignette which can be visualized in R after loading the package (vignette(\"huva_workflow\")). Each huva function also includes detailed documentation according to the standard R structure (e.g., help(run_huva_experiment)).\nExploratory huva experiment\nTiming: 30 min\nAs a first exploratory step of the huva framework perform an exploratory huva experiment.\nNote: In this step, the expression of the selected GOI is compared across selected datasets and correlated with available metadata to evaluate the relationship between gene expression and the available parameters. This approach provides a quick overview of GOI expression across datasets and cell types, helping to shape downstream analyses.\nFirst, run the experiment; the results are stored in the R environment:\nLoad the packages.\n>library(huva)\n>library(huva.db)\nDefine your gene of interest (GOI) as a variable, exemplified here with MYD88.\n>GOI <- “MYD88”\nRun the exploratory huva experiment with a simple function performing the analysis across all datasets provided in the database.\n>gene_overview <- gene_exam(huva_dataset = huva.db,\ngene = gene_name)",
    "Note: If a gene is not expressed in a dataset, a message will be displayed (e.g., \"MYD88 is not present in PLA\").\nExplore the results of the exploratory huva experiment using several built-in functions not only to extract the data but also to plot and visualize the results.\nAt first, examine the expression of the GOI across the provided datasets.\nExport the expression as data frame.\n>expr_exam <- get_expr_exam(huva_expression = gene_overview, > study = \"ImmVar\",\n>                dataset = \"ImmVar_CD4T\")\nOr plot the expression for each dataset (Figure 2[href=https://www.wicell.org#fig2]A).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2559-Fig2.jpg\nFigure 2. Exemplary result of an exploratory huva experiment\n(A) Histogram of the expression of the gene of interest (GOI) in each dataset included in the huva.db. (CD4T - CD4+ T cells, CD8T - CD8+ T cells, CD14M - CD14+ monocytes, CD19B - CD19+ B cells, CD15G - CD15+ granulocytes, WB - whole blood, PBMC - peripheral blood mononucleated cells).\n(B) Correlation between gene expression and sex in the FG500 whole blood dataset.\n(C) Correlation between gene expression and height in the FG500 whole blood dataset. Pearson’s correlation statistics are shown.\n(D) Correlation between gene expression and number of CD14+ monocytes in the FG500 whole blood dataset. Pearson’s correlation statistics are shown. Box plots were constructed in the style of Tukey, showing median, 25th and 75th percentiles.\n>expr_exam.plot <- get_expr.plot_exam(huva_expression = gene_overview, bins = 50, alpha = 1)\n>expr_exam.plot\nNote: The single plots are stored within the results of the exploratory huva experiment, which can be accessed directly by exploring the object (e.g., gene_overview$plot$FG500_whole_blood).\nIn the next step, investigate the correlation between the GOI and the provided annotations and metadata with the outputs produced with the following commands.\nA data frame with the annotation (get_anno_exam) or metadata (get_metadata_exam) of each dataset.\n>anno_exam <- get_anno_exam(huva_expression = gene_overview, > study = \"CEDAR\",",
    ">                dataset = \"CEDAR_CD4T\")\n>meta.table_exam <- get_meta_exam(huva_expression = gene_overview, study = \"FG500\")\nA table with statistics (t-test for discrete variables and Pearson’s correlation for continuous variables) for annotation (get_anno.stat_exam) and metadata (get_meta.stat_exam).\n>anno.stat_exam <- get_anno.stat_exam(huva_expression = gene_overview, study = \"FG500\", dataset = \"ALL\")\n>meta.stat_exam <- get_meta.stat_exam(huva_expression = gene_overview, study = \"FG500\", dataset = \"FG500_whole_blood_cellcount\")\nPlots for single parameters (see examples in Figures 2[href=https://www.wicell.org#fig2]B–2D).\n>anno.plot_exam <- get_anno.plot_exam(huva_expression = gene_overview, study = \"FG500\", dataset = \"FG500_whole_blood\")\n>anno.plot_exam$height\n>meta.plot_exam <- get_meta.plot_exam(huva_expression = gene_overview, study = \"FG500\", dataset = \"FG500_whole_blood_cellcount\")\n>meta.plot_exam$`Monocytes (CD14+)`\nNote: Some of the functions require the user to set a “study” and “dataset” argument to export the results of the exploratory huva experiment. If the default huva.db is used, all available datasets/studies can be explored with the function huva_overview().\nNote: The distinction between annotation and metadata is due to the structure of the huva functions. The main formal distinction is that annotations are mandatory and do not allow for missing values but can contain both numeric and non-numeric variables. On the contrary, metadata are optional and can include missing data points without resulting in an error when running a huva experiment but are limited to numeric variables.\nhuva gene experiment\nTiming: 30 min\nThe huva gene experiment performs a huva analysis consecutively on all datasets included in the huva.db.",
    "For optimization of the analysis, the user can set several parameters. First, the huva.db and the GOI need to be defined. Next, the quantile to be used for the analysis needs to be set together with the gene set enrichment reference and the p-value adjustment method for the differential expression (DE) analysis. For a detailed overview of the available parameters see the function documentation (help(run_huva_experiment)). The results of the huva gene experiment are collected in a huva_experiment R object for further exploration in each dataset.\nFirst, execute the huva gene experiment, the results are stored in the R environment:\n>binned_dataset <- run_huva_experiment(data = huva.db,\n>                      gene = GOI,\n>                      quantiles = 0.10,\n>                      gs_list = hallmarks_V7.2,\n>                      summ = T,\n>                      datasets_list = NULL,\n>                      adjust.method = \"BH\")\nNote: The GOI has been set previously, see step: 1a.\nNote: We provide here also a more detailed description of the parameters of the huva gene experiment:\ndata: huva database to the used for the experiment (huva_dataset class object).\ngene: Name of the gene of interest (GOI).\nquantiles: Definition of the quantile of segregation of the samples to define the low and high groups, quantiles are always symmetrical. If not differently stated, a quantile of 0.1 (10%) is used as default (quantile 0.1 will use the 10th and 90th percentiles). The selection of the quantiles determines the number of samples assigned to the low or high experimental groups. We recommend starting with 0.10 for datasets of < 100 samples and 0.05 for datasets > 100 samples. As shown in the original publication,1[href=https://www.wicell.org#bib1] this setting does not substantially affect the biological interpretation of the results.",
    "gs_list: List of gene sets to be used for Gene Set Enrichment Analysis, the gene list needs to be provided using the same nomenclature as the huva.db (e.g., HGNC symbols).\nsumm: TRUE or FALSE, defines if the summary of the results in the different dataset should be calculated. Default as TRUE as some of the downstream functions need the summary results. Setting to FALSE can speed up the analysis.\ndataset_list: Vector used to filter the huva.db for the analysis for only selected datasets, if NULL (default) all datasets will be used.\nadjust.method: p-value adjustment method used to correct the DE genes analysis. It can be set to \"holm\" (Holm), \"hochberg\" (Hochberg), \"hommel\" (Hommel), \"bonferroni\" (Bonferroni), \"BH\" (Benjamini & Hochberg), \"BY\" (Benjamini & Yekutieli), \"fdr\" (False Dircovery Rate), \"none\" (no correction for multiple testing).\nNote: If a gene is not expressed in a dataset a message will be displayed (e.g., \"MYD88 is not present in PLA\")\nExplore the results of the huva gene experiment using several built-in functions not only to extract the data, but also to plot, and visualize the results.\nInvestigate the expression of a list of selected genes, including our GOI. This function computes boxplots for all selected genes in all available datasets and outputs it as a list. The code below exemplifies the visualization of the expression of three selected genes in the FG500 whole blood dataset (Figure 3[href=https://www.wicell.org#fig3]A).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2559-Fig3.jpg\nFigure 3. Exemplary result of a huva gene experiment for MYD88\n(A) Boxplot showing the expression of selected genes (MYD88, CRELD1, STAT1, RCAN3) in the low and high groups for the FG500 whole blood dataset.\n(B) Boxplot showing the age of the donors in the high and low groups of the FG500 whole blood dataset.",
    "(C) Boxplot showing the number of CD14+ monocytes in the high and low groups of the FG500 whole blood dataset.\n(D) Principal component analysis (PCA) plot for the transcriptome of the low and high groups in the FG500 whole blood dataset.\n(E) Barplot showing the number of DE genes (p < 0.001, logFC > 1) in the comparison low vs. high in the FG500 whole blood dataset.\n(F) Heatmap of the differentially expressed genes (p < 0.001, logFC > 1) in the comparison low vs. high in the FG500 whole blood dataset.\n(G) Dotplot of the top 5 down- and up-regulated genes according to fold change in the comparison low vs. high in the ImmVar CD4 T+ cell dataset.\n(H) Gene Set Enrichment Analysis (GSEA) plot on the ranked gene list in the comparison low vs. high in the FG500 whole blood dataset. Box plots were constructed in the style of Tukey, showing median, 25th and 75th percentiles.\n>plot_binned <- plot_binned_gene(goi = c(\"MYD88\", \"CRELD1\", \"STAT1\" \"RCAN3\"), huva_experiment = binned_dataset)\n>plot_binned$FG500_whole_blood\nExport from the huva gene experiment the gene expression count table filtered for the dataset used in the huva gene experiment, encompassing expression values for the binned groups for all present genes expressed in the dataset of choice.\n>expr_huva <- get_expr_huva(huva_exp = binned_dataset,\n>                study = \"FG500\",\n>                dataset = \"FG500_whole_blood\")\nFurther, investigate the relationship between the GOI and the provided annotations and metadata with the outputs produced with the following commands.\nThe filtered annotation or metadata table.\n>anno_huva <- get_anno_huva(huva_exp = binned_dataset,\n>                study = \"FG500\")\n>meta_huva <- get_meta_huva(huva_exp = binned_dataset,\n>                study = \"FG500\")\nThe statistical comparison between the low and high groups derived from the huva gene experiment.\n>anno.stat <- get_anno.stat_huva(huva_exp = exper,\n>                  study = \"FG500\")\n>meta.stat <- get_meta.stat_huva(huva_exp = exper,\n>                  study = \"FG500\",",
    "> dataset = \"FG500_whole_blood_cellcount\")\nPlots of single parameters for the two groups, high and low (Figures 3[href=https://www.wicell.org#fig3]B and 3C).\n>anno.plot <- get_anno.plot_huva(huva_exp = exper,\n>                  study = \"FG500\")\n>anno.plot$FG500_whole_blood$age\n>meta.plot <- get_meta.plot_huva(huva_exp = exper,\n>                  study = \"FG500\")\n>meta.plot$FG500_whole_blood_cellcount$`Monocytes (CD14+)`\nExport the results from differential gene expression (DE) analysis of the comparison low vs. high from the huva gene experiment and their visualization.\nNote: Huva uses the Limma workflow12[href=https://www.wicell.org#bib12] for differential expression analysis, the output includes logFC (log fold-change), average gene expression, t-value (moderated t-statistic), p-value, p-value adjusted for multiple testing (according to the setting of the run_huva_experiment function) and B-statistics value (log-odds that that gene is differentially expressed).\nExport of the DE results from the huva gene experiment as a table. Settings can be chosen manually in the function. Defaults for filtering are logFC > 1 and corrected p-value < 0.05.\n>DE_huva <- get_DE_huva(huva_exp = exper,\n>              study = \"FG500\",\n>              dataset = \"FG500_whole_blood\",\n>              pval = 0.001,\n>              logFC = 1)\nUsing the result table (get_DE_huva), compute a PCA plot to visualize the separation of the low and high groups in the latent space (Figure 3[href=https://www.wicell.org#fig3]D).\n>DE_huva$PCA_FG500_whole_blood\nGenerate a bar plot showing the number of DE genes (Figure 3[href=https://www.wicell.org#fig3]E).\n>DE_huva$plot_FG500_whole_blood\nPlot a heatmap of the differentially expressed genes (Figure 3[href=https://www.wicell.org#fig3]F).\n>plot_HM(DE_huva$HM_FG500_whole_blood)\nWithin the huva gene experiment, a functional enrichment on the ranked gene list is performed (GSEA14[href=https://www.wicell.org#bib14]). This result uses the gene sets provided during the huva gene experiment as a reference (see step 3, gs_list parameter in the run_huva_experiment function). Explore the results with the help of built-in functions.\nExport the ranked gene list into a separate object.\n>rank_huva <- get_rank_huva(huva_exp = exper,\n>                study = \"ImmVar\",\n>                dataset = NULL,\n>                n_top_genes = 5)",
    "From this result export the ranked gene list as a table for a chosen sample subset of the chosen dataset, e.g., the CD4+ T cells from the ImmVar study.\n>rank_huva$ImmVar_CD4T\nPlot the top up- and down-regulated genes (n_top_genes) for a chosen sample subset of the chosen dataset, e.g., the CD4+ T cells from the ImmVar study (Figure 3[href=https://www.wicell.org#fig3]G).\n>rank_huva$plot_ImmVar_CD4T\nExport and plot, also interactively, the result of the GSEA for a chosen sample subset of the chosen dataset, e.g., the CD4+ T cells from the ImmVar study. Interactive visualization was implemented to facilitate the interpretation of the plot (Figure 3[href=https://www.wicell.org#fig3]H).\n# Export the results\n>gsea_huva <- get_gsea_huva(huva_exp = exper,\n>                study = \"FG500\")\n# Static visualization\n>gsea_huva$plot_FG500_whole_blood\n# Interactive visualization\n>gsea_huva$int_plot_FG500_whole_blood\nNote: A convenient way to perform a huva gene experiment is using our GUI available on FastGenomics (https://beta.fastgenomics.org/a/huva[href=https://beta.fastgenomics.org/a/huva]). This provides fast access to huva without the need for any coding skills. The main drawback of this alternative is the limited capability to export plots and tables for secondary analyses (see point 5).\nNote: Similar to the huva gene experiment, the R implementation of the huva approach can be used for a huva phenotype experiment or huva signature experiment. A phenotype of interest or a single-sample signature enrichment is used to stratify the samples into high and low groups. More details on how to run these experiments can be found in the package vignette.\nNote: Some of the functions require the user to set a “study” and “dataset” argument to export the results of the huva gene experiment. If the default huva.db is used, all available datasets/studies can be explored with the function huva_overview().\nCritical: Within the huva gene experiment, some steps of randomization are performed for statistical testing to ensure the reproducibility of the results, see troubleshooting[href=https://www.wicell.org#troubleshooting] section.",
    "Export huva results for secondary analysis\nTiming: 10 min\nOutputs of huva experiments can be exported as standard R objects (e.g., data frames or lists) to be used in other analytical pipelines. For example, the Differential Expression (DE) lists for low and high groups from a huva gene experiment may be used for comparison to transcriptome results from a genetic loss-of-function experiment in a model system (e.g., knock-out mouse) (i.e., input for GSEA).\nThe huva gene experiment output is similar to a standard list in R with the following structure:\nhuva_experiment\n|_[study_name] #Each study provided in the huva.db\n|  |_anno\n|    |_[dataset_name] #Applies for all elements at this level\n|  |_data\n|  |_DE_genes\n|  |_Rank_genelist\n|  |_gsea\n|  |_metadata\n|\n  |_summary # Provides summary statistics for some of the results\n  |_Rank\n    |_[study_dataset_name] #Applies for all elements at this level\n  |_gsea\n  |_anno\n  |_metadata\nNote: The structure of the huva gene experiment can be visualized with: str(exper).\nExport of the output of a huva gene experiment to facilitate interoperability with other analytical pipelines. Export single outputs as exemplified below.\n# Export the filtered expression table for the ImmVar CD4+ T cell dataset\n>exper$ImmVar$data$ImmVar_CD4T\n# Export the filtered annotation table for the CEDAR CD8+ T cell dataset\n>exper$CEDAR$anno$CEDAR_CD8T\n# Export DE gene table from the CEDAR monocyte dataset\n>exper$CEDAR$DE_genes$CEDAR_CD14M\n# Export the ranked gene list from the ImmVar monocyte dataset\n>exper$ImmVar$Rank_genelist$ImmVar_CD14M\n# Export GSEA results from the CEDAR granulocyte dataset\n>exper$CEDAR$gsea$CEDAR_CD15G\n# Export filtered cell count metadata table from the FG500 PBMC dataset\n>exper$FG500$metadata$FG500_whole_blood_cellcount\n# Export summary statistics from CEDAR CD8+ T cell sample annotation\n>exper$summary$anno$CEDAR_CD8T\n# Export summary statistics from FG500 PBMC cytokine secretion metadata\n>exper$summary$metadata$FG500_whole_blood_cytokines"
  ],
  "subjectAreas": [
    "Rnaseq",
    "Immunology",
    "Bioinformatics",
    "Systems Biology",
    "Gene Expression"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}