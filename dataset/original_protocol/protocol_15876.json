{
  "id": 19702,
  "origin_website": "Wiley",
  "title": "Analyzing Protein Disorder with IUPred2A",
  "procedures": [
    "IUPred2A offers a single entry point to access a family of prediction tools for characterizing disordered regions in proteins. First of all, it predicts ordered and disordered regions for a single amino acid sequence. The user can choose between three different options: short, long, and structured domains. These options were developed using slightly different parameter settings. The long option is the default and is recommended to be used in most cases. The short option was developed to predict missing residues collected from PDB structures. These regions are typically short, only 3 to 10 residues long, but have traditionally represented important test cases for disorder-prediction methods (Jin & Dunbrack, 2005[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0017]). The structured-domain option aims to help the identification of larger structural units even when the prediction profile is noisy. In addition to general disorder prediction, IUPred2A also offers predictions of certain types of conditionally disordered regions such as disordered binding regions or redox-regulated disordered regions. The main advantage of using the web server is that it provides a graphical representation of the prediction output, which presents additional features that can help in the interpretation of the results.\nNecessary Resources\nHardware\nWhile IUPred2A works best on desktop or laptop computers, it is also usable on tablets and smartphones. The device must have an active internet connection.\nSoftware\nAny modern browser with HTML5 and WebP support (for example Chrome 30+, Firefox 65+, Opera 19+).\nInput data\nThe online application of IUPred2A accepts UniProt (UniProt Consortium, 2019[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0024]) identifiers (both accessions and identifier codes are allowed) or a protein sequence in plain text or FASTA format.\nSubmission page\n1. Visit the web page of IUPred2A (https://iupred2a.elte.hu[href=https://iupred2a.elte.hu], Fig. 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-fig-0001]). To analyze a protein, either use a UniProt identifier (both accession and identifier codes are allowed) or a protein sequence in the respective entry box.",
    "If the UniProt identifier or accession code is given, the web server automatically collects the corresponding amino acid sequence and runs the prediction on it.\nThe server accepts protein sequence in FASTA format or in plain text as well.\nThe webserver of IUPred2A is able to analyze multiple proteins or even whole proteomes of smaller size. The user can upload proteins in a multi-FASTA-formatted file to the server, and provide an e-mail address. The results will be sent as an e-mail attachment to the given address in text format (for more information on text format, see Support Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-prot-0005]). Please note that currently the maximum file size that can be uploaded is 1 Mb.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/e5c70dac-58b3-4be8-bc00-6a63de4f93fc/cpbi99-fig-0001-m.jpg</p>\nFigure 1\nHome page of IUPred2A.\n2. Select the type of analysis.\n         \nAs default, “IUPred2 long disorder” and the “ANCHOR2” option from the “Context-dependent predictions” submenu are selected. To carry out a disorder prediction only, uncheck the “Context-dependent predictions” option (for context-dependent disorder methods, see Basic Protocols 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-prot-0002] and 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-prot-0004]).\nOption: Use “IUPred2 short disorder” for the prediction of short disordered regions\nOption: Use “IUPred2 structured domains” for the prediction of structured domains in the query protein sequence. If this option is selected, a textbox will appear below the graphical interface. Inside the textbox, the number of predicted globular domains and their locations will be shown alongside a string representation of the protein sequence, where capital letters represent structured domains.\nThe short option is recommended when the main focus of the analysis is missing residues in a PDB structure, while the structured domain option can be used to identify larger structured segments that could be suitable for structure determination. In most scenarios, the long option is recommended.\n3. Click on “Submit” to start the analysis.\nResults page",
    "4. After a couple of seconds, a new page loads showing the results. The main panel on the page shows a graphical representation of the analysis. Depending on the input, we can find information about the protein from UniProt above the graphical results. Clicking this header will lead us to the corresponding UniProt page. To the right of the title, a link to download the results can be found.\n5. The main graphical panel displays the prediction profile corresponding to the submitted protein sequence. Predictions are provided for each residue in the sequence. Residues with scores above 0.5 are predicted as disordered, while scores below 0.5 indicate order.\n6. There are four small icons on the left-hand side of the graph that enable the manipulation of the plot. By default, the graph can be panned along the x axis by dragging the plot, or zoomed in and out using the mouse wheel. These options can be turned on and off using their respective icons. Below these icons we also have an option to reset the plot to its original state. The figure can also be saved in standard “png” format.\nThe save figure option will only save the main disorder propensity figure. The complementary information plots will be omitted, but can be saved using screen capture.",
    "7. In the case where the submitted input was a UniProt accession or identifier code, the graphical interface displays information collected from additional sources, including annotations about conserved sequence families, short linear motifs, experimental evidence for disordered status, and known PDB structures corresponding to a given entry. When a plain protein sequence is submitted, IUPred2A tries to map that sequence to a protein in UniProt. If the sequence only matches one single protein in the database, its identifier will be associated with the sequence, and it will be used for further analysis. If the UniProt entry corresponding to the submitted sequence cannot be unambiguously identified, only Pfam information is displayed.\n8. Sequence family information is collected from the Pfam database (El-Gebali et al., 2019[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0006]) and labeled as Pfam. Different types of sequence annotations such as Domains, Families, Motifs, and Repeats are displayed using associated colors.\nIt is worth noting that only Domain type Pfam family annotation gives a strong indication for order. Clicking on the box leads us directly to the site of the selected annotation in the Pfam database.\n9. The line ELM collects experimentally verified short linear motifs from the Eukaryotic Linear Motif database (see Current Protocols article: Gouw et al., 2018[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0010]).\n10. The PTM lines contain information about post-translational modification sites (PTMs) collected from the PhosphoSitePlus database (Hornbeck et al., 2012[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0014]). The upper line shows a display of different phosphorylation sites with Ser, Thr, and Tyr sites indicated by different colors, while the lower one shows acetylation and methylation sites colored by the type of the modification.\n11. The EXP DIS line displays experimentally verified disordered regions from the DisProt (Hatos et al., 2020[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0012]), DIBS (Schad et al., 2018[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0023]), and MFIB (Fichó, Reményi, Simon, & Mészáros, 2017[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0008]) databases.\nThese annotations can overlap.",
    "12. The subplot entitled PDB shows coverage of the residues for which a structure is available in the Protein Data Bank (Berman et al., 2000[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0002]). When structure hits are found for the submitted protein, a “Show all structures” checkbox is present below the PDB subplot. Marking this checkbox will display the coverage of each individual PDB entry with its respective link to the database.\n13. Hovering over the complementary plot boxes displays additional information about the selected annotation or structure, such as the exact positions, identifiers, and types.\nAn example of IUPred2 prediction is shown in Figure 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-fig-0002] for the human Lupus La protein (P05455) using the “IUPred2 long disorder” option. The C-terminal region of this protein has been shown experimentally to be disordered in isolation (Jacks et al., 2003[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0015]). At the N-terminal part of the protein, the Pfam annotation indicates three domains. According to IUPred2A, the intervening regions are predicted as disordered. This scenario is supported by the fact that there is at least one structure for each domain solved independently of the rest of the protein.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/ee07216a-f2f1-477c-9b65-29f328a4e6e7/cpbi99-fig-0002-m.jpg</p>\nFigure 2\nIUPred2 prediction of the human Lupus La protein (P05455) using the “IUPred2 long disorder” option. Disorder is predicted at the C-terminal of the proteins and in between domains.",
    "IUPred2A now incorporates ANCHOR2, which predicts regions that undergo a disorder-to-order transition upon binding to another protein. ANCHOR2 is one of the special cases of context-dependent disorder analysis.\nNecessary Resources\nSee Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-prot-0001]\n1. Fill in the query protein as described in Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-prot-0001], and either leave the “Context-dependent predictions” selection box on default or select ANCHOR2.\n2. Click on “Submit.” After a few seconds, the results will appear.\n3. The plot shows the disordered sequence−prediction profile (long option on default) indicated in red, as well as the predicted disordered binding sites shown in blue. Predicted disordered binding sites are positions with score above 0.5.\n4. The user can turn on/off both the IUPred or ANCHOR2 profile by clicking on the corresponding label at the top right corner in the plot.",
    "An example output in Figure 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-fig-0003] shows a context-dependent prediction using ANCHOR2 for the protein with the UniProt accession P45985 corresponding to the human dual-specificity mitogen-activated protein kinase kinase 4. Since disordered binding regions are expected to occur within generally disordered regions, it is important to have an overview of which regions are predicted to be disordered. The C-terminal region of this protein is ordered, and contains a kinase domain indicated by a light blue box on the figure in the Pfam line spanning from residue 102 to 367. The corresponding region also has experimentally solved structures, as shown in the PDB line with a green box. The N-terminal region of the protein is predicted as disordered, indicated by the high IUPred values (red line), in agreement with experimental characterization (Delaforge et al., 2018[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0004]). Disordered binding regions predicted by ANCHOR2 are shown by the blue line. We can see a peak in the ANCHOR2 prediction around residue 46. This region corresponds to experimentally verified MAPK docking motifs, as shown in the figure with purple boxes in the ELM line (Bardwell & Bardwell, 2015[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0001]; Garai et al., 2012[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0009]; Ho, Bardwell, Abdollahi, & Bardwell, 2003[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0013]). Note that the IUPred prediction dips slightly below the 0.5 threshold in the region corresponding to the known binding motif. This is a very common feature when predicting short linear motifs.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/5a2a7aaa-b3d6-43ce-bbb1-b9012ab421ea/cpbi99-fig-0003-m.jpg</p>\nFigure 3\nIUPred2A analysis of the human dual-specificity mitogen-activated protein kinase 4 (MAP2K4, P45985) protein using ANCHOR2. Disordered binding regions are predicted only at the N-terminal region, which is also predicted as mostly disordered.",
    "The interpretation of order and disorder information can be quite complex. Many proteins have modular architecture, and in reality there is a continuum of structural state which cannot be fully represented in a simple prediction output. Here we present a use case to demonstrate how complementary information can be utilized to interpret the prediction profiles.\nMaterials\nSee Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-prot-0001]\nAn example output is shown in Figure 4[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-fig-0004] using UniProt accession code P35222 corresponding to the human β-catenin protein\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/bf0e3aaf-b093-4628-9512-6910c792274f/cpbi99-fig-0004-m.jpg</p>\nFigure 4\nIUpred2A analysis of the human catenin beta-1 protein.\n1. IUPred2A predicts most of the N-terminal region and the C-terminal region as disordered. There is also a small peak of predicted disorder for residues 547-558.\n2. ANCHOR2 predicts disordered binding regions for the N-terminal and the C-terminal regions.\n3. There are four Pfam annotations indicated, which correspond to armadillo repeat regions in the middle of the sequence. It is worth keeping in mind that repeat regions are often incompletely annotated in Pfam, so there could be additional repeat units.\n4. Known motifs can be found at multiple locations, according to the ELM annotations. At the N-terminus there are multiple overlapping motif sites that correspond to phosphorylation sites, and a phosphodegron motif which regulates the degradation of the protein (Wu et al., 2003[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0027]). There are three kinase docking sites annotated along the sequence in addition to the C-terminal PDZ binding motif. Motif sites are generally located within disordered regions, but can also occur within loop regions of ordered domains.\n5. There are multiple PTM sites annotated for this protein. They are particularly enriched in the N-terminal phosphodegron site. Phosphorylation sites are also located within the docking sites, but at additional positions along the central region as well.",
    "6. This protein contains two experimentally verified disordered regions based on annotation from the DIBS database.\n7. There are multiple PDB structures corresponding to this protein, which cover different parts of the protein. We can see this after selecting “Show structures” at the bottom of the graphical interface.\n8. While the presence of structure is often interpreted as an indication of order, this protein indicates that it can be more complicated. There are multiple structures corresponding to the N-terminal region. However, this region is predicted as disordered, which is corroborated by known linear motifs, multiple PTM sites, and, primarily, by the existence of experimental evidence for disorder. Taking a closer look at the PDB structures of this region, they all contain the region of β-catenin in complex.\n9. The middle section also has various solved structures (e.g., 1g3j, 3tx7). These cover all armadillo Pfam regions. Based on the well-formed structures, the region between 130 and 670 can be considered as mostly ordered.\n10. However, the peak of predicted disorder is confirmed by the lack of electron density in the known structures. See https://www.rcsb.org/pdb/protein/P35222?addPDB=3SLA[href=https://www.rcsb.org/pdb/protein/P35222?addPDB=3SLA] for more details.\n11. The C-terminal region has PDB coverage from a single PDB structure (PDB code 2Z6H), and, on closer inspection, this region is actually missing from the electron density. Therefore, the structural annotation does not contradict the disorder status for the last 120 residues.",
    "The new implementation of IUPred2A contains an additional feature to predict regions that undergo a disorder-to-order transition upon changes of the redox potential in the environment. The key residues of redox regulation are cysteines, which can provide large stabilizing effects through disulfide bond formation under oxidative conditions or through zinc ion coordination under reducing conditions. The lack of these stabilizing contributions can be modeled by mutating all cysteine residues to serines in the sequence. In most cases, the two scenarios are not significantly different. However, in the case of redox-sensitive disordered regions, redox_plus is expected to be mostly ordered, while redox_minus is expected to be mostly disordered. The actual region is calculated based on a heuristic segmentation approach (Mészáros et al., 2018[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0018]).\nNecessary Resources\nSee Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-prot-0001]\n1. Fill in the query protein as described in Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-prot-0001], and use the “Context-dependent predictions” selection box to select “Redox state.”\n2. Click on “Submit.” After a few seconds, the results will appear. The plot shows two lines corresponding to redox_plus and redox_minus scenarios. An identified redox-sensitive disordered region will be indicated by shading the region between the two lines, and will also be highlighted by a box below the graph in a complementary plot entitled REDOX.",
    "One of the best examples of a redox-sensitive disordered region is the Hsp33 chaperone protein from E. coli. Under normal circumstances, this Zn2+ ion−binding protein is completely structured without activity. Under oxidative stress, the protein undergoes a conformational change due to the formation of intermolecular disulfide bonds. This leads to the release of the bound metal ion, and to the unfolding of the zinc-binding domain, exposing the substrate-binding surface that is required for the chaperone activity (Reichmann et al., 2012[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-bib-0022]). This redox potential−sensitive switch can be found between residues 224 to 285, part of which is correctly predicted by IUPred2A, as shown in Figure 5[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-fig-0005].\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/cfa5d464-caea-49cf-a37c-b965ff3562c2/cpbi99-fig-0005-m.jpg</p>\nFigure 5\nRedox potential−sensitive region prediction of the Hsp33 protein from E. coli using the new feature of IUPred2A.",
    "In addition to the graphical output, IUPred2A offers multiple formats in which to download the results. On each analysis, a button called “Download results” appears to the right of the header. Clicking on the button offers two options: Text or JSON. Choosing the “Text” button shows a plain text−formatted version of the analysis results. Each line in the header starts with a “#” symbol, to separate them from the relevant data. The results represent each residue on a separate line. Each line is split into columns. The first column contains the position of the given residue in the sequence; the second shows the one-letter IUPAC representation of the residue. The remaining columns are based on the type of analysis. They will show the disordered prediction score (IUPred2A), the prediction scores for IUPred and ANCHOR (ANCHOR2), or the Redox plus and Redox minus predictions (Redox). In the case of redox state calculations, an additional column is present with a binary classification. A 1 shows that the residue is within a redox potential−sensitive region, while a 0 represents the contrary.\nChoosing the “JSON” option leads to a JSON representation of the results. This representation always contains a “sequence” key, with the protein sequence as value, as well as a “type” key with the corresponding analysis type as value. The rest of the keys are dependent on the type of the analysis. For IUPred2 calculations, the key “iupred2” will contain a list representation of IUPred2 scores; for context-dependent calculations, the “anchor2” key contains the ANCHOR2 scores; “iupred2_redox_plus” and “iupred2_redox_min” contain the redox state result scores; and the key “redox_sensitive_regions” shows the region boundaries in a list. The value of the “meta” key contains information about the publication of the method.",
    "IUPred2A is also accessible via REST API to enable automated/large-scale use. Requests should follow the syntax: https://iupred2a.elte.hu/iupred2a/::accession:: or https://iupred2a.elte.hu/iupred2a/::analysis_type::/::accession:: where ::accession:: must be a valid UniProt accession and ::analysis_type:: is either “long,” “short,” “glob,” “anchor,” or “redox,” depending on the type of analysis. In cases where “:: analysis_type::” is not given, the default “long” will be used. If the requested URL ends with “.json” the output will be JSON type; in any other case it will be simple text.\nFor example:\nhttps://iupred2a.elte.hu/iupred2a/q32p44\nhttps://iupred2a.elte.hu/iupred2a/q32p44.json\nhttps://iupred2a.elte.hu/iupred2a/short/q32p44\nHere you can find a simple python script that shows the programmatic use of the IUPred2A REST API.\nRequirements\nPython3.6, python3-requests library version 2.22.0, python3-json library version 2.0.9\nSample code\nimport requests\nimport json\nURL = \"https://iupred2a.elte.hu/iupred2a/anchor/\\q32p44.json\"\nresponse = json.loads(requests.get(URL).text)\nprint(\"\\n\".join([\"{}\\t{}\".format(response[\"sequence\"][n], x) for n, x in enumerate(response[\"anchor2\"])]))\nResults\nThis example loads the results of an ANCHOR2 analysis for the human EML3 protein (Q32P44), and loads the JSON-formatted results as standard python dictionary into the variable “response.”",
    "The IUPred2A website offers a downloadable package (in tar.gz format) for local use, which is free for academic users. Along with the IUPred2A software, the experimental “IUPred2A redox” can be downloaded as well. Both packages contain an executable file together with a python library for programmatic use.\nNecessary Resources\nHardware\nThere are no definite hardware requirements for IUPred2A. It uses minimal amount of memory, and has no GPU requirements.\nSoftware\nPython 3.x runtime environment\nLibraries: os, math, textwrap. These libraries are a part of the default Python 3 installation.\nInput data\nA protein sequence in either FASTA or plain text format\nThe downloaded package requires no installation process. To be able to use it, simply unpack the compressed directory. Depending on your choice, the executable file will either be called “iupred2a.py” for the standard version or “iupred2_redox.py” for the redox potential region prediction. To start a prediction, simply call the executable file of your choice in a terminal and pass the location of the protein sequence as an argument along with the type of prediction you want to carry out (either “long,” “short,” or “glob” for the prediction of long or short disorder or globular regions, respectively). The main package also contains the example sequence for the human p53 protein in FASTA format in a file called “P53_HUMAN.seq.”\nExample 1\n$ python3 iupred2a.py P53_HUMAN.seq long\nExpected output:\n         \n# IUPred2A: context-dependent prediction of protein disorder as a function of redox state and protein binding\n# Balint Meszaros, Gabor Erdos, Zsuzsanna Dosztanyi\n# Nucleic Acids Research 2018;46(W1):W329-W337.\n#\n# Prediction type: long\n# Prediction output\ntable:\n﻿0,1,2\n# POS,RES,IUPRED2\n1,M,0.9807\n2,E,0.9849\n3,E,0.9875\n4,P,0.9693\n5,Q,0.9657\n…,,\nThe output will be displayed on a table-like structure inside your chosen terminal in text format (for more information on display formats see Support Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-prot-0005]).",
    "To carry out an ANCHOR2 analysis, use the -a switch.\nExample 2\n$ python3 iupred2a.py -a P53_HUMAN.seq long\nExpected output:\n         \n# IUPred2A: context-dependent prediction of protein disorder as a function of redox state and protein binding\n# Balint Meszaros, Gabor Erdos, Zsuzsanna Dosztanyi\n# Nucleic Acids Research 2018;46(W1):W329-W337.\n#\n# Prediction type: long\n# Prediction output\ntable:\n﻿0,1,2,3\n# POS,RES,IUPRED2,ANCHOR2\n1,M,0.9807,0.8488\n2,E,0.9849,0.8331\n3,E,0.9875,0.8187\n4,P,0.9693,0.8124\n5,Q,0.9657,0.8040\n…,,,\nOption: IUPred2A requires multiple data files, which are a part of the downloadable package, and can be found inside the “data” folder. By default, this folder is at the same directory level as the executable; however, if you want to modify the structure, you can specify the location of the data files by using the -d switch.\nExample:\n         \n$ python3 iupred2a.py -d /path/to/iupred2a/data/directory -a P53_HUMAN.seq long",
    "For programmatic usage, the downloaded package also comes with a python library package called “iupred2a_lib.py.” There are multiple approaches to using this library. One is to include its absolute path in the PYTHONPATH environment variable on LINUX systems, or their equivalent in the python interpreter on Windows- or Mac-based machines. Once the path has been added to the environment variable, we can simply import the library and use the functions inside. The library contains four major functions and some minor helper functions. The first function is called “iupred.” It requires as an argument a protein sequence in a format of a standard python string. Note that this string must only contain pure uppercase one-letter amino acid code, and not a FASTA-formatted sequence. The function also takes an optional argument called “mode,” where we can specify the type of analysis. The accepted options are “long,” “short,” or “glob” for the prediction of long or short disordered regions or structured domains, respectively. The default option is “long.” The function returns the predicted values in the form of a list of floating-point numbers. Note that if the “glob” optional argument is used, the function will return a tuple, where the first element will be the prediction scores while the second will be the string representation of the structured domains that we can see on the website, as described in Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpbi.99#cpbi99-prot-0001].\nExample 3\nimport iupred2a_lib\nmy_sequence =\n\"MEEPQSDPSVEPPLSQETFSDLWKLLPENNVLSPLPSQAMDDLMLSPDDIEQWFTEDPGPDEAPRMPEAAPPVAPAPAAPTPAAPAPAPSWPLSSSVPSQKTYQGSYGFRLGFLHSGTAKSVTCTYSPALNKMFCQLAKTCPVQLWVDSTPPPGTRVRAMAIYKQSQHMTEVVRRCPHHERCSDSDGLAPPQHLIRVEGNLRVEYLDDRNTFRHSVVVPYEPPEVGSDCTTIHYNYMCNSSCMGGMNRRPILTIITLEDSSGNLLGRNSFEVRVCACPGRDRRTEEENLRKKGEPHHELPPGSTKRALPNNTSSSPQPKKKPLDGEYFTLQIRGRERFEMFRELNEALELKDAQAGKEPGGSRAHSSHLKSKKGQSTSRHKKLMFKTEGPDSD\"\nprint(iupred2a_lib.iupred(my_sequence))\nThe function called “anchor2” works in the same fashion as “iupred.” It takes a sequence as input, and returns the predicted ANCHOR2 values in a list of floating-point numbers.\nExample 4\nimport iupred2a_lib\nmy_sequence =\n\"MEEPQSDPSVEPPLSQETFSDLWKLLPENNVLSPLPSQAMDDLMLSPDDIEQWFTEDPGPDEAPRMPEAAPPVAPAPAAPTPAAPAPAPSWPLSSSVPSQKTYQGSYGFRLGFLHSGTAKSVTCTYSPALNKMFCQLAKTCPVQLWVDSTPPPGTRVRAMAIYKQSQHMTEVVRRCPHHERCSDSDGLAPPQHLIRVEGNLRVEYLDDRNTFRHSVVVPYEPPEVGSDCTTIHYNYMCNSSCMGGMNRRPILTIITLEDSSGNLLGRNSFEVRVCACPGRDRRTEEENLRKKGEPHHELPPGSTKRALPNNTSSSPQPKKKPLDGEYFTLQIRGRERFEMFRELNEALELKDAQAGKEPGGSRAHSSHLKSKKGQSTSRHKKLMFKTEGPDSD\"\nprint(iupred2a_lib.anchor2(my_sequence))",
    "This library also contains a function to predict the experimental redox-sensitive disordered regions. The main function is called “get_redox_regions,” which requires two arguments. The first must be a list of floating-point numbers from an iupred prediction where the cysteine residues have been switched to serines (the result of the helper function “iupred2_redox”), and the second must be the result of a standard iupred prediction (the function “iupred2”). The results will be represented in a standard python dictionary, where each key is the starting position of the region and each value is the end of the corresponding starting point.\nExample 5\nimport iupred2a_lib\nmy_sequence =\n\"MEEPQSDPSVEPPLSQETFSDLWKLLPENNVLSPLPSQAMDDLMLSPDDIEQWFTEDPGPDEAPRMPEAAPPVAPAPAAPTPAAPAPAPSWPLSSSVPSQKTYQGSYGFRLGFLHSGTAKSVTCTYSPALNKMFCQLAKTCPVQLWVDSTPPPGTRVRAMAIYKQSQHMTEVVRRCPHHERCSDSDGLAPPQHLIRVEGNLRVEYLDDRNTFRHSVVVPYEPPEVGSDCTTIHYNYMCNSSCMGGMNRRPILTIITLEDSSGNLLGRNSFEVRVCACPGRDRRTEEENLRKKGEPHHELPPGSTKRALPNNTSSSPQPKKKPLDGEYFTLQIRGRERFEMFRELNEALELKDAQAGKEPGGSRAHSSHLKSKKGQSTSRHKKLMFKTEGPDSD\"\niupred_result = iupred2a_lib.iupred(my_sequence)\niupred_redox = iupred2a_lib.iupred_redox(my_sequence)\nprint(iupred2a_lib.get_redox_regions(iupred_redox, iupred_result))\nExample 6: Genome-wide analysis\nUsing the downloaded package, we can carry out a genome-wide analysis using IUPred2A. The following example will download the entire human proteome from the UniProt database and calculate the frequency of disordered residues and frequency of proteins that have at least one disordered segment longer than 30 residues in the proteome. Please note that this example may take more than 5 min, depending on the computer.\nHardware\nInternet connection\nSoftware\nPython 3.x\nLibraries: iupred2a_lib, gzip, ftplib, itertools\nimport ftplib\nimport gzip\nimport iupred2a_lib\nfrom itertools import groupby\nftp = ftplib.FTP(\"ftp.uniprot.org\")\nftp.login()\nftp_file = \"pub/databases/uniprot/current_release/\\knowledgebase/reference_proteomes/Eukaryota/\\UP000005640_9606.fasta.gz\"\nftp.retrbinary(\"RETR\" + ftp_file, open(\"human_proteome.fasta\", \"wb\").write)\nproteome = {}\nheader =\"\nwith gzip.open(\"human_proteome.fasta\", mode=\"rt\") as file_handler:\n for line in file_handler:\n  if line.startswith(\"\"):\n   header = line\n   proteome[header] = \"\"\n  elif header:\n   proteome[header] += line.strip()\ndisordered_residues = 0\ndisordered_proteins = 0\nall_residues = 0\nfor header, seq in proteome.items():\n iupred_scores = iupred2a_lib.iupred(seq, \"long\")\n if max([sum([1 for _ in y]) if × == 1 else 0 for x, y in groupby([1 if x>=0.5 else 0 for × in iupred_scores])]) > 30:\n  disordered_proteins += 1\n disordered_residues += sum([1 for × in iupred_scores if x>=0.5])",
    "all_residues += len(seq)\nprint(\"Fraction of disordered residues: {:.2f}\".format(disordered_residues/all_residues))\nprint(\"Fraction of disordered proteins: {:.2f}\".format(disordered_proteins/len(proteome)))"
  ],
  "subjectAreas": [
    "Bioinformatics"
  ],
  "bigAreas": [
    "Bioinformatics & Computational Biology"
  ]
}