{
  "id": 2583,
  "origin_website": "Cell",
  "title": "A kinetic modeling platform for predicting the efficacy of siRNA formulations in vitro and in vivo",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nFitting for internalization rate\nTiming: 15–30 min\nCritical: To proceed with the following steps, make sure to first install all software and packages listed in ‘Software requirements.’\nOne of the core aims of our protocol is to provide users with the ability to easily predict changes in gene expression levels both in vitro and in vivo upon application of any siRNA formulation of interest. Traditionally, modeling the efficacy of various siRNA formulations is challenging because the RNAi process consists of multiple steps that are difficult to characterize experimentally (Haley and Zamore, 2004[href=https://www.wicell.org#bib6]; Cuccato et al., 2011[href=https://www.wicell.org#bib5]; Bartlett and Davis, 2006[href=https://www.wicell.org#bib2]). In particular, cellular uptake and necessary post-uptake processing, including endosomal escape, comprises multiple steps, and the parameters that describe these steps are unique to each delivery system. In this mathematical framework, we define the internalization rate as a single aggregated parameter so that this rate is the only unknown variable, and thus, can be fit from a single experimental time point. By fitting for an aggregated internalization rate, users can reduce the number of parameters needed to implement the model in various experimental scenarios. This fitting process is performed as follows:\nTo call the packages that will be used for this protocol, copy and paste the following code into Jupyter Notebook (Figure 2[href=https://www.wicell.org#fig2]A).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2084-Fig2.jpg\nFigure 2. Fitting for an optimized internalization rate\n(A) After opening Jupyter Notebook, choose the correct directory in which to save your notebook (blue box). Click on the ‘New’ box and create a new Python 3 notebook (red box).",
    "(B) After copy and pasting all of the code provided in the ‘fitting for internalization rate[href=https://www.wicell.org#sec2.1]’ section, run code (red box). If there is an error and users must re-run the code for any reason, make sure to reset the kernel (blue box) before re-running. Make sure that the kernel is trusted (green box).\n(C) Once the code is finished, the optimized internalization rate and root-mean-square error (RMSE) for that rate are displayed.\nNote: Full code is also available in the ipynb file, ‘Fitting for internalization rate.ipynb,’ that is included in the electronic information associated with this publication (Data S1[href=https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2084-Mmc1.zip]).\n# Import packages\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom scipy.optimize import minimize\nfrom sklearn.metrics import mean_squared_error, r2_score\nCopy and paste the following code, and modify the values for the seven variables accordingly.\nNote: Cell-doubling rates are needed to correctly account for the dilution of intracellular siRNA over time. The next three parameters are required to compute the component degradation rates and the production rates of mRNA and protein assuming steady-state values in the absence of siRNA. The last three parameters are needed to correctly scale and account for the initial siRNA concentration available to the cells.\n# Inputs\ncell_doubling = 17.0 # cell doubling time (h)\nsiRNA_half_life = 24.0 # siRNA half-life (h)\nmRNA_half_life = 7 # mRNA half-life (h)\nprot_half_life = 26 # protein half-life (h)\nsiRNA0 = 1500 # transfection concentration (nM)\ntransfection_time = 0.08 # transfection time (h)\nV_ex = 100 ∗ 10 ∗∗ -6 # transfection volume (L)\nCopy and paste the following code, and define the final time point of interest as the variable “tf_transfection”.",
    "Note: The accuracy of model predictions is enhanced as more steps are taken. However, increasing the number of steps results in an escalation of computation cost (e.g., time). A minimum value of 0.01 is recommended based on characteristic time calculations of the fastest rate (cleavage rate of mRNA = 500 nM-1h-1). (Roh et al., 2021[href=https://www.wicell.org#bib17]; Wittrup et al., 2015[href=https://www.wicell.org#bib21]).\n# Time and steps\nt0 = 0\ntf_transfection = 200.0\ndt = 0.01\nt = np.linspace(t0,tf_transfection,int(tf_transfection/dt + dt))\nn = len(t)\nCopy and paste the following code.\nInput the time points of experimental data as parameters of variable “x”.\nInput the respective gene expression levels at each time point as parameters of variable “y”.\nNote: Data for y-array are defined as protein expression levels post-siRNA exposure that are scaled between the values of 0 and 1.\n# Experimental measurements\nx = [48] # time of measurement (h)\ny = [0.49] # gene expression levels\nCopy and paste the following code, and input an initial guess for internalization rate.\nNote: The recommended starting value is 10-10 h-1.\n# Initial guess for internalization rate\nk_int_init = 1 ∗ 10 ∗∗ -10 # (h-1)\nCopy and paste the following code, run code, and obtain an optimized internalization rate (Figures 2[href=https://www.wicell.org#fig2]B and 2C). Troubleshooting 1–4[href=https://www.wicell.org#troubleshooting].\nNote: Do not change any values within the code provided in step 6. At the end of the run, the code will automatically report the optimized internalization rate along with the RMSE associated with that rate.\n# Parameters for volume scaling\nV_in = 2000 ∗ 10 ∗∗ -15 # Intracellular volume (L)\n# Unit conversions\nmol_M = 6.022 ∗ 10 ∗∗ 23 # (number/mole)\nrtot = 1.9 ∗ 10 ∗∗ 15 # (number/L)\nr_tot = rtot / mol_M ∗ (10 ∗∗ 9) # (nM)\n# Initial concentrations",
    "z0 = [siRNA0,0,0,100,100] # External siRNA, intracellular siRNA, RISC, mRNA, prot\nDNA = 100\n# Rates\nk_sdeg = 0.69315 / siRNA_half_life # (h-1)\nk_sdil = 0.69315 / cell_doubling # (h-1)\nk_mRNA = 0.69315 / mRNA_half_life # (h-1)\nk_mdeg = 0.69315 / mRNA_half_life # (h-1)\nk_risc_orig = 2 ∗ 10 ∗∗ -19 # (L/h/number)\nk_risc_M = k_risc_orig ∗ mol_M # (M-1h-1)\nk_risc = k_risc_M ∗ 10 ∗∗ -9 # (nM-1h-1)\nk_rdeg = 0.077 # (h-1)\nk_mRNA = 0.69315 / mRNA_half_life # (h-1)\nk_mdeg = 0.69315 / mRNA_half_life # (h-1)\nk_cleav = 5 ∗ 10 ∗∗ 2 # (nM-1h-1)\nk_prot = 0.69315 / prot_half_life # (h-1)\nk_pdeg = 0.69315 / prot_half_life # (h-1)\n# Unpopulated lists\nsiRNA_ex = np.ones(n) ∗ z0[0]\nsiRNA = np.ones(n) ∗ z0[1]\nRISC = np.ones(n) ∗ z0[2]\nmRNA = np.ones(n) ∗ z0[3]\nprot = np.ones(n) ∗ z0[4]\n# Changing time points to array for optimization code\nx_array = np.array(x)\nx_opt_array = x_array ∗ 100\nx_indices_to_access = x_opt_array.tolist()\nprint(x_indices_to_access)\n# Optimization code\ndef kint_rmse(k_int):\n   for i in range(1,n):\n     siRNA_ex[i] = (-k_int ∗ siRNA_ex[i-1]) ∗ dt + siRNA_ex[i-1]\n     if i > (transfection_time / dt):\n         siRNA_ex[i] = 0\n     siRNA[i] = (k_int ∗ (siRNA_ex[i-1] ∗ (V_ex/V_in)) - k_sdeg ∗ siRNA[i-1] - k_sdil ∗ siRNA[i-1]) ∗ dt + siRNA[i-1]\n     RISC[i] = (k_risc ∗ siRNA[i-1] ∗ (r_tot - RISC[i-1]) - k_rdeg ∗ RISC[i-1])∗ dt + RISC[i-1]\n     if RISC[i] > r_tot:\n         RISC[i] = r_tot\n     mRNA[i] = (k_mRNA ∗ DNA - k_mdeg ∗ mRNA[i-1] - k_cleav ∗ RISC[i-1] ∗ mRNA[i-1]) ∗ dt + mRNA[i-1]\n     if mRNA[i] < 0:\n         mRNA[i] = 0\n     prot[i] = (k_prot ∗ mRNA[i-1] - k_pdeg ∗ prot[i-1]) ∗ dt + prot[i-1]\n     if prot[i] < 0:\n         prot[i] = 0\n     prot_norm = prot / z0[4]\n     prot_norm_array = np.array(prot_norm)\n     y_pred_array = prot_norm_array[x_indices_to_access]\n     y_pred = list(y_pred_array)\n   rmse = np.sqrt(mean_squared_error(y,y_pred))\n   return rmse",
    "# Define empty array for internalization rate\noptimized_kint = 0\ni = kint_rmse(k_int_init)\n   updated_k_int = k_int_init + (0.1 ∗ 10 ∗∗ -11)\nj = kint_rmse(updated_k_int)\nwhile i > j:\n   print(i)\n   k_int_init = k_int_init + (0.1 ∗ 10 ∗∗ -11)\n   i = kint_rmse(k_int_init)\n   updated_k_int = k_int_init + (0.1 ∗ 10 ∗∗ -11)\n   j = kint_rmse(updated_k_int)\n   if i <= j:\n       print(k_int_init)\n       optimized_kint = k_int_init\n       break\nprint(\"Optimized internalization rate: \", optimized_kint)\nprint(kint_rmse(optimized_kint))\nModeling siRNA-induced changes in gene expression levels in vitro\nTiming: 15 min\nCritical: To proceed with the following steps, make sure to first obtain an optimized internalization rate using the procedure listed in ‘fitting for internalization rate[href=https://www.wicell.org#sec2.1].’\nTo expand the applicability of the model described in this protocol, the number of parameters required to accurately predict gene silencing in vitro following the delivery of an siRNA formulation is further reduced by including only the most important parameters within the mathematical framework to get quantitative agreement with experimental data. Major rate-limiting kinetic steps for the four main components of the RNAi process (i.e., siRNA, RNA-induced silencing complex (RISC), mRNA, and protein) are identified from literature and incorporated into the model. The parameters that are considered for each component and the values of these parameters are listed in Tables 1[href=https://www.wicell.org#tbl1] and 2[href=https://www.wicell.org#tbl2]. In the paragraph below, the rationale for choosing those specific kinetic rates for in vitro modeling of siRNA-induced gene silencing is detailed.\ntable:files/protocols_protocol_2084_1.csv\nReprinted with permission from (Roh et al., 2021[href=https://www.wicell.org#bib17]). Copyright 2021 American Chemical Society.\ntable:files/protocols_protocol_2084_2.csv\nReprinted with permission from (Roh et al., 2021[href=https://www.wicell.org#bib17]). Copyright 2021 American Chemical Society.",
    "(Equation 1)     d  [  s i R N  A  i n    ]    d t   =  k  i n t   ∗   V  e x    V  i n    ∗  [  s i R N  A  e x    ]  −  k  s , d i l    [  s i R N  A  i n    ]  −  k  s , d e g    [  s i R N  A  i n    ]      \n   (Equation 2)     d  [ R I S C ]    d t   =  k  R I S C    [  s i R N  A  i n    ]   [  R I S  C  t o t   − R I S C  ]  −  k  r , d e g    [ R I S C ]      \n   (Equation 3)     d  [ m R N A ]    d t   =  k  m R N A    [  D N A  ]  −  k  m , d e g    [  m R N A  ]  −  k  c l e a v    [ m R N A ]   [ R I S C ]      \n   (Equation 4)     d  [ p r o t ]    d t   =  k  p r o t    [  m R N A  ]  −  k  p , d e g    [ p r o t ]",
    "As noted in the previous section, the increase in intracellular siRNA concentration is defined to depend solely on a single aggregated internalization rate (kint, Equation 1[href=https://www.wicell.org#fd1]). Additionally, the amount of intracellular siRNA is affected by (i) dilution of the local intracellular siRNA concentration as cells divide (ks,dil, Equation 1[href=https://www.wicell.org#fd1]); and (ii) siRNA degradation (ks,deg, Equation 1[href=https://www.wicell.org#fd1]). To model the RISC concentration, we assume that the concentration of active RISC, e.g., the species that can recognize and cleave mRNA, depends solely on the binding of free siRNA to RISC (kRISC, Equation 2[href=https://www.wicell.org#fd2]) and RISC degradation (kr,deg, Equation 2[href=https://www.wicell.org#fd2]). Although previous studies have shown that RISC has multiple intermediates, (Pratt and MacRae, 2009[href=https://www.wicell.org#bib16]) our assumption is reasonable because the formation of the siRNA-RISC intermediate has the slowest kinetic rate of all steps in active RISC formation (Pratt and MacRae, 2009[href=https://www.wicell.org#bib16]). Meanwhile, the mRNA concentration is modeled to depend on innate mRNA production (kmRNA, Equation 3[href=https://www.wicell.org#fd3]), degradation (km,deg, Equation 3[href=https://www.wicell.org#fd3]), and cleavage (kcleav, Equation 3[href=https://www.wicell.org#fd3]) rates. Finally, protein concentration depends directly on protein production from the mRNA template (kprot, Equation 4[href=https://www.wicell.org#fd4]), along with protein degradation (kp,deg, Equation 4[href=https://www.wicell.org#fd4]).\nTo call the packages that will be used for this protocol, copy and paste the code provided below into Jupyter Notebook (Figure 3[href=https://www.wicell.org#fig3]A).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2084-Fig3.jpg\nFigure 3. Modeling changes in gene expression levels in vitro using the fitted internalization rate\n(A) As mentioned in previous section, after opening Jupyter Notebook, choose the correct directory in which to save your notebook (blue box). Click on the ‘New’ box and create a new Python 3 notebook (red box).",
    "(B) Copy and paste all code provided in the ‘modeling siRNA-induced changes in gene expression levels in vitro[href=https://www.wicell.org#sec2.2]’ section. Make sure that the internalization rate is the same as the optimized rate obtained in the ‘fitting for internalization rate[href=https://www.wicell.org#sec2.1]’ section. If there is an error and users must re-run the code for any reason, make sure to reset the kernel (blue box) before re-running. Make sure that the kernel is trusted (green box).\n(C) Once the code is finished, a plot will be generated with the details and data provided in the ‘# Plot figure’ section of the code.\nNote: Full code is also available in the ipynb file, ‘Modeling siRNA-induced changes in gene expression levels in vitro.ipynb,’ that is included in the electronic information associated with this publication (Data S2[href=https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2084-Mmc1.zip]).\n# Import packages\nimport numpy as np\nimport matplotlib.pyplot as plt\nCopy and paste the following code, and modify the values for the seven variables accordingly.\n# Inputs\ncell_doubling = 17.0 # cell doubling time (h)\nsiRNA_half_life = 24.0 # siRNA half-life (h)\nmRNA_half_life = 7 # mRNA half-life (h)\nprot_half_life = 26 # protein half-life (h)\nsiRNA0 = 1500 # transfection concentration (nM)\ntransfection_time = 0.08 # transfection time (h)\nV_ex = 100 ∗ 10 ∗∗ -6 # transfection volume (L)\nCopy and paste the following code, and define the final time point of interest as the variable “tf_transfection”.\n# Time and steps\nt0 = 0\ntf_transfection = 200.0\ndt = 0.01\nt = np.linspace(t0,tf_transfection,int(tf_transfection/dt + dt))\nn = len(t)\nCopy and paste the following code, and input the internalization rate fitted using the previous procedure.\n# Internalization rate\nk_int = 7.2 ∗ 10 ∗∗ -11 # (h-1)",
    "Copy and paste the following code, run code, and obtain changes in mRNA and protein concentration levels (Figure 3[href=https://www.wicell.org#fig3]B). Troubleshooting 5[href=https://www.wicell.org#troubleshooting].\n# Parameters for volume scaling\nV_in = 2000 ∗ 10 ∗∗ -15 # Intracellular volume (L)\n# Unit conversions\nmol_M = 6.022 ∗ 10 ∗∗ 23 # (number/mole)\nrtot = 1.9 ∗ 10 ∗∗ 15 # (number/L)\nr_tot = rtot / mol_M ∗ (10 ∗∗ 9) # (nM)\n# Initial concentrations\nz0 = [siRNA0,0,0,100,100] # External siRNA, intracellular siRNA, RISC, mRNA, prot\nDNA = 100\n# Rates\nk_sdeg = 0.69315 / siRNA_half_life # (h-1)\nk_sdil = 0.69315 / cell_doubling # (h-1)\nk_mRNA = 0.69315 / mRNA_half_life # (h-1)\nk_mdeg = 0.69315 / mRNA_half_life # (h-1)\nk_risc_orig = 2 ∗ 10 ∗∗ -19 # (L/h/number)\nk_risc_M = k_risc_orig ∗ mol_M # (M-1h-1)\nk_risc = k_risc_M ∗ 10 ∗∗ -9 # (nM-1h-1)\nk_rdeg = 0.077 # (h-1)\nk_mRNA = 0.69315 / mRNA_half_life # (h-1)\nk_mdeg = 0.69315 / mRNA_half_life # (h-1)\nk_cleav = 5 ∗ 10 ∗∗ 2 # (nM-1h-1)\nk_prot = 0.69315 / prot_half_life # (h-1)\nk_pdeg = 0.69315 / prot_half_life # (h-1)\n# Number of cells\nrtot = 1.9 ∗ 10 ∗∗ 15 # (number/L)\nmol_M = 6.022 ∗ 10 ∗∗ 23 # (number/mole)\nintracellular_vol = 2000 ∗ 10 ∗∗ -15 # (L/cell)\nr_tot = rtot / mol_M ∗ (10 ∗∗ 9) # (nM)\n# Unpopulated lists\nsiRNA_ex = np.ones(n) ∗ z0[0]\nsiRNA = np.ones(n) ∗ z0[1]\nRISC = np.ones(n) ∗ z0[2]\nmRNA = np.ones(n) ∗ z0[3]\nprot = np.ones(n) ∗ z0[4]\n# ODEs\nfor i in range(1,n):\n   siRNA_ex[i] = (-k_int ∗ siRNA_ex[i-1]) ∗ dt + siRNA_ex[i-1]\n   if i > (transfection_time / dt):\n       siRNA_ex[i] = 0\n   siRNA[i] = (k_int ∗ (siRNA_ex[i-1] ∗ (V_ex/V_in)) - k_sdeg ∗ siRNA[i-1] - k_sdil ∗ siRNA[i-1]) ∗ dt + siRNA[i-1]",
    "RISC[i] = (k_risc ∗ siRNA[i-1] ∗ (r_tot - RISC[i-1]) - k_rdeg ∗ RISC[i-1])∗ dt + RISC[i-1]\n   if RISC[i] > r_tot:\n       RISC[i] = r_tot\n   mRNA[i] = (k_mRNA ∗ DNA - k_mdeg ∗ mRNA[i-1] - k_cleav ∗ RISC[i-1] ∗ mRNA[i-1]) ∗ dt + mRNA[i-1]\n   if mRNA[i] < 0:\n       mRNA[i] = 0\n   prot[i] = (k_prot ∗ mRNA[i-1] - k_pdeg ∗ prot[i-1]) ∗ dt + prot[i-1]\n   if prot[i] < 0:\n       prot[i] = 0\n# Normalized values\nsiRNA_norm = siRNA / z0[0]\nmRNA_norm = mRNA / z0[3]\nprot_norm = prot / z0[4]\nCopy and paste the following code, and plot desired data accordingly (Figure 3[href=https://www.wicell.org#fig3]C).\nNote: In this example code, experimental data regarding GFP expression levels over time are incorporated into the code. Users can change data within the x-, y-, and err1-arrays for time points, gene expression levels, and associated error, respectively. The ‘# Experimental data’ section of the code can be omitted if users do not wish to plot experimental and modeling data together. Also, plot details including plot type, x-axis and y-axis ticks, and x-axis and y-axis limits can be customized to meet the users’ needs. Detailed explanations and examples can be found at matplotlib.org (Hunter, 2007[href=https://www.wicell.org#bib10]).\n# Experimental data\nx = [0,24,48,72,96,168] # time of measurement (h)\ny = [1.00,0.84,0.49,0.43,0.50,0.95] # gene expression levels\nerr1 = [0.00,0.06,0.04,0.03,0.04,0.00] # standard deviation associated with each measurement\n# Plot figure\nplt.errorbar(x,y,yerr=err1,fmt = 'bo')\nplt.plot(t,prot_norm,'k')\nplt.ylim(0,1.05)\nplt.yticks(np.arange(0,1.1,0.2))\nplt.xlim(0,192)\nplt.xticks(np.arange(0,193,24))\nplt.xlabel('Time(h)')\nplt.ylabel('Relative GFP expression')\nplt.show()\nModeling siRNA-induced changes in gene expression levels in vivo\nTiming: 15 min\nCritical: To proceed with the following steps, make sure to first obtain an optimized internalization rate using the procedure listed in ‘fitting for internalization rate[href=https://www.wicell.org#sec2.1].’",
    "A major difference between biological parameters that directly affect intracellular siRNA concentrations in vitro vs. in vivo is that the clearance of nucleic acids at the target tissue in vivo results in siRNA dilution rates that are significantly different from the dilution rates in vitro (Oraiopoulou et al., 2017[href=https://www.wicell.org#bib12]). More specifically, the dominating siRNA dilution factor in vitro is cell division. However, siRNA dilution in vivo is governed by additional extracellular delivery barriers. Additional terms were added to the mathematical framework to account for this difference in extracellular siRNA concentration prior to cellular processing. Again, parameters were lumped into two process-related terms – accumulation and clearance from the tissue of interest – to eliminate the need to characterize a series of hard-to-measure transport steps (Blanco et al., 2015[href=https://www.wicell.org#bib3]). The accumulation of siRNA in the tissue of interest was defined as a constant and approximated from fractional biodistribution values characterized in the literature, (Hoshyar et al., 2016[href=https://www.wicell.org#bib9]; Jasinski et al., 2018[href=https://www.wicell.org#bib11]; He et al., 2010[href=https://www.wicell.org#bib8]; Pérez-Campaña et al., 2013[href=https://www.wicell.org#bib15]) because transport steps before accumulation into the target tissue, such as clearance from blood, occur rapidly and can be assumed to be instantaneous in comparison to the rates of later steps (Alexis et al., 2008[href=https://www.wicell.org#bib1]). Particle clearance rates from specific tissues are not as widely characterized as accumulation percentages, and users are required to vary the clearance rate to obtain an accurate kinetic profile for in vivo gene silencing.\nTo call the packages that will be used for this protocol, copy and paste the code provided below into Jupyter Notebook (Figure 4[href=https://www.wicell.org#fig4]A).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2084-Fig4.jpg\nFigure 4. Modeling changes in gene expression levels in vivo using the fitted internalization rate",
    "(A) As mentioned in previous section, after opening Jupyter Notebook, choose the correct directory in which to save your notebook (blue box). Click on the ‘New’ box and create a new Python 3 notebook (red box).\n(B) Copy and paste all code provided in the ‘modeling siRNA-induced changes in gene expression levels in vivo[href=https://www.wicell.org#sec2.3]’ section. Make sure that the internalization rate is the same as the optimized rate obtained in the ‘fitting for internalization rate[href=https://www.wicell.org#sec2.1]’ section. If there is an error and users must re-run the code for any reason, make sure to reset the kernel (blue box) before re-running. Make sure that the kernel is trusted (green box). Input an initial guess for the clearance rate.\n(C) Once the code is finished, a plot will be generated with the details and data provided in the ‘# Plot figure’ section of the code.\n(D) Vary the clearance rate until model results and experimental data are in good agreement.\nNote: Full code is also available in the ipynb file, ‘Modeling siRNA-induced changes in gene expression levels in vivo.ipynb,’ that is included in the electronic information associated with this publication (Data S3[href=https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2084-Mmc1.zip]).\n# Import packages\nimport numpy as np\nimport matplotlib.pyplot as plt\nCopy and paste the code below.\nModify the values for the eight parameters accordingly.\nNote: Users can directly input the seven parameters used in the ‘modeling siRNA-induced changes in gene expression levels in vitro[href=https://www.wicell.org#sec2.2]’ section IF the in vitro data set uses the same siRNA formulation to target the same cell type. The example code given here includes different parameter values from the previous section because the in vivo example is modeling a different experimental scenario.\nEstimate the percentage of particles that arrive at the tissue of interest (defined as the variable “pen”) from existing literature.",
    "Note: Accumulation (“pen”) is defined as the fractional biodistribution within the tissue of interest, ranging between values of 0 and 1, and is needed to accurately account for the initial external siRNA concentration that is available for cellular internalization. Users are encouraged to estimate this value from literature on the basis of particle size and material.\n# Inputs\ncell_doubling = 27.0 # cell doubling time (h)\nsiRNA_half_life = 24.0 # siRNA half-life (h)\nmRNA_half_life = 16 # mRNA half-life (h)\nprot_half_life = 3.3 # protein half-life (h)\nsiRNA0 = 3760 # transfection concentration (nM)\ntransfection_time = 530 # transfection time (h)\nV_ex = 0.4 ∗ 10 ∗∗ -3 # transfection volume (L)\npen = 0.106/100\nCopy and paste the following code, and define the final time point of interest as the variable “tf_transfection”.\n# Time and steps\nt0 = 0\ntf_transfection = 530.0\ndt = 0.01\nt = np.linspace(t0,tf_transfection,int(tf_transfection/dt + dt))\nn = len(t)\nCopy and paste the following code, and input the internalization rate fitted using the previous procedure in the ‘fitting for internalization rate[href=https://www.wicell.org#sec2.1]’ section (Figure 4[href=https://www.wicell.org#fig4]B).\nNote: Make sure that the internalization rate is the same as the optimized rate obtained in the ‘fitting for internalization rate[href=https://www.wicell.org#sec2.1]’ section. The example code given here includes a different internalization rate value from the previous section because the in vivo example is modeling a different experimental scenario.\n# Internalization rate\nk_int = 9 ∗ 10 ∗∗ -12 # (h-1)\nCopy and paste the following code, and vary the clearance rate (Figure 4[href=https://www.wicell.org#fig4]B).\nNote: The clearance rate is used to correctly depict the amount of external siRNA over time.",
    "Critical: Exact clearance rates for different tissues are not as widely characterized experimentally, and users may have to vary this rate manually until a good alignment is achieved between experimental and modeling data.\n# Clearance rate\nk_clear = 0.03 # (h-1)\nCopy and paste the following code, run code, and obtain changes in mRNA and protein concentration levels.\n# Parameters for volume scaling\nV_in = 2000 ∗ 10 ∗∗ -15 # Intracellular volume (L)\n# Unit conversions\nmol_M = 6.022 ∗ 10 ∗∗ 23 # (number/mole)\nrtot = 1.9 ∗ 10 ∗∗ 15 # (number/L)\nr_tot = rtot / mol_M ∗ (10 ∗∗ 9) # (nM)\n# Initial concentrations\nz0 = [siRNA0∗pen,0,0,100,100] # External siRNA, intracellular siRNA, RISC, mRNA, prot\nDNA = 100\n# Rates\nk_sdeg = 0.69315 / siRNA_half_life # (h-1)\nk_sdil = 0.69315 / cell_doubling # (h-1)\nk_mRNA = 0.69315 / mRNA_half_life # (h-1)\nk_mdeg = 0.69315 / mRNA_half_life # (h-1)\nk_risc_orig = 2 ∗ 10 ∗∗ -19 # (L/h/number)\nk_risc_M = k_risc_orig ∗ mol_M # (M-1h-1)\nk_risc = k_risc_M ∗ 10 ∗∗ -9 # (nM-1h-1)\nk_rdeg = 0.077 # (h-1)\nk_mRNA = 0.69315 / mRNA_half_life # (h-1)\nk_mdeg = 0.69315 / mRNA_half_life # (h-1)\nk_cleav = 5 ∗ 10 ∗∗ 2 # (nM-1h-1)\nk_prot = 0.69315 / prot_half_life # (h-1)\nk_pdeg = 0.69315 / prot_half_life # (h-1)\n# Unpopulated lists\nsiRNA_ex = np.ones(n) ∗ z0[0]\nsiRNA = np.ones(n) ∗ z0[1]\nRISC = np.ones(n) ∗ z0[2]\nmRNA = np.ones(n) ∗ z0[3]\nprot = np.ones(n) ∗ z0[4]\n# ODEs\nfor i in range(1,n):\n   siRNA_ex[i] = (-k_int ∗ siRNA_ex[i-1] - k_clear ∗ siRNA_ex[i-1]) ∗ dt + siRNA_ex[i-1]\n   if i > (transfection_time / dt):\n     siRNA_ex[i] = 0\n   siRNA[i] = (k_int ∗ (siRNA_ex[i-1] ∗ (V_ex/V_in)) - k_sdeg ∗ siRNA[i-1] - k_sdil ∗ siRNA[i-1]) ∗ dt + siRNA[i-1]",
    "RISC[i] = (k_risc ∗ siRNA[i-1] ∗ (r_tot - RISC[i-1]) - k_rdeg ∗ RISC[i-1])∗ dt + RISC[i-1]\n   if RISC[i] > r_tot:\n     RISC[i] = r_tot\n   mRNA[i] = (k_mRNA ∗ DNA - k_mdeg ∗ mRNA[i-1] - k_cleav ∗ RISC[i-1] ∗ mRNA[i-1]) ∗ dt + mRNA[i-1]\n   if mRNA[i] < 0:\n     mRNA[i] = 0\n   prot[i] = (k_prot ∗ mRNA[i-1] - k_pdeg ∗ prot[i-1]) ∗ dt + prot[i-1]\n   if prot[i] < 0:\n     prot[i] = 0\n# Normalized values\nsiRNA_norm = siRNA / z0[0]\nmRNA_norm = mRNA / z0[3]\nprot_norm = prot / z0[4]\nCopy and paste the following code and plot desired data accordingly (Figure 4[href=https://www.wicell.org#fig4]C).\nNote: In this example code, experimental data regarding apoB expression levels over time are incorporated within the code. Users can change data within the x-, y-, and err1-arrays for time points, gene expression levels, and associated error, respectively. The ‘# Experimental data’ section of the code can be omitted if users do not wish to plot experimental and modeling data together. Also, plot details including plot type, x-axis and y-axis ticks, and x-axis and y-axis limits can be customized to meet the users’ needs. Detailed explanations and examples can be found at matplotlib.org (Hunter, 2007[href=https://www.wicell.org#bib10]).\n# Experimental data\nx = [24,72,168,336]\ny = [0.18,0.35,0.7,0.9]\nerr1 = [0.08,0.08,0.11,0.18]\n# Plot figure\nplt.figure(1,figsize=(12,4))\nfig,ax = plt.subplots(figsize=(7,5.5))\nplt.errorbar(x,y,yerr=err1,fmt='bo',label='Experimental')\nplt.plot(t,mRNA_norm,'k',label='Model')\nplt.ylim(0,1.05)\nplt.yticks(np.arange(0,1.1,0.2),fontsize=18)\nplt.xlim(0,530)\nplt.xticks(np.arange(0,530,48),fontsize=18)\nax.set_xticklabels(['0','2','4','6','8','10','12','14','16','18','20','22'])\nplt.xlabel('Time (d)',fontsize=18)\nplt.ylabel('Relative apoB mRNA expression',fontsize=18)\nplt.legend(loc=4,fontsize=15)\nplt.savefig('Strapps',dpi=240)\nplt.show()\nVary the clearance rate in step 17, if needed, until model results and experimental data are in good agreement (Figure 4[href=https://www.wicell.org#fig4]D)."
  ],
  "subjectAreas": [
    "Computer Sciences",
    "Gene Expression",
    "Biotechnology And Bioengineering"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics"
  ]
}