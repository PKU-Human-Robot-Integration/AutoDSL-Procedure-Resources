{
  "id": 11831,
  "origin_website": "Jove",
  "title": "An R-Based Landscape Validation of a Competing Risk Model",
  "procedures": [
    "The Surveillance, Epidemiology, and End Results (SEER) database is an open-access cancer database that only contains deidentified patient data (SEER ID: 12296-Nov2018). Therefore, this study was exempted from the approval of the review board of the Affiliated Jinhua Hospital, Zhejiang University School of Medicine.\n1. Data preparation and R packages preparation\nPrepare and import the data.\n> Dataset <- read.csv(\"…/Breast cancer Data.xlsx\") #Import data.\n\tNOTE: The data are uploaded in Supplementary File 1.\nInstall and load the R packages.\n> packages <- c(\"rms\",\"cmprsk\",\"mstate\",\"survival\",\"riskRegression\",\"\n\tprodlim\")\n\t> req.pcg <- function(pcg){\n\tnew <- pcg[!(pcg %in% installed.packages()[, \"Package\"])]\n\tif (length(new)) install.packages(new, dependencies = T)\n\tsapply(pcg, require, ch = T)\n\t }\n\t> req.pcg(packages)\n\t​NOTE: Perform the following procedures based on R software (version 3.6.2) using the packages rms, cmprsk, mstate, survival, riskRegression, and prodlim (http://www.r-projectrg/).\n2. Establish competing risk nomograms in two distinct methods\nEstablish the competing risk nomogram in a direct method.\n> mod_cph <- cph(Surv(Survivalmonths, status) ~ factor1+ factor2+…,\n\t x=T, y=T, surv=T, data=Dataset)\n\t> nom <- nomogram(mod_cph, fun=list(function(x) 1-surv_cph(36, x)…),\n\t funlabel=c(\"3-year event1 Prob.\"…), lp=F) #Take the 36th month as an example.\n> mod_crr <- crr(Survivalmonths, fstatus, failcode=1, cov1=cov)\n\t> score <- log(log((1-real.3y),(1-cif.min36)))/(maxbeta/100)\n\t> plot(nom)\nEstablish the competing risk nomogram in a weighted method.\n> df.w <- crprep(\"Survivalmonths\",\" fstatus\",\n\t data=Dataset, trans=c(1,2), cens=0,\n\t keep=c(\"factor1\",\" factor2\"…))\n\t> mod.w <- cph(Surv(Tstart, Tstop, status==1) ~ factor1+factor2+…,\n\t data=df.w, weight=weight.cens, subset=failcode==1, surv=T)\n\t​> nom.w <- nomogram(mod.w…)\n3. Discrimination ability of the competing risk nomogram\nC-index for discrimination\n\t\nFit the matrix cov into the competing risk model mod_crr. and get a predicted matrix suv.\n> suv <- predict.crr(mod_crr, cov)\nGet the cumulative incidences in a certain month from suv and calculate the C-index with the function rcorr.cens.\n> cif36 <- suv[which(suv[,1]==36),][-1]\n\t\t> rcorr <- rcorr.cens(1-cif36,Surv(Dataset$Survivalmonths,Dataset$tumordeath))\n\t\t> cindex <- rcorr[1]\nAUC for discrimination",
    "Score the predictive performance of the competing risk model using the function Score (riskRegression package).\n> fgr.w <- FGR(Hist(Survivalmonths, fstatus) ~ factor1+ factor2+…, data=Dataset, cause=1)\n\t\t> score <- Score(list(\"Fine-Gray\" = fgr.w),\nExtract the AUC from the \"score\".\n​> score$AUC\n4. Calibration ability of competing risk models\nCalibration curves with a 95% confidence interval of the competing risk model\n\t\nGet a data frame with the cumulative incidences of each individual in a certain failure time.\n> cif36 <- data.frame(cif36) #Take the 36th month as an example.\n> colnames(cif36.36_o)<-c(\"36m\")\nDivide the cohort according to the estimated cumulative incidences into five subgroups and calculate the average predicted cumulative incidences of each subgroup.\n> group36 <- cut(cif36$`36m`,\n\t\tquantile(cif36$`36m`, seq(0, 1, 0.2)),\n\t\tinclude.lowest = TRUE, labels = 1:5)\n\t\t> mean36 <- as.vector(by(cif36 $`36m`, group36, mean))\nCalculate the observed cumulative incidences, that is, the actual cumulative incidences, using the function cuminc, and then get the observed cumulative incidences with a 95% confidence interval in a certain failure time.\n> cum36 <- cuminc(Dataset$Survivalmonths,Dataset$fstatus,group36)\n\t\t> obs36 <- timepoints(cum36,Dataset$Survivalmonths)$est[c(1:5),36]\n\t\t> obs36var <- timepoints(cum36,Dataset$Survivalmonths)$var[c(1:5),36]\n\t\t> df <- data.frame(mean36, obs36, obs36var)\nPlot the calibration curve with the predicted cumulative incidences as the x-axis and the observed cumulative incidences as the y-axis using the function ggplot.\n> ggplot(df)+ geom_point(aes(x=mean36,y=obs36),col=\"red\")+\n\t\t geom_point(aes(x=mean36,y=obs36),col=\"red\",pch=4)+\n\t\t geom_line(col=\"red\",aes(x=mean36,y=obs36))+\n\t\t geom_errorbar(col=\"red\",aes(x=mean36,y=obs36+1.96\n\t\t*sqrt(obs36var)),\n\t\t ymin =obs36-1.96*sqrt(obs36var), ymax = obs36+1.96\n\t\t*sqrt(obs36var))\n\t\tgeom_abline(lty=3,lwd=2,col=c(rgb(0,118,192,\n\t\tmaxColorValue=255)))\nCalibration curve with risk scores of the competing risk model\n\t\nValuate each level of all the variables and obtain the total RS.\n> Dataset$factor1[Dataset$factor1==1] <- factor1.scale[\"Factor1_level1\"]\n\t\t> … #For example, Dataset$histology[Dataset$histology==1]<-histology.scale[\"Histology1\"]\n> Dataset$rs <- Dataset$factor1+Dataset$factor2+Dataset$factor3+…\n\t\tNOTE: Obtain the total RS for each patient by summing the points of each variable.\nCount the frequencies and calculate the observed cumulative incidences of the different total risk scores.\n> rs.freq <- as.data.frame(table(Dataset$rs))\n\t\t> obs.36 <- vector(mode=\"numeric\", length=nrow(rs.freq))\n\t\t> for (i in 1: nrow(rs.freq)) {",
    "dataset <- subset(Dataset,Dataset$rs== rs.freq [i,1])\n\t\t cif.dataset <- cuminc(dataset$Survivalmonths,dataset$death3)\n\t\t cif36.dataset <- timepoints(cif.dataset,36)\n\t\t obs.36[i] <- cif36.dataset$est[1]}\nSet the range of the x-axis and calculate the predicted cumulative incidences of the total risk scores.\n> RS <- range(nom$total.points)\n\t\t> x.36 <- seq(min(RS),max(RS),0.01)\n\t\t> pre.36 <- 1-(1-cif.min36)^exp(x.36*maxbeta/100)\nPlot the calibration curve with risk scores.\n> plot(x.36, pre.36, type='l'…)\n\t\t> par(new=TRUE)\n\t\t​> plot(as.vector(rs.freq[,1]), obs.36… )\n5. Decision curve analysis of competing risk models\nSource the stdca function to perform the decision curve analysis.\n> source(\"stdca.R\")\nExtract the polynomial equations from the nomogram to calculate the survival probability.\n> nomogramEx(nomo = nom)\n\t> Dataset$predictors <- A * (Dataset$rs ^3) + B * (Dataset$rs ^2) + C * Dataset$rs + D #predictors are predicted probabilities of cancer-specific death calculated by the established nomogram\nPerform the decision curve analysis.\n> stdca(data = Dataset, outcome = \"status\", ttoutcome = \"Survivalmonths\", timepoint = 36,\n\t predictors = \"predictors\", cmprsk = TRUE, smooth = FALSE, probability = FALSE)\n\tNOTE: For evaluating an outcome in the presence of a competing risk, TRUE should be chosen for cmprsk.\n6. Internal validation using the bootstrap method\nGet the average predicted cumulative incidences using the bootstrap method.\n\t\nResample the original dataset (Dataset) with replace to generate the bootstrap dataset (Dataset_in). Establish a competing risk model (mod.in_crr) with the bootstrap dataset. Use the function predict.crr to predict mod.in_crr and loop b times to generate suvall.in.\nB=b\n\t\tsuvall.in <- list()\n\t\tfor(j in 1:B){\n\t\t Dataset_in <- Dataset[sample(c(1:nrow(Dataset)),nrow(Dataset),\n\t\treplace = TRUE),]\n\t\tattach(Dataset_ in)\n\t\t cov. in <- model.matrix(~factor1+ factor2+…)[,-1]\n\t\t mod. in _crr <- crr(Survivalmonths, fstatus, failcode=1, cov1=cov.in)\n\t\tdetach(Dataset. inner)\n\t\tsuv. in <- predict.crr(mod. in _crr, cov)\n\t\tsuvall.in[[j]] <- suv.in}\nGet the average predicted cumulative incidences in a certain month.\n\t\tcif36all. inner <- vector(mode=\"numeric\", length=nrow(Dataset))\nfor (k in 1:B) {\n\t\t cif36all. inner<- cif36all. inner+ suvall. inner[[k]][which(suvall. inner[[k]][,1]==36),][-1]\n\t\t}\n\t\tcif36.in <- cif36all.in/B",
    "Calculate the C-index using internal cross-validation with the function rcorr.cens.\nrcorr. inner <- rcorr.cens(1-cif36.in,Surv(Dataset$Survivalmonths,Dataset$tumordeath))\n\tcindex. inner <- rcorr. inner[1]\nCalibrate using the cross internal validation.\n\t​NOTE: The codes of the calibration curve of the competing risk model with internal validation are similar to the codes in section 4, while suv was replaced by suv.in.\n7. External validation of the competing risk model\nGet the predicted cumulative incidences using external data. Get the predicted cumulative incidences with the matrix of external data variables (cov.ex).\n\tsuv.ex <- predict.crr(mod_crr,cov.ex)\ncif36.ex <- suv.ex [which(suv.ex $time==\"36\"),][-1]\nCalculate the C-index using external validation.\nrcorr.ex <- rcorr.cens(1-cif36.ex,Surv(Dataset.ex$Survivalmonths,Dataset.ex$tumordeath))\n\tcindex.ex <- rcorr.ex[1]\nCalibrate using external validation.\n\tNOTE: The codes of the calibration curve of the competing risk model with internal validation are similar to the codes in section 4, while suv is replaced by suv.ex.\nSubscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Cancer Research"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research"
  ]
}