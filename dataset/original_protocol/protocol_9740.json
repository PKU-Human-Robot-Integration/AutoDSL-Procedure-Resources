{
  "id": 10151,
  "origin_website": "Jove",
  "title": "Computational Reconstruction of Pancreatic Islets as a Tool for Structural and Functional Analysis",
  "procedures": [
    "NOTE: A schematic diagram of the protocol is shown in Figure 1. A step-by-step description is given is as follows (see Supplementary File 1 for details about the control panels used at every step of the protocol).\nimgsrc://cloudfront.jove.com/files/ftp_upload/63351/63351fig01.jpg\nFigure 1: Flow diagram. A flow diagram describing the sequential order of the protocol as implemented in IsletLab. Please click here to view a larger version of this figure.[href=https://www.jove.com/files/ftp_upload/63351/63351fig01large.jpg]\n1. Installing IsletLab in Linux\nNOTE: Follow the instructions given in sections 2 and 3 of the Supplementary File 2 to install IsletLab in windows or macOS.\nOpen an internet browser and go to https://github.com/gjfelix/IsletLab. Download and extract the IsletLab repository files.\n\tNOTE: The Supplementary File 3 includes a copy of the version of IsletLab used in this protocol.\nVerify that the gcc and nvcc compilers are installed. Open a terminal and type the following commands:\ngcc --version\nnvcc --version\n\tFollow the instructions listed in section 1 of the Supplementary File 2 if any of these commands is not recognized by the system.\nDownload and install the data science platform (see Table of Materials). Open a terminal and go to the IsletLab folder.\nCreate a new environment by typing the following command in the terminal:\nconda env create -f isletlabgui_v1.0.yml\nActivate the new environment by typing:\nconda activate isletlab_v1.0\nLaunch the IsletLab application by typing the following command in the terminal (see Figure 2 for a description of the main window):\npython isletlabgui_v1.0.py\nimgsrc://cloudfront.jove.com/files/ftp_upload/63351/63351fig02.jpg\nFigure 2: The user interface of IsletLab. The interface is composed of three main panels: configuration (1), statistics (2), and graphics (3) panels. The graphics toolbar (4) is located at the bottom of the graphics panel. Please click here to view a larger version of this figure.[href=https://www.jove.com/files/ftp_upload/63351/63351fig02large.jpg]\n2. Islet reconstruction",
    "Prepare the input data. Organize the input islet data (i.e., cell types and three-dimension (3D) coordinates) in a four-column file in which column 1 contains the cell type (coded as 11: ɑ-cell, 12: β-cell, 13: δ-cell) and columns 2 to 4 contain the x, y, and z coordinates, respectively (see an excerpt of an input file in section 5 of the Supplementary File 2 or the input test file included in the IsletLab repository).\nEnsure that the input file does not include column headers. Use the example input file included in the IsletLab repository to follow the protocol if needed (Input_Islet_test.txt).\n\tNOTE: Input data used to develop the algorithms implemented in IsletLab was obtained experimentally as described in detail by Hoang et al.11,12 using DAPI staining to determine the nuclear positions and immunofluorescence to identify the cellular types.\nClick the Load Initial Islet button and select the file containing input data to generate an initial islet, the 3D representation, and the corresponding statistics. In case of error, the following message will be displayed: 'Error loading islet file'. To correct this, repeat step 2.1.\nConfigure the reconstruction process. Click the Reconstruction Settings button and modify the optimization parameters (see sections 4 and 5 of Supplementary File 2 for a brief description of the algorithm and the parameters shown in the reconstruction settings window).\nSet the initial temperature = 1, iterations factor = 1, and acceptance factor = 1. Click the OK button to save the parameter values.\n\tNOTE: As a rule of thumb, an increase in the temperature parameter, as well as in the iterations and acceptance factors, will yield better reconstruction results in terms of the experimental cells included in the reconstructed islet at the expense of an increase in the computing time.",
    "Click the Reconstruct Islet button to open the reconstruction log window (see section 6 of Supplementary File 2 for a description of the information provided in the reconstruction log).\nClick the Run button to start the reconstruction process. Monitor the optimization process until the message: 'Please close this window to continue' is displayed. Close the reconstruction log window to generate the visual representation of the reconstructed islet and to calculate the related statistics (see the left column in Figure 3A-C).\nEvaluate the results of the reconstruction process by analyzing the optimization statistics shown in the final islet tab of the statistics panel. Particularly, focus on maximizing the percentage of experimental cells included in the reconstructed islets (% of experimental) or equivalently, on minimizing the number of overlaps (also shown graphically in the convergence plot, right column in Figure 3A-C).\nIf the % of experimental statistic is considered low according to the user objectives, restart IsletLab as described in step 9.1, and increase the initial temperature, iterations factor and acceptance factor in the reconstruction settings and repeat steps 2.1-2.4 until satisfactory results are obtained (> 95% of experimental cells). See sections 5-7 of the Supplementary File 2 for further description of the reconstruction process and the related results.\n3. Identifying cell-to-cell contacts\nClick the Reconstruction Settings button and set the Contact Tolerance parameter to define the cell-to-cell contact tolerance and click OK to save the parameter values.\n\tNOTE: The contact tolerance parameter represents the maximal distance between cells in order to be considered as in contact.",
    "Click the Cell-to-Cell Contacts button to identify the cells in close contact. In the contacts tab, check for cells in contact shown graphically (black lines) in the graphics panel and the corresponding statistics (i.e., total, homotypic and heterotypic contacts and ɑ-ɑ, β-β, δ-δ, ɑ-β, ɑ-δ, β-δ contacts) shown in the statistics panel (see the left column of Figure 4A-C).\nIncrease (decrease) the contact tolerance parameter to increase (decrease) the number of cell-to-cell contacts. See section 8 of Supplementary File 2 for details about the identification of cell-to-cell contacts and the associated results.\n4. Building the islet network\nClick the Build Network button to generate the islet network and to calculate the associated network metrics (see the right column in Figure 4A-C).\n\t​NOTE: A further description of the results related to the islet network generated is given in section 9 of Supplementary File 2.\n5. Functional simulation of the reconstructed islet\nSwitch to the Simulation Tab of the configuration panel of the interface (Figure 5).\nSelect the desired mode of intrinsic frequency - Constant or Random - and click the Configure Intrinsic Frequency button to define the oscillators frequency (in Hz). If a random intrinsic frequency is selected, define the mean and deviation (in Hz) to generate normally distributed random frequencies (see section 11 of the Supplementary File 2 for a description of the simulation parameters).\nSelect the desired mode of the initial phase - Constant or Random. If a Constant initial phase is selected, click the Configure Initial Phase button to define the phase of the oscillators (in radians). If random initial phase is selected, system will assign random phases between 0 and 2π to all the oscillators.\n\tNOTE: If a constant initial phase is selected, all the oscillators will be initialized in phase.",
    "Click the Configure Interactions button to define the cell-to-cell interaction parameters in the interaction strength window. For a description of the interaction parameters, see section 11 of Supplementary File 2.\nConfigure the simulation by defining the total simulation time (in s), time step (in s), and save factor (numbers of steps between saved data points). In the simulation shown in Figure 5 the total time was 20000 s, with a time step of 0.1 s and a save factor of 500.\nDefine the number of blocks, threads, and computing platform capability available to perform the simulation. Define these parameters in accordance with the specific characteristics of the graphics processing unit (GPU) available.\n\tNOTE: In the example shown in Figure 5, 36 blocks and 64 threads per block were used (2304 computing platform cores) since a GPU with 36 multiprocessors and 64 computing platform cores per multiprocessors was used. The value of the computing platform capability parameter used was 75 since the hardware computing platform capability was 7.5 (see section 10 of Supplementary File 2 for details about these parameters).\nClick the Run Simulation button to open the simulation log window. Click the Run button to start the simulation and monitor the process until the legend: 'Please close the window to continue' is displayed. See section 12 of Supplementary File 2 for details about the simulation log.\nClose the simulation log window to observe the simulation results (see Figure 5). Details about the simulation results are given in section 13 of Supplementary File 2.\n6. Save the project (optional)\nClick File > Export Project in the menu bar. Select the directory in which the project file will be saved and click the OK button.",
    "NOTE: The name of the project file is determined automatically based on the name of the initial data file. If the project is not saved, all the results and related files will be deleted automatically.\nLoad an exported project by clicking File > Load Project.\n7. Save figures (optional)\nClick the Save Plot Icon located in the plot toolbar to save the current visualization to an image file. Repeat this step for all the figures created throughout the protocol.\n\t​NOTE: Plots and islet visualizations can be modified using the icons available at the plot toolbar of the graphics panel.\n8. Load project (optional)\nClick File > Load Project in the main menu and select a project file saved previously as described in steps 6.1-6.2.\n\t​NOTE: A project will not be loaded correctly if the project file has been modified externally. If a project is loaded successfully, only the simulation capabilities will be available.\n9. Restart the reconstruction process and analysis (optional)\nAt any time the user can select File > Restart to discard all the results and start a new reconstruction and analysis.\nSubscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Bioengineering"
  ],
  "bigAreas": [
    "Bioengineering & Technology"
  ]
}