{
  "id": 15348,
  "origin_website": "Jove",
  "title": "Leveraging CyVerse Resources for De Novo Comparative Transcriptomics of Underserved (Non-model) Organisms",
  "procedures": [
    "NOTE: The overall protocol has been numbered according to folders that will be created and named in step 1.2 (Figure 1 and 2). This protocol represents a standard comparative de novo transcriptome analysis, and every step detailed here may not be necessary for all researchers. This workflow is documented thoroughly on a companion tutorial wiki, which also contains all additional files and links to documents of interest 3rd party developers for each analysis package (Table 1). Links to this material will be included throughout this protocol for easy access to this information. Best practices are notes provided to users as suggestions for the best way to accomplish tasks or for users to consider, and will be communicated through notes in the protocol. A folder of example data input and analytical output is publicly available to users, and is organized as suggested in the protocol (de novo transcriptome assembly and analysis.\n1. Set up the Project, Upload Raw Sequencing Reads, and Assess Reads Using FastQC\nGet access to Atmosphere and the Discovery Environment.\n\t\nRequest a free CyVerse account by navigating to the registration page (e.g. person@institution.edu).\nFill in the required information and submit.\nNavigate to the main webpage (http://www.cyverse.org/), and select \"Sign In\" at the top toolbar. Select \"Cyverse Login\" and sign in using your CyVerse credentials.\nNavigate to the Apps & Services tab, and request access to Atmosphere. Access to the Discovery Environment is automatically granted.\nSet up the project and move data to the Data Store.\n\t\nLog into the Discovery Environment (https://de.iplantcollaborative.org/de). Select the “Data” tab to bring up a menu containing all the folders in the Data Store.",
    "Create a main project folder that will house all of the data associated with the project. Find the toolbar at the top of the data window and select File | New Folder. Do not use spaces or special characters in the folder names or any input/output file names e.g. \"!@#()[]{}:;$%^&*.\" Instead, use underscores or dashes, i.e. \"_\" or \"-\" where appropriate.\nCreate five folders within the main project folder to organize analyses (Figure 1) Name the folders as follows without commas or quotation marks: \"1_Raw_Sequence,\" \"2_High_Quality_Sequence,\" \"3_Assembly,\" \"4_Differential_Expression,\" \"5_Annotated_Assembly.\" Subfolders will be placed into each of these main project folders (Figure 2).\nimgsrc://cloudfront.jove.com/files/ftp_upload/55009/55009fig1.jpg\nFigure 1: A General Overview of Project Folder Organization and the De Novo Transcriptome Assembly and Analysis Workflow. Users will upload raw sequencing reads into the main project folder on the Data Store, and then place the results from each step into separate folders. Please click here to view a larger version of this figure.[href=http://cloudfront.jove.com/files/ftp_upload/55009/55009fig1large.jpg]\nimgsrc://cloudfront.jove.com/files/ftp_upload/55009/55009fig2.jpg\nFigure 2: A Detailed Overview of the De Novo Transcriptome Assembly and Analysis Workflow that Occurs within CyVerse Cyberinfrastructure. The entire assembly and analysis workflow will be completed in five steps which each get their own folder (bolded, numbered folder icons). Each of the five numbered workflow step folders has subfolders containing output data from bioinformatic analyses (folder icons). Inputs for analysis come from one subfolder and then move into another folder through the output of an analysis program (rectangle boxes). The final data from the first three steps is compared and prepared for publication. Ultimately, this scheme yields a main project folder that has stepwise analysis for collaborators and/or manuscript reviewers can quickly understand the workflow and repeat it using each file if necessary. Please click here to view a larger version of this figure.[href=http://cloudfront.jove.com/files/ftp_upload/55009/55009fig2large.jpg]",
    "Upload raw FASTQ sequence files into the folder \"1_Raw_Sequence\" into a subfolder entitled \"A_Raw_Reads\" using one of the following three methods.\n\t\nUse the Data Store simple upload feature to navigate to the Data window toolbar by clicking on the data button in the main DE desktop, and select Upload | Simple Upload from Desktop. Select the Browse button to navigate to the raw FASTQ sequencing files on the local computer. This method is only suitable for files under 2 GB.\nSelect the Upload button at the bottom of the screen to submit the upload. A notification will register in the top right of the DE in the bell icon that the upload has been submitted. Another notification will register when the upload is complete.\nAlternatively, use Cyberduck to transfer larger files (https://wiki.cyverse.org/wiki/x/pYcVAQ). Install Cyberduck and then run as a program on the local computer’s desktop.\nLastly, download iCommands and install onto the local computer according to instructions (https://wiki.cyverse.org/wiki/display/DS/Using+iCommands).\nAssess uploaded, raw sequencing reads using the FastQC app in the DE.\n\t\nSelect the \"Apps\" button on the main DE desktop to open a window containing all of the analysis apps available in the DE.\nSearch and open the window for the FastQC tool in the search toolbar at the top of the window. Open the multi-file version if there is more than one FASTQ file. Select File | New Folder to create a folder named \"B_FastQC_Raw_Reads\" and select this folder as the output folder.\nLoad the FASTQ read files into the tool window called \"Select input data\" and select \"Launch Analysis.\"\nOpen the .html or .pdf file to view the results once the analysis is complete. FastQC runs several analyses that test different aspects of the read files (Figure 3).",
    "2. Trim and Quality Filter Raw Reads to Yield High Quality Sequence\nNote: Use either the Trimmomatic app or the Sickle app.\nSearch for the programmable Trimmomatic app in the DE and open it as before.\n\t\nUpload the folder of raw FASTQ read files into the \"Settings\" section.\nSelect whether the sequencing files are single- or paired-end.\nUse the standard control file provided by selecting the Browse button and pasting /iplant/home/shared/Trinity_transdecoder_trinotate_databases into the \"Viewing:\" box. Select the file named Trimmomaticv0.33_control_file and launch the analysis. The file can be downloaded, the settings edited, and then uploaded into the second project folder to create a custom trimming script.\nOptional: If the FastQC analysis identified adapter sequences, use the ILLUMINACLIP setting to trim Illumina adapters. Select the appropriate adapter file in the folder /iplant/home/shared/Trinity_transdecoder_trinotate_databases as above.\nQuality trimming sequence reads using Sickle.\n\t\nSearch and open the Sickle app in the DE. Select the trimmed FASTQ reads as input reads, and rename output files. Include quality settings in the options. Typical settings are Quality format: illumina, sanger, solexa; Quality threshold: 20; Minimum length: 50.\nMove all output into the trimmed and filtered folder (2_High_Quality_Sequence).\nAssess the final reads using FastQC and compare to previous FastQC reports. Select the .html file to bring up a webpage of all results. Select the folder of image files (.png) that are provided in the output if that cannot be viewed.\n3. De Novo Transcriptome Assembly Using Trinity in Atmosphere\nOpen the most current version of the Atmosphere instance by navigating to the wiki page (https://wiki.cyverse.org/wiki/x/dgGtAQ). Select the link for the most recent version of the Trinity and Trinotate image. Alternatively, search “Trinotate” in the Atmosphere image search tool (https://atmo.iplantcollaborative.org/application/images) to bring up all versions of the Trinity and Trinotate images.",
    "Select the \"Log in to launch\" button and then name the Atmosphere instance.\nSelect an instance size of either \"medium3\" (CPU: 4, Mem: 32GB) or \"large3\" (CPU: 8, Mem: 64 GB). Launch the instance, and wait for it to build. In some rare cases CyVerse undergoes maintenance to update platforms. Existing instances are available during these updates, but it may not be possible to create new instances. Visit the CyVerse Status page to see the current state of any platform ( http://status.cyverse.org/ ).\nOpen the instance once it is ready by clicking on the name and then selecting \"Remote Desktop\" on the bottom of the menu on the right. Allow Java and VNC Viewer if asked. Select the \"Connect\" button in the VNC Viewer window, and then select \"Continue.\"\n\t\nLog in to open a separate window that will be the new cloud computing instance.\nMove the trimmed and/or filtered FASTQ read files into the instance using one of the three methods described in steps 1.3.1 - 1.3.4. Use the Internet browser to access the DE and download files just as before on the local computer. Or use iCommands installed on these images to quickly transfer large data sets.\nRunning Trinity to assemble high quality reads.\n\t\nSet up the analysis folder on the Atmosphere instance. Use the script available in the DE (/iplant/home/shared/Trinity_transdecoder_trinotate_databases) or copy and paste the commands from wiki page (https://wiki.cyverse.org/wiki/x/dgGtAQ). Explanation of all commands can be found on the wiki page.",
    "Once the analysis folder and the Trinotate databases are established, run the Trinity assembler using the commands from above. There are several output files, but the most important is the final assembly file entitled \"Trinity.fasta.\" Rename this FASTA file to be unique to the organism and treatment of the assembled reads before moving it into the Data Store (folder 3_Assembly) to minimize potential confusion.\n\t\tNOTE: Output counts tables for differential gene expression analysis into a folder (4_Differential_Expression).\nAssess the assembly using rnaQUAST (Figure 4).\n\t\nMove the Trinity output files into the folder \"3_Assembly\" in the DE and label the folder \"A_Trinity_de_novo_assembly.\" Give each transcriptome that was assembled a subfolder inside the \"A_Trinity_de_novo_assembly\" folder with unique names including the scientific name of organisms and treatments associated with each transcriptome. Create another subfolder called \"B_rnaQUAST_Output\" in the \"3_Assembly folder.\"\nOpen the app titled \"rnaQUAST 1.2.0 (denovo based)\" and name the analysis and select \"B_rnaQUAST_Output\" as the output folder.\n\t\t\nAdd the de novo assembly FASTA file(s) to the \"Data Input\" section. In the \"Data Output\" section, type a unique name for the de novo assembly. This will create a folder of rnaQUAST output files inside of the folder \"B_rnaQUAST_Output.\"\nSelect additional options in the \"GenemarkS-T Gene Prediction,\" \"BUSCO,\" and \"Parameters\" sections.\n\t\t\nSelect prokaryote in the \"GenemarkS-T Gene Prediction\" section if the organism is not eukaryotic.\nRun BUSCO to select the browse button and copy the path iplant/home/shared/iplantcollaborative/example_data/BUSCO.sample.data into the \"Viewing:\" box and press enter. Select the most specific BUSCO folder that is available for the organism.\n\t\t\tNOTE: BUSCO will assess the assembly for lineage-specific core genes, and output what percentage of core genes is found. There are general folders, e.g. eukaryote, and more specific lineages, e.g. arthropoda.",
    "Search for \"Transcript decoder\" and run Transdecoder on the de novo Trinity assembly output FASTA file in the Discovery Environment.\nMove the output .pep file into the de novo assembly (3_Assembly) folder for use in step 5 Annotation.\n4. Pairwise Differential Expression Using DESeq2 in the DE\nOpen the DESeq2 app in the DE as described previously. Name the analysis and select the output folder as 4_Differential_Expression.\nIn the \"Inputs\" section, select the counts table file from the Trinity assembly run and the column that the contig names can be found in that counts table.\nInput the column headers from the counts data table file to determine which columns are compared. Include the commas between each of the conditions. Do not include the first column header that contains the contig names.\nFor replicates, repeat the same name (e.g., Treatment1rep1, Treatment1rep2, Treatment1rep3 would become Treatment1, Treatment1, Treatment1). In the second line, provide the names of the two conditions to be compared (e.g., Treatment1, Treatment2). Match the column header names provided in the first line.\n\tNOTE: These column headers must be alphanumeric and cannot contain any special characters.\n5. Annotation Using Trinotate\nRun each part of Trinotate in the Atmosphere cloud computing instance. Note: Bash commands are provided in a txt file to be copied, pasted, and then modified before running on the DE (/iplant/home/shared/Trinity_transdecoder_trinotate_databases) or on the wiki page (https://wiki.cyverse.org/wiki/x/dgGtAQ). If annotating multiple assemblies, annotate each assembly one at a time and then transfer completed annotations files back to folder “5_Annotation” each with a unique folder corresponding with the assembly name.",
    "Run the bash command for searching Trinity transcripts. Change the number of threads to match how many CPUs are on the instance, i.e. medium has 4 CPUs and large has 8 CPUs. Refer to step 3.1.2 for more details. Change the command Trinity.fasta to match the assembly FASTA file name.\n\t\tNOTE: BLAST+ searches will require the most time. It may be days before it completes. The cloud computer activity can be checked in Atmosphere without having to bring up the VNC Viewer.\nRun the bash command for searching Transdecoder-predicted proteins. As before, change the threads number and file name to match the conditions in 5.2.1.\nRun the bash command for HMMER and change the number of threads as above.\nRun the bash command for signalP and tmHMM if needed. SignalP will predict signal peptides and tmHMM predicts transmembrane protein motifs.\nLoading results into the SQLite database\n\t\nOnce all of the above analyses are completed, run the bash command to load output files into a final SQLite annotation database. Remove any commands for analyses that were not run.\nExport the SQLite database into a .xls file for viewing in popular table viewers."
  ],
  "subjectAreas": [
    "Genetics"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics"
  ]
}