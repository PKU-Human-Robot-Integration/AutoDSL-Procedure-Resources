{
  "id": 3030,
  "origin_website": "Cell",
  "title": "Calculating the spatial density of regulatory chromatin interactions using multi-modal datasets from the same cell line",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nHere, we describe how to select and preprocess Hi-C, ATAC-seq and ChIP-seq data, how to predict Hi-C a contact matrix and regulatory chromatin interactions (RCI), and how to do analysis using RCI. To illustrate the data process steps, we show the analysis process and results of two different datasets used by Gong et al.1[href=https://www.wicell.org#bib1] as an example. Figure 1[href=https://www.wicell.org#fig1] shows the pipeline of the protocol. Figure 2[href=https://www.wicell.org#fig2] shows the structure of the scripts used in this protocol.\nTrain and predict to get regulatory chromatin interactions\nTraining model\nTiming: ∼3 h (for step 1)\nThis section mainly describes the details about training a model.\nThis step is required for training a multimodal neural network. However, this step can be omitted if you use the trained models in MINE/data/. After validation, the provided models can be adapted to multiple human cell lines. Therefore, users can choose to the provided trained models.\nOpen a terminal in the repository root folder.\nOpen the train folder and run the train_model.py. -i: the folder of training data. -o: the folder of storing model file generated in different checkpoint.\n>CUDA_VISIBLE_DEVICES=1,2,3,4,5,6 python -m torch.distributed.launch --nproc_per_node=6 train_model.py -i /folder/to/train -o /folder/to/checkpoint",
    "Note: We have stored four trained model in the MINE/data folder. Users can use these models directly. Among them, GM12878_ATAC_H3K27ac_H3K4me3_epoch27.pth is the model trained using ATAC-seq, H3K27ac ChIP-seq, H3K4me3 ChIP-seq and cis-regulatory element in GM12878 cell line, GM12878_ATAC_H3K27ac_epoch34.pth is the model trained using ATAC-seq, H3K27ac ChIP-seq, and cis-regulatory element in GM12878 cell line, GM12878_ATAC_H3K4me3_epoch27.pth is the model trained using ATAC-seq, H3K4me3 ChIP-seq and cis-regulatory element in GM12878 cell line, GM12878_H3K9me3_H3K27me3_epoch10.pth is the model trained using H3K9me3 ChIP-seq and H3K27me3 ChIp-seq data in GM12878 cell line. In this protocol, GM12878_ATAC_H3K27ac_epoch34.pth refers to the active model we want to train, GM12878_H3K9me3_H3K27me3_epoch10.pth refers to the repressive model we want to train.\nPredicting model\nTiming: ∼1 h (for step 2)\nThis section mainly describes the details about predicting chromatin interactions using a trained model.\nPerform prediction using the trained model in step 1.\n--train_folder: the folder of training (or prediction) dataset.\n–model: the folder of trained model.\n–results: the folder of prediction result, where the prediction results is 22 n∗n Hi-C contact matrices (chrX_1000b.npz, X = 1,2,…,22).\nIn this protocol, we do prediction in HepG2 cell line as an example.\n>python validate.py --train_folder /folder/to/train --model /path/to/model --results /folder/to/result\nCalling loops\nTiming: ∼6 h (for step 3)\nThis section mainly describes the details about calling loops using FitHiC23[href=https://www.wicell.org#bib3] and MUSTACHE,4[href=https://www.wicell.org#bib4] respectively.\nCall loops for raw Hi-C contact matrices and predicted Hi-C contact matrices generated from step 2 using FitHiC23[href=https://www.wicell.org#bib3] and MUSTACHE,4[href=https://www.wicell.org#bib4] respectively. We defined loops called from different experiments as shown at Table 1[href=https://www.wicell.org#tbl1].\ntable:files/protocols_protocol_2573_1.csv\nOpen a terminal in the repository MINE/loop_caller_script/fithic&MUSTACHE folder.\nGenerate the FitHiC2 (or MUSTACHE) input file by executing the below script. -r: the resolution of Hi-C contact matrix, default = 1000. -p: whether it’s a predicted matrix or not, default = False.",
    ">python generate_input_file.py -i input_folder -o output_folder -r 1000 -p False\nNote: after executing generate_input_file.py, we can get “interactions.gz” and “fragments.gz” file. “interactions.gz” is the file that contains the pair of interactions. “fragments.gz” is the fragments file.\nCall loops for raw Hi-C contact matrices (or predicted Hi-C contact matrices) generated from step 3 (b) using FitHiC2.\n>bash run_fithic_example.sh\nIn the run_fithic_example.sh file, the parameters below are editable:\nfolder_path: the output folder.\n-U: --upperbound, default is 100000.\n-L: --lowerbound, default is 2000.\n-o: the folder of output files.\n-d: the compressed output file, default is outputs_2_100/FitHiC.spline_pas-s1.res1000.significances.txt.gz.\nNote: after executing run_fithic_example.sh, we can get “FitHiC.fithic.lo-g”, ”FitHiC.fithic_pass1.res1000.txt”, and “FitHiC.spline_pass1.res1000.significances.txt” file. “FitHiC.spline_pass1.res1000.significances.txt.gz” is the file that contains the significant pair of interactions, i.e., raw-Loop-fithic, or active-Loop-fithic or repressive-Loop-fithic. By changing the -U parameter to be 100000, 300000, 500000, we could get the raw-Loop-fithic, or active-Loop-fithic or repressive-Loop-fithic within a genomic distance of 2-100, 2-300, 2-500 kb. In the following analysis, we will use the raw-Loop-fithic, or active-Loop-fithic or repressive-Loop-fithic within a genomic distance of 2-100 kb to do analysis.\nCall loops for raw Hi-C contact matrices using MUSTACHE, where the input file format of raw Hi-C contact matrices is .hic format.\n> MUSTACHE -f folder-of-hic-file -ch 1 2 X -r 1kb -pt 0.01 -o hic_out.tsv\nCall loops for predicted Hi-C contact matrices using MUSTACHE, where the input file format of raw Hi-C contact matrices is generated from step 6 (b).\n>bash run_MUSTACHE_example.sh\nIn the run_MUSTACHE_example.sh file, the parameters below are editable:\nfolder_path: the output folder.\n-f: Location of contact map.\n-r: Resolution of the provided contact map.\n-o: the folder of output files, default is ./MUSTACHE_output.tsv.\n-pt: P-Value threshold for an interaction to be reported in the final output file. Default is 0.1.",
    "-p: Number of parallel processes to run. Default is 4. Increasing this will also increase the memory usage.\nNote: after executing run_MUSTACHE_example.sh, we can get “hic_out.tsv” and “enhanced_out_pt05.tsv” file, which are the files that contains the significant pair of interactions, i.e., raw-Loop-MUSTACHE, or active-Loop- MUSTACHE or repressive-Loop-MUSTACHE. In step 4, we will describe how to assess the model perform well.\nDo analysis using RCI\nTiming: ∼3 h (for steps 4 to 8)\nIn this section, we describe how to do analysis using RCI, including the number of anchored factors (e.g., CTCF, POLR2A, EZH2 and other transcription factors) comparison between raw-Loop-fithic and active-Loop-fithic (or repressive-Loop-fithic), the calculation and visualization of SD-RCI.\nTo evaluate whether active-Loop-fithic can anchor more TFs signal, we visualize the number of anchored factors comparison between raw-Loop-fithic and active-Loop-fithic (or repressive-Loop-fithic).\nOpen the folder “MINE/analyse/”.\nIf you want to do analysis in GM12878 cell line, enter the folder “MINE/analyse/fig2/”.\nIf you want to do analysis in other cell line, enter the folder “MINE/analyse/fig3/”.\nNote: In this protocol, we do analysis in HepG2 cell line. For the analysis of active-Loop-fithic, we choose the script file “HepG2 ATAC_H3K27ac_H3K4me3 2_100.ipynb” to do analysis. For the analysis of repressive-Loop-fithic, we choose the script file “../represses/HepG2 H3K9me3_H3K27me3 2_100.ipynb” to do analysis. Due to the same analysis process, we only describe the protocol of script file “HepG2 ATAC_H3K27ac_H3K4me3 2_100.ipynb”.\nOpen file “HepG2 ATAC_H3K27ac_H3K4me3 2_100.ipynb” using jupyter notebook.\nRun the scripts of In [1] and In [2] in file “HepG2 ATAC_H3K27ac_H3K4me3 2_100.ipynb”.\nEdit the parameters below to set the paths:\nanalyse_path: the path of storing analyzed data.\nauxiliary_files_path = '/data1/lmh_data/MINE/source/HepG2': the path of storing ChIP-seq data including .bigWig, and .bed file.\nRun the scripts of In [3] and In [4] to get the venn graph as shown in Figure 4[href=https://www.wicell.org#fig4]A.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2573-Fig4.jpg",
    "Figure 4. An example of using MINE toolkit\nThe MINE-Loop model is trained using Hi-C, ATAC-seq, H3K27ac ChIP-seq, H3K4me3 ChIP-seq in GM12878 cell line and used to do prediction in HepG2 cell line.(figures are reusing from the work of Gong et al.1[href=https://www.wicell.org#bib1]).\n(A) The venn graph between raw-Loop-fithic and active-Loop-fithic.\n(B) The comparison between density distribution of POLR2A transcription factor anchors in 2–100 kb loops called from MINE-enhanced Hi-C and raw Hi-C in HepG2 cell line.\n(C) The distribution graph between number of loops and SD-RCI value in HepG2 cell line.\n(D) The box graph of RPKM and SD-RCI degree in HepG2 cell line.\n(E) The 3D genome TAD structure visualization with the gene expression strength when SD-RCI level equals to be high.\n(F) The visualization of loops, CTCF, and histone mark ChIP-seq tracks. loops are identified from MINE enhanced Hi-C by using MUSTACHE.4[href=https://www.wicell.org#bib4]\nRun the scripts of In [5] - In [8] to get the graph of the number of anchored factors comparison between raw-Loop-fithic and active-Loop-fithic. Run the script below to visualize the POLR2A transcription factor (Figure 4[href=https://www.wicell.org#fig4]B), where ‘POLR2A_peaks.bed’ is the name of CTCF ChIP-seq signal file.\n>chip_seq_path = os.path.join(auxiliary_files_path, 'POLR2A_peaks.bed')\n>figure(chip_seq_path)\nRun the scripts of In [9] to get the ‘∗_all_enhanced_sig.npy’, where the ‘∗_all_enhanced_sig.npy’ file store the significant chromatin interaction data.\nCalculate the spatial density of RCI (SD-RCI) by running the script below.\n>bash main.sh",
    "Note: As Gong et al.1[href=https://www.wicell.org#bib1] shows, the calculation of SD-RCI is divided into four steps: (1) identify the boundaries of TADs; (2) reconstruct the 3D structures using Pastis-PM27[href=https://www.wicell.org#bib7] algorithm to get the 3D coordinates of all loci ; (3) calculate the volume of a given TAD. The 3D coordinates of all loci in the TAD are used to calculate a convex hull, where the volume of the convex hull is defined as the TAD volume. (4) Calculate the SD-RCI as Gong et al.1[href=https://www.wicell.org#bib1] described in the section “Spatial density of regulatory chromatin interactions”. We organized these steps into a shell script “MINE/MINE_Density/TAD/main.sh”.\nThe parameters below are editable:\nhic_path: the path of Hi-C data.\nanalyse_anchor_path: the path of active-Loop-fithic file (∗_enhanced_anchor.bed).\nexcete the script below to get the ‘∗_enhanced_anchor.bed’ file.\n>python MINE/MINE_Density/loop2anchor.py\nNote: The input_file is ‘∗_all_enhanced_sig.npy’ file generated from step 4.g, the output file is the ‘∗_enhanced_anchor.bed’ file.\nout_path: the SD-RCI analysis data folder.\nresolution: the resolution you want to set to identify TADs using HiCDB.\ncell_line: the cell line you want to do analysis, for example HepG2, HeLa.\njuicer_tools_path: the path of juicer_tools.jar.\nHiCDB_path: the path of HiCDB tool.\nSDOC_path: the path of SDOC tool.\nNote: In this step, we will get the SD-RCI file “out_path/SDOC/out_with_active_loop_anchor/ HepG2_SDOC.tsv”, the 3D structure files “out_path/SDOC/out_with_active_loop_anchor/HepG2/PASTIS_out/∗.pdb”.\nthis step defines the SD-RCI level (low, middle, high and utra_high) by using the SD-RCI file generated from step 5.\nOpen the file “MINE/analyse/fig4/SDOC-active.ipynb” using jupyter notebook.\nRun the scripts of In [1].\nCopy the “out_path/SDOC/out_with_active_loop_anchor/ HepG2_SDOC.tsv” into the folder ““MINE/analyse/fig4/”, and renamed it to be “HepG2_SDOC_active_result.tsv”.\nEdit the parameter “input_file” of In [2] to be “HepG2_SDOC_active_result.tsv”.\nRun In [2]∼In [4], we will get the SD-RCI distribution graph of the number of active-Loop-fithic changes with the SD-RCI value (Figure 4[href=https://www.wicell.org#fig4]C).",
    "Edit the parameters below and run the script of In [5]∼In [8].\nHomo_sapiens_GRCh38_file: your_path/Homo_sapiens.GRCh38.84.gtf.\nRNA_seq_file: your_path/RNA_seq_rpkms.xls.\nNote: We will get the box plot of RPKM and SD-RCI degree, where P values were calculated by two-sided Mann-Whitney-Wilcoxon test with Bonferroni correction, the SD-RCI is divided into four levels according to the value of δ in the Gaussian distribution of graph generated from step 9.e (Figure 4[href=https://www.wicell.org#fig4]D).\nrun the script of In [9], we will get the dot plot of the number of RCIs and volume of TADs.\nEdit the parameter below and run the script of In [10]∼In [17] to get the list of TAD genomic locations in different SD-RCI levels.\nGene_table: the path of genes files, where the file could be downloaded from https://uswest.ensembl.org/info/data/biomart/index.html[href=https://uswest.ensembl.org/info/data/biomart/index.html].\n>Gene_table = pd.read_csv(\"/data1/lmh_data/MINE/source/Gene_table_20211231.txt\", sep=\"\\t\")\nNote: We can run the script of ‘MINE/analyse/fig4/SDOC-represses.ipynb’ to do a same analysis using repressive-Loop-fithic.\nIn this step, we will do the 3D genome TAD structure visualization with the gene expression strength in four levels.\nOpen the file “MINE/analyse/fig4/3D structure analysis of HEPG2(active).ipynb” using jupyter notebook.\nRun the scripts of In [1] in the file “MINE/analyse/fig4/3D structure analysis of HEPG2(active).ipynb”.\nEdit the parameters below and run the scripts of In [2]∼In [3].\nHepG2_ATAC_H3K27ac_H3K4me3_2_100_all_enhanced_sig: load the predicted loop‘∗_all_enhanced_sig.npy’ file generated from step 7 (g).\nHomo_sapiens_GRCh38_file: your_path/Homo_sapiens.GRCh38.84.gtf.\nRNA_seq_file: your_path/RNA_seq_rpkms.xls.\nauxiliary_files_path: the path of storing ChIP-seq data including .bigWig, and .bed file.\nCTCF_path: change to be the name of CTCF peaks file.\nPOLR2A_path: change to be the name of POLR2A peaks file.\nEP300_path: change to be the name of EP300 peaks file.\nH3K27ac_path : change to be the name of H3K27ac peaks file.\nH3K4me3_path: change to be the name of H3K4me3 peaks file.\nEdit the parameters below and run the scripts of In [4]:",
    "PASTIS_out_path: the path of 3D structure generated from step 8, i.e., ‘out_path/SDOC/out_with_active_loop_anchor/HepG2/PASTIS_out’.\n_ranges: set the TADs genomic locations you want to do 3D visualization. We can choose TADs in different SD-RCI levels according to the result of step 9 (h). For example:\n>_ranges = {\n'active_147': [1, 143690, 147250], % TAD in ultra_high SD-RCI level\n%[chrom_num, start_location, end_location], corresponding to the file name of PM2.chr1_143690_147250.pdb\n'active_1379': [2, 88740, 98390], %TAD in high SD-RCI level\n'active_1727': [3, 43530, 50620], %TAD in middle SD-RCI level\n'active_1372': [2, 74890, 85060] %TAD in low SD-RCI level\n}\nRun the scripts of In [5]∼In [9], we can get the 3D genome TAD structure visualization with target under different SD-RCI levels (Figure 4[href=https://www.wicell.org#fig4]E).\nNote: We can run the script of ‘3D structure analysis of HEPG2(represses).ipynb’ to do a same analysis using repressive-Loop-fithic.\nIn this step, we will do the visualization of loops, CTCF, and histone mark ChIP-seq tracks in different SD-RCI levels.\nOpen the file “MINE/analyse/fig4/Landmark position.ipynb” using jupyter notebook.\nRun the scripts of In [1] in the file “MINE/analyse/fig4/Landmark position.ipynb”.\nEdit the parameters below In [2]:\n>_CTCF=pyBigWig.open('your_path/HepG2/CTCF.bigWig')\n>CEBPB=pyBigWig.open('your_path/HepG2/CEBPB.bigWig')\n>POLR2A=pyBigWig.open('your_path/HepG2/POLR2A.bigWig')\n>EZH2=pyBigWig.open('your_path/HepG2/EZH2.bigWig')\n>KDM4B=pyBigWig.open('your_path/HepG2/KDM4B.bigWig')\n>H3K27ac=pyBigWig.open('your_path/HepG2/H3K27ac.bigWig')\n>H3K27me3=pyBigWig.open('your_path/HepG2/H3K27me3.bigWig')\n>H3K9me3=pyBigWig.open('your_path/HepG2/H3K9me3.bigWig')\n>GENES=pd.read_table(\"your_path/hg38_gc_cov_100kb.tsv\")\nRun the scripts of In [2]∼In [6].\nEdit and Run the scripts of In [8] to visualize genomic location of chr2: 88740000: 98390000 (Figure 4[href=https://www.wicell.org#fig4]F).\n>_path='you_path/MINE/GM12878_ATAC_H3K27ac_H3K4me3/analyse/HepG2_ATAC_H3K27ac_H3K4me3/experiment/loop'\n>show(\"chr1\", 143690000, 147250000, 1000, _path, FDR=0.3)"
  ],
  "subjectAreas": [
    "Sequence Analysis",
    "Bioinformatics",
    "Biotechnology And Bioengineering",
    "Chipseq",
    "Gene Expression",
    "Sequencing"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}