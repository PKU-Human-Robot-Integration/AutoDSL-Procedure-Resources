{
  "id": 2735,
  "origin_website": "Cell",
  "title": "Analytic pipelines to assess the relationship between immune response and germline genetics in human tumors",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nImmune traits\nTiming: 1 day\n139 immune traits used in the analyses were curated from (Thorsson et al., 2018[href=https://www.wicell.org#bib28]) by selecting non-redundant traits. Immune trait categories were defined based on the methodological source of the data. Immune trait functional modules were defined based on Pearson correlation analysis.\nPrepare curated set immune traits genes.\nCurated set of 139 immune traits in TCGA can be downloaded from (Sayaman et al., 2021[href=https://www.wicell.org#bib25]) “Table S2”.\nFor calculation of immune traits in a new dataset, consult (Thorsson et al., 2018[href=https://www.wicell.org#bib28]) methods section describing methodologies and source papers for derivation of specific immune traits.\nCode to generate gene expression signatures from (Wolf et al., 2014[href=https://www.wicell.org#bib29]) (Amara et al., 2017[href=https://www.wicell.org#bib2]) and single sample gene set enrichment (ssGSEA) signatures from (Bindea et al., 2013[href=https://www.wicell.org#bib3]; Şenbabaoğlu et al., 2016[href=https://www.wicell.org#bib26]) are provided as a resource in the (Sayaman et al., 2021[href=https://www.wicell.org#bib25]) GitHub repository (see link in the note below).\nNecessary transformation of immune trait values in TCGA for use in genetic analysis described below are annotated in (Sayaman et al., 2021[href=https://www.wicell.org#bib25]) “Table S2”.\nCalculate Pearson correlations of continuous values of the 139 immune traits.\nGenerate a correlation heatmap with a hierarchical clustering dendrogram.\nCluster correlation matrix using complete agglomerative hierarchical clustering method and (1-correlation) as distance metric.\nIdentify highly correlated blocks (dendrogram clusters) of immune traits to generate immune functional modules.\nNote: Scripts and code description used in this section are available at: https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics[href=https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics].\nDirect link: Immune Traits[href=https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics/tree/main/Code/Immune_Traits].\nHeritability analysis\nTiming: 2 weeks",
    "Heritability analysis on 139 traits is conducted using a mixed-model approach implemented in the genome-wide complex trait analysis (GCTA) software package with the genomic-relatedness-based restricted maximum-likelihood (GREML) method (Yang et al., 2010[href=https://www.wicell.org#bib30]) (Yang et al., 2011[href=https://www.wicell.org#bib31]). This calculates the proportion of immune trait variation that is attributable to common genetic variants (% Heritability). Refer to the GCTA website for details (https://cnsgenomics.com/software/gcta[href=https://cnsgenomics.com/software/gcta]).\nFormat immune trait input file:\nFormatted input file of TCGA immune traits is provided in the (Sayaman et al., 2021[href=https://www.wicell.org#bib25]) GitHub repository:\n“Immune.pheno.139.source.coded.TCGAID.9769.txt”.\nIdentify genetic ancestry assignment of each individual and create a filtered sample list for each genetic ancestry cluster:\nAncestry assignments for each TCGA individual are provided in “Table S1. TCGA Sample List Used in the Analysis” from (Sayaman et al., 2021[href=https://www.wicell.org#bib25]).\nFormatted input file of TCGA patient barcodes assigned to each genetic ancestry cluster is provided in the (Sayaman et al., 2021[href=https://www.wicell.org#bib25]) GitHub repository:\n“TCGAID_Cluster1.EUR.8036.txt”\n“TCGAID_Cluster2.ASIAN.605.txt”\n“TCGAID_Cluster3.AFR.904.txt”\n“TCGAID_Cluster4.AMR.222.txt”\nTo conduct heritability analyses within each ancestry subgroup (NEuropean=7,813, NAfrican=863, NAsian=570, and NAmerican=209 individuals), subset individuals belonging to specified ancestry group from the QC TCGA HRC imputed genotyping data in PLINK (--keep) using ancestry assignments.\nplink --bfile [input_file]\n--keep [ancestry_cluster_sample_file_list]\n--make-bed\n--out [output_filename]\nSee script:\n“qsub_plink_whitelist_geno_mind_unique.indv_chr.auto_hardy.nonriskSNP_maf_uniqueSNP_TCGAID_ancestry.txt”.\nNote: Analysis is automatically performed on samples with complete data. A subset of the defined samples within each genetic ancestry cluster are automatically skipped due to missing data (e.g., immune trait or covariate values).\nEstimate the genetic relatedness matrix (GRM) from all the autosomal SNPs with MAF > 0.01 within each ancestry group using GCTA:\ngcta64 --bfile [input_filename]\n--autosome\n--maf 0.01\n--make-grm\n--out [output_filename]\n--thread-num [numeric_value_number_threads]\nSee script:\n“qsub_gcta_whitelist_geno_mind_unique.indv_chr.auto_hardy.nonriskSNP_maf_uniqueSNP_TCGAID_ancestry_grm.txt”.\nFilter out individuals for relatedness. GCTA removes one of a pair of individuals with estimated relatedness larger than the specified cut-off value (cut-off = 0.05):\ngcta64 --grm [input_filename]\n--grm-cutoff 0.05\n--make-grm\n--out [output_filename]",
    "See script:\n“qsub_gcta_whitelist_geno_mind_unique.indv_chr.auto_hardy.nonriskSNP_maf_uniqueSNP_TCGAID_ancestry_grm_grm.cutoff.0.05.txt”.\nRun GCTA GREML unconstrained (using default algorithm: Average Information) to estimate variance explained by SNPs with defined categorical and continuous covariates using the following parameters:\ngcta64 --reml-no-constrain\n--grm [input_filename]\n--pheno [immune_trait_matrix_filename]\n--mpheno [immune_trait_numeric_index_input_matrix]\n--covar [categorical_covariates_filename]\n--qcovar [continuous_covariates_filename]\n--thread-num [numeric_value_number_threads]\n--out [output_filename]\nSee script: “qsub_grm.cutoff.0.05_greml_EUR.ImmunePheno216_CancerTypeSex.covar_PCA.AgeYears.qcovar.txt”.\nCritical: Run heritability analysis unconstrained. This will produce heritability estimates (Vg/Vp) and standard deviations outside the 0–1 range.\nFrom GCTA GREML “.hsq” result file, extract the ratio of genetic variance to phenotypic variance (Vg/Vp), estimate and SE; the LRT p-value and sample size (n) for each immune trait.\nConcatenate heritability analysis results across all immune traits tested.\nAnnotate each result file with the corresponding immune trait, immune category and immune module (see “Table S2”, (Sayaman et al., 2021[href=https://www.wicell.org#bib25])).\nAppend annotated result files from each immune trait.\nCorrect for multiple-hypothesis testing ancestry group by calculating the FDR p-value using the Benjamini-Hochberg adjustment method.\nOptional: Visualize % heritability (Vg/Vp ∗ 100) across all immune traits per ancestry group for exploratory data analysis.\nNote: Scripts used in this section are available at: https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics[href=https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics].\nDirect link: Heritability Analysis[href=https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics/tree/main/Code/Heritability_Analysis]. The example code in this section were optimized for the high-performance compute environment at UCSF HPC employing Portable Batch System (PBS) job scheduling; consult your system administrator to adapt the provided code to your system.\nInteractive visualization of heritability analysis from (Sayaman et al., 2021[href=https://www.wicell.org#bib25]) can be done in CRI iAtlas (https://www.cri-iatlas.org/[href=https://www.cri-iatlas.org/]), in the “Germline Analysis” module (see the “interactive visualization of results[href=https://www.wicell.org#sec4.7]” section of “expected outcomes[href=https://www.wicell.org#expected-outcomes]”).\nGenome-Wide Association Study (GWAS)\nTiming: 4 Weeks\nGWAS were performed on traits that we found to have significant heritability since these would be most likely driven by common genetic variants.",
    "Perform Identity-by-Descent (IBD) analysis in PLINK in each ancestry cluster (--genome) and filter individuals out for relatedness (pihat < 0.25). This leaves n=9,603 unrelated individuals in the TCGA cohort in the output file:\n“GWAS.IBD.ALL.TCGAID.txt”.\nRecalculate allele frequencies in PLINK for the subset of individuals used in the analysis in PLINK:\nplink --bed [input_bed_filename]\n--bim [input_bim_filename]\n--fam [input_fam_filename]\n--allow-no-sex\n--keep-allele-order\n--keep [GWAS.IBD.ALL.TCGAID.txt]\n--freq\n--out [Freq/output_filename]\nSee script: “qsub_plink_freq_GWAS.IBD.ALL.txt”.\nPrepare the covariate file:\n“covar.GWAS.IBD.ALL.txt”.\nPrepare the phenotype file:\n“Immune.phenotype.33.Set∗.GWAS.txt”.\nRun linear association analysis for each continuous immune traits in PLINK:\nplink --bed [input_bed_filename]\n--bim [input_bim_filename]\n--fam [input_fam_filename]\n--allow-no-sex\n--keep-allele-order\n--keep [GWAS.IBD.ALL.TCGAID.txt]\n--pheno [Immune.phenotype.33.Set∗.GWAS.txt]\n--all-pheno\n--covar [covar.GWAS.IBD.ALL.txt]\n--linear hide-covar\n--out [output_filename]\nSee script: “qsub_plink_linear_GWAS.IBD.ALL_Immune.33.Wolf.Set1.txt”.\nRun logistic regression on dichotomized discrete immune traits in PLINK by modifying the code in step 19 using the logistic command (--logistic).\nNote: “.bed”, “.bim” and “.fam” input files are provided separately in the sample code because SNP ID names from the original HRC imputed dataset were renamed with alleles listed in alphabetical order to assist matching with other datasets. This only affects the SNP ID name and not the encoding of the A1 and A2 alleles in PLINK which is maintained.\nFilter resulting summary statistics from PLINK based on test p-values (P in PLINK). Genome-wide significance was defined at p < 5 × 10−8 and suggestive significance at p < 1 × 10−6 in our study.\nSee script:\n“r_plotResults_GWAS.IBD.ALL_Immune.33.Set∗.r” and \"qsub_r_plotResults_GWAS.IBD.ALL_Immune.33.Set∗.txt\".\nOptional: Visualize results for exploratory data analysis:\nManhattan plot, plotting GWAS -log10 p-value against the base pair position per chromosome.\nQuantile-quantile plot (Q-Q plot), plotting the quantile distribution of observed p-values for each SNP against expected values from a theoretical χ2-distribution; calculate the genomic inflation factor (lamba), the median of the χ2 test statistics divided by the expected median of the χ2 distribution.",
    "Note: Interactive visualization of GWAS from (Sayaman et al., 2021[href=https://www.wicell.org#bib25]) can be done in CRI iAtlas (https://www.cri-iatlas.org/[href=https://www.cri-iatlas.org/]), in the “Germline Analysis” module or using the PheWeb tool (https://pheweb-tcga.qcri.org/[href=https://pheweb-tcga.qcri.org/]) (see the “interactive visualization of results[href=https://www.wicell.org#sec4.7]” section of “expected outcomes[href=https://www.wicell.org#expected-outcomes]”).\nOptional: Each SNP can be further annotated (see “Table S4”, (Sayaman et al., 2021[href=https://www.wicell.org#bib25])) with:\nThe Minimac3 HRC imputation information for each SNP (extracted from the filtered chr∗.info.rsq0.5.gz), including whether SNP was genotyped or imputed (Genotyped), the estimated value of the squared correlation between imputed genotypes and true, unobserved genotypes (Rsq), the average probability of observing the most likely allele for each haplotype (AvgCall), minor allele frequency of the variant in the imputed data (MAF) (https://genome.sph.umich.edu/wiki/Minimac3_Info_File[href=https://genome.sph.umich.edu/wiki/Minimac3_Info_File]).\nMap the Minimac3 HRC imputation information to the GWAS summary stats using the variant identifier. See script: “r_plotResults_GWAS.IBD.ALL_Immune.33.Set∗.r” and \"qsub_r_plotResults_GWAS.IBD.ALL_Immune.33.Set∗.txt\".\nThe recalculated minor allele frequency (MAF) for the GWAS study set (n=9,603) calculated from “step-by-step method details[href=https://www.wicell.org#step-by-step-method-details]” step 16). This is done as the MAF from Minimac3 HRC imputation information is derived from the full TCGA dataset, whereas individuals used in this GWAS study was further filtered for non-hematologic cancers only and with closely related individuals excluded (by Identity-by-Descent (IBD) in “step-by-step method details[href=https://www.wicell.org#step-by-step-method-details]” step 15).\nMap the recalculated MAF to the GWAS summary stats using the variant identifier.\nFilter summary statistics to exclude SNPs with recalculated MAF < 0.005. See script: “r_plotResults_GWAS.IBD.ALL_Immune.33.Set∗.r” and \"qsub_r_plotResults_GWAS.IBD.ALL_Immune.33.Set∗.txt\".\nMap the genomic chromosome and base pair position to corresponding SNP rsIDs and IUPAC nucleotide ambiguity codes using the R “SNPlocs.Hsapiens.dbSNP144.GRCh37” package (https://www.rdocumentation.org/packages/BSgenome/versions/1.40.1/topics/SNPlocs-class[href=https://www.rdocumentation.org/packages/BSgenome/versions/1.40.1/topics/SNPlocs-class]).\nTransform GWAS results chromosome and base pair position into a GRanges object using the R “GenomicRanges” package.\nDefine the set of SNPs as the “SNPlocs.Hsapiens.dbSNP144.GRCh37” dataset.\nOverlap the GRanges chromosome and base pair position with the “SNPlocs.Hsapiens.dbSNP144.GRCh37” dataset using the snpsByOverlaps function.",
    "Merge annotated data with results file. See script: “r_annotation_SNP.r\".\nNote: Not all SNPs have corresponding rsIDs.\nThe nearest genes to SNP of interest (e.g., +/-50 KB, +/-500 KB, +/- 1000 KB) using R “snplist” package to map rsID to gene maps extracted via the R “biomaRt” package using host grch37.ensembl.org[href=http://grch37.ensembl.org] (https://uswest.ensembl.org/info/data/biomart/index.html[href=https://uswest.ensembl.org/info/data/biomart/index.html]).\nCreate SNP information table (setSNPTable function) using SNP rsID, chromosome and base pair position.\nCreate a gene information table (setGeneTable function) using gene attributes (gene symbol, Ensembl ID, Entrez ID, chromosome, start and end position, strand) extracted from R “biomaRt” package using host grch37.ensembl.org[href=http://grch37.ensembl.org].\nFind overlaps of the SNP and gene information tables, setting the margin (bp) to the desired distance from SNP of interest (makeGeneSet function). See script: “r_annotation_SNP.r\".\nVEP Impact and Symbol annotation from the downloaded VEP annotation file (see download datasets[href=https://www.wicell.org#sec1.3] section).\nMap the VEP annotation file (“VEP_MS_improved.csv” to the GWAS summary stats using chromosome and base pair position. See script: “r_annotation_SNP.r\".\nConcatenate GWAS filtered (and annotated) summary stats across all immune traits tested.\nAnnotate each summary stat file with the corresponding immune trait, immune category and immune module (see “Table S4”, (Sayaman et al., 2021[href=https://www.wicell.org#bib25]).\nAppend annotated summary stat files from each immune trait GWAS.\nIdentify genome-wide significant loci as SNPs within 50 KB region with at least one genome-wide significant SNP (p < 5 × 10−8). This excludes the HLA locus on chr 6 which spans ∼3.5 MB.\nNote: Scripts and code description used in this section are available at: https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics[href=https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics].\nDirect link: Genome-Wide Association Study (GWAS[href=https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics/tree/main/Code/GWAS]). The example code in this section were optimized for the high-performance compute environment at UCSF HPC employing Portable Batch System (PBS) job scheduling; consult your system administrator to adapt the provided code to your system.\nEpigenomic analysis\nTiming: 1–2 days",
    "This section describes the mapping of genome-wide significant and suggestive SNPs to the Roadmap Epigenomics Project Epigenomic Expanded 18-state model which uses 6 marks across 98 epigenomes: https://egg2.wustl.edu/roadmap/web_portal/chr_state_learning.html#exp_18state[href=https://egg2.wustl.edu/roadmap/web_portal/chr_state_learning.html].\n(Roadmap Epigenomics Consortium et al., 2015[href=https://www.wicell.org#bib24]).\nTransform the Immune-Germline GWAS suggestive and genome-wide significant SNPs results table into a GRanges object using the “GenomicRanges” package in R.\nImport the GWAS suggestive and genome-wide significant SNP result table into R.\nCreate a unique data frame of SNP IDs, chromosome and base pair positions.\nConvert into GRanges object using the makeGRangesFromDataFrame function in “GenomicRanges” package.\nIteratively loop and import each Roadmap Epigenomics Project epigenome, and extract epigenomic states that overlap each of the Germline-Immune SNP chromosome and base pair position.\nUsing “rtracklayer” package in R, import each epigenome bed file with the annotated Epigenomic Expanded 18-state model.\nAt each GRanges SNP chromosome and base pair position, extract the corresponding epigenomic state from each epigenome using the mergeByOverlaps function in “GenomicRanges” package.\nMap epigenome IDs to corresponding epigenome descriptions of source cell types and tissue types using the “Roadmap.metadata.qc.jul2013.csv” annotation file.\nAnnotate epigenetic states with published color schema using “FigureColors.csv” file.\nManually curate immune-associated epigenomes via cell type or tissue of origin (see “Table S4, (Sayaman et al., 2021[href=https://www.wicell.org#bib25])).\nNote: Scripts and code description used in this section are available at: https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics[href=https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics].\nDirect link: Epigenomic Analysis[href=https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics/tree/main/Code/Epigenomic_Analysis].\nExpression and splicing quantitative trait locus analysis (eQTLs and sQTL)\nTiming: 1 week\nThis section describes eQTL and sQTL analysis in TCGA and GTEx data. For GTEx data, eQTL/sQTL summary statistics across tissues were downloaded from https://gtexportal.org/home/index.html[href=https://gtexportal.org/home/index.html]. For the TCGA dataset, the gene expression matrix was downloaded from: https://gdc.cancer.gov/about-data/publications/pancanatlas[href=https://gdc.cancer.gov/about-data/publications/pancanatlas] and analysis was conducted locally.\nTCGA Analysis.\neQTL.\nDownload gene expression matrix: “EBPlusPlusAdjustPANCAN_IlluminaHiSeq_RNASeqV2.geneExp.tsv”.",
    "Download genes’ starts, ends, and types (i.e., protein coding, pseudogenes, miRNA, etc.) from “biomaRt” package from https://grch37.ensembl.org/biomart/martview/[href=https://grch37.ensembl.org/biomart/martview/]. Required columns from the “mart_report.txt” output files are: “Chromosome”, “Start”, “End”, and “Gene type”.\nTranspose the gene expression matrix. This can be run with R script “OrganizeRNAMatrix.R”.\nRun association analysis between genome-wide and suggestive SNPs and genes within 1 MB using a linear regression model accounting for genetic ancestry PC1-7, sex, age, and cancer type (see “Table S1”, (Sayaman et al., 2021[href=https://www.wicell.org#bib25])). This can be achieved using the script “eQTLanalysis.R”. This script also runs eQTL analysis for the 30 cancers separately.\nSummarize outcome: results will have the following: chromosome, position, gene name, distance from gene, pan-cancer sample size, pan-cancer effect size, pan-cancer p-value, and then the same information repeated for each cancer type.\nsQTL.\nDownload 5′, 3′, exon skipping, intron retention, and mutually exclusive exon splice events data from https://gdc.cancer.gov/about-data/publications/PanCanAtlas-Splicing-2018[href=https://gdc.cancer.gov/about-data/publications/PanCanAtlas-Splicing-2018].\nOrganize the data input and format it for SNP-splicing event association analysis. Use “script PrepareData.sh”. This script keeps the genes that mapped to the most significant SNPs (i.e., Suggestive and GW). Example: grep –f ListGenes.txt splice3prime > Data_3prime. It creates two more files that contain TCGA subject IDs, and splicing event IDs and types. It finally runs an R script “Analyze.R” that performs association analysis between SNP genotypes and splicing events using linear regression model accounting for genetic ancestry PC1-7, sex, age, and cancer type (for pan-cancer analysis only).\nSummarize outcome, an output file containing association results as follows: chromosome, position, ensemble ID, gene name, splicing event ID.\nGTEx Analysis.\nConvert all GWAS suggestive and genome-wide significant SNP chromosome and base pair positions from build GRCh37 to build GRCh38 to match GTEx annotation.\nImport the GRanges object of SNP chromosome and base pair positions from 13.",
    "Load the chain file “AH14150” for Homo sapiens rRNA hg19 to hg38 from the “AnnotationHub” package in R.\nConvert SNP chromosome and base pair positions from build GRCh37 to build GRCh38 using the liftOver function in the “rtracklayer” package in R. See script: “GWAS.SNPs_liftOver.GRCh38_extended.r”.\neQTL.\nFrom each tissue type, extract only GTEx eQTL SNP results that match the GWAS SNP GRCh38 chromosome and base pair position. The output is an R object of GTEx eQTL for suggestively significant variants. See script: “GTEx.eQTL.all.assoc_extract_GWAS.sugg.SNPs.server.r”\nConcatenate filtered GTEx eQTL files from each tissue corresponding to the GWAS suggestively significant variants. Iteratively load, annotate with tissue source, extract GRCh38 chromosome and base pair position from variant ID, and append each file into a single data frame in R.\nCalculate the false discovery rate (FDR) per variant across all genes and all tissues.\nUsing the GTEx Ensembl IDs, map to gene symbol and Entrez IDs using the “EnsDb.Hsapiens.v86” package in R.\nMerge with Immune-Germline SNP annotation.\nExtract GTEx eQTL results for variant-gene pairs with an FDR < 0.05 in at least one tissue. Exclude the HLA and IL17R locus which are simple eQTLs.\nOptional: Visualize results by plotting the GTEx eQTL -log10 FDR p-value against the distance from the TSS (“tss_distance”). See scripts: “GTEx.eQTL.all.assoc_processResults_GWAS.sugg.SNPs_extended.r” and “GTEx.eQTL.all.assoc_processResults_GWAS.sugg.SNPs_1mb_extended_plot.r”.\nsQTL.\nFrom each tissue type, extract only GTEx sQTL SNP results that match the GWAS SNP GRCh38 chromosome and base pair position. The output is an R object of GTEx eQTL for suggestively significant variants.",
    "Run the Linux bash script “run_split_sqtl.sh”. Each GTEx sQTL file is very large. This step separates the large GTEx sQTL file into a number of small files. The input of this script is a list of file names for GTEx sQTL. Each line of this input file is a file name for GTEx sQTL. The script generates a number of small files for each original GTEx sQTL file.\nRun the R script “r_extract.txt”. This script takes 2 input files. One is an R object for GWAS suggestively significant variants. The other input file is the GTEx sQTL file generated from the previous step. The output is an R object of GTEx sQTL for suggestively significant variants.\nConcatenate filtered GTEx sQTL files from each tissue corresponding to the GWAS suggestively significant variants. Iteratively load, annotate with tissue source, extract GRCh38 chromosome and base pair position from variant ID, and append each file into a single data frame in R.\nFor sQTL, limit analysis to +/- 500 KB region. Filter the resulting concatenated GTEx sQTL file using the absolute value of the “tss_distance”, set a threshold ≤ 500,000 bp.\nCalculate the false discovery rate (FDR) per variant across all genes and all tissues.\nUsing the GTEx Ensembl IDs, map to gene symbol and Entrez IDs using the “EnsDb.Hsapiens.v86” package in R.\nMerge with Immune-Germline SNP annotation.\nExtract GTEx sQTL results for variant-gene pairs with an FDR < 0.05 in at least one tissue. Exclude the HLA and IL17R locus which are simple eQTLs.\nOptional: Visualize results by plotting the GTEx sQTL -log10 FDR p-value against the distance from the TSS (“tss_distance”). See scripts: “GTEx.sQTL.all.assoc_processResults_GWAS.sugg.SNPs_500kb _extended.r” and “GTEx.sQTL.all.assoc_processResults_GWAS.sugg.SNPs_500kb_extended_plot”.\nNote: Scripts and code description used in this section are available at: https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics[href=https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics].",
    "Direct link: Expression and splicing quantitative trait locus analysis (eQTLs and sQTL[href=https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics/tree/main/Code/eQTLs_sQTLs]). The example code in this section were optimized for the high-performance compute environment at UCSF HPC employing Portable Batch System (PBS) job scheduling; consult your system administrator to adapt the provided code to your system.\nColocalization with eCaviar and manual curation of the expanded region\nTiming: 1 Week\nThis section describes colocalization analysis performed with eCAVIAR. This analysis was performed using TCGA and GTEx gene expression data. This analysis requires four input files: (1) GWAS summary statistics, (2) eQTL summary statistics, (3) LD matrix computed with GWAS data, and (4) LD matrix computed with genotype data used for eQTL analysis.\nTCGA Analysis.\nCreate a file to determine SNP-gene-trait to be tested for colocalization. Run R script “DetermineRegions.R”. This script reads eQTL results and keeps SNP-gene eQTL FDR p < 0.1. Output of this script will be a file that contains 5 columns: chromosome, position, gene name, trait, and SNP significance (GW or suggestive).\nFor each SNP-gene pair, run eQTL analysis between the SNP and the gene, and also between the 200 extra SNPs centered at the selected SNP and the gene. Use R script “RunEQTL.sh”. This script creates a folder for each SNP-gene pair. It extracts the list of 201 SNPs, calculates LD matrix (plink –bfile EXTRACTED –r square –out EXTRACTED), and performs GWAS and eQTL association analysis using the “eQTL.R” R script. “eQTL.R” script outputs two files: one for GWAS and one for eQTL analysis containing the z-score, beta, and p-value.\nRun eCAVIAR using “RunECAVIAR.sh” script. It calls eCAVIAR as follows:\neCAVIAR -o coloc_c1.out -l EXTRACTED.ld -l EXTRACTED.ld -z GWAS.z -z eQTL.z -f 1 -c 1",
    "The “GWAS.z” and “eQTL.z” are the z-score produced in the previous step. “EXTRACTED.ld” is a 1-line file that contains the LD between the selected SNP and the 200 SNPs surrounding it (100 SNP to the left and 100 SNPs to the right). The -c flag indicates the number of causal variants assumed in the model (Model was run twice assuming 1 and 2 causal variants). The output that contains the colocalization posterior probability (CLPP) for each SNP (total of 201 SNPs) is “coloc_c1.out_col”.\nThe same strategy is conducted for sQTL results.\nGTEx Analysis.\nRun the R script “r_match_tcga_gtex.txt” to match the effect allele between GTEx eQTL/sQTL results and TCGA GWAS results. It then calculates Z scores for both GTEx eQTL/sQTL and TCGA GWAS results.\nThis R script requires 4 input files:\nA table for index SNPs. The 1st column should be SNP ID and the 3rd column should be base-pair position in build 38.\nA list of GTEx eQTL/sQTL results. Each line is the name of a GTEx eQTL/sQTL result. The last part of the file name should be “_rsid.txt”. Each GTEx eQTL/sQTL result file has the following columns: “gene_id”, “variant_id”, “tss_distance”, “ma_samples”, “ma_count”, “maf”, “pval_nominal”, “slope”, and “slope_se”.\nA PLINK “.bim” file for TCGA genotype data. It has the following columns: chromosome, SNP ID, genetic distance, base-pair position, minor allele, and major allele.\nA GWAS result file for TCGA. It has the following columns: chr:bp, CHR, SNP ID, BP, A1, A2, Genotyped, Rsq, AvgCall, MAF, Stratified.Freq, NCHROBSTEST, NMISS, BETA, STAT, and P.\nThis R script generates 6 output files:\nZ score for GTEx eQTL/sQTL result.\nZ score for TCGA GWAS result.\nThe list of SNPs in GTEx eQTL/sQTL result.\nThe list of SNPs in TCGA GWAS result.\nThe list of SNPs and effect alleles in GTEx eQTL/sQTL result.",
    "The list of SNPs and effect alleles in TCGA GWAS result.\nOutput files iii-vi will be used to generate LD matrix for eCAVIAR. Output files i and ii will be used directly for eCAVIAR.\nRun PLINK commands to generate numeric genotype data for GTEx and TCGA for SNPs that were extracted as output files iii and iv from the previous step.\nRun the python script “make_plink_command_gtex.py” and “make_plink_command_tcga.py” to generate PLINK commands for GTEx and TCGA separately. The output is a Linux bash file that contains a number of PLINK commands.\nRun the bash file from steps 34e–i. Example for GTEx:\nplink --bfile /wynton/scratch/dhu/gtex_geno/GTEx_WGS_chr11\n--extract snps_gtex_ENSG00000005801_Nerve_Tibial_ZNF195_rs7951724.txt --make-bed --out temp_gtex\nplink --bfile temp_gtex --a1-allele snps_alt_gtex_ENSG00000005801_Nerve_Tibial_ZNF195_rs7951724.txt 2 1 --recode A --out Geno_gtex_ENSG00000005801_Nerve_Tibial_ZNF195_rs7951724\nExample for TCGA:\nplink --bfile/wynton/scratch/dhu/tcga_geno/tcga_imputed_hrc1.1_noMissnp_b38_chr11 --extract snps_tcga_ENSG00000005801_Nerve_Tibial_ZNF195_rs7951724.txt --make-bed --out temp_tcga\nplink --bfile temp_tcga --a1-allele snps_alt_tcga_ENSG00000005801_Nerve_Tibial_ZNF195_rs7951724.txt 2 1 --recode A --out Geno_tcga_ENSG00000005801_Nerve_Tibial_ZNF195_rs7951724\nRun the R scripts “r_cor_gtex.txt” and “r_cor_tcga.txt” to calculate Pearson correlation coefficients for each pair of SNPs in GTEx and TCGA genotype data. There are 2 input files for each R script. The 1st one is the genotype file that was generated from the previous step. The 2nd one is the file with SNP ID and alternate allele. This file was generated as the output file 5 or 6 in the step for running “r_match_tcga_gtex.txt”.\nRun eCAVIAR assuming 2 causal SNPs.\nRun the python script “make_ecaviar.py” to generate commands to run eCAVIAR. The output is a Linux bash script that contains a number of eCAVIAR commands.\nRun the Linux bash script from steps 34g–i. Example:\neCAVIAR -l Cor_tcga_ENSG00000281491_Minor_Salivary_Gland_DNAJB5-AS1_rs72729406.txt -l Cor_gtex_ENSG00000281491_Minor_Salivary_Gland_DNAJB5-AS1_rs72729406.txt -z Result_tcga_ENSG00000281491_Minor_Salivary_Gland_DNAJB5-AS1_rs72729406.txt -z Result_gtex_ENSG00000281491_Minor_Salivary_Gland_DNAJB5-AS1_rs72729406.txt -c 2 -f 1 -o Result_eCAVIAR_c2_ENSG00000281491_Minor_Salivary_Gland_DNAJB5-AS1_rs72729406.txt",
    "Note: All programming scripts for GTEx colocalization were run on the UCSF Wynton HPC (https://wynton.ucsf.edu/hpc/[href=https://wynton.ucsf.edu/hpc/]) employing Portable Batch System (PBS) job scheduling. An example of script for submitting jobs on the cluster is “qsub_run_plink_gtex.txt”. The command for submitting the job is “qsub_run_plink_gtex.txt” and depends on the setup of the HPC cluster; consult your system administrator to adapt the provided code to your system.\nNote: Scripts and code description used in this section are available at: https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics[href=https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics].\nDirect link: Colocalization with eCaviar and manual curation of the expanded region[href=https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics/tree/main/Code/Colocalization].\nRare variant analysis\nTiming: 1 week\nThis section includes a workflow to assess the contribution of rare cancer predisposition variants on different immune traits.\nDownload VCF germline file (Huang et al., 2018[href=https://www.wicell.org#bib14]) (see “key resources table[href=https://www.wicell.org#key-resources-table]”). Sub-select samples for which genotyping data are available and at least one phenotype is available (use “Sample List” as in “Table S1” from (Sayaman et al., 2021[href=https://www.wicell.org#bib25])).\nDownload annotations of curated Pathogenic and Likely Pathogenic Cancer Predisposition Variants from (see “Table S2”, (Huang et al., 2018[href=https://www.wicell.org#bib14])), which consists in 853 variants.\nAnnotate per-sample mutations using position information available in “Table S2” from (Huang et al., 2018[href=https://www.wicell.org#bib14]).\nExtract unique variants from “Table S2” from (Huang et al., 2018[href=https://www.wicell.org#bib14]) and write them in a space-delimited text file, say “list_snps.txt”, with format as follows: chromosome, position, position, dummy variable.\nSplit downloaded vcf file per chromosome as follows, where “i” is the chromosome number:\nbcftools view -r $i PCA.r1.TCGAbarcode.merge.tnSwapCorrected.10389.vcf.gz -O b -o CHR\"$i\".bcf.gz\nLeft normalize variants:\nbcftools norm -Ou -m -any CHR\"$i\".bcf.gz | bcftools norm -Ou -f human_g1k_v37.fasta | |bcftools --missing-to-ref | bcftools annotate -Ob -x ID -I +'%CHROM:%POS:-:%ALT' -O z -o CHR\"$i\"_norm.vcf.gz\nReplace missing genotypes by homozygous reference:\nbcftools +setGT CHR\"$i\"_norm.vcf.gz -O z -o CHR\"$i\"_norm_nomissing.vcf.gz -- -t . -n 0p\nConvert vcf files to PLINK formatted files:",
    "plink --vcf CHR\"$i\"_norm_nomissing.vcf.gz --keep-allele-order --vcf-idspace-to _ --const-fid --allow-extra-chr 0 --split-x 2699520 154931044 no-fail --make-bed --out CHR\"$i\"_norm_nomissing\nExtract the variant list prepared in step 37a and recode them mutations additively:\nplink --bfile CHR\"$i\"_norm --extract range list_snps.txt --recode A --out OUT$i --allow-no-sex\nCollapse mutations into genes (i.e., consider as “gene event” if any pathogenic or likely pathogenic variant is present in that gene).\nCollapse genes into mutually exclusive pathways (use category assignment as for in “Figure S7” from (Sayaman et al., 2021[href=https://www.wicell.org#bib25]), which are called here “genotypic variables”.\nOnly retain genotypic variables with at least 5 events across cancer.\nDownload phenotypes as in “Table S2” from (Sayaman et al., 2021[href=https://www.wicell.org#bib25]). Download genetic ancestry PC1-7, sex, age, and cancer type from “Table S1” from (Sayaman et al., 2021[href=https://www.wicell.org#bib25]).\nAnnotate each sample according to MANTIS score from (Bonneville et al., 2017[href=https://www.wicell.org#bib4]) (“Data Supplement S1”). Use 0.4 as cut-off for MSI-H bs MSI-S.\nRun regression models pan cancer and per cancer for genes and pathways using “RareVariantAnalysis.R”.\nPerform pan-cancer analysis.\nFor phenotypes with normal/quasi-normal distribution (see “Table S2”, (Sayaman et al., 2021[href=https://www.wicell.org#bib25])), run linear regression between genotypic variables with at least 5 events per cancer, using as co-variates, genetic ancestry PC1-7, sex, age, and cancer type. For selected variables (see “Table S2”, (Sayaman et al., 2021[href=https://www.wicell.org#bib25])), apply Log Transformation.\nFor phenotypes with skewed distribution, dichotomize values as low vs high (see “Table S2”, (Sayaman et al., 2021[href=https://www.wicell.org#bib25])), run logistic regression between genotypic variables with at least 5 events per cancer, using as co-variate genetic ancestry PC1-7, sex, and age.\nPeform per-cancer analysis.\nRepeat steps 44a–b, without including cancer type as covariate.",
    "Generate outcome summary: exome files related to samples for which all the covariates and at least one immune trait was available should result in a master file of N = 9,138 samples. There will be 832 pathogenic/likely pathogenic SNPs/Indels events with at least one copy of rare allele in the whole exome sequencing data, corresponding to 586 distinct pathogenic SNPs/Indels mapping to 99 genes. The regression analysis provides p-values and beta coefficients of the association with immune traits.\nNote: Scripts and code description used in this section are available at: https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics[href=https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics].\nDirect link: Rare Variant Analysis[href=https://github.com/rwsayaman/TCGA_PanCancer_Immune_Genetics/tree/main/Code/Rare_Variant_Analysis]."
  ],
  "subjectAreas": [
    "Genomics",
    "Immunology",
    "Bioinformatics",
    "Cancer",
    "Genetics",
    "Gene Expression"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}