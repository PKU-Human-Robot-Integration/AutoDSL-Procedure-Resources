{
  "id": 9175,
  "origin_website": "Jove",
  "title": "Real-time Electrophysiology: Using Closed-loop Protocols to Probe Neuronal Dynamics and Beyond",
  "procedures": [
    "The protocol described here complies with the recommendations and guidelines of the Ethics Committee of the Department of Biomedical Sciences of the University of Antwerp. This protocol requires the preparation of non-sentient material from the explanted brain of juvenile Wistar rats, obtained by approved humane euthanasia techniques.\n1. Equipment Preparation\nInstall and configure the data acquisition and stimulation system.\n\t\nUse a personal computer (PC) equipped with a data acquisition (DAQ) card supported by Comedi to record signals and send analog control voltages to the electrophysiological amplifier.\n\t\tNOTE: Comedi is a Linux module and library that supports a multitude of DAQ cards from the most common manufacturers: visit http://www.comedi.org for more information.\nIn case a computer-controlled patch clamp amplifier is in use, employ a second PC besides the one dedicated to the amplifier control.\n\t\tNOTE: While the latter may run a conventional operating system, the extra PC will be operating in real-time by means of a special operating system. Under these conditions, it is convenient to use a single monitor, mouse, and keyboard attached to the extra PC, while connecting by a remote desktop application to the dedicated PC.\nDownload the ISO image of the Live CD containing a real-time Linux operating system with LCG preinstalled from http://www.tnb.ua.ac.be/software/LCG_Live_CD.iso and burn it on a blank CD or USB stick”.\nSimply insert the CD into the drive of the PC containing the DAQ card and start it. Alternatively, install LCG from its online source repository on a PC running the Linux operating system (e.g., Debian or Ubuntu). Consult the online manual for details on the installation procedure. The manual is available online at http://danielelinaro.github.io/dynclamp/lcg_manual.pdf.",
    "Boot from the live CD: this will automatically load a fully configured system. To do this, place the LCG Live CD in the computer CD-ROM drive and boot the computer from CD; select the real-time kernel (default option) as soon as the boot menu appears and wait for the system to initialize.\nCalibrate the DAQ card by typing at the command prompt:\n\t\tsudo comedi_calibrate\n\t\tor\n\t\tsudo comedi_soft_calibrate\n\t\tdepending on whether the data-acquisition board supports hardware or software calibration, respectively (use the command sudo comedi_board_info to obtain information on the board).\nSet the appropriate analog-to-digital and digital-to-analog conversion factors: this requires having access to the manual of the cellular electrophysiological amplifier, and particularly to its specifications on its conversion factors.\nUse a text editor to specify the appropriate numerical values in the file /home/user/.lcg-env, for the environment variables AI_CONVERSION_FACTOR_CC, AI_CONVERSION_FACTOR_VC, AO_CONVERSION_FACTOR_CC, AO_CONVERSION_FACTOR_VC.\n\t\tNOTE: These represent the input (AI) and output (AO) gains for current clamp (CC) and voltage clamp (VC) modes, and the conversion factors between the voltage commands provided by the computer and the current or voltages generated by the amplifier, respectively.\nAlternatively, use the LCG script provided (lcg-find-conversion-factors), to find the conversion factors of his or her system.\n\t\tNOTE: The values computed by lcg-find-conversion-factors are guesses, which in some cases are required to be numerically truncated or rounded to reflect the exact values of the conversion factors.\nTo use lcg-find-conversion-factors, start by connecting the 'model cell' that often is purchased with the amplifier to the corresponding headstage. Then, open a terminal on the Linux machine where you are running the Live CD and enter the following command at the shell prompt:\n\t\tlcg-find-conversion-factors -i $HOME/.lcg-env -o $HOME/.lcg-env",
    "NOTE: In both cases (i.e., manual modification of /home/user/.lcg-env or usage of lcg-find-conversion-factors), close and open the terminal for the changes to take effect.\nIf multiple headstages are used, set the conversion factors to the same values in all channels; if that is not possible, consult the LCG online manual to understand how to use multiple conversion factors in lcg-stimulus or how to produce configuration files that better suit the user’s needs.\n2. Preparation of Acute Brain Slices from the Somatosensory Cortex\nPreparation of solutions for electrophysiology.\n\t\nPrepare Artificial Cerebro-Spinal Fluid (ACSF) by mixing (in mM) 125 NaCl, 2.5 KCl, 1.25 NaH2PO4, 26 NaHCO3, 25 glucose, 2 CaCl2, and 1 MgCl2. Prepare 10x stock solutions to reduce the preparation time on the day of the experiment. Prepare 2 L, of which one will be used for the preparation of the slices and the other for recording.\nSaturate the ACSF with 95% O2 and 5% CO2 for at least 30 min prior to the beginning of the procedure.\nFor current clamp recordings, use an intracellular solution (ICS) containing (in mM) 115 K-gluconate, 20 KCl, 10 HEPES, 4 ATP-Mg, 0.3 Na2-GTP, 10 Na2-phosphocreatine. Prepare the solution in ice and filter it prior to the beginning of the recordings to eliminate the risk of clogging the pipette.\nBrain extraction.\n\t\nAnesthetize the animal placing the animal in an induction chamber with 4% Isoflurane and rapidly decapitate it using a guillotine or large scissors.\nCut the skin along the midline and slide it to the ears.",
    "Using a fine pair of scissors cut the skull along the midline. Keep the blade as close as possible to the surface so as to minimize damage to the underlying brain. Open the skull with a pair of tweezers, use a spatula to sever the optic nerve and the brainstem and gently drop the brain in ice-cold ACSF.\nSeparate the cerebellum and the two hemispheres with a scalpel (blade 24).\nRemove excess water from one of the two hemispheres and glue it on an inclined platform using a drop of superglue. Quickly add a few drops of ACSF over the brain and transfer it to the vibratome chamber.\n\t\tNOTE: When preparing sagittal slices, the angle of the platform is important to avoid damaging the dendrites of pyramidal cells during the slicing procedure.\nPreparation of the slices.\n\t\nPosition the blade over the brain and discard the first 2.5 - 3 mm. Adjust the speed and frequency to limit damage to the surface of the slice while at the same time minimizing the time required for the slicing procedure.\nSet the thickness to 300 µm and begin slicing. Once the blade has gone past the cortex, use a razor blade or a bent needle to cut above the hippocampus and at the edges of the cortical area of interest.\nPlace the slices in a multi-well incubation chamber kept at 32 - 34 °C.\nRetract the blade and repeat points 2.3.2 and 2.3.3 until 5 - 8 slices are cut. The best slices are usually the ones where the blood vessels are parallel to the surface.\nIncubate the slices for 30 min after the last slice is placed in the chamber.\n3. Patch-clamp Recordings from Layer 5 Pyramidal Neurons",
    "Place a slice in the recording chamber and search for healthy cells. These cells usually have lower contrast, a smooth appearance and are not swollen.\nInspect the slice under the microscope with the 40X magnification lens and search for cells in layer 5, located approximately 600 to 1,000 µm from the surface of the brain.\nOnce a suitable cell is found, load one third of the micropipette with ICS and place it in the headstage.\nOn the personal computer running the live CD or the pre-configured Linux operating system, launch a command shell (e.g., bash) and at its prompt type the command lcg-zero. This ensures that the DAQ board is not driving the amplifier.\nApply 30 - 50 mbar of positive pressure by pressing on the piston of a common syringe, connected by tubing to the pipette holder and, with the help of the microscope, place the pipette approximately 100 µm above the slice.\n\tNOTE: Place the pipette in a position that allows a direct route to the target cell, preferably using the approach mode of the micromanipulator.\nActing on the controls the electrophysiology amplifier, adjust the pipette offset and output a test pulse (10 mV) in voltage clamp mode.\nReduce the pressure to 10 - 30 mbar (depending on the pipette size) by withdrawing the piston of the syringe; gently approach the cell and check for the formation of a dimple by observing the image on the video camera monitor. Monitor the test pulse for an increase in resistance at all times, by watching the current waveform displayed on the oscilloscope connected to the electrophysiology amplifier (alternatively you can use the command lcg-seal-test to monitor the pipette resistance).",
    "Release the pressure and if necessary apply gentle negative pressure to the pipette to help seal formation when you notice an increase in pipette resistance and the formation of a 'dimple' on the cell.\nWhile the seal forms, gradually decrease the holding potential to -70 mV.\nOnce a gigaohm seal has been obtained, ensure that the holding current is between 0 - 30 pA. Apply short pulses of negative pressure (suction) to break the membrane and establish the whole-cell configuration. Alternatively, you can inject strong and brief pulses of voltage (i.e., using the 'ZAP' command on the amplifier or holding the cell at very negative) to rupture the membrane, depending on the preparation and glass pipette used.\nSwitch to current clamp mode and verify that the resting membrane potential is typical of a healthy cell. For cortical pyramidal neurons using a potassium-gluconate-based solution, this value is usually between -65 and -75 mV.\n4. Semi-automatic Characterization of a Neuron’s Electrical Response Properties\nCreate a directory to store user’s data. In order to do this the employ a script included in the LCG live CD that creates folders based on the date. To use it, type at the command prompt\n\tcd ~/experiments\n\tlcg-create-experiment-folder -s psp,in_vivo_like\n\tThis will create a folder where the data for that cell will be saved (and a 'psp' and 'in_vivo_like' subfolders) and it will print its name to the terminal window; it is also possible to store additional information such as pipette resistance and cell type using this script.\nChange directory to the newly created folder using the command\n\tcd ~/<foldername>\n\tThe folder name is the one displayed by the command lcg-create-experiment-folder and will have the timestamp of the current day (i.e., year-month-day), as in 20140331A01.",
    "Make sure that the amplifier is set to operate in current clamp mode, that the cables are connected and the external voltage command of the amplifier, if present, is enabled.\nEnter the command lcg-ecodeat the command prompt. This calls a series of commands (namely lcg-ap, lcg-vi, lcg-ramp, lcg-tau and lcg-steps), used to characterize basic response properties of the cell. lcg-ecode requires that the user specify two parameters: the amplitude of the 1 ms-long pulse of current used to elicit a single spike in the cell, and the maximum amplitude of the current ramp injected into the cell to find its rheobase.\n\tUse the following command syntax:\n\tlcg-ecode --pulse-amplitude X --ramp-amplitude Y\n\twith a choice of the values X and Y (in pA) that are sufficient to make the cell fire in response to a 1 ms-long pulse and a sustained injection of current, respectively.\n\tNOTE: These protocols require performing the numerical estimate of the 'electrode kernel' in order to use the Active Electrode Compensation (AEC)15. A noisy current injection is used to estimate the kernel and the user is prompted to confirm the number of samples that make up the kernel. See 15 for detailed information on the meaning of the electrode kernel and how to choose the number of kernel samples.\n5. Injection of Conductance through Simulated Synapses and Simulation of In Vivo-like Background Activity\nInjection of simulated excitatory post-synaptic potentials\n\t\nChange to the directory where you will save the next experiment, by typing the following command at the command prompt of the shell:\n\t\tcd psp/01",
    "Copy an LCG configuration file to the current directory and open it with a text editor (Nano in this example) by typing the following commands at the command prompt of the shell (this example configuration file is included in the source code and the live cd):\n\t\tcp ~/local/src/lcg/configurations/epsp.xml \n\t\tnano epsp.xml\n\t\tNOTE: This is simply a text file with different entities connected to each other. For more details see the Representative Results section.\nIf necessary edit the inputChannel, outputChannel, the inputConversionFactor and the outputConversionFactor in this file to match the user’s setup.\nCompute the electrode kernel needed to perform the active electrode compensation ' the method used by LCG to perform single electrode dynamic clamp ' by issuing the command\n\t\tlcg-kernel\n\t\tThis will prompt for the number of points in the kernel. Again, select a number so that the electrode kernel covers the end of the exponential decay tail.\nPerform the dynamic clamp experiment using the command\n\t\tlcg-experiment -c epsp.xml\nList the files and visualize the results by using the command\n\t\tls -l\n\t\tlcg-plot-file -f last\nInjection of simulated inhibitory post-synaptic potentials\n\t\nCreate a folder and copy the epsp.xml file to it by typing the following commands at the command prompt of the shell:\n\t\tmkdir ../02\n\t\tcp epsp.xml ../02/ipsp.xml\n\t\tcd ../02\nEdit the configuration file by using a text editor: change the synaptic reversal potential and rise and decay time constants of the model synapse Exp2Synapse to the following:\n\t\tparameters>\n\t\t<E>-80</E>\n\t\t<tauRise>0.8e-3</tauRise>\n\t\t<tauDecay>10e-3</tauDecay>\n\t\t<parameters>\n\t\tQuit the text editor.\nCompute the electrode kernel and perform the experiment as in 5.1, by typing the following commands at the command prompt of the shell:\n\t\tlcg-kernel\n\t\tlcg-experiment -c ipsp.xml\nList the files and visualize the results, by typing the following commands at the command prompt of the shell:\n\t\tls -l\n\t\tlcg-plot-file -f <filename.h5>",
    "Simulation of in vivo-like background activity:\n\t\nChange to the directory where you want to save the following experiment, as previously shown, by typing the following commands at the command prompt of the shell:\n\t\tcd ../../in_vivo_like/01\nCopy the configuration file from LCG source directory, by typing the following commands at the command prompt of the shell:\n\t\tcp ~/local/src/lcg/configurations/in_vivo_like.xml \n\t\tnano in_vivo_like.xml\n\t\tNOTE: This file is simply the concatenation of the previous ones; two Poisson-point processes that generate spike trains, which in turn feed inhibitory and excitatory model synapses, generate the background activity.\nAdjust the DAQ configuration parameters for the user’s setup, as described in 5.1.3 and exit the editor.\nCompute the electrode kernel and perform the experiment as in 5.1, by typing the following commands at the command prompt of the shell:\n\t\tlcg-kernel\n\t\tlcg-experiment -c in_vivo_like.xml -n 10 -i 3\n\t\tThe '-n 10' and '-i 3' switches indicate that the stimulation should be repeated 10 times at intervals of three sec.\nVisualize the raw traces by using the following command at the command prompt of the shell:\n\t\tlcg-plot-file -f all\nSubscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Neuroscience"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research"
  ]
}