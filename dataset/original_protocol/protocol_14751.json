{
  "id": 18577,
  "origin_website": "Jove",
  "title": "Single-Molecule Tracking Microscopy - A Tool for Determining the Diffusive States of Cytosolic Molecules",
  "procedures": [
    "1. Double-helix point-spread-function calibration\nNOTE: Images described in this and the following sections are acquired using a custom built inverted fluorescence microscope, as described in Rocha et al.23. The same procedure is applicable to different microscope implementations designed for single-molecule localization and tracking microscopy2,3,4. All software for image acquisition and data processing described in this article is available (https://github.com/GahlmannLab2014/Single-Molecule-Tracking-Analysis.git).\nPreparation of agarose pads for mounting samples on glass cover slips to be viewed under the microscope.\nAdd 1.5-2% by weight low melting point agarose to 5 mL of M2G buffer (4.9 mM Na2HPO4, 3.1 mM KH2PO4, 7.5 mM NH4Cl, 0.5 mM MgSO4, 10 µM FeSO4, 0.5 mM CaCl2 and 0.2% glucose). Microwave for several seconds until all agarose is dissolved. Do not let the solution boil.\nLet the agarose solution cool for a few minutes (2-3 min).\nPipette 600 µL of agarose solution onto a glass cover slip (22 mm x 22 mm). Gently place a second glass cover slip on top of the agarose. This creates a thin (~0.5 mm) agarose gel pad between the two glass cover slips.\nLet the agarose pads sit to solidify for ~20 min.\nGently separate the glass cover slips. The agarose pad will stick to one of them.\nUsing a razor blade, cut the agarose pad into four square sections of equal size. Each square section can be used for a single sample.\nPipette 1.5 µL of fluorescent bead solution onto one agarose pad. Bead solution is a 1/100000 dilution of the stock solution in M2G (see Table of Materials).\nInvert the agarose pad and place on a glass cover slip that has been cleaned in an ozone cleaner for 30 min. The cleaning time is chosen to eliminate any fluorescent molecules adherent to the coverslips.",
    "Mount the sample cover glass onto the sample holder of an inverted fluorescence microscope and secure it in place using adhesive tape or spring loaded sample holder clips.\nAdd a drop of immersion oil onto the microscope objective.\nPlace the sample holder onto a microscope and secure it in place.\nInitialize the graphical user interface (GUI) to control the microscope’s camera, sample stage, and excitation lasers. Here, custom-written software in MATLAB is used for instrument control (Supplementary Figure 1).\nInitialize the camera software HCImage Live. In the Capture tab under the Camera Control section, set the exposure time to 0.03 s. Click Live to begin a live feed of the camera.\nTurn on the laser by clicking Open 514 nm laser on the GUI interface to excite the fluorescent beads on pad and view the fluorescence emission on the camera using live-stream mode (i.e., no data saved to disk).\nAdjust the X and Y positions of the microscope stage by clicking the ‘XY-Pos’ arrows under the ‘Micro-Positioning Stage’ section of the GUI to position at least one fluorescent bead in the center of the field-of-view (FOV). The step size can be altered by clicking on the drop-down box below the arrows.\nAdjust the Z position of the microscope stage by clicking the Z-Pos arrows under the Nano-Positioning Stage section of the GUI. Set the orientation of the double-helix point-spread-function (DHPSF) of the fluorescent bead to be vertical. This vertical orientation is defined as the starting point in the Z-calibration. The step size can be altered by clicking on the drop-down box below the arrows.\nIn HCImage Live, under Capture | Trigger Modes, Speed and Registration, change the trigger mode from Internal to External Level Trigger. This will allow the MATLAB GUI to control the camera.",
    "Under Sequence | Scan Settings, change the number of frame counts to 1200. Choose a save destination folder by clicking on the button labelled …. Finally click Start. The number of frame counts is set to 1200 so that 10 frames can be collected for each of 120 Z position steps.\nScan through a range of Z positions (30 steps above and below the starting Z position in 50 nm increments) and record 10 frames at each step using an exposure time of 0.03 s. Begin the automated process by clicking GO under the Z-Calibration section of the GUI.\n\tNOTE: The parameters for the calibration, including step-length, number of steps, camera exposure time, and number of frames per step can be adjusted here as well. About 105 photons can be acquired from a fluorescent bead in a single frame using 0.03 s exposure times resulting in x,y,z localization precisions of about 1 nm.\nTurn off the laser illumination by clicking Close 515 nm laser in the GUI. In HCImage Live, under Capture | Trigger Modes, Speed and Registration, change the trigger mode back to Internal. Under Sequence | Scan Settings change the number of frame counts to 200. Choose a save destination folder by clicking on the button labelled …. Click Start to collect 200 frames of dark images with a 0.03 s exposure time.\n\tNOTE: Even in the absence of light falling on the detector, each pixel will read out a positive number (referred to as the dark offset value), which can vary slightly among pixels. The dark offset value may change over time. Therefore, it is necessary to collect dark frames for each calibration.",
    "Fit the DHPSF with a double-Gaussian model using the Easy-DHPSF software24 to obtain the X and Y positions of the bead, as well as an angle vs. Z calibration curve.\n\t\nInitialize Easy-DHPSF software in MATLAB. Under Setup, set Channel to G and set Fitting Method to MLE with DG model. G refers to the green channel camera, as the fluorescent protein being used for data acquisition emits with green wavelengths. MLE with DG Model refers to Maximum Likelihood Estimation with Double-Gaussian model.\n\t\tNOTE: The pixel size and conversion gain are dependent on the specific optical setup, and may need to be altered.\nUnder the Calibrate DHPSF section, click Run. Click OK on the following pop-up window to keep default settings.\nSelect the image stack saved in steps 1.13-1.14. Next, select the image stack with the dark background saved in step 1.15. Finally, select the .txt file that was automatically saved during step 1.14. This file contains the Z-position of the stage throughout the scanning process.\nIn the next pop-up window, if the full camera chip was not used for the field of view, input the starting x0 and y0 positions on the chip. Otherwise, input x0 = 1 and y0 = 1.This information can be found in HCImage Live under the Binning and SubArrary section.\nIn the following window, resize and reposition the box that appears over the image of the fluorescent beads so that it is approximately 100 x 100 pixels in size and centered over a single fluorescent DHPSF signal. Then, double-click to continue.\n\t\tNOTE: The chosen DHPSF should be isolated from the other DHPSF signals and ideally be the brightest bead possible.",
    "Click in the center of the DHPSF signal, in between the two lobes, then hit Enter. The following window shows a zoomed-in view of the chosen DHPSF. More precisely choose the location of the center of the DHPSF by clicking.\n\t\tNOTE: The program will then fit the DHPSF, and display the raw image and the reconstruction from the fit. It will also output template images from the Z calibration corresponding to a DHPSF cross section at different Z positions. These will be used later for fitting of the experimental data. The program will output the X,Y, and Z position estimated in each frame. In a well aligned optical system, X and Y should change very little (~30 nm deviation) as the Z position changes. If the output variation is larger than 30 nm, the phase mask, located in the Fourier plane of the imaging system (Figure 1), should be realigned and steps 1.9-1.16 repeated.\nSave the Easy-DHPSF GUI by clicking on the Save icon in the upper left corner of the GUI. This can later be loaded by clicking on the Load icon in the GUI.\n\t\tNOTE: The Z calibration procedure should be conducted on each day of an experiment to account for alignment changes in the microscope that may have occurred due to temperature fluctuations or mechanical vibrations.\n2. Bacterial culture preparation\nPrepare culture media supporting bacterial cell growth. For Y. enterocolitica, use 5 mL of BHI (Brain Heart Infusion) broth containing nalidixic acid (35 µg/mL) and 2,6-diaminopimelic acid (80 µg/mL). Here, a Y. enterocolitica strain is used that has the protein YscQ tagged with the fluorescent protein eYFP23.\nInoculate media with bacterial cultures from freezer stocks or plate cultures.\nGrow the culture at 28 °C with shaking overnight.",
    "Dilute a small amount (~250 µL) of saturated overnight culture to 5 mL using fresh culture media.\nGrow the culture at 28 °C with shaking for 60-90 min.\nInduce expression of fluorescent fusion protein. For Y. enterocolitica, heat shock the cells to 37 °C in a water shaker to induce the yop regulon.\nIncubate the cells for an additional 3 h at 37 °C with shaking.\nCentrifuge 1 mL of culture at 5,000 x g for 3 min at room temperature. Discard the supernatant.\nWash the pellet 3 times with 1 mL of M2G media.\nRe-suspend the pelleted bacteria in ~250 µL of M2G Media.\nAdd fluorescent beads as fiducial markers. Fluorescent bead solution should be added in appropriately diluted amounts, so that there are only 1-2 beads per FOV when viewed in the microscope.\nGently pipette or vortex the suspension to separate aggregated cells.\nPlate 1.5 µL of suspension on a 1.5-2% agarose pad made with M2G.\nInvert the agarose pad and place it on an ozone-cleaned microscope cover slip. The cover slip should be placed in an ozone cleaner for 30 min to reduce any inherent fluorescence background.\n3. Data acquisition\nMount the sample cover glass onto the sample holder of an inverted fluorescence microscope and secure it in place using adhesive tape or spring loaded sample holder clips.\nAdd a drop of immersion oil onto the microscope objective, then place the sample holder onto microscope and secure it in place.\nInitialize graphical user interface (GUI) to control the microscope’s camera, sample stage, and excitation lasers. Here, custom-written software in MATLAB is used for instrument control.\nInitialize camera software HCImage Live. In the Capture tab under the Camera Control section, set the exposure time to 0.025 s. Click Live to begin a live feed of the camera.",
    "Adjust the X and Y positions of the microscope stage by clicking the XY-Pos arrows under the Micro-Positioning Stage section of the GUI to scan around the sample and find a FOV with an appropriately dense population of bacterial cells.\n\tNOTE: To maximize data throughput, cells should be as dense as possible, without overlapping or touching cells. The FOV should also include at least 1 fluorescent bead to be used as a fiducial marker, preferably positioned in a corner of the FOV.\nAdjust the Z position of the microscope stage by clicking the Z-Pos arrows under the Nano-Positioning Stage section of the GUI, so that the fluorescent bead’s DHPSF lobes are vertical.\nUnder Sequence | Scan Settings, change the number of frame counts to 20,000. Choose a save destination folder by clicking on the button labelled …. Finally click Start to collect up to 20,000 camera frames using a short exposure time of 0.025 s. eYFP photoblinking is initiated using high intensity excitation light at 514 nm19,25.\n\tNOTE: Here, a laser intensity of ~350 W/cm2 at the focal plane is used for initial bleaching and subsequent imaging of single EYFP molecules. Photoactivation of eYFP molecules at UV wavelengths during imaging was not used. There should be at most one single-molecule signal per bacterial cell. If the density of single-molecule signal is too high initially, continue to illuminate until sufficient photobleaching occurs before beginning data acquisition.\nTurn off the laser illumination by clicking Close 515 nm laser in the GUI. Collect 200 frames of dark images using the same exposure time.\nIn the GUI, check the box next to Thorlabs LED and click Toggle Mirror Up. This will switch the pathway from the fluorescence pathway to the phase contrast pathway.",
    "Initialize the data acquisition software IC Capture 2.4. This controls the camera in the phase contrast pathway. Press the Start/Stop Live Display button to view a live feed from the camera. Click Capture | Save Image to collect a phase contrast image of the cells in the field-of-view.\nRepeat steps 3.5-3.10 for additional FOVs. Here, data acquired from ~500 bacterial cells in ten different FOVs is used to increase the number of single-molecule trajectories available for analysis.\n\tCAUTION: Cells mounted on the agarose pads for long periods of time may behave differently than freshly mounted cells. Additionally, the agarose pad may lose its integrity after some time, which may adversely affect data quality. Typically, at most 3 FOV (~30 min on the microscope) are used per sample slide.\n4. Data processing\nNOTE: A modified version of the Easy-DHPSF software24 is used in MATLAB for the analysis of the raw camera frames to extract single-molecule localizations. Easy-DHPSF is used specifically to fit DHPSF localizations in single-molecule imaging. Custom changes were made to implement Maximum Likelihood Estimation (MLE)-based fitting routine that accounts for the pixel-dependent noise characteristics of modern sCMOS cameras26. It was also modified to accept the image file type output from the HCImage Live program (.dcimg). For a more detailed explanation of the software and the individual steps, please see Lew et al.24\nInitialize the Easy-DHPSF GUI in MATLAB (Supplementary Figure 2). Load in the file saved in step 1.16.8.\nDetermining threshold values for each of the 7 templates output in step 1.16.7\nUnder the Calibrate SM identification section, click Run. Click OK on the following two pop-up windows to keep default settings.\nOpen the image stack containing the data from the first FOV when prompted.",
    "Choose a small range of frames to match templates. Typically frames 1001-2000 are used to avoid dense overlapping signals in the first several hundred frames. Click OK on the following pop-up window to keep default settings. Click Cancel when prompted for the sequence log file in the following window.\nOpen the image stack with the dark background saved in step 3.8. Click ‘OK’ in the following pop-up window to leave the parameters for the background estimation set to default. The default is to estimate the background using a median filter27 covering 100 subsequent camera frames around the current frame.\nIn the next window, resize the box overlaid on the image to cover the full FOV, then double-click to continue.\nDefine the region of interest by clicking several points on the image to create a polygon. The region of interest should include as much of the field of view as possible, while ensuring that any fluorescent beads (very bright objects) in the image do not lay within the polygon, then double-click to continue.\n\t\tNOTE: The software will then attempt to match the templates to the image, and will display an image with possible matches circled.\nWhen the software has stopped, it will save many images of found template matches and display the corresponding threshold value in a pre-defined folder. A higher threshold value corresponds to a better match. For each template number, examine the example matches and determine the lowest threshold that exhibits an image of a DHPSF. Input these thresholds for each of the 7 templates under the Calibrate SM Identification section in the Easy-DHPSF GUI.",
    "NOTE: The program will attempt to automatically choose and input thresholds, however, these are often unreliable and should be manually checked. Thresholds are chosen such that few true single-molecule signals are missed, but the number of false positive candidates for fitting remains computationally manageable.\nSave the Easy-DHPSF GUI again by clicking on the Save icon in the upper left corner.\nFitting the fluorescent bead in the FOV to use as a fiducial marker\nUnder the Track fiduciaries section of the Easy-DHPSF GUI, click Run. Click OK on the following two pop-up windows to keep default settings.\nDrag the box overlaid on the image and center it over the DHPSF signal from the fluorescent bead, then double-click.\nClick in the center of the DHPSF signal, at the midpoint between the two lobes, then hit enter. Click Cancel when prompted for the sequence log file in the following window.\n\t\tNOTE: The software will fit the DHPSF in all camera frames, and display the raw image and the reconstructed image. When the software has finished, it will output figures with X,Y, and Z positions of the fluorescent bead over the duration of the image acquisition.\nCheck the box next to Use fiduciaries and save the Easy-DHPSF GUI again by clicking on the Save icon in the upper left corner.\nFind and fit all localizations in all camera frames using the template thresholds obtained in step 4.2.\n\t\nUnder the Localize DHPSF SMs section of the Easy-DHPSF GUI, click Run. Click OK on the following pop-up windows to keep default settings. Click Cancel when prompted for the sequence log file in the following window.",
    "NOTE: The software will find and fit the DHPSF using a double-Gaussian model if the quality of the match is above the user-defined threshold. It will display the raw image with circles around template matches as well as an image of the reconstructed DHPSF fits.\nSave the Easy-DHPSF GUI again by clicking on the Save icon in the upper left corner.\nViewing single-molecule localizations and filtering out unwanted or unreliable localizations\nUnder the Output DHPSF SM localizations section, click Filter Output.\nClick OK in the following three windows to perform an interpolation of the fiducial X,Y, and Z positions over time. In most cases, the default options are sufficient. If the black interpolated line does not reflect a reasonable interpolation of the red position line, change the interpolation parameters in the pop-up window.\n\t\tNOTE: The interpolated line is used for stage-drift correcting the single-molecule localizations.\nOpen the corresponding phase contrast image for the FOV being analyzed when prompted. Click OK on the following two pop-up windows to keep default settings.\nIn the following two pop-up windows, change the filter values to allow for more strict or more lenient single-molecule localization requirements, then click OK.\nIn the window that appears, drag or resize the box overlaid on the images to view the desired region of interest and double-click to continue.\nA 3D reconstruction of single-molecule localizations is displayed. Use the figure tools to manipulate the reconstruction (rotate, zoom, etc). Click Continue to display another dialogue box asking ‘Would you like to replot with a different parameter set?’. If the results are satisfactory, click No. If they are not, click Yes.",
    "NOTE: Common reasons for unsatisfactory results include the phase contrast image not being correctly overlaid with the localization data or the initial template thresholds were too low creating many false positive localizations. If Yes was selected, the software will return to step 4.5.4 so that new parameter values can be defined. If No was selected, the results will be saved.\n5. Data post-processing\nUsing custom-written software in MATLAB, crop the phase contrast image so that only the region that contains cells that were imaged under the fluorescence microscope remains. This step is necessary because the phase contrast image covers an area much larger than the fluorescence image. Cropping the image simplifies the next step.\nSegment individual cells by processing the phase contrast image with the OUFTI28 software (Supplementary Figure 3)\n\t\nInitialize OUFTI in MATLAB. Load the cropped phase contrast image from previous step by clicking on Load phase.\nClick File to choose and name a save location for the output file.\nSelect Independent frames under the Detection and Analysis heading.\nClick Load Parameters to load parameters for cell detection. Examples of parameters include acceptable cell area, cell width and a cell splitting threshold.\n\t\tNOTE: All of these parameters should be adjusted to maximize performance for the specific cell sizes and image quality being used. Importantly, the algorithm parameter should be set to subpixel to allow for precise measurement of cell outlines.\nClick This frame to begin cell segmentation. Cell outlines will appear over the phase contrast image when the process is finished.\nUsing the controls under the Manual section, split cells, add cells, or refine cell outlines to obtain outlines for cells that were inaccurately segmented during the automated process.\nOutput the cell outlines by clicking Save analysis.",
    "Use custom-written software in MATLAB to precisely overlay the outlines obtained in the previous step with the single-molecule localizations. The following substeps detail the steps of the software.\n\t\nManually select 5 control point pairs in the pop-up window by roughly estimating and clicking on the position of the cell poles of the same five cells in both the single-molecule localization data and cell outlines, generated in the previous step. The position of the cell pole can be roughly estimated by mentally drawing a convex hull around the single-molecule localizations belonging to one cell and selecting the point of highest curvature (Supplementary Figure 4).\nGenerate a 2D affine transformation function using the cp2tform function in MATLAB and use it to generate a rough overlay of the cell outlines and the single-molecule localizations.\nDelete cells containing fewer than 10 localizations and remove cells that are positioned partially outside the field-of-view. Manually delete any additional unwanted cells in the pop-up window by clicking inside of their cell outline (Supplementary Figure 5).\nUse the center of mass for all remaining cell outlines and single-molecule localizations within them to form a larger set of control point pairs, re-compute the 2D transformation function, and use it to generate a final overlay of the cell outlines and the single-molecule localizations.\nAssign localizations that reside within the boundary of a cells outline to that cell. Discard any localizations not located within any cell outline (Figure 2a, Supplementary Figure 6).\n6. Single-molecule tracking\nNOTE: The following section is completed using custom-written software in MATLAB. This section describes the steps the software performs.",
    "For localizations assigned to the same cell and in subsequent camera frames, calculate the Euclidean distance between the localizations. If the distance between the localizations is below a threshold of 2.5 µm, link the localizations by assigning them to the same single-molecule trajectory.\n\tNOTE: It is important to only consider localizations within a single cell, so that localizations in adjacent cells that happen to meet the spatial and temporal threshold requirements are not linked. The 2.5 µm threshold was chosen as the maximum distance a very fast molecule (30 µm2/s) could travel in the length of the exposure time (0.025 s) plus a 20% buffer.\nDiscard trajectories shorter than 4 localizations. If two or more localizations (i.e., two or more fluorescing emitters) are simultaneously present in a cell, discard the associated trajectories. Setting the track length minimum to 4 localizations allows several distance measurements to be averaged yielding a more accurate estimate of the diffusion coefficients.\nCalculate the mean squared displacement (MSD) for a given trajectory by:\nimgsrc://cloudfront.jove.com/files/ftp_upload/59387/59387eq1.jpg (1)\n\twhere N is the total number of localizations in the trajectory and xn is the position of the molecule at time point n.\nCompute the apparent diffusion coefficient, D* by\nimgsrc://cloudfront.jove.com/files/ftp_upload/59387/59387eq2.jpg (2)\n\twhere m = 2 or 3 is the dimensionality of the measurement and Δt is the camera exposure time.\n\tNOTE: A typical experiment will produce ~5,000-100,000 trajectories in total, resulting in an apparent diffusion coefficient distribution with that many counts.\n7. Monte-Carlo simulation of Brownian motion in a confined volume",
    "NOTE: Create libraries of simulated apparent diffusion coefficient distributions by performing Monte Carlo simulations of Brownian motion confined to a cylindrical volume, using 64 values in the range of 0.05–20 µm2/s as input parameters (software available from the authors upon request). This range was chosen to cover the range of previously estimated diffusion coefficients of fluorescent (fusion) proteins in bacteria. 64 diffusion coefficients are used to sample this range sufficiently. This section is performed using custom-written software in MATLAB and describes the steps the software automatically takes. The rod-shaped Y. enterocolitica cells used here are approximated by a cylindrical volume of length l = 5 µm and diameter d = 0.8 µm.\nInitiate individual trajectories at a random position in the cylindrical volume, and simulate their random (i.e., Brownian) diffusion steps using a time interval of 100 ns (time interval should be much shorter than the camera exposure time to enable sufficient sampling of the position over the course of a camera frame). Sample each displacement step for an input D from the corresponding Gaussian distribution function by rearrangement of Eqn. 2 and add it to the previous position:\nimgsrc://cloudfront.jove.com/files/ftp_upload/59387/59387eq3.jpg (3)\n\twhere the randn function in MATLAB samples a random number from a normal distribution. If a step causes the molecule to be displaced outside of the volume of the cylinder, reflect the molecule back inside the cylinder at a random angle.\nFor each time interval, generate a DHPSF image that corresponds to the instantaneous x,y,z position of the simulated emitter.",
    "To match experimental conditions, simulate images containing 1,000 photons per localization, with a laser background of 13 photons per pixel, and Poisson noise. In addition, add dark offset of ~50 photons per pixel and Gaussian read noise (σ ~1.5 photons), consistent with experimental camera calibration measurements. Finally, multiply the image by the experimentally measured pixel-dependent gain of the sCMOS camera to obtain the image in units of detector counts.\n\t\tNOTE: After these manipulations, the signal-to-noise ratio of the final image is ~2.\nGenerate motion-blurred images that reflect the changing position of the molecules by summing 50 DHPSF images simulated during the exposure time used during experimental data acquisition. To limit computational expense, only 50 periodically sampled positions were chosen to generate an image (instead of all 250,000 positions sampled during a 0.025 s exposure time at a sampling interval of 100 ns).\n\t\tNOTE: The length (number of frames) of simulated trajectories should match the average length of experimental trajectories. In this case, the number of frames per trajectory is 6.\nGenerate 5,000 trajectories for each of the 64 simulated input diffusion coefficients.\nAnalyze simulated camera frames as described in the Data Processing section.\nLink localizations into trajectories as described in the Single-Molecule Tracking section.\nInterpolate the cumulative distribution function (CDF) for each simulated distribution using B-spline interpolation of order 25. Interpolated distributions are necessary so that they can be queried at arbitrary points.\nInterpolate the resulting B-spline curves along the D-axis (D is the true unconfined diffusion coefficient that governs the motion of the simulated emitters) using the scatteredInterpolant function in MATLAB (specify the ‘natural’ interpolation method). This provides a continuous 2D function from which any apparent diffusion coefficient distribution corresponding to a true diffusion coefficient value in the range of 0.05-20 µm2/s can be queried.",
    "8. Experimental apparent diffusion coefficient distribution fitting\nNOTE: Fit experimentally measured distributions of apparent diffusion coefficients using linear combinations of the simulated distributions generated in the previous section (Monte-Carlo simulation of Brownian motion in a confined volume). This section is performed using custom-written software in MATLAB and describes the steps the software automatically takes. For more information and examples of application, please see Rocha et al.29\nPerform a constrained linear least-squares fit (using the lsqlin function in MATLAB) of the experimental CDF using a periodically sampled array of simulated CDFs from the library created in section 7. The output of this step is a parameter vector containing the diffusion coefficients and population fractions of prevalent diffusive states in the experimental distribution.\nCombine diffusive states with diffusion coefficient values within 20% of each other into a single diffusive state by weight averaging based on relative population fraction. This is the starting parameter vector.\n\tNOTE: To reduce model complexity, the diffusive states with diffusion coefficients below 0.5 µm2/s can be held constant during all of the following steps.\nCreate arrays of trial fitting parameter vectors with different numbers of diffusive states, ranging from a single diffusive state to a user-defined maximum number of states.\n\t\nUsing the starting parameter vector, combine adjacent diffusive states through weighted averaging and split diffusive states into two states with equal population fractions and diffusion coefficients 20% above and below the original value. Repeat for all state combination and splitting possibilities.\nUse each trial fitting parameter vector to initialize a non-linear least square fitting of 5 separate subsets of the data (using the fmincon function in MATLAB). Determine the quality of the fit by finding the residual sum of squares between the fit and the distribution corresponding to the remaining subsets (data cross-validation).",
    "Use the average residual sum of squares of the 5 separate fittings for each trial vector as the overall quality of fit, determine the trial vector with the best quality of fit for each number of diffusive states.\nDetermine the optimal number of states by identifying the trial vector for which adding an additional state does not result in at least a 5% improvement in the quality of the fit.\nUse this trial vector to initialize the non-linear least squares fitting of the full data set.\nEstimate error for the individual parameters by resampling the data by bootstrapping and refitting with the same trial vector.\nSubscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Biochemistry"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics"
  ]
}