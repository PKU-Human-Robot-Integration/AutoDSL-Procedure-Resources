{
  "id": 1662,
  "origin_website": "Cell",
  "title": "Computational workflow for functional characterization of COVID-19 through secondary data analysis",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nStep 1: Obtain a consensus signature\nTiming: ∼5 min\nIn this step, a consensus transcriptomic signature will be obtained by combining DEGs from each individual study. Figure 1[href=https://www.wicell.org#fig1] shows the overall workflow of DE analysis and consensus signature identification steps.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1124-Fig1.jpg\nFigure 1. Differential expression analysis and generating a consensus transcriptomic signature\nFirst, raw transcriptomic data associated with each sample from the input studies are downloaded and processed to obtain raw transcript counts. These raw counts are then used in the differential expression step to identify the DEGs, independently within each input study. Finally, a consensus gene signature is generated from the individual gene sets (up- or down-regulated in at least 2 studies).\nUsing the individual DEG sets (see before you begin[href=https://www.wicell.org#before-you-begin]), the following R script can be used to filter and obtain the consensus signature:\nRscript GetConsensus.R\n  -–files “DE_results1.txt,DE_results2.txt”\n  --org_assemblies GRCh38.p13,GRCm39\n  --logFC 0.6 --pvalue 0.05 --k 2 --outpath 'outdir/’\nThe available command-line options include:\n--files: comma-separated list of result files from the differential expression analysis (see before you begin[href=https://www.wicell.org#before-you-begin]), one for each study.\n--org_assemblies (optional): comma-separated list of Ensembl assembly IDs, one for each study. Used to identify and map the human ortholog gene symbols for studies with non-human samples. Supported assembly IDs can be found at: https://uswest.ensembl.org/info/about/species.html[href=https://uswest.ensembl.org/info/about/species.html]. If not provided, all gene symbols are assumed to belong to the same organism.\n--logFC: log2fc threshold value for filtering significant DEGs (default value = 0.6)\n--pvalue: P-value (FDR corrected) threshold (default value = 0.05)\n--k: DEGs in k or more studies to be part of the consensus signature (default value = 2)\n--outpath: Path to the output directory where the consensus DEGs are written to.\nThe final conserved signature is saved in two separate files (upregulated and downregulated).",
    "Firstly, filter the significant DEGs in each individual study by applying a fold change and a p-value threshold. By default, a 1.5-fold change threshold (i.e., log2FC ≥ 0.6 or log2FC ≤ −0.6) and a p-value (FDR) threshold of <0.05 is applied. Users are free to choose a different threshold value of their choice.\nFor studies involving other organisms, the corresponding human orthologs of the filtered DEGs are obtained using the biomaRt (2.46.3) R package (Durinck et al., 2009[href=https://www.wicell.org#bib16]). Conversely, they can also be downloaded manually from NCBI Homologene (https://www.ncbi.nlm.nih.gov/homologene[href=https://www.ncbi.nlm.nih.gov/homologene]) database.\nNext, identify consensus transcriptomic signature containing genes that are up- or down-regulated in two or more studies. Alternatively, there are several well-established meta-analysis techniques that can be used for combining data from independent studies. Fisher’s method (combined probability test) (Fisher, 1925[href=https://www.wicell.org#bib19]) can be used to combine k independent statistical tests and their associated p-values to obtain one combined p-value. Similarly, Stouffer’s method and its variants (Stouffer et al., 1949[href=https://www.wicell.org#bib54]; Lipták, 1958[href=https://www.wicell.org#bib33]; Whitlock, 2005[href=https://www.wicell.org#bib61]; Zaykin, 2011[href=https://www.wicell.org#bib66]) use the inverse normal distribution to obtain a combined p-value while allowing different weights for the individual tests. But, due to the low sample counts involved in our SARS-CoV-2 specific studies, we use the above criteria for identifying the consensus DEGs.\nInput files required to identify and reproduce the consensus signature in SARS-CoV-2 can be found in the protocol GitHub repository at COVID19_secondary_analysis/input_data/[href=https://github.com/SudhirGhandikota/COVID19_secondary_analysis/tree/main/input_data]. From the three SARS-CoV-2 infection models (two in vitro and one in vivo), we observed a total of 1,467 genes (833 upregulated and 634 downregulated) that are differentially expressed in the same direction in two or more models.\nStep 2: Building consensus interactome and identifying protein modules\nTiming: ∼5–10 min",
    "In this step a consensus interactome will be built and analyzed to identify candidate protein modules. Figure 2[href=https://www.wicell.org#fig2] indicates the different steps involved in building the integrated interactome and protein module detection.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1124-Fig2.jpg\nFigure 2. Network clustering of consensus DEG-PPI interactome to identify modules of perturbed genes\nThe consensus transcriptomic signature is combined with curated human protein-protein interactions to build an integrated interactome. Markov clustering (MCL) is then applied on this combined interactome to identify gene/protein modules of potentially perturbed genes.\nThe consensus transcriptomic signature from step 1[href=https://www.wicell.org#sec2.1] is used for building a consensus interactome of DEGs. In our SARS-CoV-2 experiments, we combine the consensus transcriptomic signature with SARS-CoV-2-proteome interacting human proteins (Gordon et al., 2020[href=https://www.wicell.org#bib24]) to build a combined gene set.\nNext, significant human PPIs (Szklarczyk et al., 2019[href=https://www.wicell.org#bib56]) from within the combined gene set are identified to build an integrated DEG-PPI network. While there are other curated PPI resources like BioGRID (4.4.199) (Oughtred et al., 2021[href=https://www.wicell.org#bib42]), HuRI (Luck et al., 2020[href=https://www.wicell.org#bib35]) and PINA v1.0 (Wu et al., 2009[href=https://www.wicell.org#bib65]) available in the literature, we used STRING (v11) because of its extensive coverage and the ability to filter the interactions based on the source information (experimental, text-mining etc.,)\nThis can be achieved by manually uploading the list of proteins to https://string-db.org/[href=https://string-db.org/] and exporting all the PPIs using the Exports option (TSV) from the result screen. The resultant output file contains all edges among the uploaded proteins.\nHowever, the web-interface is not designed to handle more than 2000 proteins as input, in which case it is better to download the full PPI data and filter the interactions manually. We provide a script (described below) as part of this protocol which takes in the full set of PPIs and applies a filtering criterion of choice.",
    "The STRING-based human PPI network data is known to suffer from noise and incompleteness. To overcome these issues, only likely interactions (true positives) are used in this protocol by filtering the edges based on combined_score ≥ 0.9 (column 13) or experimental_score ≥ 0.7 (column 10). Users can select a different threshold to filter the final set of interactions.\nOur GitHub repository includes a filtered set of PPIs (https://github.com/SudhirGhandikota/COVID19_secondary_analysis/tree/main/input_data/other%20data/filtered_PPI.txt[href=https://github.com/SudhirGhandikota/COVID19_secondary_analysis/tree/main/input_data/other%20data/filtered_PPI.txt]) from STRING (v11) that we used in our SARS-CoV-2-specific analysis.\nEventually, network modules from this joint interactome are identified using the Markov clustering (MCL) algorithm (Enright et al., 2002[href=https://www.wicell.org#bib18]).\nTo do this, import the filtered interactome into the Cytoscape (Shannon et al., 2003[href=https://www.wicell.org#bib53]) visualization tool (3.8.0) and analyze it using MCL algorithm in the clusterMaker2 (Morris et al., 2011[href=https://www.wicell.org#bib39]) plugin. MCL works by simulating multiple random walks within the input network combined with alternative steps of inflation and expansion (Saelens et al., 2018[href=https://www.wicell.org#bib52]).\nThe inflation factor parameter of the MCL algorithm (https://micans.org/mcl/man/mcl.html[href=https://micans.org/mcl/man/mcl.html]) determines the tightness of the identified clusters. Increasing its value leads to higher granularity (smaller clusters) and vice-versa. The default inflation value of 2.5 is used in this protocol. Results from clustering analysis, including the membership information, can be downloaded directly from the Cytoscape tool.\nOptionally, we also provide an R Script which implements the MCL analysis step using the following syntax:\nRscript MCL_Clustering.R\n  --deg_file ‘../input_data/SARS-CoV2_DEGS/DEGs+PPI.txt’\n  --PPI_file ‘../input_data/other\\ data/filtered_PPI.txt’\n  --filter 'combined_score >= 900'\n  --inflation_value 2.5 --max_iter 100\n  --outpath ‘../input_data/other\\ data/’\nThe command-line parameters to the script include:\n--deg_file: A file containing the consensus DEGs and the virus-host interactome, if used (one gene per each line).",
    "--PPI_file: (Optional) A tab-delimited file containing the set of human PPIs. The latest version of STRING human PPIs can be downloaded from the following link https://string-db.org/cgi/download?species_text=Homo+sapiens[href=https://string-db.org/cgi/download?species_text=Homo+sapiens]. Conversely, interactions from other sources such as HuRI or BioGRID can also be provided (minus the --filter parameter). By default, the script uses the filtered STRING PPIs used in the protocol, which could be found at https://github.com/SudhirGhandikota/COVID19_secondary_analysis/tree/main/input_data/other%20data[href=https://github.com/SudhirGhandikota/COVID19_secondary_analysis/tree/main/input_data/other%20data] on the project GitHub page.\n--filter: A condition to filter the PPI links (STRING only) prior to running the clustering algorithm. In our protocol, we only retained the edges with a combined_score ≥ 0.9 or experimental_score ≥ 0.7.\n--inflation_value: Inflation parameter in MCL algorithm. It determines granularity of the identified clusters. High inflation values would result in increased granularity (smaller clusters) and vice-versa (default value = 2.5).\n--max_iter: Maximum number of iterations for the MCL algorithm (default value = 100).\n--outpath: Path to the output directory where the file containing the final MCL cluster memberships are written to.\nWhile there are several other clustering algorithms to choose from, MCL is ideal for identifying dense gene modules (Ghiassian et al., 2015[href=https://www.wicell.org#bib23]) with more intramodular (within the same module) interactions than intermodular (other modules). These modules have been found to reveal the functional effects from within the gene expression networks (Saelens et al., 2018[href=https://www.wicell.org#bib52]). Additionally, for unweighted PPI networks, the MCL procedure has been found to be robust and tolerant to any input noise (Vlasblom and Wodak, 2009[href=https://www.wicell.org#bib59]; Brohee and van Helden, 2006[href=https://www.wicell.org#bib8]).\nStep 3: Identify high-level feature complexes by constructing an enriched feature network\nTiming: 35–40 min",
    "As a precursor to this step, candidate modules from step 2[href=https://www.wicell.org#sec2.2] are filtered based on the number of genes within them and functional enrichment analyses is conducted to identify the enriched cell types, phenotypic traits, and functional terms. Using a selection criterion of >= 5 genes, a total of 35 candidate modules were identified from the integrated SARS-CoV-2 interactome map. The overall workflow of this step can be seen in Figure 3[href=https://www.wicell.org#fig3].\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1124-Fig3.jpg\nFigure 3. Joint analysis of enriched annotations from candidate gene modules to obtain feature complexes\nCandidate gene modules (>= 5 genes) are first tested for enrichments of functional features (biological processes and pathways), scRNA-seq markers and phenotype associations (from GWAS Catalog and PheGenI). An enriched feature network is then constructed using the enriched terms among all the candidate modules. Finally, a community detection methodology (Louvain method) is applied to identify functional complexes of enriched features.\nCompute functional enrichments of Gene Ontology-Biological processes, Reactome pathways and mouse phenotypes among the candidate gene modules coming out of the MCL algorithm. We used ToppCluster application (Kaimal et al., 2010[href=https://www.wicell.org#bib30]) (https://toppcluster.cchmc.org[href=https://toppcluster.cchmc.org/upload.jsp]) of the ToppGene suite (Chen et al., 2009[href=https://www.wicell.org#bib11]) in this protocol to compute the enrichments within each cluster.\nTop enriched terms from each category (for each module) are used towards building the feature network. While there are several enrichment analyses tools available (Chen et al., 2013[href=https://www.wicell.org#bib12]; Eden et al., 2009[href=https://www.wicell.org#bib17]; Ghandikota et al., 2018[href=https://www.wicell.org#bib21]; Jiao et al., 2012[href=https://www.wicell.org#bib29]; Mi et al., 2018[href=https://www.wicell.org#bib37]), ToppCluster allows us to simultaneously identify enriched terms from multiple gene lists representing the different clusters. Similarly, Metascape (Zhou et al., 2019[href=https://www.wicell.org#bib67]) is another useful tool that can be used to analyze multiple clusters and generate functional feature complexes from them. Further, researchers can select different sets of annotation categories and functional terms depending on the research questions.",
    "Next, evaluate the modules for enrichments of single-cell marker gene lists. For filtered SARS-CoV-2 gene modules we computed enrichment analysis against three different lung scRNA-seq studies (Adams et al., 2020[href=https://www.wicell.org#bib1]; Habermann et al., 2020[href=https://www.wicell.org#bib25]; Travaglini et al., 2020[href=https://www.wicell.org#bib57]). Using marker gene lists published in each of these studies, we identified all the enriched cell types (FDR p-value ≤ 0.05) within each candidate module. The RScript Marker_enrichments.R, present in the project GitHub page, can be used to perform the cell-type marker enrichments with the syntax shown below:\nRscript Marker_enrichments.R\n  --marker_file ../input_data/Lung_Markers/lung_markers_test.txt\n  --p_value 0.05 --logFC 0.5\n  --cluster_file ../input_data/SARS-CoV-2-Cons_MCL_Clusters.txt\n  --outpath outdir\n--marker_file: Text file containing the cell type marker genes. This file should contain 4 mandatory columns corresponding to the cell type (“cell”), gene marker (“gene”), fold change (“logFC”) and the adjusted p-value (“pval_adj”).\n--p_value and --logFC: The p-value (multiple-testing adjusted) and fold change thresholds to filter the marker genes.\n--cluster_file:A two column, tab-delimited file containing genes (column 1) and their corresponding MCL cluster memberships (column 2)\n--min_genes: Minimum number of genes needed to be in a candidate cluster (default value = 5).\n--outpath: Path to the output directory where the marker enrichment results need to be stored.\nThereafter, test the filtered gene modules for enrichments of phenotypic traits using compiled genotype-phenotype associations from the NCBI PheGenI (Ramos et al., 2014[href=https://www.wicell.org#bib45]) and the NHGRI-EBI GWAS Catalog (Buniello et al., 2019[href=https://www.wicell.org#bib10]) databases.\nIn case of GWAS Catalog associations, child terms for each trait are parsed from the experimental factor ontology (EFO) hierarchy (Malone et al., 2010[href=https://www.wicell.org#bib36]) and used in the enrichment step while the PheGenI traits are used as it is.\nWe provide a python script GWAS_enrichments.py which first parses the EFO tree to obtain the child terms for each GWAS Catalog trait and then computes their enrichments among the SARS-CoV-2-specific candidate modules.",
    "python GWAS_enrichments.py\n--obo_file ../input_data/other\\ data/efo.obo.txt\n--cluster_file ../input_data/SARS-CoV-2-Cons_MCL_Clusters.txt\n--assoc_file ../input_data/other\\ data/gwas_catalog_v1.0.2-\nassociations_e100_r2020-07-14.tsv --outpath outdir\nThe EFO open biomedical ontology (OBO) file (https://www.ebi.ac.uk/efo/efo.obo[href=https://www.ebi.ac.uk/efo/efo.obo]) and a tab separated file containing the GWAS Catalog associations (https://www.ebi.ac.uk/gwas/docs/file-downloads[href=https://www.ebi.ac.uk/gwas/docs/file-downloads]) used in our work are also included in the GitHub repository.\nSimilarly, we also include an R Script PheGenI_enrichments.R to compute enrichments among the PheGenI traits using the below syntax:\nRscript PheGenI_enrichments.R\n--assoc_file ../input_data/other\\data/PheGenI_Associations.txt\n--cluster_file ../input_data/SARS-CoV-2-Cons_MCL_Clusters.txt\n--remove_intergenic --p_value 0.00001 --outpath outdir\nBoth these scripts support the following set of command-line parameters:\n--obo_file (for GWAS script only): Path to the EFO OBO file (.txt) which can be found at https://www.ebi.ac.uk/efo/efo.obo[href=https://www.ebi.ac.uk/efo/efo.obo].\n--assoc_file: A Tab-delimited file containing phenotype-genotype associations from NCBI PheGenI (https://www.ncbi.nlm.nih.gov/gap/phegeni[href=https://www.ncbi.nlm.nih.gov/gap/phegeni]) or GWAS Catalog associations (https://www.ebi.ac.uk/gwas/docs/file-downloads[href=https://www.ebi.ac.uk/gwas/docs/file-downloads]).\n--cluster_file: A two column, tab-delimited file containing genes (column 1) and their corresponding MCL cluster memberships (column 2).\n--min_genes: Minimum number of genes needed to be in a candidate cluster (default value = 5).\n--p_value (for PheGenI associations only): To specify a p-value threshold for filtering associations (default value = 1e-05).\n--remove_intergenic: A Boolean flag to indicate the removal of intergenic associations. In our SARS-CoV-2-specific protocol, all intergenic associations from both PheGenI and GWAS Catalog were ignored.\n--outpath: Path to the output directory where the enrichment results need to be stored.",
    "Finally, construct a term-term network using the enriched features (pathways, biological processes, cell types, phenotypic traits) from the candidate gene modules. Only a subset of enriched functional terms (top ten GO-BP, pathways and mouse phenotypes based on negative log p-values) are considered to reduce the complexity and manage the density of the final feature network. This filtering step however is optional, especially if the candidate cluster counts and/or the enriched terms are smaller in number. Two feature nodes are connected by an edge if they share one or more of the module candidates.\nThis functional network is visualized and analyzed using Gephi (Bastian et al., 2009[href=https://www.wicell.org#bib4]), an open-source visualization tool (https://gephi.org[href=https://gephi.org/]). The input to the Gephi tool (version 0.9.2) is a tab-delimited file containing the source and destination enriched terms. Using the Louvain clustering (Blondel et al., 2008[href=https://www.wicell.org#bib6]) method, community membership modules are estimated from the enriched feature network.\nThese functional modules or higher-order functional complexes are hypothesized to be involved in similar biological mechanisms underlying a disease pathophysiology. Louvain clustering algorithm is selected for this step because it is computationally efficient and suitable for large, dense, and modular networks, commonly seen in feature networks such as this. Gephi provides a resolution parameter that maintains the balance between the module count and individual cluster tightness with lower values leading to smaller, more tightly connected clusters and vice-versa. With a resolution set to 0.25, we found 31 communities of highly connected functional terms from the SARS-CoV-2-specific feature network.\nThe identified gene modules (step 2[href=https://www.wicell.org#sec2.2]) and the higher-order feature-level complexes from this meta-analysis approach can be manually analyzed or curated for either knowledge extraction or to formulate testable hypotheses to understand or characterize a disease or phenotype."
  ],
  "subjectAreas": [
    "Genomics",
    "Rnaseq",
    "Immunology",
    "Bioinformatics",
    "Systems Biology",
    "Health Sciences",
    "Gene Expression",
    "Single Cell"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}