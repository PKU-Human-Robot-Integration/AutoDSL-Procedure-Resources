{
  "id": 1671,
  "origin_website": "Cell",
  "title": "VirMutSig: Discovery and assignment of viral mutational signatures from sequencing data",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nPart 1. Installation\nTiming: 15 min\nDownloading VirMutSig The installation of VirMutSig is done by downloading the GitHub repository in a local directory, which includes the VirMutSig scripts and the example files. After the installation, a new folder named VirMutSig will be generated. Please install VirMutSig by moving to your local directory and using GitHub with the following command in the terminal:\n>git clone https://github.com/BIMIB-DISCo/VirMutSig.git\nVirMutSig includes 4 directories with the following names:\n“preprocessing” This directory contains all the files and directories required to perform Part 2, such as:\nSRR_to_SNVlist.nf: the Nextflow pipeline file\nnextflow.config: the config file with the preprocessing settings and parameters\nreference: a directory with the SARS-CoV-2-ANC reference file\nbin: a directory with an R script used to create the SNVs list for Parts 3–4.\n“denovo” This directory contains the corresponding R script to perform the de novo discovery of mutational signatures (Part 3). The files included are:\ndenovo.R This script performs the discovery of viral mutational signatures from the list of selected SNVs taken as input, by employing a NMF approach described in the above section or in (Lal et al., 2021[href=https://www.wicell.org#bib16]). The user must also specify the number of contexts, i.e., the flanking bases to the genome positions. They may either be 6 or 96, please refer to (Lal et al., 2021[href=https://www.wicell.org#bib16]) for further details.\ndenovo_config.yaml This file contains the parameters explained above. It could be modified using any text editor.\ndenovo_utils.R This R file contains some functions used by the main denovo.R scripts.\nNote: please do not modify this file.\n“assignment” This directory contains the corresponding R script to perform the assignment of the activity of mutational signatures to each sample (Part 4). The files included are:",
    "assignment.R This script takes as input the signatures.txt file generated by the denovo.R script or provided by the user, and the list of SNVs to perform the assignment of the signatures to each sample. Bootstrap can be employed to assess the statistical confidence of the signature assignments.\nassignment_config.yaml This file contains the parameters explained above. It could be modified using any text editor.\nassignment_utils.R This R file contains some functions used by the main assignment.R scripts.\nNote: please do not modify this file.\n“example” This directory includes an example of the VirMutSig analysis performed on 150 FASTQ files obtained from samples of SARS-CoV-2 via RNA sequencing experiments.\nDownload docker image\nThe preprocessing pipeline executes all the steps using a Docker image in which all the requested software is already installed to avoid compatibility issues.\nDocker can be obtained following the instruction at this link: (https://www.docker.com/get-started[href=https://www.docker.com/get-started]).\nOnce the installation is completed, please get the protocol image called ‘dcblab/virmutsig_img’ by digiting the following command in a terminal:\n>docker pull dcblab/virmutsig_img:latest\nVerify docker image installation\nTo test if the image is correctly installed in your system, please execute the following code:\n>docker image ls\nwhich should display the following lines:\nREPOSITORY       TAG    IMAGE ID      CREATED    SIZE\ndcblab/virmutsig_img  latest    223f27c12b45    4 hours ago  1.56GB\nNote: in this case, it is possible to proceed to the next steps.\nPart 2. Data preprocessing pipeline\nTiming: 10 min download + 70 min pipeline execution for each sample (can be parallelized)\nThe data preprocessing pipeline included in the VirMutSig protocol is provided as a Nextflow pipeline file, named “SRR_to_SNVlist.nf” and included in the “preprocessing” folder of the GitHub repository: https://github.com/BIMIB-DISCo/VirMutSig[href=https://github.com/BIMIB-DISCo/VirMutSig].\nThe folder also includes a file named: “nextflow.config”, which must be opportunely modified according to the specific experimental settings (see below for the parameter description).",
    "The preprocessing pipeline includes the following processes (detailed in the following): data acquisition, trimming, alignment, remove duplicated reads (optional), get depth information, variant calling, and variant filtering.\nAs output, the preprocessing pipeline returns a file named: “SNV_list.txt” in which:\nrows correspond to all the single nucleotide variants (SNVs) detected in all the samples of the dataset\ncolumns correspond to: sample ID, variant ID, genome position, reference allele, alternative allele, reference three nucleotides (flanking bases), supporting reads, coverage, variant frequency (VF), and p-value (returned by the variant caller).\nTo run the preprocessing processes of the protocol, simply move to the “preprocessing” folder and execute the following command from the terminal:\n>nextflow run SRR_to_SNVlist.nf\nIn the following, we describe the preprocessing processes and the related settings in detail.\nData acquisition From now on, we will consider 'preprocessing' as a working directory from the one specified during the installation: ‘user_local_directory/VirMutSig/preprocessing' Input data can be either (i) downloaded from public repositories, or (ii) provided from local folders, if available.\nInput data acquisition from public repositories Input data can be downloaded from public repositories such as, e.g., the NCBI Sequence Read Archive (SRA) (https://www.ncbi.nlm.nih.gov/sra[href=https://www.ncbi.nlm.nih.gov/sra]). In this case, one can use the SRA Run Selector web interface (https://www.ncbi.nlm.nih.gov/Traces/study/[href=https://www.ncbi.nlm.nih.gov/Traces/study/]) to search for a dataset and download the “Accession List” by using the related button. The obtained list of SRR IDs (one per line) can be passed as input to download the files via SRA-toolkit, by editing the following parameter of the “nextflow.config”:\nparams.FASTQ_input = '../example/SRAlist_paired.txt'\nAlso in this case, the library preparation layout (single-end or paired-end) must be specified by editing the following parameter in “nextflow.config” file:\nparams.library_preparation = ‘paired’ // or ‘single’",
    "By default, the downloaded FASTQ files will be stored in the following path: '/intermediate/FASTQ' (relative to SRR_to_SNVlist.nf file). It possible to change the directory by editing the following parameter in in “nextflow.config” file:\nparams.FASTQdir = 'intermediate/FASTQ'\nInput data from local folders\nIn this case, the user must indicate the directory where the FASTQ files are located, editing the following parameter of the “nextflow.config”:\nparams.FASTQ_input = '/Path/To/Directory/'\nThe library preparation layout (single-end or paired-end) must be specified by editing the following parameter in “nextflow.config” file:\nparams.library_preparation = ‘paired’ //or ‘single’\nNotice that with the “paired” configuration two FASTQ files are expected for each sample, formatted as (sampleID_1.fastq.gz and sampleID_2.fastq.gz).\nConversely, with the “single” configuration one sampleID.fastq.gz file is expected for each sample.\nTrimming\nThis step aims at removing from the sequence the nucleotides with low sequencing quality. To perform this step, the Nextflow pipeline exploits the tool Trimmomatic (http://www.usadellab.org/cms/?page=trimmomatic[href=http://www.usadellab.org/cms/?page=trimmomatic]).\nTo tune the additional parameters used by Trimmomatic please edit the following parameter in “nextflow.config” file:\n  params.trimmomatic_setting = 'LEADING:20 TRAILING:20\nSLIDINGWINDOW:4:20 MINLEN:40'\nIn brief, LEADING and TRAILING parameters cut the bases that display a quality below a certain threshold, respectively at the start and the end of a read (20).\nThe SLIDINGWINDOW parameter sets the size of a sliding window (4 in our example) and deletes all the bases from the leftmost position of the window to the end of the read, when the average quality detected in the window drops below a given threshold (e.g., 20).\nFinally, the MINLEN parameter specifies the minimum length of a read to be kept (40 bases in our example). Please, refer to the Trimmomatic documentation for more details.\nAlignment Reads need to be aligned to a reference genome, which can be selected by the user, e.g.,\nSARS-CoV-2-ANC (Ramazzotti et al., 2021[href=https://www.wicell.org#bib20]),",
    "EPI_ISL_405839 / GeneBank ID: MN975262.1 (https://www.ncbi.nlm.nih.gov/nuccore/MN975262.1[href=https://www.ncbi.nlm.nih.gov/nuccore/MN975262.1]) (Bastola et al., 2020[href=https://www.wicell.org#bib4]),\nEPI_ISL_402125 / NCBI ID: NC_045512.2 (https://www.ncbi.nlm.nih.gov/nuccore/1798174254[href=https://www.ncbi.nlm.nih.gov/nuccore/1798174254]) (Andersen et al., 2020[href=https://www.wicell.org#bib2]).\nIn the subfolder “preprocessing/reference” of the GitHub repository, we provide the SARS-CoV-2-ANC genome in FASTA format.\nThe user can specify the reference genome file by editing following parameter in “nextflow.config” file:\nparams.fasta = 'reference/SARS-CoV-2-ANC.fasta'\nThe alignment is performed with BWA-MEM (https://github.com/lh3/bwa[href=https://github.com/lh3/bwa]), which generates a SAM file including the aligned reads. All the associated files used by the BWA aligner will be automatically generated and placed in the same reference genome folder.\nEach SAM file will be sorted and compressed into a BAM file with Samtools (http://www.htslib.org/[href=http://www.htslib.org/]).\nBy default, the BAM files will be stored in the following path: '/intermediate/BAM' (relative to SRR_to_SNVlist.nf file). It is possible to change the directory by editing the following parameter in in “nextflow.config” file:\nparams.BAMdir = 'intermediate/BAM'\nRemove duplicated reads (optional)\nOften, after obtaining an aligned BAM file, is useful to mark and remove duplicated reads to reduce the impact of the amplification bias, especially with RNA-seq experiments. Otherwise, when dealing with Amplicon data, several duplicated reads are expected and should not be removed. For this reason, we made this step optional.\nTo include or skip this step in the preprocessing pipeline, please set accordingly the following parameter in “nextflow.config” file:\nparams.remove_duplicates = “true” // or “false”\nNote: the tool used to perform this task is Picard (https://broadinstitute.github.io/picard/[href=https://broadinstitute.github.io/picard/]).\nGet depth information\nThe aim of this step is to obtain the depth information for each sample in every genome position (i.e., number of reads mapped on each position of the viral genome).\nTo perform this task, we used Samtools.",
    "By default, the coverage files will be stored in the following path: '/intermediate/COVERAGE’ (relative to SRR_to_SNVlist.nf file). It is possible to change the directory by editing the following parameter in in “nextflow.config” file:\nparams.COVERAGEdir = 'intermediate/COVERAGE'\nVariant calling\nVariants can be called comparing the aligned reads with the reference genome. To do so, we used Samtools (http://www.htslib.org/[href=http://www.htslib.org/]) and VarScan (http://varscan.sourceforge.net/[href=http://varscan.sourceforge.net/]). More in detail, we used the mpileup command included in Samtools which converts the BAM file into the pileup format required by VarScan.\nThen we used the VarScan pileup2snp for variant calling to produce a VCF file for each BAM file. The VarScan setting can be adjusted by editing the following parameter included in “nextflow.config” file.\nparams.varscan = '--min-var-freq 0.01 --p-value 1'\nNote: For more information, please refer to the VarScan documentation.\nBy default, the VCF files will be stored in the following path: '/intermediate/VCF’ (relative to SRR_to_SNVlist.nf file). It is possible to change the directory by editing the following parameter in in “nextflow.config” file:\nparams.VCFdir = 'intermediate/VCF'\nNote: We suggest performing the alignment step according to the manufacturer’s recommendations for all sequencing technologies.\nCritical: All the above steps can be performed also by applying different pipelines for variant calling, such as the one proposed in [https://github.com/andersen-lab/ivar[href=https://github.com/andersen-lab/ivar]], which was specifically designed for handling viral amplicon data obtained via the artic protocol.\nVariant filtering\nIn order to reduce the impact of noise in the data (due, e.g., to sequencing issues), we adopted multiple quality control (QC) filters to select only the reliable SNVs. The last step of the preprocessing pipeline applies different filtering criteria on the detected SNVs. The following parameters determine the filtering threshold, and they can be set by changing the corresponding numeric value included into a string assigned to VirMutSig_QCfilter parameter present in the “nextflow.config” file.",
    "params.SNV_filters = 'PV_THR:0.01 VAR_FREQ_THR:0.05 MIN_COV:20 ALT_READ_THR:3'\np-value on variant calling significance (PV_THR). The filter removes all the variants called with a significance p-value larger than a given threshold (default = 0.01).\nFrequency threshold (VAR_FREQ_THR). The filter keeps only variants observed in the data with a variant frequency that exceed the specified threshold (default = 0.05).\nMinimum coverage (MIN_COV). The filter keeps only variants with the specified minimum coverage (default = 20).\nMinimum alternative read count (ALT_READ_THR). The filter keeps only variants with a minimum number of reads showing the alternative allele equal to the given threshold. (default = 3)\nNote: Indels are not considered in the analysis.\nBy default, the SNV_list.txt file will be stored in the 'example’ directory. It is possible to change the directory by editing the following parameter in in “nextflow.config” file:\nparams.SNVlistdir = '../example\nThis step uses a R script included in the “preprocessing/bin” directory of the GitHub repository named makeSNVlist.R[href=https://github.com/BIMIB-DISCo/VirMutSig/blob/main/preprocessing/bin/makeVirMutSigInput.R]. It takes as input different arguments with the following fixed order:\nA string with the path of the directory containing the VCF files generated by the variant caller.\nA string with the path of the directory containing the depth files generated by step 8. Such files must end with '.depth.txt'.\nReference file in fasta format. (e.g., SARS-CoV-2-ANC.fasta)\nNote: If another pipeline has been used to perform variant calling, the R script can be used to aggregate the vcf files into a SNV list. Instead, if VirMutSig preprocessing steps have been used, the script is automatically executed via Nextflow.\nCritical: Parameters must be set according to the specific features of the datasets (see, e.g., the guidelines proposed on the website: https://virological.org/[href=https://virological.org/]).\nFurther information",
    "The Trimming and Alignment step require greater computational resources than the other processes. For this reason, it is possible to specify the maximum number of cores to be used, by changing the cpus value in the following setting of the “nextflow.config” file:\nprocess {\n      withName: 'Trimming_single' {cpus = 4}\n      withName: 'Trimming_paired' {cpus = 4}\n      withName: 'Alignment_and_sorting_single' {cpus = 8}\n      withName: 'Alignment_and_sorting_paired' {cpus = 8}\n      }\nAn increase of the cpus number assigned to the processes reduces the computational time required to trim and align the reads, but it also reduces the number of samples that can be analyzed in parallel. For these reasons, one should select a proper value based on the available computational resources and number of samples.\nAll parameters (“params.”) can be specified by overriding when the pipeline is launched. To do so, please specify the corresponding parameter name (the string following “params.”) and specify the opportune argument of the Nextflow command.\nIn the example, the SRR list file path and the output directory path of the SNVs list file will be specified without editing the “nextflow.config” file.\n>nextflow run SRR_to_SNVlist.nf \\\n--FASTQ_input ‘SRRfile/custom/path’ \\\n--SNVlistdir ‘SNVlist/output/path’\nFor a summary of the settings and processes executed with the example configuration please see Figure 1[href=https://www.wicell.org#fig1].\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1132-Fig1.jpg\nFigure 1. Summary of the settings and processes executed with the example configuration\nWe analyzed 150 samples with a paired-end library layout, downloaded from the SRA database. The related processes are automatically executed via Nextflow.\nPart 3. De novo discovery of mutational signatures (denovo.R)\nTiming: ∼20 min (approximate time required to perform the step on a dataset with ∼100 samples and ∼10,000 mutations, with a significant variability related to the signature rank range)\nInput files and setup The denovo.R script requires two input files to be executed.",
    "List of selected SNVs [SNV_list.txt] This file is generated following the preprocessing step. It is a semicolon-separated file with a SNV for each line. It includes (at least) the following column headers:\nSampleId: The ID of the sample.\nPosition: The genome position.\nReference: the reference allele (A, T, C, G).\nAlternative: the alternative allele (A, T, C, G).\nVariantCount: the number of the reads including the alternative allele.\nTotalCount: the total number of reads covering the genome position. For the 96-contexts analysis (see below) the following column is also required:\nReferenceTrinucleotide: the triplet with the reference bases before and after the variant position (e.g., ATC where T is the reference). Please see the file SNV_list.txt contained in the “/example” directory for an example of input formatting (see Table 1[href=https://www.wicell.org#tbl1]).\ntable:files/protocols_protocol_1132_2.csv\nConfiguration file [denovo_config.yaml] The parameters to run denovo.R are set in a text file called as default ‘denovo_config.yaml’. The file must contain a parameter in each line formatted as:\nPARAMETER NAMES: value\nThe parameters that can be modified are the following: [variant selection]\nCLONAL_SNV_THR: Double [0,1]. default = 0.9. This parameter defines the variant frequency threshold that determines whether a given variant is clonal.",
    "MINOR_SNV_SEL: String {‘always’, ‘all’}. default = ‘always’. To reduce the bias induced by mutations transmitted and inherited in the population during the epidemic spread, for the signature analysis we select and employ only the SNVs that are never observed with a frequency higher than CLONAL_SNV_THR in any sample. The selected SNVs are defined as ‘always minor’. This parameter together with the parameter CLONAL_SNV_THR are critical as they determine the variants that are selected for the signatures analysis; the default parameters that we suggest here (i.e., CLONAL_SNV_THR = 0.90 and MINOR_SNV_SEL =\"always\") are very conservative and they should be determined based on the aim of the study. For further details, please refer to (Ramazzotti et al., 2021[href=https://www.wicell.org#bib20]).\nMAX_SNV_SAMPLE: Integer [1, Inf]. default = 100. In order to reduce the impact of highly mutated samples, likely due to degradation of their biological isolation, we suggest removing the samples exhibiting more than a user selected number of variants.\nMIN_SNV_SAMPLE: Integer [1, Inf]. default = 6. To assess the existence of statistically significant mutational signatures, we remove all the samples with number of detected SNVs lower than this value. [analysis parameters]\nNUM_CONTEXTS: Integer {6, 96}. default = 6. This parameter specifies the number of different nucleotide substitution types (based on the flanking bases) that are considered. 6 indicates that no flanking bases are considered. In this case, the possible substitution types are: C>A (or G>T), C>G (or G>C), C>T (or G>A), T>A (or A>T), T>C (or A>G), T>G (or A>C). 96 indicates that the two flanking bases are considered. In this case, the possible substitution types include, e.g.,: ACA>AAA (or AGA>ATA), ACG>AAG (or AGG>ATG), ATA>ACA (or AAA>AGA), etc. For further details, please refer to (Lal et al., 2021[href=https://www.wicell.org#bib16]).",
    "MIN_NUM_SIG: Integer [1, NUM_CONTEXTS]. default = 1. This parameter sets the lower bound of the range for the number of distinct signatures to be searched.\nMAX_NUM_SIG: Integer [MIN_NUM_SIG, NUM_CONTEXTS]. default = 6 This parameter sets the upper bound of the range for the number of distinct signatures to be searched.\nNMF_ITER: Integer [1, inf]. default = 100. This parameter sets the number of Negative Matrix Factorization iterations performed during the inference of A and B matrices\nSEED: Integer [0, Inf]. default = 0 (with 0 the seed will be randomly set). This parameter initializes the random number generator. It is used to obtain reproducible results by keeping the same SEED.\nN_CORE: Integer [0, Inf]. default = 0 (with 0 the number of cores available will automatically be detected). This parameter indicates the maximum number of computational units (cpus) available for the inference.\nCritical: MAX_NUM_SIG and MIN_SNV_SAMPLE must be set accordingly with the NUM_CONTEXTS parameter. To obtain robust results, we suggest setting the former equal to half the number of contexts (i.e., 3 or 48) and the latter larger than the number of contexts.\nRun denovo.R\ndenovo.R can be run with the following command:\n>Rscript denovo.R \\\n--SNV_list path/to/SNV_list.txt \\\n--config_file path/to/denovo_config.txt \\\n--output_dir path/to/output/dir\nThe script will generate in the output directory (specified by the user) the following three subdirectories:\n“Signatures”: This directory will contain a file for each number of searched signatures named ‘x_signatures.txt’. Each file will be formatted as a table with the context as header and a row for each signature.\n“Graphical”: This directory will contain the graphical representation of each signature set found in the data.\n“Rank”: This directory will contain a set of files to determine the optimal number of signatures.",
    "Unfortunately, no automated procedures are available to find the correct number of signatures, so we here provide a set of metrics to determine it. The denovo.R script provides four metrics as output and the relative plots:\nexplained variance (Hutchins et al., 2008[href=https://www.wicell.org#bib13])\ncophenetic coefficient (Brunet et al., 2004[href=https://www.wicell.org#bib5]),\ndispersion coefficient (Kim and Park, 2007[href=https://www.wicell.org#bib15]),\nsilhouette consensus coefficient.\nThe four metrics are shown in Figure 2[href=https://www.wicell.org#fig2] and Table 2[href=https://www.wicell.org#tbl2].\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1132-Fig2.jpg\nFigure 2. Metrics to evaluate the best number of signatures\n(A) shows the explained variance at different ranks; in this case we observed a bend at 3.\n(B–D) show stability-based coefficients which report the consistency of NMF solutions across multiple iterations.\ntable:files/protocols_protocol_1132_3.csv\nThe first one measures how good is the fit of each given number of signatures, considering the observed mutational profiles. This metric is useful to estimate when the number of signatures is too high (i.e., overfitting). To this end, we suggest choosing the optimal number of signatures based on the bend rule that selects the number of signatures corresponding to the elbow in the explained variant plot (see the example in Figure 2[href=https://www.wicell.org#fig2]A).\nOften there is uncertainty to select a unique elbow point on the plot, so the latter three metrics can be used as additional evaluation of the optimal rank. Roughly, they provide a measure of stability of the NMF solutions over multiple runs (NMF_ITER parameter). These coefficients range from 0 to 1 and higher values indicate higher consistency among NMF solutions.\nConsidering all the above, our suggestion is to select one or few elbow points and among them select the one corresponding to higher cophenetic, dispersion, or silhouette coefficient. If still there is ambiguity it is reasonable to take the lower one.",
    "Considering the example, and the metrics shown in Figure 2[href=https://www.wicell.org#fig2], we conservatively selected 3 as the optimal number of signatures, as at this rank we have a first bend in the explained variance and high values of the other metrics.\nNote: Please get from the ‘Signatures’ directory the corresponding file that should be then used in the following assignment step.\nNote: Each signature file contains a different number of signatures (identified with SIG_NUM) found in the data. In the ‘graphical’ directory, denovo.R generates pdf files with the same name as the corresponding signatures set. Those files contain a plot of the categorical distributions.\nPart 4. Assignment of existing mutational signatures (assignment.R)\nTiming: 15 min (approximate time required to perform the step on a dataset with ∼100 samples and ∼10 , 000 mutations, with significant variability related to bootstrap iterations)\nInput files and setup The assignment.R script requires three input files to be executed.\nList of selected SNVs [SNV_list.txt] This file is the same used in Part 3, please see above.\nSignatures file [x_signatures.txt] This file contains for each signature the frequency of substitutions. Their values are grouped by context and normalized up to 1. The file must be formatted as a table with the context as header and a row for each signature. The header must be formatted as: G>T:C>A;G>C:C>G;G>A:C>T;A>T:T>A;A>G:T>C;A>C:T>G. Notice that, for instance, variants from G to T and C to A are aggregated together in the cases of 6-context. For further details, especially for the 96-contexts representation, please refer to (Alexandrov et al., 2013[href=https://www.wicell.org#bib1]). This file can be generated via Part 3 or can be directly passed by the user.",
    "Configuration file [assignment_config.yaml] The parameters to run assignment.R are set in a text file called as default ‘assignment_config.txt’. The file must contain a parameter in each line formatted as PARAMETER_NAMES: value The parameters that can be modified are the following: [variant selection]\nCLONAL_SNV_THR: Double [0,1]. default = 0.9. This parameter defines whether a given SNV is considered as clonal (default = 0.9).\nMINOR_SNV_SEL: String {‘always’, ‘all’}. default = ‘always’. To reduce the bias induced by the mutation transmitted and inherited among the population during the epidemic spread we select for the signature analysis only SNVs never observed with a frequency higher than CLONAL_SNV_THR in any sample. The remaining SNVs are defined as ‘always minor’. For further details, please refer to (Graudenzi et al., 2021[href=https://www.wicell.org#bib11]).\nMAX_SNV_SAMPLE: Integer [1, Inf]. default = 100. In order to reduce the impact of highly mutated samples likely due to degradation of their biological isolation. We suggest removing the samples exhibiting more than a user selected number of variants.\nMIN_SNV_SAMPLE: Integer [1, Inf]. default = 6. In order to assess the existence of statistically significant mutational signatures we have to remove all the samples with less than a given number of detected SNVs. [analysis parameters]\nBOOTSTRAP: String {‘yes’, ‘no’}. default = ‘yes’.\nGOODNESS_FIT_THR: Double [0.5,1]. default = 0.95. This threshold indicates the minimum level of goodness of fit until when keep adding signatures (among the signatures.txt file) to the fit, in a given sample. The goodness of fit is measured with the cosine similarity between observed and predicted counts in each sample.\nMIN_SIG_FREQ: Double [0,1]. default = 0.05. Each signature is considered to be present in a given sample if its activity (alpha value) is greater than the value of this parameter.",
    "P_VALUE: threshold to be used when assessing significance of the exposure of samples to signatures. To this extent, Mann–Whitney U test is performed whose results are evaluated with the given P_VALUE threshold. default = 0.05\nNUM_ITER: Integer [1, Inf]. default = 100\nSEED: Integer [0, Inf]. default = 0 (with 0 the seed will be set randomly)\nN_CORE: Integer [0, Inf]. default = 0 (with 0 the number of core available will automatically detected)\nCritical: We suggest setting the parameters in accordance with the number of contexts. Similar to Part 3 MIN_SNV_SAMPLE should be larger than the number of contexts to provide reasonable results.\nRun assignment.R\nassignment.R can be run by the following command:\n>Rscript assignment.R \\\n--SNV_list path_to_SNV_list.txt \\\n--signature path_to_signature_x.txt \\\n--config_file path_to_assignment_config.txt \\\n--output_file path_to_output_file\nThe script will generate a table in a text file specified by the user (default: assignment_result.txt). This table will have a row for each selected sample and one column for each signature, called “Sn_exposure”. This column reports the alpha values of each signature found in each sample (i.e., a numeric value measuring the level of activity of the signature in that sample).\nIf the bootstrap procedure is performed, another column for each signature is added into file. This column, called ‘Sn_pvalue’, shows the p-value of significance of observing each signature in a given sample obtained with the harmonic mean of the one-sided (greater) Mann–Whitney U-test."
  ],
  "subjectAreas": [
    "Genomics",
    "Rnaseq",
    "Sequence Analysis",
    "Bioinformatics",
    "Systems Biology",
    "Sequencing"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}