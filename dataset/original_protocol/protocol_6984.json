{
  "id": 7357,
  "origin_website": "Bio",
  "title": "Protocol for RNA-seq Expression Analysis in Yeast",
  "procedures": [
    "Sample preparation and RNA extraction It is of utmost importance when handling RNA that all materials and reagents are RNase-free. Furthermore, it must be noted that the computation of relative expression values described in Procedure D requires at least three biological replicates. Accordingly, for example, if the expression levels of a mutant strain are to be compared with a wild-type strain, six RNA samples need to be prepared (three for each strain), which can then be used to create six RNA-seq libraries.Here, an efficient and reliable method to extract RNA despite the robust yeast cell wall is described (Collart et al., 2001):With a sterile toothpick or pipette tip, pick single colonies of S. cerevisiae and inoculate 2 ml YEPD liquid media for growth at 30°C overnight.Inoculate 10 ml liquid YEPD with 50 μl overnight culture.Harvest the cells in the mid-log phase (OD600 ~1.0) by centrifugation, and transfer to a 1.5-ml Eppendorf tube. Resuspend in 300 μl DEPC-ddH2O, fast-spin in a table-top centrifuge (up to 9,500 × g), remove the supernatant, flash-freeze on dry ice, and store at -80°C.Resuspend the cell pellet in 400 µl TES solution. Add 400 µl acid phenol (CHCl3), cap the tube, and vortex vigorously for 10 s (avoid leakage and handle carefully!). Incubate for 60 min at 65°C, vortexing every 15 min (Collart and Oliviero, 2001).Place on ice for 5 min. Spin in a microfuge at 18,000 × g for 10 min at 4°C. Transfer the aqueous top layer to a clean tube (avoiding the white protein phase). Add 400 µl CHCl3 and vortex vigorously for 10 s. Spin in a microfuge at 18,000 × g for 10 min at 4°C. Transfer the aqueous top layer to a clean tube (pipette carefully and avoid the CHCl3 layer).",
    "Add a 1/10 volume of 3 M NaAc, pH 5.2, and 2.5 volumes EtOH (-20°C). Precipitate at -80°C for at least 60 min. Spin in a microfuge at 18,000 × g for 10 min at 4°C. Carefully remove the supernatant and wash the pellet by vortexing in 70% EtOH (-20°C). Spin in a microfuge at 18,000 × g for 10 min at 4°C.Resuspend the pellet in 100% formamide (at 4°C). Try an equal volume of liquid to pellet first, and move up from there. Most RNA should dissolve instantly. To aid solubilization, allow to sit at room temperature for 15 min, pipetting every 5 min. If the sample needs to be very concentrated, store at 4°C overnight.Determine the concentration by diluting 1/100 in H2O and measuring at OD260/280 (OD260 1 ≈ 40 µg/ml for RNA). Remember to add formamide at a 1/100 dilution to the blank.RNA-seq library generation and sequencing Before sample preparation and submission to a sequencing facility, it is strongly recommended to discuss the aims of the project with the trained personnel. For successful library generation, the input RNA concentration is critical, commonly ranging from 1 μg down to 10 ng per sample. While it is possible to generate RNA-seq libraries from scratch (i.e., producing adaptors, buffers, polymerase, etc., using your own materials), it is strongly recommended to use commercially available kits that require minimum common lab resources and are, most importantly, more reliable in the hands of researchers unfamiliar with RNA-seq library formation.  During RNA-seq library generation, platform-specific adapters are attached to the extracted RNA molecules; therefore, the library kit must be chosen according to the sequencing platform to be used. Here, the QuantSeq 3’ mRNA-seq Library Prep Kit FWD for Illumina (Lexogen) was used for the generation of single-end (i.e.",
    ", fragments will be sequenced from one end only), 50-bp reads, sufficient for RNA-seq expression analysis in yeast. For more complex eukaryotic genomes containing larger amounts of introns, and when longer reads are required, consider paired-end library kits and sequencing (i.e., fragments will be sequenced from both ends), after consultation with the sequencing facility staff.Generate cDNA libraries containing sequencer- and sample-specific adapters by carefully following the steps described in the manufacturer’s manual.Check the quality of the generated libraries and measure the cDNA concentration.Sequence the cDNA library. Here, an Illumina HiSeq 4000 sequencer was used.Check the quality of the raw read data, typically supplied in fastq format (Figure 1). The most common checks involve the number of reads per sample (should be the same order of magnitude for all sequenced samples, which means the files should be similar in size), the GC content (should match the overall GC content of the host organism), and the overall base quality. Several quality control tools exist; here, fastqc was used (see also Batut, 2021). It is strongly recommended that quality control is performed after each processing step to ensure the overall integrity of the data.imgsrc:https://en-cdn.bio-protocol.org/attached/image/e4161/bioprotoc-11-18-4161-g001.jpgFigure 1. An example read sequenced on an Illumina platform in FASTQ format. Line 1 contains the basic read information, line 2 contains the actual sequence, and line 4 contains the quality score for each base in Phred33 or Phred64 code.Processing of raw sequence data C1. Preparation of data processing The following steps describe the setup for the computational workflow described in Step C2, as well as the data analysis described in Procedure D. This workflow uses open source programs available on Linux operating systems (and its derivatives).",
    "While it is possible to process sequence files on Mac- or Windows-operated instruments, the reader is strongly recommended to use Linux-based utilities due to their wide applicability, timely updates, and community-based troubleshooting.  For most of the processing steps described in Step C2 and D, multiple tools exist; in particular, for the acquisition of genome assembly and gene annotations (15), creation of index files (16), adapter trimming (17), read alignment (18), and read filtering based on quality (19). While it extends beyond the scope of this manuscript to describe all the tools in detail, alternatives to the programs used in this protocol are suggested.  Several of the tools used here are available through so-called package managers, such as Bioconda or Biocmanager, allowing for easy installation of software and dependencies of most recent versions; hence, it is recommended to follow the installation order described here.Install the Conda package manager via gitHub and R, bowtie2, and samtools using the specific channel, Bioconda.curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh[href=https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh] sh Miniconda3-latest-Linux-x86_64.sh conda install -c bioconda R conda install -c bioconda bowtie2 conda install -c bioconda samtools Install Biocmanager and the DESeq2-package from within R.R if (!requireNamespace(“BiocManager”, quietly = TRUE)) install.packages(“BiocManager”) BiocManager::install() BiocManager::install(c(“DESeq2”)) C2. Processing of raw sequence read files After passing quality checks, the sequence reads now undergo pre-processing and eventually, alignment to the genome of the host organism. First, genome assembly, gene annotation, and the genome index need to be prepared (C2.1 and C2.2). The sequence reads contain adapter contamination, random primer sequences, and low-quality tail reads, which need to be removed (C2.3) before the alignment of filtered reads to the genome of the host organism (C2.4). Finally, reads are filtered based on their quality score (C2.5) and indexed for downstream analysis (C2.6).Download the S. cerevisiae genome assembly and gene annotation. Here, UCSC versions, sacCer3.",
    "fa and sacCer3.ensGene.gtf, were used, respectively (downloaded from http://hgdownload.cse.ucsc.edu/goldenPath/sacCer3/bigZips/[href=http://hgdownload.cse.ucsc.edu/goldenPath/sacCer3/bigZips/]). Besides the UCSC genome browser, other platforms allow the download of genome assemblies and gene annotations (e.g., NIH/NCBI or Ensembl). Since every platform maintains a slightly different naming convention, it is important that genome assembly and gene annotation are acquired from the same platform to avoid program errors during processing.Create the index files based on the genome assembly (“sacCer3.fa”) from Step C2.1. Here, the index output files are stored with the base filename “sacCer3.” This index will be used by the alignment program in Step C2.4; hence, the indexing step must be adapted to the aligner of choice, and an example for bwa is given below. Caution: bwa is not a splice-aware alignment tool. If splice events need to be considered during analysis, aligners like tophat need to be used for index creation as well as alignment (Step C2.4).bwa index sacCer3.fa Remove the random primer sequence, adapter contamination, and low-quality tails. Here, bbmap was used for the library kit described in Step B1, according to the manufacturer’s recommended settings (see command below, from www.lexogen.com/quantseq-data-analysis[href=http://www.lexogen.com/quantseq-data-analysis]). bbmap is a fast, splice-aware global alignment tool for RNA and DNA sequencing reads. The script “bbduk.sh” is used together with the polyA-tail sequence (polyA.fa.gz) and Illumina-specific adapter sequence information (truseq.fa.gz), located in the installation folder bbmap/resources/).Adapter sequences and low-quality reads can also be removed using different tools such as “trimmomatic” (see the software section). Independent of the software used, parameters need to be adjusted according to the library kit and sequencing platform used. As a result of trimming, the size of the output file should be slightly smaller than that of the input file.bbmap/bbduk.sh in=sample1.fastq out=sample1_trimmed.fastq ref=bbmap/resources/polyA.fa.gz,bbmap/resources/truseq.fa.",
    "gz k=13 ktrim=r forcetrimleft=11 useshortkmers=t mink=5 qtrim=t trimq=10 minlength=20; done Create alignments of the pre-processed sequence reads from Step C1.1 using an alignment tool, such as tophat, bbmap, bowtie2, or bwa. Here, bwa was used. Depending on the sequence file size (i.e., the number of reads), genome size, and CPU used, this step can take several minutes to several hours. On an Intel® Zeon® CPU E5-2699 v3 @ 2.3GHz, alignment took about 3 s per 100 k reads.The following command will align the input file reads (sample1_trimmed.fastq) to the genome index from Step C2.2 (sacCer3) and write the results to “sample1_trimmed_aligned.sam.”bwa mem sacCer3.fa sample1_trimmed.fastq > sample1_trimmed_aligned.sam Filter the data based on their quality by MAPQ filtering using samtools. Here, all reads with an average base read quality score less than 50 (i.e., the probability of correct mapping is > 99.999%, Figure 1) were removed from the mapped read files generated in Step C2.4. As a result of the quality filtering, the output file size will be smaller than the input file size. If no, or very few, reads remain, try filtering with a less stringent quality score (e.g., 20). If this recovers the number of reads, downstream analysis may still be possible, albeit less reliable.samtools view -bq 50 sample1_trimmed_aligned.sam > sample1_trimmed_aligned_mapq50.bam Sort the filtered, aligned reads from Step C2.5 and create the index files using samtools. This will create an index file with the same name as the input file, including the additional ending of “.bai.”Aside from the quality check of the output file using tools such as fastqc, the mapped reads can be visualized using the Integrated Genomic Browser (IGV). In addition to ensuring that the overall mapping of reads is correct, tools like IGV allow confirmation of the presence of intended genomic mutations or gene deletions (Figure 2).",
    "samtools sort sample1_trimmed_aligned_mapq50.bam -o sample1_trimmed_aligned_mapq50_sorted.bam samtools index sample1_trimmed_aligned_mapq50_sorted.bam imgsrc:https://en-cdn.bio-protocol.org/attached/image/e4161/bioprotoc-11-18-4161-g002.jpgFigure 2. Snapshot of the IGV browser visualization. Here, reads (grey bars) mapping to the genomic region of Set2 (blue, YJL168C) in yeast are compared between wild type (upper lane) and the ∆Set2 mutant (lower lane).Data analysis, calculation of expression values, and visualization of results The sorted and indexed files prepared in C) contain all the reads that were successfully aligned to the host’s genome (here, S. cerevisiae), numbering typically from several hundreds of thousands to millions of reads per replicate. This vast amount of information is a major hurdle for analysis by the researcher. Differential gene expression (DGE) analysis aims to determine which, if any, genes show a higher or lower amount of aligned reads across the tested conditions. To this end, reads belonging to a feature (i.e., a gene) are summed for each replicate, and differential expression values are calculated across conditions considering the variance within a condition among replicates; hence, it is critical for DGE that several replicates of the same condition are considered (typically, n = 3). Gene expression values are usually reported as log2-fold changes, in conjunction with adjusted P-values describing the significance of the change (cut-offs vary, but typically P-values < 0.05 are considered reliable).  The number of aligned reads can differ strongly between replicates due to technical reasons (e.g., fluctuations in the amount of input RNA, variations in temperature of the thermocycler during library amplification, or differences in the binding capacity of the flowcell lanes); hence, reads must be normalized across replicates and conditions.",
    "Several normalization methods for the calculation of DGE values exist, such as Reads Per Kilobase of transcript per Million mapped reads (FPKM), Fragments Per Kilobase of transcript per Million mapped reads (RPKM), Transcripts per Million reads (TPM), or counts per feature (i.e., gene) (Dillies et al., 2013).  Here, the count-based normalization by DESeq2 was used, based on the assumption that most genes are not differentially expressed across conditions; therefore, the counts per feature are extracted from each file generated in Step C2.6 using htseq (Step D1), combined, and indexed (Steps D2 and D3). Finally, the counts are normalized, and DGE values are calculated using DESeq2 (Steps D4 and D5). The results are visually represented using MA plots, where log-fold changes are plotted against the mean expression values (Step D5).Extract the counts for each sample using htseq-count. Here, the aligned, filtered, and sorted reads (e.g., sample1_trimmed_aligned_mapq50_sorted.bam) from Step C2.6 and the gene annotation file (sacCer3.ensGene.gtf) from Step C2.1 were used. This command generates a .txt file containing the number of reads assigned to each gene annotated in the gtf-file.htseq-count -f bam sample1_trimmed_aligned_mapq50_sorted.bam sacCer3.ensGene.gtf > sample1_trimmed_aligned_mapq50_sorted_counts.txt Count-based expression values are calculated using R and Dseq2; this requires the count data to be assembled in a text document (here, “counts.txt”) as well as in an index file (here, “table.txt,” Step D3).Generate a “counts.txt”-file that contains the counts for each replicate of a given sample (here, MUT_X) as well as the reference sample (here, WT_X) generated in Step D1 as columns in a tab-delimited txt document (Figure 3). As a quality check, it is recommended to check several lines (i.e., genes) for consistency (i.e., similar read counts among replicates of a certain condition).",
    "Importantly, the read counts are not yet normalized to the total number of read counts in each sample, and respective variations are expected.imgsrc:https://en-cdn.bio-protocol.org/attached/image/e4161/bioprotoc-11-18-4161-g003.jpgFigure 3. Example of a counts.txt-file in tab-delimited format. The first column designates the names of open reading frames (ORFs), and the first row indicates the names of the wild-type and mutant replicates. The numerical matrix contains the number of reads mapped in each replicate to the respective ORF.Generate a “table.txt”-file for each sample, indexing each column of data (Figure 4) in tab-delimited format.imgsrc:https://en-cdn.bio-protocol.org/attached/image/e4161/bioprotoc-11-18-4161-g004.jpgFigure 4. Example of a table.txt-file in tab-delimited format. Replicate names, as designated in counts.txt from Step D3, are indexed by their common condition (e.g., wild type or mutant).In R, load the Dseq2 library, the combined counts-file from Step D3, and the table-file from Step D4.library(DESeq2) count_table <- read.delim(‘counts.txt’,sep=’\\t’,header=TRUE,row.names=’region_name’) sample_table <- read.delim(‘table.txt’,sep=’\\t’,header=TRUE,row.names=’sample_name’) Write the RNA-seq expression and p-values to file using DESeq2. The generated .txt file (wt_mutant_p-values.txt) contains the log2-fold expression and p-values for the respective mutant in tab-delimited format and can now be used for further analysis or visualization. For data inspection, an MA-plot is generated (Figure 5). In MA-plots generated by DESeq2, significant hits are colored in red; hence, the first quality check is how many data points are colored in black (i.e., since most genes are not differentially expressed, most data points should be colored in black).dds <- DESeqDataSetFromMatrix(countData = count_table,colData = sample_table,design = ~ condition) dds <- DESeq(dds) res <- results(dds) resOrdered <- res[order(res$padj),] plot <- plotMA(res, main = ‘mutant‘, ylim = c(-2,2), xlab = ‘mean count‘) write.table(as.data.frame(resOrdered),sep=‘\\t‘,quote=FALSE,file=‘wt_mutant_p-values.txt‘) imgsrc:https://en-cdn.bio-protocol.org/attached/image/e4161/bioprotoc-11-18-4161-g005.jpgFigure 5. Example of MA-plot analysis as generated by DESeq2. Genes that are statistically significantly up- or downregulated are marked in red above and below the x-axis, respectively."
  ],
  "subjectAreas": [
    "Microbiology",
    "Molecular Biology",
    "Systems Biology"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics"
  ]
}