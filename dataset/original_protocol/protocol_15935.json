{
  "id": 19765,
  "origin_website": "Wiley",
  "title": "Facilitating the Molecular Diagnosis of Rare Genetic Disorders Through Facial Phenotypic Scores",
  "procedures": [
    "This protocol introduces the use of the open-source GestaltMatcher approach to perform facial analysis for the diagnosis of rare genetic disorders in house—specifically, with GestaltMatcher-Arc (Hustinx et al., 2023[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.906#cpz1906-bib-0014]), a newer version of GestaltMatcher. GestaltMatcher-Arc is available in the GitHub repository at https://github.com/igsb/GestaltMatcher-Arc/tree/protocol[href=https://github.com/igsb/GestaltMatcher-Arc/tree/protocol]. This procedure, which is suitable for users familiar with programming in Python, makes it possible to run a facial analysis on a local machine using the command-line steps listed below, and can therefore be applied to data from patients who do not consent to data upload to other websites. The process has two main parts: setting up hosting of the GestaltMatcher service using a REST (representational state transfer) API, and then sending the image and receiving results through the REST API. Ultimately, the gestalt score for each gene can be used for variant prioritization (Fig. 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.906#cpz1906-fig-0001]).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/2c6afd71-e264-4b3d-ae89-24cf6b2e4da9/cpz1906-fig-0001-m.jpg</p>\nFigure 1\nConcept of integrating GestaltMatcher analysis with variant prioritization. GestaltMatcher takes the frontal image as an input and calculates the gestalt score for each of the 595 genes. The gestalt scores can be further integrated into the variants prioritization, and the user can sort the variants by the gestalt score in ascending order. Variant1 in the gene NIPBL, colored in red, is the disease-causing mutation. The facial image in this figure was computer generated.\nNecessary Resources\nComputer running operating system such as Windows, Mac OS, or Linux\nPython version 3.7+\nDocker\nPatient photos with only one face in the photo (both eyes, the nose, and the mouth should be visible)\nModel weights for the facial cropper\nGestaltMatcher models (access control)\nMetadata and encodings of GMDB (access control)",
    "1. Apply for access to the model weights, metadata, images, and encodings to the Association for Gene Diagnostics (AGD) by sending a research proposal and General Data Protection Regulation (GDPR) consent form to Prof. Peter Krawitz ([email protected][href=https://currentprotocols.onlinelibrary.wiley.com/cdn-cgi/l/email-protection#f4849f8695839d808eb4819a9dd9969b9a9ada9091]). The proposal should describe how you will use the data in your research. The data access committee of the GMDB (https://db.gestaltmatcher.org/about[href=https://db.gestaltmatcher.org/about]) will review the application and make a decision within 2 to 3 weeks. Details can be found on the GMDB download page (https://db.gestaltmatcher.org/documents[href=https://db.gestaltmatcher.org/documents]).\nIMPORTANT: Please note that the data are only available for non-commercial usage. If you wish use them for commercial purposes, please contact Prof. Peter Krawitz directly.\n2. Install the environment by following the instructions listed in the README of the repository (https://github.com/igsb/GestaltMatcher-Arc/tree/protocol[href=https://github.com/igsb/GestaltMatcher-Arc/tree/protocol]). For example, you can run the following commands to create a virtual environment.\n         \npython3 -m venv env_gm\nsource env_gm/Scripts/activate\npip install -r requirements.txt\n3. Prepare the gallery encodings and metadata. Be sure to download the following files and place them in the appropriate directories.\n         \n● Store GMDB_gallery_encodings_v1.0.3.pkl in a folder named./data/gallery_encodings\n● Store image_gene_and_syndrome_metadata_v1.0.3.p in a folder named ./data/ folder\n4. Prepare the Face cropper model. Be sure to download the model weights (Resnet50_Final.pth) in the following path.\n         \nsaved_models\\ Resnet50_Final.pth\n5. Prepare the three GestaltMatcher models. Please ensure that you have accessed the three pre-trained models provided by GMDB and save them in the following three paths.\n         \nsaved_models\\s1_glint360k_r50_512d_gmdb__v1.0.3_bs64_size112_channels3_last_model.pth\nsaved_models\\s2_glint360k_r100_512d_gmdb__v1.0.3_bs128_size112_channels3_last_model.pth\nsaved_models\\glint360k_r100.onnx\n6. Built a docker image for the GestaltMatcher REST API.\n         \ndocker build -t gm-api\n7. Start GestaltMatcher REST API and listen on port 5000.\n         \ndocker run -p 5000:5000 gm-api",
    "8. Analyze the image by sending it via REST API and receive the results. You will obtain the results in the output folder shown in Figure 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.906#cpz1906-fig-0002]. If you run the docker image in another server, please use --url and --port to assign to that server and the port. The default URL and port is localhost:5000.\n         \npython send_image_api.py --case_input demo_images/cdls_demo.png --otuput_dir output\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/6b5a3c9f-2ca8-4a62-9553-597b190eedfa/cpz1906-fig-0002-m.jpg</p>\nFigure 2\nGestaltMatcher results after running the Basic Protocol[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.906#cpz1906-prot-0001]. As this screenshot of the output shows, the output comprises five parts. It first shows the case_id, which is the filename of the input file without the file extension and the model and gallery versions. The “suggested_genes_list” is the list of genes sorted by the gestalt_score in ascending order. The list entry for each gene contains the following information: gene_name, gene_entrez_id, distance, gestalt_score, image_id, and subject_id. Taking the first gene as an example, NIPBL is the gene most closely related to the input image, with a gestalt score of 0.44. Among all images in GMDB associated with NIPBL, the image with ID 4883 of the patient (ID 3546) is the most similar to the input image. The user can use the image ID and subject_id to visualize the original image in GMDB."
  ],
  "subjectAreas": [
    "Human Genetics"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics"
  ]
}