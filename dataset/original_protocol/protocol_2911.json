{
  "id": 3081,
  "origin_website": "Cell",
  "title": "Examining asymmetric pairwise pre-reaction and transition states in enzymatic catalysis by molecular dynamics simulation and quantum mechanics/molecular mechanics calculation",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nSystem preparation\nTiming: 3 h\nStarting with the X-ray structure (all-atom) of carbonyl reductase (CpRCR) with substrate 2-pentanone docked in the active site, you will generate force field parameters to describe the interactions between the catalytic zinc and its coordinating residues. Force field parameters will also be prepared for NADH and structural zinc. The structure will be solvated with a water box and neutralized by adding counter ions. A “tleap.in” file will be created as an input file of tleap software in the Amber suite for the whole system modeling described above. Finally, the system will be used in the following steps for the molecular dynamics simulation. Alternatively, for convenience in completing the modeling, you can use the Jupyter notebook format version (\"run_modelling.ipynb\") provided in the root directory of the downloaded repository.\nDownload the entire repository from this link (https://gitlab.com/BiocompZhao/cprcr_simulations[href=https://gitlab.com/BiocompZhao/cprcr_simulations]) as a compressed file or, if you use git, clone the repository with the following command:\n> git clone https://gitlab.com/BiocompZhao/cprcr_simulations.git[href=https://gitlab.com/BiocompZhao/cprcr_simulations.git]\nAlternatives: If you have trouble accessing the repository, you can download a permanent copy from Zenodo at https://doi.org/10.5281/zenodo.7647880[href=https://doi.org/10.5281/zenodo.7647880].\nAfter decompressing the repository as a folder on your computer, open a bash terminal and change the working directory to it using the following command, where PATH is the location in your computer where you saved the content of the repository:\n>cd PATH/cprcr_simulations\nCreate a working director with a name of your choice (in this example, we will use “RUN” ):\n>mkdir RUN\nPreparation of PDB file for modeling, including protonation state calculation.\nCreate a new folder called “preparePDB” within the “RUN” directory, and change the working directory to that folder:\n>cd RUN\n>mkdir preparePDB\n>cd preparePDB",
    "Copy the original PDB file, namely “3wle_chain_A_initial.pdb”, from the folder named “example_files” into the folder called “preparedPDB”. Additionally, create individual files for the substrate 2-pentanone, protein, NADH cofactor, structural zinc, and catalytic zinc:\n>cp ../../example_files/3wle_chain_A_initial.pdb ./\n>awk '($1 == \"ATOM\" && $4 != \"NAH\" && $4 != \"TOA\" && $4 !=\"ZN\"){print}END{print \"TER\"}' 3wle_chain_A_initial.pdb > 3wle_chain_A_TOA.pdb\n>awk '($4 == \"ZN\" && $6 == 402){print} END{print \"TER\"}' 3wle_chain_A_initial.pdb > ZN.pdb\n>awk '($4 == \"ZN\" && $6 == 403){print} END{print \"TER\"}' 3wle_chain_A_initial.pdb > ZN-stru.pdb\n>awk '($4 == \"TOA\"){print}END{print \"TER\"}' 3wle_chain_A_initial.pdb > TOA.pdb\n>awk '($4 == \"NAH\"){print}END{print \"TER\"}' 3wle_chain_A_initial.pdb > NAH.pdb\nNote: In this protocol, “3wle_chain_A_initial.pdb” corresponds to the X-ray structure of CpRCR with substrate docked in the active site.\nDetermine the protonation states for standard residues of the protein. Here we use the H++ web server13[href=https://www.wicell.org#bib13] (http://newbiophysics.cs.vt.edu/H++/[href=http://newbiophysics.cs.vt.edu/H++/]) to calculate the protonation states.\nUpload the file \"3wle_chain_A_TOA.pdb” to the server and the server will give two results (e.g., “0.15_80_10_pH6.5_3wle_chain_A_TOA.top” and “0.15_80_10_pH6.5_3wle_chain_A_TOA.crd”);\nDownload them into this folder.\nIssue the “ambpdb” commands to generate the result PDB file “3wle_chain_A_Hpp.pdb”:\n> ambpdb -p 0.15_80_10_pH6.5_3wle_chain_A_TOA.top -c 0.15_80_10_pH6.5_3wle_chain_A_TOA.crd > 3wle_chain_A_Hpp.pdb\nEnsure the His49 is protonated.\nNote: The residues Cys44, His65, and Asp154 coordinate with the catalytic zinc, and the residues Cys95, Cys98, Cys101, and Cys109 coordinate with the structural zinc.\nDelete the hydrogen atom bonded to the sulfur or nitrogen atom of these residues to make them coordinate with the catalytic or structural zinc.\n>sed -e 's/HI. 48/HIP 48/g' 3wle_chain_A_Hpp.pdb > 3wle_chain_A_Hpp_fixed.pdb\nGenerate a new PDB file “3wle_chain_A_Hpp_fixed.pdb”:\n>sed -i '/HG CYS 43/d;/HE2 HI. 64/d;/HG CYS 94/d;/HG CYS 97/d;/HG CYS 100/d;/HG CYS 108/d' 3wle_chain_A_Hpp_fixed.pdb\nConcatenate all individual files to a single file “3wle_chainA_21ar_H.pdb” in the order of substrate, protein, NADH, catalytic zinc, and structural zinc and we will reorder the PDB ATOM records using “pdb4amber” of AMBER program suite:",
    ">cat TOA.pdb 3wle_chain_A_Hpp_fixed.pdb NAH.pdb ZN.pdb ZN-stru.pdb |pdb4amber | sed -e 's/HETATM/ATOM /g' > 3wle_chainA_21ar_H.pdb\nWe will change the name of residue His49 (because it is protonated) to “HIP” (AMBER naming convention), and the name of residues Cys44 and His65 to “CYM” and “HID”, respectively. We also change the name of residues Cys95, Cys98, Cys101, and Cys109 to “CY1” as defined by the ZAFF force field, and the name of structural zinc to “ZN2” as defined by the same force field.\n>sed -i 's/HI. 49/HIP 49/g' 3wle_chainA_21ar_H.pdb\n>sed -i 's/CYS 44/CYM 44/g;s/HI. 65/HID 65/g;s/CYS 95/CY1 95/g;s/CYS 98/CY1 98/g;s/CYS 101/CY1 101/g;s/CYS 109/CY1 109/g;s/ZN 339/ZN2 339/g' 3wle_chainA_21ar_H.pdb\nWe will use the “MCPB.py” script6[href=https://www.wicell.org#bib6] of AMBER to calculate the force field parameters for catalytic zinc and its coordinating residues:\nCreate a new directory “MCPB” in the directory “RUN” and change directory to “MCPB”:\n>cd ../\n>mkdir MCPB\n>cd MCPB/\nWe will use “antechamber” of AMBER to generate mol2 files “TOA.mol2” for substrate 2-pentanone. Here we are using the AM1-BCC charge method to generate the charges. The substrate has a charge of 0. We use GAFF atom types for the substrate.3[href=https://www.wicell.org#bib3]\n>antechamber -fi pdb -fo mol2 -i ../preparePDB/TOA.pdb -o TOA.mol2 -c bcc -pf y -nc 0\nWe will use “parmchk2” of AMBER to obtain the “frcmod” file “TOA.frcmod” for the substrate:\n>parmchk2 -i TOA.mol2 -o TOA.frcmod -f mol2\nWe will use the “metalpdb2mol2.py” script to prepare the mol2 file for catalytic zinc.\n>wget http://ambermd.org/tutorials/advanced/tutorial20/files/mcpbpy/metalpdb2mol2.py[href=http://ambermd.org/tutorials/advanced/tutorial20/files/mcpbpy/metalpdb2mol2.py]\n>python metalpdb2mol2.py -i ../preparePDB/ZN.pdb -o ZN.mol2 -c 2\nWe will generate the PDB, Gaussian, and fingerprint modeling files:\nNote: Here, the parameters for the standard residues of protein are obtained from the ff14SB force field.2[href=https://www.wicell.org#bib2]\n>id=`awk '($4==\"ZN\"){print $2}' ../preparePDB/3wle_chainA_21ar_H.pdb`\n>sed -e 's/ID/'${id}'/' ../../MCPB/MCPB.in > MCPB.in\n>MCPB.py -i MCPB.in -s 1",
    "We will perform Gaussian calculations for the catalytic zinc and its coordinating residues:\n>sed -i 's/%NProcShared=2/%NProcShared=16/' 3wle_chainA_21ar_H_small_opt.com[href=http://3wle_chainA_21ar_H_small_opt.com]\n>g16 <3wle_chainA_21ar_H_small_opt.com[href=http://3wle_chainA_21ar_H_small_opt.com]> 3wle_chainA_21ar_H_small_opt.log\n>sed -i 's/%NProcShared=2/%NProcShared=16/' 3wle_chainA_21ar_H_small_fc.com[href=http://3wle_chainA_21ar_H_small_fc.com]\n>g16 <3wle_chainA_21ar_H_small_fc.com[href=http://3wle_chainA_21ar_H_small_fc.com]> 3wle_chainA_21ar_H_small_fc.log\n>formchk 3wle_chainA_21ar_H_small_opt.chk > 3wle_chainA_21ar_H_small_opt.fchk\n>sed -i 's/%NProcShared=2/%NProcShared=16/' 3wle_chainA_21ar_H_large_mk.com[href=http://3wle_chainA_21ar_H_large_mk.com]\n>g16 <3wle_chainA_21ar_H_large_mk.com[href=http://3wle_chainA_21ar_H_large_mk.com]> 3wle_chainA_21ar_H_large_mk.log\nWe will use the Seminario method14[href=https://www.wicell.org#bib14] to generate the force field parameters of the catalytic zinc site to the file called “3wle_chainA_21ar_H_mcpbpy.frcmod”:\n>MCPB.py -i MCPB.in -s 2\nWe will perform the MK RESP charge fitting15[href=https://www.wicell.org#bib15] using the ChgModB scheme, and generate the mol2 files for the catalytic zinc site residues. This step will generate five mol2 files for the residues in catalytic zinc site: “TA1.mol2”, “CM1.mol2”, “HD1.mol2”, “AP1.mol2”, and “ZN1.mol2”.\n>MCPB.py -i MCPB.in -s 3\nWe will generate the input file of “tleap” program for the catalytic zinc site. This step will obtain a new PDB file “3wle_chainA_21ar_H_mcpbpy.pdb” with modified names of catalytic zinc site residues and a “tleap” input file “3wle_chainA_21ar_H_tleap.in”.\n>MCPB.py -i MCPB.in -s 4\nWe will use “tleap” program to generate the topology and coordinate files.\nCreate a new directory “LeapModelling” in folder “RUN” and copy the files generated by “MCPB.py” into “LeapModelling”:\n>cd ../\n>mkdir LeapModelling\n>cd LeapModelling/\n>cp ../MCPB/TA1.mol2 ../MCPB/CM1.mol2 ../MCPB/HD1.mol2 ../MCPB/AP1.mol2 ../MCPB/ZN1.mol2 ./\n>cp ../MCPB/TOA.frcmod ./\n>cp ../MCPB/3wle_chainA_21ar_H_mcpbpy.frcmod ./\n>cp ../MCPB/3wle_chainA_21ar_H_mcpbpy.pdb ./\nWe will copy the force field parameters files for the structural zinc site residues from the “FF” folder into this folder. These parameters are obtained from the ZAFF force field parameters.5[href=https://www.wicell.org#bib5]\n>cp ../../FF/ZN2-struc.mol2 ./\n>cp ../../FF/ZN2-struc.frcmod ./\n>cp ../../FF/CY1.mol2 ./\nWe will copy the force field parameter files for NADH cofactor developed by Ryde4[href=https://www.wicell.org#bib4] into this folder:\n>cp ../../FF/nad.frcmod ./\n>cp ../../FF/nadh.prep ./",
    "We will modify the input file of “tleap”, since the structural zinc site residues are not standard residues defined by AMBER. The atom types of residues in the structural zinc site are not recognized by “tleap”, and their connection to other standard residues will not be generated. Thus, we will define new atom types for structural zinc site residues and connect them as necessary. This step will get a new tleap input file, named “tleap.in”:\n>sed -e '/addAtomTypes/a\\{ \"ZN\" \"Zn\" \"sp3\" }\\n{ \"S1\" \"S\" \"sp3\" }' -e '/ZN1/a\\ZN2 = loadmol2 ZN2-struc.mol2\\nCY1 = loadmol2 CY1.mol2\\nloadAmberPrep nadh.prep\\nloadamberparams nad.frcmod\\nloadAmberParams ZN2-struc.frcmod' -e '/mol = loadpdb/a\\bond mol.95.SG mol.339.ZN\\nbond mol.98.SG mol.339.ZN\\nbond mol.101.SG mol.339.ZN\\nbond mol.109.SG mol.339.ZN\\nbond mol.94.C mol.95.N\\nbond mol.95.C mol.96.N\\nbond mol.97.C mol.98.N\\nbond mol.98.C mol.99.N\\nbond mol.100.C mol.101.N\\nbond mol.101.C mol.102.N\\nbond mol.108.C mol.109.N\\nbond mol.109.C mol.110.N' ../MCPB/3wle_chainA_21ar_H_tleap.in > tleap.in\nWe will use a hybrid bonded/restrained nonbonded model for the catalytic zinc site residues. We will treat the coordinating bonds between the substrate carbonyl oxygen and the catalytic zinc with a restrainted nonbonded model, while treating the remaining bonds with a bonded model. Therefore, we will delete the “bond” command for the substrate carbonyl oxygen and the ZN1 in the file “tleap.in” generated by MCPB.py, and a new restraint file will be generated to treat this bond in a nonbonded way (step 9):\n>sed -i '/bond mol.1.O1 mol.338.ZN/d' tleap.in\nAlternatives: There is also a batch script “tleap.sh” in the folder “MCPB” of downloaded repository for simplifying the whole process of step 6. If you are in folder “RUN”, run the following command will generate file “tleap.in” for generating the final model.\n>sh ../MCPB/tleap.sh\nWe will use “tleap” program to generate the topology file “3wle_chainA_21ar_H_solv.prmtop” and coordinate file “3wle_chainA_21ar_H_solv.inpcrd”:\n> tleap -s -f tleap.in",
    "Optional: You can open the “3wle_chainA_21ar_H_dry.prmtop” and “3wle_chainA_21ar_H_dry.inpcrd” files with VMD to visualize the hybrid bonded/restrained nonbonded model of catalytic zinc site and bonded model of structural zinc site. To do this, we will open VMD and load the corresponding structure and coordinate files into the same molecule by running the first line of the following code snippet and typing the rest in the VMD console. Then, the modeling results will resemble the one shown in Figure 1[href=https://www.wicell.org#fig1].\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2656-Fig1.jpg\nFigure 1. Hybrid bonded/restrained nonbonded model of catalytic zinc and bonded model for structural zinc\nVMD visualizations of “3wle_chainA_21ar_H_dry.prmtop” and “3wle_chainA_21ar_H_dry.inpcrd” files. The catalytic zinc (hybrid bonded/restrained nonbonded model) and structural zinc (bonded model) with their coordinating residues are shown as sticks and the rests are shown as lines. Colors in the models are the default scheme from VMD: C, H, O, N, S, Zn, in cyan, white, red, blue, yellow, and silver, respectively.\n> vmd -f -parm7 3wle_chainA_21ar_H_dry.prmtop -rst7 3wle_chainA_21ar_H_dry.inpcrd\n> color Display Background white\n> axes location off\n> atomselect macro zn \"resname TA1 or (resname CM1 HD1 AP1 ZN1 CY1 ZN2 and not name C O N H HA)\"\n> mol addrep 0\n> mol modselect 1 0 zn\n> mol modstyle 1 0 CPK\nOptional: You can open the “3wle_chainA_21ar_H_solv.prmtop” and “3wle_chainA_21ar_H_solv.inpcrd” files with VMD to visualize the enzyme-substrate complex embedded in the water box. To do this, first, open VMD and load the corresponding structure and coordinate files into the same molecule by running the first line of the following code snippet. Then, type the rest of the code into the VMD console. You will then see initial configuration of the simulation box, similar to those shown in Figures 2[href=https://www.wicell.org#fig2]A and 2B.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2656-Fig2.jpg\nFigure 2. Simulation boxes",
    "(A and B) Top (A) and side (B) views of the simulation box (“3wle_chainA_21ar_H_solv.prmtop” and “3wle_chainA_21ar_H_solv.inpcrd” files) in the starting configuration. CpRCR is shown as cartoon in secondary structure color scheme, catalytic, structural as well as their coordinating residues as spheres in default color scheme from VMD, counter ions as orange spheres, oxygen atoms of waters of (A) as in red balls, and waters of (B) as in surface for the show of simulation box. XYZ axes are shown in every panel.\n>vmd -f -parm7 3wle_chainA_21ar_H_solv.prmtop -rst7 3wle_chainA_21ar_H_solv.inpcrd\n>color Display Background white\n>display projection Orthographic\n>mol modselect 0 0 not (water or resname 'Na\\+' 'Cl\\-')\n>mol modstyle 0 0 NewCartoon 0.3 50.0 3.5 0\n>mol modcolor 0 0 Structure\n>mol addrep 0\n>mol modselect 1 0 resname TA1 ZN1 ZN2 or (resname CM1 HD1 AP1 CY1 and not name C O N H HA)\n>mol modstyle 1 0 VDW 0.7 50.0\n>mol addrep 0\n>mol modselect 2 0 water and not type HW\n>mol modstyle 2 0 CPK 1.0 0.1 20.0 20.0\n>mol addrep 0\n>mol modselect 3 0 resname 'Na\\+' 'Cl\\-'\n>mol modstyle 3 0 VDW 1.6 50.0\n>mol modcolo r 3 0 ColorID 3\nUmbrella sampling simulations\nTiming: 16 h\nIn this section, you will be guided to use the previously generated solvated enzyme system in a water box for the umbrella sampling simulations.\nCreate a working directory named “MD” in the directory “RUN” and then navigate to it:\n>cd ../\n>mkdir MD\n>cd MD",
    "We will prepare a restraint file named “dist.RST” to treat the coordinating bond between the carbonyl oxygen and catalytic zinc in the hybrid bonded/restrained nonbonded model since we did not include a bond between catalytic zinc (“M1” in AMBER atom type) and carbonyl oxygen (“Y1” in AMBER atom type) in the system modelling. The restraint is the force constant (“Y1-M1”) of the bond between the substrate carbonyl oxygen and catalytic zinc from the file “3wle_chainA_21ar_H_mcpbpy.frcmod”. We will create the file “dist.RST” using the template file provided in the “MD” folder of the repository:\n>ATOM1=`awk '/O1 TA1/{ print $2}' ../LeapModelling/3wle_chainA_21ar_H_solv.pdb`\n>ATOM2=`awk '/ZN ZN1/{print $2}' ../LeapModelling/3wle_chainA_21ar_H_solv.pdb`\n>FRC=`awk '/ˆY1-M1 /{print $2}' ../LeapModelling/3wle_chainA_21ar_H_mcpbpy.frcmod`\n>Req=`awk '/ˆY1-M1 /{print $3}' ../LeapModelling/3wle_chainA_21ar_H_mcpbpy.frcmod`\n>sed -e 's/ATOM1/'$ATOM1'/;s/ATOM2/'$ATOM2'/;s/FRC/'$FRC'/g;s/Req/'$Req'/g' ../../MD/dist.RST > dist.RST\nWe will conduct a classical molecular dynamics simulation on the solvated enzyme-substrate complex, without bias potential. The occurrence of transformation between the pro-R and pro-S will appear in this simulation and we will choose the initial structures for umbrella sampling simulations:\nCopy the input parameter files for MD simulations into this folder:\n>cp ../../MD/∗.in ./\nSet the variables “PRMTOP” and “INPCRD” for the simplicity of the following molecular dynamics simulation commands:\n> PRMTOP='../LeapModelling/3wle_chainA_21ar_H_solv.prmtop'\n> INPCRD='../LeapModelling/3wle_chainA_21ar_H_solv.inpcrd'\nEnergy minimization:\nFirst stage. The minimization will use the input parameter file “min1.in” (minimization of water molecules with all the solutes frozen by a harmonic restraint):\n>pmemd.cuda -O -p $PRMTOP -c $INPCRD -i min1.in -o min1.out -r min1.rst -ref $INPCRD\nSecond stage. We will use the restart structure generated by the first stage of minimization to start the second stage. The input parameter file “min2.in” will be used for the minimizaiton of the entire system:\n>pmemd.cuda -O -p $PRMTOP -c min1.rst -i min2.in -o min2.out -r min2.rst\nNote: This step will take several minutes to finish.",
    "Heating. We will start the heating step using the restart structure generated by the second stage of minimization. The heating will use the input parameter file “heat.in”:\n> pmemd.cuda -O -p $PRMTOP -c min2.rst -i heat.in -o heat.out -r heat.rst -x heat.mdcrd -ref min2.rst\nNote: This step will take several ten minutes to finish.\nEquilibration (this step is used to correct the density of the system):\nWe will start the equilibration step using the restart structure generated by the heating step. The equilibration will use the input parameter file “equil.in”:\n> pmemd.cuda -O -p $PRMTOP -c heat.rst -i equil.in -o equil.out -r equil.rst -x equil.mdcrd\nRecommended: before running the production simulation, check if the density of the system is properly equilibrated. Please refer to the AMBER user guide (https://ambermd.org/doc12/Amber18.pdf[href=https://ambermd.org/doc12/Amber18.pdf]) for good practices and tips.\nIf equilibration step were successful, we are ready to initiate the production simulation.\nNote: This step will take several ten minutes to finish.\nProduction:\nWe will start the production step using the restart structure generated by the equilibration step. The production will use the input parameter file “md.in”. Depending on your GPU, this step can take from half to several hours. Run the following commands:\n> pmemd.cuda -O -p $PRMTOP -c equil.rst -i md.in -o md.out -r md.rst -x md.nc\nWe will analyze the distance between Cα of L262 and methyl carbon of substrate. This is done with the “cpptraj” tool which reads the trajectory files and does analysis of trajectory. Copy the script from “MD” folder of this repository to this directory. Run the script as follows (you can specify the output file name as you prefer, here we use “CVdist.dat” in this example). Troubleshooting 1[href=https://www.wicell.org#troubleshooting].\n> cp ../../MD/CVdist.sh ./\n> sh CVdist.sh $PRMTOP md.nc CVdist.dat",
    "We will plot the distance between Cα of L262 and methyl carbon of substrate against the simulation time. Copy the plot script “CVdist_plot.py” from the “MD” folder of this repository into this directory. Then, run the script. Troubleshooting 2[href=https://www.wicell.org#troubleshooting] and 3[href=https://www.wicell.org#troubleshooting].\n>cp ../../MD/CVdist_plot.py ./\n>python3 CVdist_plot.py CVdist.dat Fig3CV\nAs a result in Figure 3[href=https://www.wicell.org#fig3], the distance is increasing from 7.0 to 10.5 Å during the MD simulation (Figure 3[href=https://www.wicell.org#fig3]B). In fact, the distance change is the reflection of the transition from pro-R to pro-S pre-reaction state (Figures 3[href=https://www.wicell.org#fig3]A and 3C).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2656-Fig3.jpg\nFigure 3. Collective variable and snap shot examples\n(A and C) Snap shot examples of pro-R (A) and pro-S (C) that used as initial conformations for the following umbrella sampling simulations. The catalytic zinc is shown as orange sphere, residue Cys44, His65, Asp154, substrate, and cofactor NADH as sticks, other residues as cartoon, waters as red small spheres (nonpolar hydrogens are not shown for simplicity). The corresponding collective variables are marked with yellow dotted lines between two atoms shown as green spheres.\n(B) The plot of distance (collective variable) between Cα of L262 and methyl carbon of substrate along the simulation course in the classical molecular dynamics trajectory.\nWe will inspect the structure of pro-S (last frame structure in this example) and pro-R (first frame structure in this example) pre-reaction states. We first extract the first and last frames of the trajectory. This is done with the script “OutInitial.sh”. Copy the script into this folder and run the script. Then, we can use the “ambpdb” tool to convert the extracted snapshots to “PDB” files that can be visualized by “PyMOL”. Troubleshooting 1[href=https://www.wicell.org#troubleshooting] and 2[href=https://www.wicell.org#troubleshooting].\n>cp ../../MD/OutInitial.sh ./\n>sh OutInitial.sh $PRMTOP md.nc 1 Pro_R_equi2.rst\n>sh OutInitial.sh $PRMTOP md.nc 2500 Pro_S_equi2.rst\n>ambpdb -p $PRMTOP -c Pro_S_equi2.rst > Pro_S_equi2.pdb",
    ">ambpdb -p $PRMTOP -c Pro_R_equi2.rst > Pro_R_equi2.pdb\nOpen “PyMOL” to visualize the pro-S and pro-R states. Type the following commands in “PyMOL” console:\n>load Pro_S_equi2.pdb, Pro\n>bg_color white\n>space cmyk\n>hide everything\n>show cartoon, Pro\n>set cartoon_color, bluewhite\n>show spheres, resn WAT and e. O\n>set sphere_scale, 0.04, resn WAT and e. O\n>show sticks, resn NAH+TA1 or (resn CM1+HD1+AP1) and not n. C+O+N+H+HA\n>set_bond stick_radius, 0.14, resn NAH+TA1 or (resn CM1+HD1+AP1) and not n. C+O+N+H+HA\n>show spheres, resn ZN1\n>set sphere_scale, 0.45, resn ZN1\n>show spheres, (resn TA1 or resi 262) and (n. C5+CA)\n>set sphere_scale, 0.2, (resn TA1 or resi 262) and (n. C5+CA)\n>distance CV, resn TA1 and n. C5, resi 262 and n. CA\n> set sphere_color, orange, resn ZN1\nAs shown in Figures 3[href=https://www.wicell.org#fig3]A and 3C, the first snapshot of the simulation is the pro-R pre-reaction state, and the last snapshot is the pro-S pre-reaction state. Thus, the first and the last frame are selected as the initial structures for the following umbrella samplings.\nNote: This step will take several ten minutes to finish.\nCopy the folder “USMD” of the downloaded repository for umbrella sampling molecular dynamics simulation into the “RUN” folder. Then, move to that “USMD” folder:\n>cd ../\n>cp -r ../USMD/ ./\n>cd USMD/\nSet the variable “PRMTOP” (the relative path of topology file), “RST_S” and “RST_R” (the relative path of the coordinate files for pro-S and pro-R pre-reaction states). These variables are used in the following umbrella sampling steps for brevity of the command line.\n>PRMTOP='../LeapModelling/3wle_chainA_21ar_H_solv.prmtop'\n>RST_ProS='../MD/Pro_S_equi2.rst'\n>RST_ProR='../MD/Pro_R_equi2.rst'",
    "The “USMD” folder contains a Perl script “Run_USMD.pl” for running umbrella sampling and four analysis scripts (three python scripts for plotting the umbrella sampling results and one bash script for the preparation of inputs of the “wham” program). The Perl script is a template script for the umbrella sampling molecular dynamics simulation and we need to set some parameters before running. In the next two steps, we will edit it to make it suitable for this protocol.\nThe modelling for catalytic zinc site residues is a hybrid bonded/restrained nonbonded model. We need to add a restraint between the oxygen atom and catalytic zinc atom as the unbiased simulation above. This is done with “awk” and “sed” commands. First, use “awk” to get the atom ID for the oxygen and catalytic zinc of the system and the parameters for nonbonded restraint according to the force field parameters generated by MCPB. Then, use “sed” to replace the template string with the corresponding value of the system.\n>O=`awk '/O1 TA1/{print $2}' ../LeapModelling/3wle_chainA_21ar_H_solv.pdb`\n>ZN=`awk '/ZN ZN1/{print $2}' ../LeapModelling/3wle_chainA_21ar_H_solv.pdb`\n>FRC=`awk '/ˆY1-M1 /{print $2}' ../LeapModelling/3wle_chainA_21ar_H_mcpbpy.frcmod`\n>Req=`awk '/ˆY1-M1 /{print $3}' ../LeapModelling/3wle_chainA_21ar_H_mcpbpy.frcmod`\n>sed -i 's/O_ID/'${O}'/g' Run_USMD.pl\n>sed -i 's/ZnCat_ID/'${ZN}'/g' Run_USMD.pl\n>sed -i 's/Req/'${Req}'/g' Run_USMD.pl\n>sed -i 's/FRC/'${FRC}'/g' Run_USMD.pl\nUse “awk” to get the atom ID for defining the umbrella sampling collective variable. Then, use “sed” to replace the template string with the corresponding values of this system. A bias potential will be added to this collective variable during umbrella sampling.\n>C5=`awk '/C5 TA1/{print $2}' ../LeapModelling/3wle_chainA_21ar_H_solv.pdb`\n>CA=`awk '/CA LEU 262/{print $2}' ../LeapModelling/3wle_chainA_21ar_H_solv.pdb`\n>sed -i 's/C5_ID/'${C5}'/g' Run_USMD.pl\n>sed -i 's/L262CA_ID/'${CA}'/g' Run_USMD.pl\nUse the script “Run_USMD.pl” to prepare the input files and perform the simulation for each window of umbrella sampling molecular dynamics.",
    "We first run the umbrella sampling for pro-R state, using the pro-R initial structure as defined by the variable “RST_ProR”. The range of the collective variable for umbrella sampling is from 5.5 to 8.725 Å.\n>perl Run_USMD.pl $PRMTOP $RST_ProR 5.5 8.725\nRun the umbrella sampling for pro-S state, using the pro-S initial structure as defined by the variable “RST_ProS”. The range of the collective variable for umbrella sampling is from 8.8 to 12 Å.\n>perl Run_USMD.pl $PRMTOP $RST_ProS 8.8 12\nWe will check that all windows of sampling overlap properly before we move onto running WHAM to construct the potential of mean force (PMF). This is done by plotting all the dist_xxx.dat files on the same graph and looking for any gaps. Run the script “USMDwindows.py” in the folder “USMD”. Troubleshooting 3.[href=https://www.wicell.org#troubleshooting]\n>python3 USMDwindows.py OverlapCheck\nIf the script runs successfully, a figure named “OverlapCheck.png” are generated as you specified in the command line. A successful sampling may look like the one shown in Figure 4[href=https://www.wicell.org#fig4]. As shown in Figure 4[href=https://www.wicell.org#fig4], a successful sampling should have no obvious gaps among all windows although the data does look a bit sketchy within 8.5–8.9 Å. This is most likely the region around the transition state between pro-R and pro-S states.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2656-Fig4.jpg\nFigure 4. Overlap check for sampling windows\n“OverlapCheck.png” plot created with collective variables of 87 windows in umbrella sampling simulations. Each dot of the scatter plot represents the distance (collective variable) between methyl carbon (C5) of substrate and C of Leu262 at particular simulation time in a sampling window.\nOptional: We can further plot the histograms for the windows of samplings within 8.5–8.9 Å and check that they all overlap. This is done with the script “USMDhist.py”.\n>python3 USMDhist.py USMDhist 8.5 8.9",
    "If it is a successful sampling, the result will look like Figure 5[href=https://www.wicell.org#fig5]. As shown in Figure 5[href=https://www.wicell.org#fig5], there is reduced sampling around 8.75 Å but it still has excellent overlap so it should be fine. We can now proceed to the next section where we will construct PMF using WHAM.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2656-Fig5.jpg\nFigure 5. Overlap check of specific windows with histograms\n“USMDhist.png” plot created with the collective variable data of the sampling windows with which minimum of harmonic potential are in the range of 8.5–8.9. The colors of tick marks correspond to the sampling windows with the same minimum value for harmonic potential. The histogram tells us that 0.075 Å is a good separation between sampling windows since the full width half max of the histogram is around 0.15 Å.\nConstructing the PMF\nTiming: several minutes\nHere we describe the procedure to construct the PMF from the distance (collective variable) data we collected by using the WHAM code of Alan Grossfield. The WHAM code is distributed by Alan Grossfield on his website and can be downloaded there (http://membrane.urmc.rochester.edu/?page_id=126[href=http://membrane.urmc.rochester.edu/?page_id=126]).\nCreate a new directory “metadist” for processed collective variable data in the “USMD” folder.\n>mkdir metadist\nNote: the next steps generate lots of intermediate files for constructing the PMF.",
    "Create the wham meta file. We use a hybrid bonded/restrained nonbonded model for catalytic zinc site residues, which includes the restraint for nonbonded interactions between oxygen and catalytic zinc in the “dist.RST” file. Therefore, during the production run in the umbrella sampling, a collective variable file of “dist_XXX.dat” will be generated, which includes the distance (column 2) between oxygen and catalytic zinc. Thus, we need to save column 1 and 3 into a new distance file in the “metadist” folder. At the same time, a wham meta file is generated for the newly saved distance file. This wham meta file is essentially an input file for “wham” and specified the file name of each distance file, the minimum of the harmonic potential, and the force constant used. This is done using the script “Genmeta.sh” in this folder, and it can be run using the following command:\n>sh Genmeta.sh metadist/\nNote: The bond stretching of AMBER uses kb(b-b0)2 where harmonic force constant kb already included the factor 1/2 and in kcal/mol/A2, whereas the “wham” program uses 0.5k(b-b0)2 where k is in kcal/mol/A2 hence we have to multiply our original force constants (in this case always 50.0) by 2. Thus, our force constant in the units of “wham” is 100 kcal/mol/A2.\nRun wham to construct the PMF. The output file of this step is saved to the file “free_tol0.01_energy.dat” in this directory as specified in the command line:\n>wham 5.480 11.93 87 0.01 300 0 meta.dat free_tol0.01_energy.dat\nUse the script “USMDPMF.py” in this folder to plot the PMF results.\nCreate a clean file “pmf.dat” containing only the collective variable and PMF values for “USMDPMF.py”. We will extract the first two columns of the wham output file. This is done with the “awk” command:",
    ">awk '(NR >= 2 && NR <= 88){print $1,$2}' free_tol0.01_energy.dat > pmf.dat\nGenerate a PMF plot “pmf.png”. The PMF plot may look like Figure 6[href=https://www.wicell.org#fig6]. Run the script “USMDPMF.py” as the following command. Troubleshooting 3[href=https://www.wicell.org#troubleshooting].\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2656-Fig6.jpg\nFigure 6. Potential of mean force (PMF)\nPMF plot “pmf.png” generated by “USMDPMF.py”. The pro-R and pro-S states correspond to local minimum regions on the left and right of the PMF, respectively.\n>python3 USMDPMF.py pmf pmf.dat\nQM/MM calculations\nTiming: days or weeks\nIn this section, we are going to perform QM/MM calculations for transition state searching of pro-S and pro-R pre-reaction states.1[href=https://www.wicell.org#bib1] We are going to conduct pro-S and pro-R states MD sampling, using the initial structure extracted from the valley of PMF. Then, the trajectories are going to be clustered using the hierarchical agglomerative algorithm of the “cpptraj” program in AMBER, based on the atoms of the active pocket. The representative structure of a cluster is going to be truncated as a cluster model for QM/MM calculations. The truncated residues and the QM/MM oniom layer scheme are depicted in Figure 7[href=https://www.wicell.org#fig7]. To inherit the PRS structure information, the Cα atoms of Cys44-Ser46-His65-Asp154 and a carbon of NADH are frozen during the QM/MM calculations.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2656-Fig7.jpg\nFigure 7. Illustration of the QM/MM (ONIOM) cluster model\nCys44- Ser46-His65-Asp154 are truncated at peptide bonds between the truncated residue and its adjacent residues. The cofactor NADH is truncated after the nicotinamide ring. The QM layer is cut between Cα and Cβ carbon for Cys44-Ser46, between Cβ and Cγ carbon for His65-Asp154, and the whole substrate and truncated NADH is included in QM layer. The red carbon atoms are frozen during the QM/MM calculations.\nCopy the folder “QMMM” downloaded from the repository into the folder “RUN” and move into it:\n>cd ../\n>cp -r ../QMMM/ ./\n>cd QMMM/",
    "We will conduct an unbiased molecular dynamics simulation for pro-S and pro-R PRS MD sampling. The trajectory will be clustered by “cpptraj” of AMBER for the following QM/MM calculation.\nCreate a new folder “PRSMD” in folder “QMMM” and move there. Copy the input file “PRSMD.in” from folder “PRSMD” downloaded from the repository for PRS MD sampling and restraint file “dist.RST” (generated at step 9) from folder “MD” in the “RUN” folder. If you are in folder “QMMM”, use the following commands:\n> mkdir PRSMD\n> cd PRSMD/\n> cp ../../../PRSMD/PRSMD.in ./\n> cp ../../MD/dist.RST ./Zncat.RST\nNote: The PRS MD sampling is an unbiased simulation. Thus, we use the restraint file from step 9, containing only the harmonic force constant for nonbonded interactions between the substrate carbonyl oxygen and catalytic zinc atoms.\nSet variable of the topology file and initial structures used in PRS MD sampling. The initial structures for pro-S (the restart file of window 7.300 in this example) and pro-R (the restart file of window 10.300 in this example) PRS MD sampling are from two corresponding valleys of PMF.\n>PRMTOP='../../LeapModelling/3wle_chainA_21ar_H_solv.prmtop'\n> RST_R='../../USMD/7.300/prod_7.300.rst'\n> RST_S='../../USMD/10.300/prod_10.300.rst'\nRun the pro-S PRS MD sampling:\n>pmemd.cuda -O -i PRSMD.in -o proSmd.out -p ${PRMTOP} -c ${RST_S} -r proSmd.rst -x proSmd.crd\nAlternatives: If you have no access to the licensed Amber, the openMM can also be used to generate the trajectories. If you have OpenMM installed, run the pro-S PRS MD sampling with following command (troubleshooting 4[href=https://www.wicell.org#troubleshooting]):\n>python ../../../PRSMD/simulateAmber.py ${PRMTOP} ${RST_S} Zncat.RST proSmd.dcd\nRun the pro-R PRS MD sampling:\n>pmemd.cuda -O -i PRSMD.in -o proRmd.out -p ${PRMTOP} -c ${RST_R} -r proRmd.rst -x proRmd.crd",
    "Alternatives: If you have no access to the licensed Amber, the openMM can also be used to generate the trajectories. If you have OpenMM installed, run the pro-R PRS MD sampling with following command (troubleshooting 4[href=https://www.wicell.org#troubleshooting]):\n>python ../../../PRSMD/simulateAmber.py ${PRMTOP} ${RST_R} Zncat.RST proRmd.dcd\nWe will perform a cluster analysis for the trajectories of pro-S and pro-R PRS MD sampling. In this example, we generate a total of 50 clusters, based on the atoms of the active pockets residues. The representative structures are further subjected to be truncated into a cluster model.\nCreate a new directory “ClusterPRS” for the pro-S and pro-R PRS cluster analysis and move there. Copy the script “Cluster.sh” into this folder:\n>cd ../\n>mkdir ClusterPRS\n>cd ClusterPRS/\n>cp ../../../PRSMD/Cluster.sh ./\nDo cluster analysis for pro-S PRS in folder “ClusterPRS”:\n>sh Cluster.sh ${PRMTOP} ../PRSMD/proSmd.crd proS 50\nDo cluster analysis for pro-R PRS in folder “ClusterPRS”:\n>sh Cluster.sh ${PRMTOP} ../PRSMD/proRmd.crd proR 50\nPrepare the truncated cluster model of pro-S and pro-R PRS. These cluster models were used for the following QM/MM calculations.\nReturn to the folder “QMMM” and you will find the script “genClusterPDB.sh” and three templates of input (“TemplateFix.gjf”, “TemplatePRS.gjf”, and “TemplateTS.gjf”) of “GAUSSIAN” program are there. We also need to reset the “PRMTOP” variable.\n>cd ../\n>PRMTOP='../LeapModelling/3wle_chainA_21ar_H_solv.prmtop'\nGenerate a cluster model for pro-S PRS structure. This is done with the script “genClusterPDB.sh”:\n> sh genClusterPDB.sh ${PRMTOP} ClusterPRS/proS.c0.rst7 proSc0.pdb\nNote: In the pro-S cluster model, the truncated bonds need to be saturated with hydrogen. For convenience for following script steps, we can save the atoms bonded to the truncated bonds in this step (see the atoms of truncated bonds shown in spheres in Figure 8[href=https://www.wicell.org#fig8]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2656-Fig8.jpg\nFigure 8. Cluster models of representative structures from PRS MD trajectories",
    "Pymol visualization of “proSc0.pdb” (left) and “proRc0.pdb” (right) generated with a representative structure from cluster analysis for pro-S and pro-R PRS MD trajectories, respectively. These are the initial conformations for QM/MM calculations. The atom (C, N, and O) shown in spheres within the truncated bonds will be replaced with hydrogen atoms in the following script steps.\nGenerate a cluster model for pro-R PRS structure.\n>sh genClusterPDB.sh ${PRMTOP} ClusterPRS/proR.c0.rst7 proRc0.pdb\nNote: In the pro-R cluster model, the truncated bonds need to be saturated with hydrogen. For convenience for following script steps, we can save the atoms bonded to the truncated bonds in this step (see the atoms of truncated bonds shown in spheres in Figure 8[href=https://www.wicell.org#fig8]).",
    "We will adjust the truncated structure to create a reasonable initial guess for TS searching in the QM/MM calculation. This will be done using the “GaussView” software. As reported in previous studies, the transition state (TS) for the hydride transfer step features the transferring hydride being equidistant from the donor carbon of the cofactor NADH and the acceptor carbon of the substrate, with distances ranging between 1.30–1.35 Å.1[href=https://www.wicell.org#bib1],16[href=https://www.wicell.org#bib16],17[href=https://www.wicell.org#bib17] To begin, open the PDB file (“proSc0.pdb” in this example) of the pro-S cluster model in “GaussView”. Select the “Modify bond” button from the toolbar and click a pair of atoms (label 4, 64, and 66 in this example) whose interatomic distance you want to modify. Adjust the bond length between the transferring hydride (label 66) and donor carbon (label 64) to ∼1.35 Å by moving the slider along the scale of the “Bond Semichem SmartSlides” dialog, then click “OK” to save the modification. Next, click the transferring hydride (label 66) and acceptor carbon (label 4) and adjust the interatomic distance to ∼1.35 Å in the popped dialog. Click the “OK” button to save the change. Finally, save the modified files as a new file (“proSc0.gjf” in this example) with a gaussian input file format from the “file” menu of the control panel. Similarly, Open the pro-R PRS structure (“proRc0.pdb” in this example), adjust the geometry as described above, and save it as a new file (“proRc0.gjf” in this example).\nQM/MM calculations for locating the TS and PRS corresponding to pro-S and pro-R states.\nWe will generate the “Gaussian” input file for QM/MM calculations, in which the distance between hydride and donor carbon and the distance between hydride and acceptor carbon are frozen during the calculations. This is done with the script “genQMMM.sh” in this folder. Run it as the following commands:",
    ">sh genQMMM.sh TemplateFix.gjf proSc0.gjf > proSc0_F.gjf\n>sh genQMMM.sh TemplateFix.gjf proRc0.gjf > proRc0_F.gjf\nUse the program “Gaussian” to perform the QM/MM partial optimizations (freeze the distances between hydride and donor/acceptor carbon). Troubleshooting 5[href=https://www.wicell.org#troubleshooting].\n>g16 proSc0_F.gjf\n>g16 proRc0_F.gjf\nThe results can be visualized in “GaussView”. Open the “Gaussian” output file within “GaussView”, and the partially optimized structures of pro-S and pro-R will look like Figures 9[href=https://www.wicell.org#fig9]A and 9D.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2656-Fig9.jpg\nFigure 9. The structures in QM/MM calculations\n(A and D) The partial optimized initial guess (freeze distances) for pro-S (A, “proSc0_F.log” file) and pro-R (D, “proRc0_F.log” file).\n(B, C, E, and F) TS searching, the optimized TS for pro-S (B, “proSc0_TS.log” file) and pro-R (E, “proRc0_TS.log” file), and the optimized PRS for pro-S (C, “proSc0_PRS.log” file) and pro-R (F, “proSc0_PRS.log” file). The QM region is shown as ball and sticks, and the MM region is shown as tubes.\nExtract the partially optimized geometry (initial guess of TS for pro-S) from the “Gaussian” output of the last step. Then, generate the input file of “Gaussian” for TS searching, using the template file “TemplateTS.gjf”. This is done with the scripts “MolSpec.py” and “genQMMM.sh” from the copied folder “QMMM”. Run these scripts as the following commands:\n>python3 MolSpec.py proSc0_F.log\n>sh genQMMM.sh TemplateTS.gjf GauMolStru.gjf > proSc0_TS.gjf\nSimilarly, we will extract the partially optimized geometry (initial guess of TS) of pro-R from the “Gaussian” output of the last step. Then, we will generate the input file of “Gaussian” for TS searching corresponding to pro-R, using the template file “TemplateTS.gjf”.\n>python3 MolSpec.py proRc0_F.log\n>sh genQMMM.sh TemplateTS.gjf GauMolStru.gjf > proRc0_TS.gjf\nUse “Gaussian” to perform TS searching corresponding to pro-S and pro-R, respectively. Troubleshooting 5[href=https://www.wicell.org#troubleshooting].\n>g16 proSc0_TS.gjf\n>g16 proRc0_TS.gjf",
    "The results can be visualized by “GaussView”. Open the “Gaussian” output file with “GaussView” and the TSs of pro-S and pro-R may be like Figures 9[href=https://www.wicell.org#fig9]B and 9E.\nWe will prepare the input files of PRS optimization using the program “GaussView”. Open the result file “proSc0_TS.log” from pro-S TS searching with “GaussView”. Select the “Modify bond” button from the toolbar and click the transferring hydride (label 66 in “GaussView”) and donor carbon (label 64 in “GaussView”) in the cofactor NADH. When the “Bond Semichem SmartSlide” dialog opens, set the “Displacement” fields of transferring hydride to “Translate Atom”, and donor carbon to “Fixed”. Then, decrease the distance between them by 0.04 Å by moving the slider along the scale in the popped dialog, and click the “OK” button to save the change. Finally, save it to a new file (“proSc0_PRSini.gjf” in this example) in the Gaussian input file format from the “File” menu of the control panel. Similarly, open the result file “proRc0_TS.log” from pro-R TS searching and adjust the geometry as described above. Save the modified geometry to a new file (“proRc0_PRSini.gjf” in this example) in the Gaussian input file format.\nPrepare the input of “Gaussian” for PRS optimization corresponding to pro-S and pro-R, respectively.\n>sh genQMMM.sh TemplatePRS.gjf proSc0_PRSini.gjf > proSc0_PRS.gjf\n>sh genQMMM.sh TemplatePRS.gjf proRc0_PRSini.gjf > proRc0_PRS.gjf",
    "Optional: If you want to use a script to prepare the input of pro-S and pro-R PRS optimization instead of manually adjusting the geometry in the “GaussView”. As an alternative for the last two steps, you can use the script “genPRS.sh” in the “QMMM” folder to generate the input of pro-S and pro-R PRS optimization without manually adjusting the structure. This script needs five arguments (template for PRS optimization, TS structure extracted by “MolSpec.py”, the label of donor carbon, the label of hydride, and the increment of distance between the formerly provided atoms):\n>python3 MolSpec.py proSc0_TS.log\n>sh genPRS.sh TemplatePRS.gjf GauMolStru.gjf 64 66 -0.04 > proSc0_PRS.gjf\n>python3 MolSpec.py proRc0_TS.log\n>sh genPRS.sh TemplatePRS.gjf GauMolStru.gjf 64 66 -0.04 > proRc0_PRS.gjf\nUse “Gaussian” to perform PRS optimization corresponding to pro-S and pro-R, respectively. Troubleshooting 5[href=https://www.wicell.org#troubleshooting].\n>g16 proSc0_PRS.gjf\n>g16 proRc0_PRS.gjf\nThe results can be visualized by “GaussView”. Open the “Gaussian” output file with “GaussView” and the optimized pro-S and pro-R PRS may be like Figures 9[href=https://www.wicell.org#fig9]C and 9F."
  ],
  "subjectAreas": [
    "Chemistry",
    "Bioinformatics",
    "Physics",
    "Computer Sciences",
    "Systems Biology",
    "Structural Biology",
    "Protein Biochemistry"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}