{
  "id": 1774,
  "origin_website": "Cell",
  "title": "Tracking neuronal motility in live murine retinal explants",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nSetting up retina for live imaging\nTiming: 20 min\nThis step describes the retrieval of retinae either from living mice or from retinal explant cultures at desired developmental stage to set them up for live imaging. Herein contained are details on retinal dissection, tissue mounting, and live imaging culture set up. Live imaging experiments were performed on an upright confocal microscope; for an inverted microscope the setup would have to be modified accordingly.\nRetrieval of retina. When isolating retinae from live mice or retinal explant cultures, follow steps ‘a.’ or ‘b.’, respectively.\nRetrieval from live mice.\nSacrifice mice by cervical dislocation.\nEnucleate eyes and transfer to ice-cold RPMI 1640 medium using forceps (Figure 1[href=https://www.wicell.org#fig1]A).\nIsolate neural retina (tissue composed of cells of the outer nuclear layer, inner nuclear layer, and ganglion cell layer) by dissection under a dissection microscope in ice-cold RPMI 1640 medium by removing all non-neural tissues (cornea, sclera, iris, choroid, lens, optic nerve, retinal pigment epithelium, and ciliary body) using forceps (Figures 1[href=https://www.wicell.org#fig1]B and 1C).\nCritical: Upon removal of the lens during retinal dissection, ensure that vitreous is removed as well. Failure to remove vitreous can impede the flattening process (also applies to 1.b.ii).\nCritical: Care must be taken to remove all pigmented non-neural retinal tissues (retinal pigment epithelium and ciliary body) as the melanin pigment contained in these tissues absorbs the 2-photon infrared light leading to rapid heat-induced tissue damage when the microscope is operated in 2-photon mode (also applied to 1.b.ii).\nRetrieval from retinal explant cultures.\nTransfer retina from explant culture to ice-cold RPMI 1640 medium.\nIsolate neural retina by dissection under a dissection microscope in ice-cold RPMI 1640 medium by removing lens with forceps.\nFlattening and mounting retina.",
    "Apply four equidistant radial cuts using fine scissors going halfway towards the centre of the retina. This results in ‘petal’ like retinal segments (Figure 1[href=https://www.wicell.org#fig1]D).\nTransfer retina in a small drop of RPMI 1640 medium onto the edge portion of a microscopy glass slide using a sterile plastic Pasteur pipette with manually widened opening (Figure 1[href=https://www.wicell.org#fig1]I) such that photoreceptors face the glass slide and retinal ganglion cells face the user (Figure 1[href=https://www.wicell.org#fig1]D).\nCarefully flatten retina onto glass slide by unfolding petals using fine forceps. Petals will resist flattening due to natural curvature of the retina. Flattening is aided by removing some of the RPMI 1640 (Figure 1[href=https://www.wicell.org#fig1]E).\nCritical: Care must be taken to not introduce tissue damage during flattening and unfolding petals. This may be aided by using a clean, fine brush. Even small tissue disruption may result in visible loss of retinal integrity during live imaging.\nCritical: (2.c.-3.b.) During these steps, the retina will be exposed to minimal amounts of RPMI 1640 medium at times. Care must be taken to not let the retina dry out.\nAfter successful flattening, remove most of RPMI 1640 medium using lint-free tissue paper.\nImmediately place a 0.45 μm MF-Millipore™ nitrocellulose membrane on the retina (with ganglion cell layer touching the membrane) making sure tissue is securely mounted on the membrane (Figure 1[href=https://www.wicell.org#fig1]F).\nGently transfer membrane-mounted retina back into RPMI 1640 medium by dipping the edge of the glass slide into medium (Figure 1[href=https://www.wicell.org#fig1]G). The membrane will gradually become visibly hydrated when contacted by the solution, upon completion of which the membrane can be fully transferred using the dissection tools (Figure 1[href=https://www.wicell.org#fig1]H).\nSetting up imaging dish for live imaging (Figure 2[href=https://www.wicell.org#fig2])\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1226-Fig2.jpg\nFigure 2. Live imaging setup schematic",
    "Fix membrane with retina facing up to the bottom of a Ø5.5 cm tissue culture petri dish on a thin layer of vacuum grease.\nTo ensure secure mounting and to prevent tissue drifting during live imaging, carefully press down membrane onto vacuum grease using blunt tools. Place a platinum ring over the membrane, the added weight of which should further prevent tissue drifting.\nFill the dish with 10 mL DMEMgfp-2 live imaging medium.\nLive imaging setup and recording\nTiming: 45 min set up; up to ∼ 12 h time-lapse recording\nThe following steps describe setting up the retinal live imaging session (see also Figure 2[href=https://www.wicell.org#fig2]), at the end of which the user will have generated a time-lapse recording of the fluorescently labelled retinal cells. We routinely used a 2-photon microscope set-up to reduce phototoxicity and to increase photon tissue penetration and z resolution.\nTransfer imaging dish containing flat-mounted retina to microscope environmental chamber pre-equilibrated to 37°C/5% CO2.\nCritical: Allow tissue to acclimatize to 37°C/5% CO2 for at least 30 min prior to initiating time-lapse recording to prevent temperature gradient induced tissue drifting.\nCarefully introduce a water-immersion objective pre-sterilized with 70 % ethanol into the live imaging medium. We routinely used 25× and 40× water-immersion objectives (NA = 0.95 and 0.8 respectively).\nAffix CO2 supplying apparatus to the live imaging dish.\nIdentify suitable field of view to be subjected to time-lapse recording by scanning through microscope eyepiece.\nTune the multiphoton laser source to a wavelength suitable for 2 photon-excitation of the fluorescent protein(s) of interest (e.g., 920 nm for EGFP).\nFurther, ensure that laser and detector(s) have been properly set up for signal detection.\nNote: In 2-photon mode, the pinhole of confocal microscopes should be fully dilated.",
    "Apply a layer of paraffin oil, pre-equilibrated to 37°C, on top of the live imaging medium to prevent medium evaporation during time-lapse recording.\nInitiate time-lapse recording. In Aghaizu et al. (2021)[href=https://www.wicell.org#bib1], we acquired xyzt image series at a resolution of 512 × 512 pixels, at a step size of 1 μm and at 10 min intervals. Imaging duration frequently reached up to 12 h, although this is critically dependent on starting tissue health/integrity.\nCritical: Any pigmented cells present within the field of view will absorb infrared light (i.e. 2-photon laser light) and rapidly heat up the tissue, rapidly bringing about tissue destruction.\nNote: It is recommended to ensure on occasion that the intended field of view remains in focus; in the event of tissue drift appropriate adjustments are to be made by user.\nNote: When imaging photoreceptors, early stages of deteriorating tissue health most frequently presented themselves as individual photoreceptors apically extending out of the outer nuclear layer (see Figure 4[href=https://www.wicell.org#fig4]A, bottom right panel for an example of apically extruding photoreceptors). Further deterioration usually entails full apical ‘ejection’ of individual and subsequently bigger groups of photoreceptors until tissue integrity is fully compromised.\nIn silico processing of time-lapse recording and cell tracking\nTiming: minimum 30 mins but can be significantly longer depending on image quality, number of cells to be tracked, and implementation of manual track validation.\nUpon completion of time-lapse recording, generated xyzt image series are to be processed and subjected to cell tracking.\nProcess xyzt image series in Fiji/ImageJ (Schindelin et al., 2012[href=https://www.wicell.org#bib8]) with standard imaging processing tools available, such as noise reduction, to achieve maximum possible image quality and signal to noise ratio. Ensure that processing steps are kept consistent.",
    "Register xyzt image series (in silico correction of tissue drift), as some amount of tissue drifting during time-lapse recording is common. This can be accomplished in Fiji/ImageJ either with the ‘Correct 3D drift’ plug-in (Parslow et al., 2014[href=https://www.wicell.org#bib6]) for automated drift correction based on automated landmark recognition or the ‘Descriptor-based series registration (2D/3D + t)’ plug-in (Preibisch et al., 2010[href=https://www.wicell.org#bib7]) in cases where automated registration failed and registration landmarks had to be defined manually.\nExport registered xyzt image series as ∗.tif file.\nPerform cell tracking using software of choice. In Aghaizu et al. (2021)[href=https://www.wicell.org#bib1] we used the spot tracking tool within IMARIS software. IMARIS software is able to identify rod cell bodies based on the preceding input of size and location parameters (Methods video S1[href=https://www.wicell.org#mmc1]; video still shown in Figure 3[href=https://www.wicell.org#fig3]). Rod somata were typically ellipsoid in shape, measuring ∼ 5 μm along the short (lateral) and ∼ 7.5 μm along the long (radial) axis and are typically located deeper within the tissue compared to the developing bulbous segment structures.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1226-Fig3.jpg\nFigure 3. IMARIS tracking of rod somal motility in xyzt image stacks obtained from time-lapse recordings\nThis image is a still captured from Methods video S1[href=https://www.wicell.org#mmc1]. Scale bar, 50 μm.\nNote: Once set up, cell tracking in the IMARIS spot tracking tool is fully automated. Nonetheless, we recommend manually validating the generated trajectories to avoid including data artifacts into subsequent analysis steps.\nExport completed cell tracking data as ∗.xls file.\n    Your browser does not support HTML5 video.\n  \nMethods video S1. IMARIS tracking methodology (see also Figure 2; related to step 15)\nData processing and analysis",
    "The primary data outputs from the processing and analysis steps will be average mean squared displacement (AvMSD) as well as instantaneous velocity and instantaneous acceleration values for the population of cells analysed. In Aghaizu et al. (2021)[href=https://www.wicell.org#bib1], these were generated by importing IMARIS-generated tracking information into Matlab followed by execution of custom-written Matlab scripts (available on the project Github repository on https://github.com/RPearsonLab/Photoreceptor_tracking[href=https://github.com/RPearsonLab/Photoreceptor_tracking]).\nArrange IMARIS-generated tracking data in Microsoft Excel according to Table 1[href=https://www.wicell.org#tbl1]. ‘#’ denotes numbered data point ID in Excel; ‘Trajectory ID’ denotes unique numbered identifier of individual trajectories; ‘Time index’ denotes time point within time-lapse recording, at which data point was generated (note that this is in integer rather than time units); ‘Position x/y/z’ denotes 3D positional information.\ntable:files/protocols_protocol_1226_5.csv\nNote: Matlab scripts were designed to read-in tracking data in the format specified in Table 1[href=https://www.wicell.org#tbl1]. The user is advised to either manipulate data to match Table 1[href=https://www.wicell.org#tbl1] or to modify Matlab script accordingly.\nOpen and run the Matlab script 'MSDforztrackingdata.m' (see Github project repository) to read-in trajectory data and to calculate AvMSD & standard error values. Users will be prompted to navigate to the source trajectory file upon initiation of the script.\nAvMSD will be calculated according to the equation\n  M S D  (  Δ t  )  =   1  N − n    ∑  i = 1   N − n     [  z  (   (  i + n  )  δ t  )  − z  ( i δ t )   ]  2",
    "where   z  (  i δ t  )    and   z  (   (  i + n  )  δ t  )    are the z positions of a given nucleus at time frames   i δ t   and    (  i + n  )  δ t   respectively, n is an integer representing the time interval between those positions and N is the total number of time points within the time-lapse recording. The only script manipulation required to run 'MSDforztrackingdata.m' is to specify the range of trajectory IDs to be analysed from source file (e.g.,: 1, 2, 3,…, n); line 134.\ngroup = [1, 2, 3];\nNote: The above formula calculates the MSD at all possible time lags and produces averages within individual trajectories as well as the entire group of specified trajectories. For instance, at a time lag of 2 according to Table 1[href=https://www.wicell.org#tbl1], all possible MSDs between time indices 1 & 3, 2 & 4, and 3 & 5 for trajectories 1–3 are calculated and averaged to produce the AvMSD value at time lag 2.\nUpon completion of script 'MSDforztrackingdata.m', the Matlab will have generated result outputs in Vector/matrix format denoted ‘AvMSD’ and ‘standarderrors’ containing AvMSD and standard error values with increasing time lag.\nNote: For our cell type of interest (photoreceptors), motility occurred predominantly along the z axis (radial) rather than in xy (lateral) directions. AvMSD and instantaneous velocity calculations in the Matlab script are thus based exclusively on z motility and the user is advised to adjust the Matlab script accordingly for higher dimensional analyses.\nOpen and run 'ztrajectory_gen.m' to convert read-in trajectory data stored in array format into matrix 'ztrajectories'. Individual trajectories are listed by row.\nlengths = ones(length(trajectories),1);\nfor i = 1:length(trajectories)\n  lengths(i) = length(trajectories{i});\nend\nt = max(lengths);\nztrajectories = zeros(length(trajectories),t);\nfor i = 1:length(trajectories)\n  if trajectories{i}(1,2) > 1",
    "leading = NaN∗ones(length(1:(trajectories{i}(1,2)-1)),1);\n  else\n    leading = [];\n  end\n  if trajectories{i}(end,2) < t\n    trailing = NaN∗ones(length(trajectories{i}(end,2):t-1),1);\n  else\n    trailing = [];\n  end\n  ztrajectories(i,:) = [leading;trajectories{i}(:,5);trailing];\nend\nOpen and run 'Trajectory_analysis.m' for further kinetic analyses (instantaneous velocity, instantaneous acceleration) of trajectory data generated in (17.) and (18.). Upon completion, the Matlab script will have generated result outputs in matrix format denoted ‘dfff2’ and ‘d2fff2’ containing smoothened instantaneous velocity and acceleration values respectively. ‘dyyy’ contains un-smoothened instantaneous velocity data.\nddd = ztrajectories;\nncells = size(ddd,1);\nnsamples = size(ddd,2);\nxxx = nan(ncells,nsamples);\nyyy = nan(ncells,nsamples);\nfor icell = 1:ncells\n  x = find(isfinite(ddd(icell,:)));\n  y = ddd(icell,x);\n  xq = min(x):max(x);\n  yq = interp1(x,y,xq,'linear');\n  xxx(icell,xq) = xq;\n  yyy(icell,xq) = yq;\nend\nfff = filter( [1 1 1]/3, 1, yyy' )';\nfff(:,[1:3 end-2:end]) = NaN;\nfff = circshift(fff,[0 -1]);\ndyyy = diff(yyy,1,2)./10;\nz = nan(ncells,1);\ndyyy = horzcat(dyyy,z);\ndfff = diff(fff,1,2)./10;\nz = nan(ncells,1);\ndfff = horzcat(dfff,z);\nwindowsize = 4;\nb = (1/windowsize)∗ones(1,windowsize);\na = 1;\ndim = 2;\ndfff2 = filter(b,a,dfff,[],dim);\ndfff2 = circshift(dfff2,[0 -1]);\nd2fff = diff(dfff,1,2);\nz = nan(ncells,1);\nd2fff = horzcat(d2fff,z);\nwindowsize = 4;\nb = (1/windowsize)∗ones(1,windowsize);\na = 1;\ndim = 2; % to filter rows, not columns\nd2fff2 = filter(b,a,d2fff,[],dim);\nd2fff2 = circshift(d2fff2,[0 -1]);\nNote: Matlab script was custom written for time-lapse recordings acquired at 10 min intervals. This is reflected in instantaneous velocity calculations, where velocity between consecutive frames (μm/10 min) needed to be divided by 10 to obtain instantaneous velocity (μm/min) (lines 59 and 64 in 'Trajectory_analysis.m').\nPlot and interpret data generated in (17.) and (19.) in software of choice, e.g., Matlab or Graphpad Prism.\nPlot AvMSD (± standard errors) vs time lag (e.g., 0, 10, 20, 30,…n min). Depending on the nature of motility, AvMSD vs time lag curves will be either linear or curved.",
    "A linear AvMSD vs time lag curve is produced if random/non-directional motion dominates in the population of analysed cells. Here, the MSD is a linear function of elapsed time Δt,\n  M S D = 2 R D Δ t  \nwith a one-dimensional slope of 2RD = 2D, where R is the dimensionality (in the present study, R = 1) and where D is the coefficient of movement. Apply linear function curve fitting to obtain the slope ‘2D’ and subsequently calculate ‘D’ to quantitatively compare AvMSD steepness.\nDirected motions in the analysed cell population result in AvMSD vs time lag curves with positive curvature. Here, the MSD displays a quadratic dependence on elapsed time. Apply quadratic function curve fitting\n  y = a  x 2   \nto obtain the quadratic factor ‘a’ as numerical representation of curve steepness.\nPlot instantaneous velocity and acceleration values as histograms to show frequency distributions."
  ],
  "subjectAreas": [
    "Microscopy",
    "Cell Biology",
    "Neuroscience",
    "Developmental Biology",
    "Model Organisms"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Bioengineering & Technology",
    "Molecular Biology & Genetics"
  ]
}