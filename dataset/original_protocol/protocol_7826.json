{
  "id": 8234,
  "origin_website": "Bio",
  "title": "Spindle Angle Measurements",
  "procedures": [
    "Stain cells for spindle poles and mitotic spindle using the above-mentioned antibodies and according to the following protocol   Cells grown on 12 mm round coverslips (#1.5) are fixed for 5 minutes at -20 °C in MeOH.   Rehydrated in 1x PBS for 5 minutes and saturated in 1x PBS/1% BSA for at least 30 minutes at room temperature.   Incubated for 2 hours at room temperature with primary antibodies in 1x PBS/1% BSA.    After 3 washes of few seconds in 1x PBS/1% BSA, cells are incubated for 1 hour at room temperature with secondary antibodies coupled to fluorophores and DAPI (to stain DNA, DAPI was used at 0.5 μg/ml) in 1x PBS/1% BSA.    After 3 washes in 1x PBS/1% BSA, coverslips are mounted onto glass slides using either Vectashield® or ProLong® Gold.      Imaging analysis   Acquire Z stacks with a 63x/100x PLAN APO lens. Use Nyquist/Shannon criterion for Z step calculation (0.24 μm for this lens). Image quality must be good enough so that poles are clearly identified.    Make sure the acquisition software calibrates the image (i.e. voxel size is included in the image Metadata). If not, the macro will request to calibrate the Image. XY pixel size can be derived from (physical camera pixel size*camera binning)/(Objective Magnification*tube lens magnification).   Save the Macro text into a 3Dangle.txt file in the Macro subfolder in the ImageJ directory. Install the macro using Plugins>Macros>Install. Select the point selection tool (if multipoint selection tool is selected, right click to switch). Double click on the point tool icon to select the automeasure option. Alternatively, run the macro once (Plugins>Macros>3Dangle).    Using the point selection tool set as indicated in step B3, click on the two spindle poles. Then run the macro (Plugins>Macros>3Dangle). The macro uses the first two lines of the result table to compute the angle.",
    "The calculated angle is indicated in the log window. Then, the result table is cleared.      Macro run(\"Point Tool...\", \"mark=0 auto-measure label selection=yellow\"); run(\"Set Measurements...\", \" redirect=None decimal=3\"); IsCalibratedImage(); x1=getResult(\"X\", 0); y1=getResult(\"Y\", 0); z1=getResult(\"Slice\", 0); x2=getResult(\"X\", 1); y2=getResult(\"Y\", 1); z2=getResult(\"Slice\", 1); xmag1=x1; ymag1=y1; zmag1=0; xmag2=(x1-x2); ymag2=(y1-y2); zmag2=(z1-z2); // scalar product product = (xmag1*xmag2) + (ymag1*ymag2) + (zmag1*zmag2); // magnitude horizontal vector 1 (points 1- to (0,0,z1) length1 = sqrt(xmag1 * xmag1 + ymag1*ymag1 + zmag1*zmag1); // magnitude vector 2 (points 1-2) length2 = sqrt(xmag2 * xmag2 + ymag2*ymag2 + zmag2*zmag2); degrees = acos(product/length1/length2); print(\"3d angle is \" + degrees + \" degrees\"); run(\"Select None\"); run(\"Clear Results\"); exit(); }  function IsCalibratedImage() { um=\"um\"; getVoxelSize(width, height, depth, unit); if(unit==\"pixels\" || unit==\"microns\" || unit==\"micron\")              {              if (width==0 || width==1)                          {                          Dialog.create(\"Image Calibration:\");                          Dialog.addMessage(\"Image has to be calibrated \\nPlease enter the following parameters\");                          Dialog.addNumber(\"x , y pixel size: \", 0, 3, 5, um);                          Dialog.addNumber(\"Z step: \", 0, 3, 5, um);                          Dialog.show();                          XYscale=Dialog.getNumber();                          Zscale=Dialog.getNumber();                          n=nSlices;                          run(\"Properties...\", \"channels=1 slices=n frames=1 unit=um pixel_width=\"+XYscale+\"                          pixel_height=\"+XYscale+\" voxel_depth=\"+Zscale+\" frame=[0 sec] origin=0,0\");                          return;                          }              } }"
  ],
  "subjectAreas": [
    "Cell Biology",
    "Biochemistry"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics"
  ]
}