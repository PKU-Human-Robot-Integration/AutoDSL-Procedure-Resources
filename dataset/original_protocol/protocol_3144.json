{
  "id": 3327,
  "origin_website": "Cell",
  "title": "Deriving a continuum score for group 3 and 4 medulloblastoma tumor samples analyzed via RNA-sequencing or DNA methylation microarray",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nContinuum score assignment (RNA-sequencing)\nTiming: ∼5–15 min (Timing can vary\n      depending on the number of samples in your dataset)\n    \n      Here, we project our existing NMF model onto a previously unseen group\n      3/group 4 medulloblastoma RNA-sequencing dataset to derive a continuum\n      score for each sample. Several R packages, custom functions and data\n      objects are required. Data objects and functions can be found in the\n      associated GitHub repository (https://github.com/hackingjpr/Group3-4App[href=https://github.com/hackingjpr/Group3-4App]). We also provide sample usage data along with expected outputs in the\n      GitHub. All in-silico analyses detailed in this\n      section are performed in R and require the following lines of code to be\n      run to set up the package environment and load the necessary data objects\n      prior to continuum score assignment:\n    \nWithin terminal.\nClone GitHub repository.\n> git clone\nhttps://github.com/hackingjpr/Group3-4App.git[href=https://github.com/hackingjpr/Group3-4App.git]\n/your/directory/\n# This will download the git repository into a directory of your\n            choosing\nWithin RStudio.\nInstall/load required R packages and their dependencies.\n> install.packages(\"NMF\", dependencies = TRUE)\n> install.packages(\"MASS\", dependencies = TRUE)\n> BiocManager::install(\"biomaRt\")\n# For specific package versions, see\nkey resources table[href=https://www.wicell.org#key-resources-table]\nsection. When confronted with\nyes/no questions, answer yes to install dependency packages.\n> library(NMF)\n> library(MASS)\n# This loads the packages required into your working\n            environment.\nLoad required data objects.\nCritical: You MUST update\n      ‘/your/directory/’ to the location which you cloned the GitHub repository\n      in step 1.\n    \n> nmf.res <- readRDS(file = \"/your/directory/Group3-\n4App/StarProtocols_Guide/data/nmf.res.rds\")\n# This loads in the precalculated NMF model.\nLoad the required custom functions.\n> source(file = \"/your/directory/Group3-\n4App/StarProtocols_Guide/R/Project_NMF.R\")\n#Wrapper function used to project NMF model onto unseen\n            group3/group4 sample data. A function breakdown is provided below\n            (see\nFigure 1[href=https://www.wicell.org#fig1])\n        Load sample data as a matrix object.\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2914-Fig1.jpg\n              Figure 1. Step-by-step breakdown of project.NMF() function\n            \n> tpms.mat <- read.delim(\"/your/directory/Group3-\n4App/StarProtocols_Guide/data/tpms.mat.txt\")\nCritical: If you wish to use your own",
    "RNA-sequencing sample data, you must ensure that it follows the same\n      format as tpms.mat. This object is a matrix, where columns correspond to\n      samples and rows correspond to genes, with expression counts presented in\n      the transcripts per million (TPM) format or equivalent. All genes (rows)\n      must use HUGO gene nomenclature i.e., gene symbols. If your input dataset\n      is not annotated correctly, please see problem 1[href=https://www.wicell.org#sec5.1] in\n      the troubleshooting[href=https://www.wicell.org#troubleshooting] section. Note that a\n      column-rank normalization procedure is employed, this coupled with the NMF\n      projection and other normalization procedures renders the results somewhat\n      resistant to noise and compatible with representations of expression other\n      than TPM. We have for example used Rlog, or variance stabilized transforms\n      from DESeq or even other platforms such as Affymetrix microarray or\n      nanostring data with success.\n    \nNote: When projecting onto platforms other\n      than bulk RNA-seq, appropriate filtering strategies to remove invariant\n      genes/probes may be necessary.\n    \nProject NMF model onto sequencing data\n> tpms.H <- project.NMF(input.array =\n          as.matrix(tpms.mat),\nnmf.result = nmf.res)\n#Apply project.NMF function to input dataset. Function breakdown is\n            provided below (see\nFigure 1[href=https://www.wicell.org#fig1])\n        Extract Group 3 and Group 4 metagenes from data and transpose matrix.\n      \n> g3g4.tpms <- t(tpms.H[c(3,1),])\n#Rows 3 and 1 in tpms.H correspond to the metagenes for Groups 4\n            and 3 respectively\nApply logistic transformation to metagenes.\n> logistic.g3g4.tpms <- apply(g3g4.tpms,2,function(x){(1 / (1 +\n          exp(-x)))})\n# apply a logistic transformation\n> logistic.g3g4.tpms.score\n          <-apply(logistic.g3g4.tpms,1,function(x){x[2]/(x[1]+x[2])})\n# calculate a ratio between logistically transformed Group3 and\n            Group4 metagene\nScale values between 0 and 1.\n> scaling.function <- function(x){(x-min(x)) /\n          (max(x)-min(x))}\n# create a function to scale values between 0 and 1\n> logistic.g3g4.tpms.continuum.score <-\n          scaling.function(logistic.g3g4.tpms.score)\n# apply the function to the unscaled g3g4 scores\nCritical: If you are using a small\n      dataset or one that does not represent the full spectrum of Group 3/Group",
    "4 medulloblastomas you may want to omit this step and present unscaled\n      G3/G4 ratios (see Limitations below).\n    \nAlternatives: You may wish to\n      append to the precalculated G3/G4 ratios from Williamson et al. and then\n      scale together with your new samples in which case the following\n      alternative command should be used:\n    \n> scaling.function1 <- function(x){(x - 0.3953062) /\n          (0.5964371\n- 0.3953062)}\n# create a function to scale values between 0 and 1 using\n            Williamson et al. data)\n> logistic.g3g4.tpms.continuum.score <-\nscaling.function1(logistic.g3g4.tpms.score)\n# Apply scaling\nNote: Theoretically, this could lead to\n      some sample returning values under 0 or over 1. The user would need to\n      take a considered view on such samples. They could simply be producing\n      values close to 1 or 0 but otherwise consistent with samples at the\n      extreme limits of the G3/G4 continuum, in which case manually assigning\n      them the maximum 1 or minimum 0 value may be a valid approach. Should they\n      massively exceed previous limits they may simply be outliers or technical\n      artefacts that would be best noted but excluded from further analysis.\n    \nPresent output as data.frame for export.\n> logistic.g3g4.tpms.continuum.score <-\nas.data.frame(logistic.g3g4.tpms.continuum.score)\n> colnames(logistic.g3g4.tpms.continuum.score) <-\n          'Continuum Score'\n# Renaming for easier interpretation\n> write.csv(logistic.g3g4.tpms.continuum.score, file =\n'/your/directory/my_continuum_scores.csv ', row.names =\n          TRUE)\n#Export as .csv table\nContinuum score assignment (DNA methylation microarray)\nTiming: ∼5–15 min (Timing can vary\n      depending on the number of samples in your dataset)\n    \n      Here, we project our existing NMF model onto a previously unseen group\n      3/group 4 medulloblastoma DNA methylation dataset to derive a continuum\n      score for each sample. Several R packages, custom functions and data\n      objects are required, each of which can be found in the associated GitHub\n      repository (https://github.com/hackingjpr/Group3-4App[href=https://github.com/hackingjpr/Group3-4App]). We also provide example usage data along with expected outputs in the\n      GitHub. All in-silico analyses detailed in this",
    "section are performed in R, and require the following code to be run to\n      set up the package environment and load the necessary data objects prior\n      to continuum score assignment:\n    \nInstall/Load required packages and their dependencies\n> install.packages('mlbench', dependencies = TRUE)\n> install.packages('caret', dependencies = TRUE)\n> install.packages('randomForest', dependencies =\n          TRUE)\n# For specific package versions, see\nkey resources table[href=https://www.wicell.org#key-resources-table]\nsection.\n> library(mlbench)\n> library(caret)\n> library(randomForest)\n# This loads each package into your working environment\nCritical: You MUST update\n      ‘/your/directory/’ to the location which you cloned the GitHub repository\n      in step 1 of Continuum score assignment (RNA-Sequencing).\n    \nLoad in the prediction object\n> load(file = \"/your/directory/Group3-\n4App/StarProtocols_Guide/data/g3.g4.cont.rfe.Rdata\")\n# This loads in the precalculated random forest model\nLoad in example methylation dataset.\n> mvals.mat <- read.delim(\"/your/directory/Group3-\n4App/StarProtocols_Guide/data/mvals.mat.txt\")\nCritical: The random forest model in\n      this protocol requires that test data be provided as a matrix of M-values\n      (logit-transformed beta values), where columns correspond to sample ID and\n      rows correspond to probes. If your data is a matrix of beta values (object\n      below named as “your.betas”), you can easily convert these to M-values\n      using the following:\n    \n> mvals.mat <- log2(your.betas/(1-your.betas))\n#logit-transformation\nSubset M-Value matrix to probes used as predictors in model\n> mvals.mat <-\n          as.matrix(mvals.mat[predictors(g3.g4.cont.rfe),])\n#Removes probes that are not used for prediction\nAlternatives: If you are working\n      with data obtained using other methylation platforms such as bisulfite\n      sequencing (BS-Seq), it is still possible to derive a continuum score. A\n      typical BS-Seq methylation data output will contain Chromosome, Start and\n      End columns which can be used to ‘lift’ over CpGs that map to those\n      covered by the Illumina Methylation Manifest. This will create a matrix of\n      BS-Seq derived beta values that are annotated with associated Illumina\n      probe IDs that can be used to subset to the required predictors in the",
    "random forest model. Whilst BS-Seq methylation values are known to be\n      correlated to those obtained from the methylation array platform and in\n      theory should produce similar predicted continuum scores, it should be\n      noted that the random forest model in this protocol was not explicitly\n      trained using sample data from this platform. An example script that can\n      be used to achieve this is provided in a separate GitHub related to\n      processing whole genome bisulfite sequencing data at\n      https://github.com/tezla93/WGBS_MB/blob/main/InterPlatform/Liftover.R[href=https://github.com/tezla93/WGBS_MB/blob/main/InterPlatform/Liftover.R]\n        Apply test set to model and get predicted continuum scores using\n        predict()\n      \n> pred.cont.rand.for <-\n          as.data.frame(predict(g3.g4.cont.rfe,\nt(mvals.mat)))\n> write.csv(pred.cont.rand.for, file =\n'/your/directory/my_continuum_scores_Methylation.csv',\n          row.names = TRUE)\n#Export as .csv\nInteractive shiny app\nTiming: ∼5–10 min (Timing can vary\n      depending on number of samples in your dataset)\n    \n      An interactive Shiny app has been created in which user’s datasets can be\n      uploaded, continuum scores obtained, and downloaded, in either CSV or PDF\n      format. The relevant scripts and files can be downloaded from the GitHub\n      repository created to accompany this publication, this is located at:\n      https://github.com/hackingjpr/Group3-4App.git[href=https://github.com/hackingjpr/Group3-4App.git], an in-depth tutorial can be found in the GitHub Readme and on the app\n      itself, there is also a tutorial video (Methods video S1[href=https://www.wicell.org#mmc1]). If you wish to run the app on your own system, you may clone the\n      GitHub repository by directly downloading from the repository (see\n      ‘Continuum Score Assignment (RNA-Seq)’ section above.)\n    \n        Your browser does not support HTML5 video.\n      \n          Methods video S1. A video tutorial covering steps 1–4 of the Shiny App\n        \n      You may run the app on your machine using RStudio. Upon opening the\n      “app.R″ file you will either be able to run the app or will need to run\n      the whole block of code so that RStudio can recognize that it encodes a",
    "Shiny app. To run a block of code select it all with CTRL+ A and then run\n      it by pressing CTRL+ENTER. Further installation information is included in\n      the Group3-4App (https://github.com/hackingjpr/Group3-4App.git[href=https://github.com/hackingjpr/Group3-4App.git]) repository’s ReadMe file (README.md).\n    \n        Select Expression or Methylation and Upload Data: Select the appropriate\n        button on the left-hand side of app and then press “Browse...”\n      \nNote: For Methylation idat files, we\n      recommend uploading no more than 10 files at a time; this will speed up\n      the score generation and keep the PC’s memory use low. There is no limit\n      for expression samples, although with too many the resulting plots can\n      begin to look crowded.\n    \nCritical: If using your own\n      RNA-sequencing sample data, ensure that it follows the same format as\n      tpms.mat. tpms.mat is a matrix, where columns correspond to samples and\n      rows to genes. Expression counts need to be presented in the transcripts\n      per million (TPM) format or equivalent. All genes (rows) must use HUGO\n      gene nomenclature, i.e., gene symbols. If your input dataset differs to\n      this, please see problem 1[href=https://www.wicell.org#sec5.1] in the\n      troubleshooting[href=https://www.wicell.org#troubleshooting] section.\n    \nGenerate Group 3–4 Scores by clicking on the “Generate Group 3/4\n        Score” button.\n      \nNote: The app will take you to the results\n      tab once the scores are calculated. This tab will contain a table\n      displaying your samples and their group 3/4 score and three different\n      plots. These plots include placing your samples along the group 3/4\n      continuum and two survival curves. The first being a general survival\n      curve based on the patient’s score and the second showing the effect that\n      age can have on patient’s survival.\n    \nExport Data: Navigate to the Download tab, which is above your\n        results. You will export the results in either CSV or PDF format. CSV\n        will be the raw table and PDF will contain the table as well as any",
    "plots. Figure 2[href=https://www.wicell.org#fig2] shows an example of the plots\n        generated in the PDF file.\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2914-Fig2.jpg\n              Figure 2. An example of the plots generated and exported to PDF\n            \n              (A) Cumulative frequency plot showing where your samples lie upon\n              the continuum.\n            \n(B) Survival curve with no risk factors accounted for.\n(C) Survival curve taking into account patient’s age.\n(D) Table of raw group 3–4 scores.\nReset: If more samples are to be tested then press the reset\n        button, this takes you back to the start and allows you to upload more\n        samples."
  ],
  "subjectAreas": [
    "Rnaseq",
    "Sequence Analysis",
    "Bioinformatics",
    "Cancer",
    "Molecular Biology",
    "Sequencing"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}