{
  "id": 1976,
  "origin_website": "Cell",
  "title": "Gene coexpression analysis in Arabidopsis thaliana based on public microarray data",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nSample search and collection\nTiming: 2 days\nThe main aim of this protocol is to perform a condition-independent coexpression analysis for the species of interest. As such, the microarray samples need to be of various distinct healthy tissues and originate from the same Affymetrix microarray chip.\nSelect an Affymetrix microarray chip for the species of interest. To identify the most popular Affymetrix chip for the species of interest (in our case, Arabidopsis thaliana model plant organism), we performed a search in GEO (Barrett et al., 2013[href=https://www.wicell.org#bib1]):\nVisit GEO website: https://www.ncbi.nlm.nih.gov/geo/[href=https://www.ncbi.nlm.nih.gov/geo/]\nUnder Browse Content, click on Platforms\nIn the search field insert: Arabidopsis thaliana Affymetrix\nClick on “Samples” twice to sort by samples in descending order\nThis identified [ATH1-121501] Affymetrix Arabidopsis ATH1 Genome Array as the Affymetrix chip with the most available samples.\nNote: Try selecting an Affymetrix microarray chip that not only has a large number of open-access samples in public repositories but also includes a significant proportion of the genes of the selected organism. For example, ATH1-121501 Genome Array chip studies ∼24,000 genes, while AG Affymetrix Arabidopsis Genome Array studies only ∼8000 genes.\nSearch public repositories for ‘Arabidopsis thaliana’ keyword and the platform code of the microarray chip. Each repository uses a different platform code for each chip. Furthermore, alternative platform codes of the same chip and repository must also be examined.\nSearch ArrayExpress (Kolesnikov et al., 2015[href=https://www.wicell.org#bib11]) for ‘Arabidopsis thaliana’ and ‘A-AFFY-2’ (the platform code of ATH1-121501 in ArrayExpress) keywords.\nSearch Gene Expression Omnibus (GEO) for ‘Arabidopsis thaliana’ and ‘GPL198’ (the platform code of ATH1-121501 in GEO) keywords.\nDownload all experiments from Nottingham Arabidopsis Stock Centre (NASC) (Craigon et al., 2004[href=https://www.wicell.org#bib5]) repository using the following link: https://uniofnottm-my.sharepoint.com/:f:/g/personal/sean_may_nottingham_ac_uk/Ep5b_GCihv1Nu0EYxWpkZggBK-6kAgZjMfk-9JQWJPyXUg?e=nXhIrh[href=https://uniofnottm-my.sharepoint.com/:f:/g/personal/sean_may_nottingham_ac_uk/Ep5b_GCihv1Nu0EYxWpkZggBK-6kAgZjMfk-9JQWJPyXUg?e=nXhIrh]",
    "Critical: Arrange the series in different directories. Each series directory should contain the raw data (CEL files) of the samples of the series. <Series Main Directory> is the path of the directory that contains the directories of all series.\nPause point: Depending on the total number, study download might take a considerable amount of time.\nData Integrity Check.\nUnzip any zipped and/or gzipped CEL files, delete folders of studies which do not contain any CEL files and convert binary CEL files to text files using the following command in Ubuntu bash:\nphp Parsers/Uncompress_and_Convert.php <Series Main Directory>\nCheck if platform is “ATH1-121501” in each CEL file and delete those CEL files which are of different platforms, using:\nphp Parsers/Find_Non_ATH1.php <Series Main Directory>\nCheck and auto-delete duplicate CEL files, using:\nphp Parsers/Find_CEL_duplicates.php <Series Main Directory>\nCheckpoint: When our analysis was performed (13th June 2018), 19887 unique CEL files belonging to 1391 studies, were stored.\nSample normalization\nTiming: 1d to 2 months (Varies depending on the sample number)\nThe downloaded samples are normalized with Single Channel Array Normalization (SCAN). As the default Affymetrix CDF is outdated, the latest version of Brainarray (Dai et al., 2005[href=https://www.wicell.org#bib6]) CDF is used. This guarantees that each probe set corresponds to a single gene and vice versa.\nDownload the latest version of Brainarray CDF.\nVisit Brainarray Custom CDF download page: http://brainarray.mbni.med.umich.edu/Brainarray/Database/CustomCDF/CDF_download.asp[href=http://brainarray.mbni.med.umich.edu/Brainarray/Database/CustomCDF/CDF_download.asp]\nVisit the latest ENSG-based CDF page and copy the URL of the appropriate CDF package (“P” file from the “R Source Package” column, which contains the probe sequence and probe set definition data to be used by SCAN algorithm) in Arabidopsis thaliana ATH1121501 row.\nDownload the CDF in RStudio, using:\ninstall.packages(\"<copied url>\", repos=NULL, type=\"source\")\nExecute SCAN on the samples with the newly downloaded CDF in RStudio, using:\nlibrary(SCAN.UPC)\n#Custom CDF from Brainarray\nlibrary(ath1121501atensgprobe)\n#Get each series directory",
    "dirseries<-list.dirs(\"<Series Main Directory>\", full.names = TRUE)\n#Run SCAN on each series directory\nfor(dirhave in dirseries [2:length(dirseries)]){\n  #Set working directory\n  setwd(dirhave)\n  #Run SCAN\n  normalised=SCAN(\"∗.CEL\", probeSummaryPackage = ath1121501atensgprobe,\noutFilePath=\"SCAN_matrix.txt\")\n  #Show finished series\n  print(dirhave)\n}\nNote: In our computer setup, SCAN needs about 2–3 min to run for each sample of Affymetrix ATH1-121501 chip. As such, SCAN total execution time depends on the total number of samples. A matrix containing all ∼20,000 genes of the CDF and their expression values in each sample of a series is produced as SCAN_matrix.txt inside each series directory.\nPause point: Depending on the total number of samples, SCAN might be running for days, weeks or more than a month. The users should leave the computer running during this time, thus, the use of Uninterruptible Power Supply (UPS) is highly advisable.\nNavigate to ACT directory in Ubuntu terminal:\ncd ACT\npwd\nRecord the path of the ACT directory on your system. Replace it for <ACT path> in the following MySQL queries.\nParse all SCAN_matrix.txt files to a single txt file (expression.txt) in a 4-column format, using:\nphp Parsers/SCAN_Compile.php <Series Main Directory> >\ndata/expression.txt\nCheckpoint: expression.txt is a tab-delimited file of n∙m lines and 4 columns, where n is the number of genes and m in the number of downloaded samples.\nProduce the .txt files for the tables of the database using:\nchmod 755 db_files.sh\n./db_files.sh\nInsert the produced .txt files into local MySQL database in MySQL terminal using, the following commands in this order:\nLOAD DATA LOCAL INFILE '<ACT path>/data/sample.txt' INTO TABLE\nSample;\nLOAD DATA LOCAL INFILE '<ACT path>/data/samples.txt' INTO TABLE\nSamples;\nLOAD DATA LOCAL INFILE '<ACT path>/data/ENSG.txt' INTO TABLE\nENSG;\nLOAD DATA LOCAL INFILE '<ACT path>/data/probeset.txt' INTO\nTABLE ProbeSet;\nLOAD DATA LOCAL INFILE '<ACT path>/data/probesets.txt' INTO\nTABLE ProbeSets;\nLOAD DATA LOCAL INFILE '<ACT path>/data/selected_genes.txt'\nINTO TABLE Selected_Genes;",
    "LOAD DATA LOCAL INFILE '<ACT path>/data/expression.txt' INTO\nTABLE Expression;\nCheckpoint: selected_genes.txt is a single column file of n lines, where n is the number of genes which are described by the BrainArray CDF.\nSample quality control\nTiming: 1–2 weeks\nA series of quality controls with different metrics needs to be performed to guarantee high-quality samples. In addition, samples which come from whole plant experiments or are from infected or mutated samples need to be deleted from their directory. However, in most of the cases there is no way to parse programmatically the metadata for each sample, as their format may vary significantly, which can lead to loss of important sample details. Thus, extensive manual curation is required.\nAcquire quality control metrics for each series in RStudio, using:\nlibrary(oligo)\ndirseries<-list.dirs(\"<Series Main Directory>\", full.names = TRUE)\nfor(dirhave in dirseries[2:length(dirseries)]){\n  setwd(dirhave)\n  celFiles <- list.celfiles(dirhave, full.names=TRUE)\n  rawData <- read.celfiles(celFiles)\n  fit1 <- fitProbeLevelModel(rawData)\n  boxplot(fit1, main=\"NUSE\", ylim = c(0.95, 1.22),outline = FALSE,\ncol=\"lightblue\", las=3, whisklty=0, staplelty=0, cex.axis=0.5)\n  #export boxplot\n  dev.copy(pdf,'oligo_NUSE.pdf')\n  dev.off()\nIn each series directory, PDF files containing the RLE and NUSE boxplot (Bolstad et al., 2005[href=https://www.wicell.org#bib2]) for each sample of the study, are created.\nSamples whose RLE boxplot has an interquartile range (IQR) >0.4 or median >|0.2| (deviates from 0), are considered low-quality.\nSamples whose NUSE boxplot has a median >1.1 (deviates from 1), are considered low-quality.\nA php script was created to automatically delete samples based on the aforementioned out-of-range values. Perform automatic quality control and low-quality sample deletion in Ubuntu terminal, using:\nphp Parsers/oligo_QC_R.php <Series Main Directory>\nCritical: Manual quality control is still possible, by examining the RLE (Figure 2[href=https://www.wicell.org#fig2]) and NUSE (Figure 3[href=https://www.wicell.org#fig3]) pdf files.\nDownload the metadata for each series (encountered as SDRF files in ArrayExpress or Series Matrix files in GEO).",
    "Manually examine the metadata looking for certain keywords and fields. Delete the CEL files of samples:\nof species other than Arabidopsis thaliana\nthat are from ‘whole plant’, ‘whole organism’, etc\nof cell cultures (Table 1[href=https://www.wicell.org#tbl1])\nthat are mutated (Table 2[href=https://www.wicell.org#tbl2]) or infected (Table 3[href=https://www.wicell.org#tbl3])\nNote 1: Metadata files are available in .txt (tab delimited) format. There are certain fields such as “Tissue”, “Organism Part” or “Disease State” which are used to determine if a sample should be kept or deleted.\nNote 2: Since the aim of this protocol is to study the condition independent coexpression landscape of a species, the same procedure can be used for other organisms, keeping only healthy samples of distinct tissues.\nPause point: The users can pause and continue the metadata examination step at any point.\nAfter quality control is complete, only healthy single-tissue samples remain.\nCheckpoint: A large amount of samples might be deleted during the quality control process. In our case, only 6933 samples out of the 19887 remained.\nProduce sample names using:\nphp Parsers/Get_Sample_Names.php <Series Main Directory> >\ndata/Sample_Names.txt\nProduce selected sample index list using:\nphp Parsers/Create_Selected_Samples.php data/Sample_Names.txt>\ndata/Selected_Samples.txt\nInsert Selected_Samples.txt into Selected_Samples table in MySQL terminal, using:\nLOAD DATA LOCAL INFILE '<ACT path>/data/Selected_Samples.txt' INTO\nTABLE Selected_Samples;\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1458-Fig2.jpg\nFigure 2. RLE plots of two ArrayExpress studies\n(A) All samples of E-ATMX-1 study pass the quality control.\n(B) AtD3.CEL sample of E-ATMX-19 study does not pass the quality control, as its IQR > 0.4, thus it must be removed from the pool of samples.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1458-Fig3.jpg\nFigure 3. NUSE plots of two ArrayExpress studies\n(A) All samples of E-ATMX-7 study pass the quality control.\n(B) CHIP_313_B.CEL and CHIP_317_B.CEL samples E-ATMX-24 study do not pass the quality control, as their median > 1.1, thus, they should be removed from the pool of samples.\ntable:files/protocols_protocol_1458_1.csv",
    "“Cell culture 1”, “Cell culture 2” and “Cell culture 3” samples should be deleted, as they are from cell cultures, while the rest of the samples should be accepted as they are based on single tissues (“shoot” or “root”).\ntable:files/protocols_protocol_1458_2.csv\n“Zat10-OE-1”, “Zat10-OE-2” and “Zat10-OE-3” samples should be deleted, as they come from mutated plants, while “wildtype-1”, “wildtype-2” and “wildtype-3” samples should be accepted, as they are based on wild-type plants.\ntable:files/protocols_protocol_1458_3.csv\nAll samples except for “GSM1220702”, “GSM1220707”, ”GSM1220712”, “GSM1220717”, “GSM1220722”, “GSM1220727” should be deleted, as they come from infected plants.\nIdentification of most representative samples\nTiming: 1 day\nSelection of the most representative samples constitutes the best way to study condition-independent gene coexpression. Pearson Correlation Coefficients (PCCs, r-values) (Pearson, 1895[href=https://www.wicell.org#bib19]) between all sample pairs are computed, using their gene expression values. Using PCC-based pairwise distances, hierarchical clustering is performed with UPGMA (Sokal and Michener, 1958[href=https://www.wicell.org#bib22]) and a sample correlation tree is produced which is then automatically trimmed to contain the most representative leaf-samples.\nPCCs between all pairs of selected samples are calculated with the following formula:\n   (Equation 1)    r  x y   =     ∑   i = 1  n   (   x i  −  x ¯   )   (   y i  −  y ¯   )       ∑   i = 1  n    (   x i  −  x ¯   )  2  ∙   ∑   i = 1  n    (   y i  −  y ¯   )  2         \n   x i   : the expression value of gene   i   in sample   x  \n   y i   : the expression value of gene   i   in sample   y  \n   x ¯   : the median expression of all genes in sample   x  \n   y ¯   : the median expression of all genes in sample   y  \nCalculate PCCs between sample pairs:\nProduce the Sample expression file with the current Selected Samples and Selected Genes in Ubuntu terminal, using:",
    "php Parsers/Create_Expression_R.php Samples >\ndata/sample_expression.txt\nCheckpoint: sample_expression.txt is a tab-delimited file of n+1 lines and m+1 columns, where n is the number of genes and m in the number of samples that have remained after quality control.\nCalculate sample pairwise r-values and convert them to a distance value with d = 1 – r formula (Kassambara, 2017[href=https://www.wicell.org#bib10]) in RStudio, using:\nexpr_sample <- (read.table(\"<ACT\npath>/data/sample_expression.txt\", sep = \"\\t\", header = TRUE,\ncheck.names=FALSE))\nfastcor_sample <- 1 - cor(expr_sample)\nCreate the sample correlation tree with UPGMA hierarchical clustering algorithm, using the following commands in RStudio:\nlibrary(\"phangorn\")\nupgma_tree <- upgma(fastcor_sample)\nwrite.tree(upgma_tree, \"<ACT path>/data/samples_upgma.new\")\nSort the produced sample correlation tree using Newick Utilities (Junier and Zdobnov, 2010[href=https://www.wicell.org#bib9]) in Ubuntu terminal:\nnw_order data/samples_upgma.new > data/samples_upgma_sorted.new\nPrune the tree to a desired number of representative leaves (in our case the <leaf number to remain> is 3500 samples), using an in-house iterative phylogenetic algorithm pruning adjacent leaves:\nphp TreePrune/upgma_prune.php data/samples_upgma_sorted.new <leaf number to\nremain> > data/Representative_samples.new\nThose samples constitute the representative samples for the coexpression analysis.\nCheckpoint: Representative_samples.new is a Newick formatted file that contains as many leaves as the number of remaining samples (in our case 3500).\nObtain the leaf-sample names using:\nphp TreePrune/Tree_Names.php data/Representative_samples.new >\ndata/Representative_Sample_Names.txt\nand produce Selected Samples indexes using:\nphp Parsers/Create_Selected_Samples_from_Leaf_names.php\ndata/Representative_Sample_Names.txt >\ndata/Representative_Selected_Samples.txt\nEmpty Selected_Samples table in MySQL terminal, using:\ntruncate table Selected_Samples;\nthen insert Representative_Selected_Samples.txt into Selected_Samples table of local MySQL database using:\nLOAD DATA LOCAL INFILE '<ACT\npath>/data/Representative_Selected_Samples.txt' INTO TABLE\nSelected_Samples;\nPause point: The users can pause before performing the final step of the protocol.\nGene coexpression tree creation\nTiming: 2 days\nBy calculating the pairwise Pearson Correlation coefficients between all gene pairs from the representative samples, we can create a gene coexpression distance matrix which will be used as input for the construction of the gene coexpression tree.",
    "PCC-based distances between all pairs of selected genes are calculated with the previously mentioned formula (Equation 1[href=https://www.wicell.org#fd1]). However, in this case:    x i   : the expression value of gene   x   in sample   i      y i   : the expression value of gene   y   in sample   i      x ¯   : the median expression of gene   x   in all samples     y   ¯   : the median expression of gene   y   in all samples\nCalculate PCCs between gene pairs:\nProduce the Gene expression file with the current Selected Samples and Selected Genes in Ubuntu terminal, using:\nphp Parsers/Create_Expression_R.php Genes > data/gene_expression.txt\nCheckpoint: gene_expression.txt is a tab-delimited file of m+1 lines and n+1 columns, where n is the number of genes and m in the number of representative samples.\nCalculate gene pair r-values and convert them to a distance value in RStudio, using:\nexpr_gene <- (read.table(\"<ACT path>/data/gene_expression.txt\",\nsep = \"\\t\", header = TRUE, check.names=FALSE))\nfastcor_gene <- 1 - cor(expr_gene)\nCreate the gene coexpression tree with UPGMA hierarchical clustering algorithm, using the following commands in the same session of RStudio:\nlibrary(\"phangorn\")\nupgma_tree <- upgma(fastcor_gene)\nwrite.tree(upgma_tree, \"<ACT path>/data/genes_upgma.new\")\nSort the tree using Newick Utilities in Ubuntu terminal:\nnw_order data/genes_upgma.new > data/genes_upgma_sorted.new\nCheckpoint: genes_upgma_sorted.new is a Newick-formatted file that contains as many leaves as the number of genes.\nVisualize the tree in Dendroscope:\nOpen <ACT path>/data/genes_upgma_sorted.new in Dendroscope\nSelect Layout > Draw tree or network as rectangular phylogram\nUntick View > Sparse Labels\nPress Ctrl+F or click on the Binoculars icon in the Dendroscope toolbar to search for an AGI code of a gene of interest\nPaste the AGI code on the search field and press Enter. The leaf that corresponds to the gene of interest will be highlighted in yellow\nUsing the mouse wheel, zoom to a subtree node containing the highlighted gene of interest",
    "Left-click the last common ancestral node\nSelect Select > Advanced Selection > Select Subnetwork\nSelect Select > Invert Selection\nSelect Edit > Delete Taxa\nExport the subtree as Newick by clicking File > Export > Newick and saving it as a .new file\nThe gene list can be extracted from the subtree file using:\nphp <ACT>TreePrune/Tree_Names.php <subtree newick file> >\nsubtree_gene_list.txt\nCheckpoint: subtree_gene_list.txt is a single column file of s lines, where s is the number of leaves of the subtree Newick-formatted file exported by Dendroscope."
  ],
  "subjectAreas": [
    "Genomics",
    "Plant Sciences",
    "Bioinformatics",
    "Systems Biology",
    "Model Organisms"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics",
    "Ecology & Environmental Biology",
    "Bioinformatics & Computational Biology"
  ]
}