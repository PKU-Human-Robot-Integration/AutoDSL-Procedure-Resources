{
  "id": 1596,
  "origin_website": "Cell",
  "title": "Analytical protocol to identify local ancestry-associated molecular features in cancer",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nLocal ancestry identification\nTiming: 3h for step 1 and step 2; 72–120h for step 3; 48–72h for step 4; 100–180h for step 5 (alternative step)\nThis step phases the TCGA samples into haplotypes, produces local ancestry calls that assign African (AFR), European (EUR) and East Asian (EAS) ancestry to each genomic locus (Figure 1[href=https://www.wicell.org#fig1]), and estimates global ancestry proportions to ensure accuracy of local ancestry calls.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1034-Fig1.jpg\nFigure 1. Analytical workflow for identifying local ancestry-associated molecular features in cancer\nPart 1: Preparation of TCGA and 1000 Genomes genotyping data; Part 2: Haplotype estimation and local ancestry assignments; Part 3: Examples of correlation analyses utilizing local ancestry information.\nFirst, for each cancer type, merge all samples into PLINK input format (binary PED files):\nExclude variants with genotype call confidence greater than 0.1 in the Birdseed files downloaded from the Genomic Data Commons Legacy Archive.\nConvert the Birdseed genotyping files into VCF format, using birdseed2vcf (https://github.com/ding-lab/birdseed2vcf[href=https://github.com/ding-lab/birdseed2vcf]) following the instructions.\nSelect samples of a specific cancer type and copy the VCF files to a folder named for that cancer type.\nCompress and index the VCF files using bgzip and tabix from Samtools. Prepare a list of VCF files for each cancer type, then, use the Bcftools --merge option to merge all samples in each cancer type into one VCF file. An example Unix bash command: bcftools merge -l $vcflist.txt -Oz > $OUT.vcf.gz\nFor each merged file, use PLINK to convert VCF into format to binary PED files (BED/BIM/FAM) using the PLINK --make-bed option.\nCritical: It is recommended to merge TCGA samples by cancer type and run local ancestry identification for each cancer type in parallel to reduce the computational runtime.",
    "To prepare for phasing, perform quality control for genome-wide SNP genotyping data and all TCGA germline samples, and then merge TCGA samples from the same cancer type with 1000 Genomes reference samples into a single PLINK file.\nPerform basic quality control of markers using PLINK:\nExclude markers that are not on autosomes using the PLINK –not-chr option.\nIdentify markers excessed missingness (a minimum frequency of 5% genotype missing rate allowed) using the --freq option, and exclude markers excessed missingness in the ∗frq.counts file using the PLINK --exclude option.\nCalculate Hardy Weinberg equilibrium using the PLINK --hardy option, and identify markers failing Hardy Weinberg equilibrium test (P<1e-6) due to excess heterogeneousness in the ∗.hwe file using the PLINK --exclude option.\nPerform basic quality control of samples:\nCompute pairwise relationships using the PLINK --genome option.\nExclude samples due to duplicates, with the PI_HAT column in the ∗genome file greater than or equal to 0.7.\nExclude samples due to relatedness (e.g., sibling), with the PI_HAT column in the ∗genome file between 0.35 and 0.7, and the Z1 column (IBD=1) less than 0.7.\nMerge the TCGA samples with 1000 Genomes project phase 3 samples:\nIdentify markers with minor allele frequency (MAF) of at least 1% in 1000 Genomes project phase 3 samples, using the PLINK --maf option.\nExtract markers that passed quality control from both the TCGA data set identified in step 2a using the PLINK --extract option.\nMerge the two datasets using the PLINK --bmerge option.\nCritical: It is recommended to merge TCGA samples with reference samples into one PLINK binary PED file and analyze them together to avoid technical errors, such as strand flip in the phasing step.\nTo prepare for local ancestry identification, for each TCGA germline sample, phase alleles to haplotypes using Shapeit2 by chromosome.",
    "Split the genome into 22 files corresponding to each autosomal chromosome using the --chr option in PLINK\nPerform phasing using Shapeit2 for each chromosome by running the following bash command line as an example:\nMarker inspection to exclude SNPs that are incompatible (e.g., exceeding missing data rate; strand error etc.) for phasing using Shapeit2. SNPs to be excluded are shown in the output file (∗.mendel.snp.strand.exclude). for i in {1..22}; do shapeit -check --input-ref 1000GP_Phase3_chr${chr}.hap.gz \\ 1000GP_Phase3_chr${chr}.legend.gz \\ 1000GP_Phase3.sample \\ -B BRCA/chr${chr} \\ --input-map genetic_map_chr${chr}_combined_b37.txt --input-thr 1 \\ --output-log BRCA/chr${chr}.mendel; done\nPhasing algorithm using Shapeit2. The output files include ∗.haps and ∗ sample files.\nfor i in {1..22}; do\nshapeit --input-ref 1000GP_Phase3_chr${chr}.hap.gz \\\n1000GP_Phase3_chr${chr}.legend.gz 1000GP_Phase3.sample \\\n-B BRCA/chr${chr} \\\n--duohmm --input-map genetic_map_chr${chr}_combined_b37.txt \\\n--output-max BRCA/chr${chr}.haps.gz BRCA}/chr${chr}.sample \\\n--exclude-snp BRCA/chr${chr}.mendel.snp.strand.exclude \\\n--thread 4;\ndone\nCritical: Phased 1000 Genomes samples (1000GP_Phase3_chr${chr}.hap.gz) are used as a reference panel for phasing the TCGA samples (BRCA/chr${chr}). This step takes time, so it is recommended to parallelize the tasks by chromosome. In the following, four cores are requested for each phasing job.\nImputation is not required in this step, as the number of germline alleles used to capture local ancestry is sufficient, as a linkage disequilibrium generated from continental-scale admixtures that occurred recently (e.g., African American and Latin American populations) is expected to span many centimorgans.\nNote: Other tools, such as Eagle2 (Loh et al. 2016[href=https://www.wicell.org#bib9]), Beagle (Browning and Browning 2007[href=https://www.wicell.org#bib2]) etc. can also be used for phasing larger datasets. Moreover, a larger reference panel, such as Haplotype Reference Consortium (http://www.haplotype-reference-consortium.org/home[href=http://www.haplotype-reference-consortium.org/home]) consisting of 64,976 haplotypes, may improve phasing accuracy. One may use the Michigan Imputation Server (https://imputationserver.sph.umich.edu/index.html#!pages/home[href=https://imputationserver.sph.umich.edu/index.html#!pages/home]) to run Eagle phasing with Haplotype Reference Consortium as the reference panel. One may write a custom script to convert Eagle output files into RFMix input files for step 4.",
    "Perform local ancestry identification to assign AFR, EUR or EAS ancestry to each genomic region by chromosome using RFMix.\nChoose parental populations from 1000 Genomes samples to use for local ancestry identification. An example file with 1668 samples from AFR, EUR and EAS populations can be found: https://github.com/jcarrotzhang/ancestry-from-panel/blob/master/GDAN_AIM/BRCA.ref[href=https://github.com/jcarrotzhang/ancestry-from-panel/blob/master/GDAN_AIM/BRCA.ref]\nNote: It is recommended by RFMix to balance the size of continental-scale ancestries in the reference samples to avoid biases caused by skewed reference sample sizes. For example, one can randomly choose between 400 to 500 1000 Genomes samples from AFR, EUR, or EAS population.\nRead in the ancestry assignment from Table S1 of Carrot-Zhang et al., 2020[href=https://www.wicell.org#bib3], exclude samples with South Asian (SAS) or American (AMR) ancestry greater than 20%, and then generate a list of TCGA samples by cancer type (for example, BRCA.notref).\nNote: Because most TCGA samples were from AFR, EUR or EAS populations, the identification of local SAS or AMR ancestry is not performed in this protocol.\nFor each chromosome, convert phased shapeit outputs into RFMix input files, and prepare other RFMix input files (∗.alleles; ∗.classes; ∗.snp_locations). Detailed information on how to prepare the RFMix input files can be found in the manual: https://www.dropbox.com/s/cmq4saduh9gozi9/RFMix_v1.5.4.zip?file_subpath=%2FRFMix_v1.5.4%2FManual.pdf[href=https://www.dropbox.com/s/cmq4saduh9gozi9/RFMix_v1.5.4.zip?file_subpath=%2FRFMix_v1.5.4%2FManual.pdf] An example script (shapeit2rfmix.py) can be found in the following Github repository: https://github.com/armartin/ancestry_pipeline[href=https://github.com/armartin/ancestry_pipeline] This script requires ∗haps.gz files, a list of TCGA samples (https://github.com/jcarrotzhang/ancestry-from-panel/blob/master/GDAN_AIM/BRCA.notref[href=https://github.com/jcarrotzhang/ancestry-from-panel/blob/master/GDAN_AIM/BRCA.notref]), a list of reference samples (https://github.com/jcarrotzhang/ancestry-from-panel/blob/master/GDAN_AIM/BRCA.ref[href=https://github.com/jcarrotzhang/ancestry-from-panel/blob/master/GDAN_AIM/BRCA.ref]), and genetic_map∗ files downloaded in before you begin[href=https://www.wicell.org#before-you-begin] section step 11. for i in {1..22}; do python ∼bin/ancestry_pipeline-master/shapeit2rfmix.py \\ --shapeit_hap_ref BRCA/chr${i}.haps.gz \\ --shapeit_hap_admixed BRCA/chr${i}.haps.gz \\ --shapeit_sample_ref BRCA/chr${i}.sample \\ --shapeit_sample_admixed BRCA/chr${i}.sample \\ --ref_keep BRCA.ref \\ --admixed_keep BRCA.notref \\ --chr ${i} \\ --genetic_map 1000GP_Phase3/genetic_map_chr${i}_combined_b37.txt \\ --out BRCA/rfmix; done",
    "Run RFMix, with a minimum window size of 0.2 cM and a node size of 5 for random forest trees, using the following bash command as an example: for i in {1..22}; do python RunRFMix.py --forward-backward -w 0.2 -n 5 \\ --num-threads 4 \\ PopPhased BRCA/rfmix_chr${i}.alleles \\ BRCA_rfmix.classes \\ BRCA/rfmix_chr${i}.snp_locations \\ -o BRCA/outputPopPhased.chr.${i}.withref; done\nNote: Other parameters in RFMix can be considered. For example, RFMix can perform expectation-maximization (EM) optimization of the model, using the -e option. Although it is also recommended to use -e to increase the accuracy of local ancestry identification, the -e option will significantly increase computational complexity.\nCollapsing RFMix outputs (∗.Viterbi.txt) into bed files. This step generates two ∗.bed files for each allele (A.bed and B.bed) for all samples, with the first four columns as chromosome, start position, end position and ancestry assignment, respectively. An example script (collapse_ancestry.py) can be found in the following Github repository: https://github.com/armartin/ancestry_pipeline[href=https://github.com/armartin/ancestry_pipeline]\nVisualize the local ancestry calls using karyogram plots for inspection of technical artifacts (Figure 2[href=https://www.wicell.org#fig2]A).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1034-Fig2.jpg\nFigure 2. Accuracy assessment of local ancestry identification\n(A) Karyograms of six individuals from the TCGA cohort. Upper panel: none-admixed individuals from EUR, AFR and EAS populations, respectively. Lower panel: individuals with mixed ancestries.\n(B–D) (B) Correlation of global ancestry indicated by the proportions of EUR, (C) AFR and (D) EAS estimated from RFMix and ADMIXTURE. Upper panel: TCGA breast cancer cohort; Lower panel: TCGA prostate cancer cohort. r values are calculated from Pearson’s correlation.\nCritical: It is recommended to visually inspect the reference samples to avoid upstream errors, such as mislabeling population assignments of reference samples in the class file etc. If the --forward-backward option is used in RFMix, local ancestry calls can be filtered with the posterior probability of a given ancestry less than 0.9.",
    "Apply a custom script to calculate global ancestry (the percentage of AFR, EUR and EAS ancestry per individual) based on RFMix generated local ancestry calls. This step is to ensure that the local ancestry assignment can accurately reflect the global ancestry generated by a different algorithm. An example script (lai_global.py) can be found in the Github repository: https://github.com/armartin/ancestry_pipeline[href=https://github.com/armartin/ancestry_pipeline]\nExclude samples with ADMIXTURE estimated global SAS or AMR ancestry greater than 20% from Table S1. in Carrot-Zhang et al., 2020[href=https://www.wicell.org#bib3], and compare the global ancestry estimated from RFMix to ADMIXTURE estimated global ancestry using a Pearson correlation.\nNote: Because most TCGA samples were from AFR, EUR or EAS populations, only samples in the 1000 Genomes Project from AFR, EUR or EAS populations were used for local ancestry identification in Carrot-Zhang et al., 2020[href=https://www.wicell.org#bib3]. However, other parental populations should be used when analyzing other populations with mixed ancestries. For example, 1000 Genomes samples from Peru and Mexico can be used as reference samples when analyzing cancer samples from the Latin American populations.\nAlternative: It is now recommended to use RFMix2 (https://github.com/slowkoni/rfmix[href=https://github.com/slowkoni/rfmix]) - a more user friendly version. RFMix2 takes phased VCF files as input directly, without requiring users to generate ∗.alleles and ∗.snp_locations. To use RFMix2, it is recommended to use Beagle for phasing, which outputs phased variants in VCF format that can be used as an RFMix2 input file. RFMix2 also reports global ancestry estimated based on local ancestries identified by their algorithm in their standard output file (∗results.rfmix.Q) corresponding to the .Q output files from ADMIXTURE that can be compared to ADMIXTURE generated global ancestry directly.\nTo run Beagle, the following reference files are needed:\nBeagle reference vcf: http://bochet.gcc.biostat.washington.edu/beagle/genetic_maps/[href=http://bochet.gcc.biostat.washington.edu/beagle/genetic_maps/]\nBeagle reference map: http://bochet.gcc.biostat.washington.edu/beagle/1000_Genomes_phase3_v5a[href=http://bochet.gcc.biostat.washington.edu/beagle/1000_Genomes_phase3_v5a]",
    "An example bash command to run RFMix2 on Beagle phased VCF file: for i in {1..22}; do java -Xmx10 g -jar ∼bin/beagle.08Jun17.d8b.jar \\ gt=BRCA/chr${chr}.vcf.gz \\ ref=∼beagle/chr${chr}.1 kg.phase3.v5a.vcf.gz \\ out=BRCA/$chr.beagle_phased \\ map=∼reference/beagle/plink.chr${chr}.GRCh37.map \\ chrom=${chr} \\ impute=false; done For more information about phasing using Beagle, please refer to http://faculty.washington.edu/browning/beagle/beagle.html[href=http://faculty.washington.edu/browning/beagle/beagle.html]\nAn example bash command to run RFMix2 on Beagle phased VCF file:\nfor i in {1..22}; do\n∼bin/rfmix-master/rfmix -f BRCA/$chr.beagle_phased.vcf \\\n-r ∼reference/beagle/chr${chr}.1 kg.phase3.v5a.vcf.gz \\\n-g genetic_map_chr${chr}_combined_b37.txt \\\n-m BRCA.ref \\\n-o $BRCA/chr${chr}.results --chromosome=${chr};\ndone\nAssociation of local ancestry with cancer features and risk\nTiming: 4–8h\nThis step demonstrates two types of analyses leveraging local ancestry calls to investigate germline influence on cancer development (Figure 1[href=https://www.wicell.org#fig1]). The first analysis identifies genomic loci with enrichment of certain ancestry in the pan-cancer cohort, to investigate the contributions of ancestry at those loci to cancer risk. In the second analysis, ancestries are compared between loci harboring genes whose mRNA expression (or methylation) levels are associated with ancestry and those that do not, in order to evaluate whether ancestry at these specific loci--loci with identified molecular correlates of ancestry--contributes to cancer risk. These analyses should be focused on an admixed population, for example, the African American population with mixed AFR and EUR ancestry that has a relatively larger sample size compared to other admixed populations in the TCGA cohort.\nFor the genome-wide, pan-cancer analysis, perform the following:\nRead in global and local ancestries for all TCGA samples:\nRead in the ancestry assignment from Table S1 of Carrot-Zhang et al., 2020[href=https://www.wicell.org#bib3]. Select samples with AFR ancestry between 20%–80% for the downstream analyses.\nRead in bed files converted from RFMix outputs, and output regions with local ancestry (48,939 genomic loci) across all samples.\nAn example script (find_local_ancestry_count_blocks.py) can be found in the following Github repository: https://github.com/jcarrotzhang/ancestry-from-panel/tree/master/GDAN_AIM[href=https://github.com/jcarrotzhang/ancestry-from-panel/tree/master/GDAN_AIM]",
    "Code regions identified from step 4 with both alleles from AFR ancestry as 2, with one AFR allele as 1, and loci with both alleles from EUR as 0.\nCompute a z-score for each region with unique local ancestry identified from step 4. In Python, one can store coded ancestry of each locus in an array and then use the scipy.stats.zscore module to compute the z-score in each locus relative to the genome. This step again, only uses samples with AFR ancestry between 20%–80%.\nAn example script (local_ancestry_enrichment.py) can be found in the following Github repository: https://github.com/jcarrotzhang/ancestry-from-panel/tree/master/GDAN_AIM[href=https://github.com/jcarrotzhang/ancestry-from-panel/tree/master/GDAN_AIM]\nPlot each locus and its corresponding z-score of local ancestry across the genome. Apply FDR correction to identify regions passed multiple testing corrections.\nNote: In theory, certain loci might be enriched for one ancestry over others across the admixed population so that the observed enriched regions may not be specific to cancer risks. Therefore, filtering out known regions associated with ancestry in healthy individuals, or a case-control study, is necessary when applicable. In practice, populations that have mixed within the last several hundred years are unlikely to exhibit such biases.\nFor the gene-specific analysis in pan-cancers, perform the following:\nSimilarly, the correlation of somatic alterations in a specific gene and the local ancestry of the locus harboring the gene of interest, while controlling for global ancestry, can be tested, using the following logistic regression model in Python:\nmutation status ∼ local ancestry + global EUR ancestry + global AFR ancestry\nGlobal ancestries can be obtained from Table S1 of Carrot-Zhang et al., 2020[href=https://www.wicell.org#bib3]. A significant p-value indicates a cis effect of germline variation to somatic alteration in the gene of interest.\nAn example script (find_local_ancestry_by gene.py) can be found in the following Github repository: https://github.com/jcarrotzhang/ancestry-from-panel/tree/master/GDAN_AIM[href=https://github.com/jcarrotzhang/ancestry-from-panel/tree/master/GDAN_AIM]",
    "This script selects samples with AFR ancestry between 20%–80%, finds the local ancestry of the locus of interest in each sample, and correlates the local ancestry with mutation status of the gene of interest, using the regression model described above. The local ancestry is coded as 0 for homozygous EUR ancestry, 1 for heterozygous AFR ancestry and 2 for homozygous AFR ancestry.\nCritical: Because local ancestry can be significantly correlated with global ancestry, when testing the association between local ancestry and somatic mutation status, global ancestry should be added as a covariate to the regression model. A significant local ancestry--phenotype correlation independent of global ancestry may suggest germline influence on the phenotype, as local ancestry is not expected to be associated with ancestry-associated environmental exposure.\nThis analysis is performed in a pan-cancer fashion. Due to limited sample size, we were unable to perform tissue-type specific analysis.\nFor the second analysis, restricted to loci with known molecular correlates of ancestry (in this case, mRNA expression in cis), perform the following:\nKeep loci associated with AFR ancestry (z-score >3) or EUR ancestry (z-score <−3) calculated from step 8, or downloaded from Table S1 Carrot-Zhang et al., 2020[href=https://www.wicell.org#bib3].\nFor the remaining loci from step 11, use the Bedtools intersect option to locate loci with differentially expressed genes between populations from Table S4 of Carrot-Zhang et al., 2020[href=https://www.wicell.org#bib3]. Label those loci as “ancestry-associated expression” loci. Label other loci as “non-ancestry-associated expression” loci.\nCompare z-scores between “ancestry-associated loci” and “non-ancestry-associated loci”, using Wilcoxon’s rank test.\nStep 11 to 13 can also be applied to other loci with ancestry-associated molecular features, such as methylation differences, to assess their association with cancer risk."
  ],
  "subjectAreas": [
    "Genomics",
    "Bioinformatics",
    "Cancer"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}