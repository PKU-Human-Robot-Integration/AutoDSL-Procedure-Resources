{
  "id": 3183,
  "origin_website": "Cell",
  "title": "Optimized single-cell RNA sequencing protocol to study early genome activation in mammalian preimplantation development",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nFigure 1[href=https://www.wicell.org#fig1].\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2756-Fig1.jpg\nFigure 1. Overview of the step-by-step STRT-N library preparation\nEmbryo is placed in the cell lysis buffer and mRNA is released. This mRNA is then mixed with reverse transcription reagents containing ERCC Spike-In RNA. First-strand cDNA synthesis is performed by capturing mRNA polyA tail with oligo dT(30)+V, and the mRNA is transcribed with the addition of 3 cytosine molecules on the 5′ end of mRNA. Oligo TSO-8UMI is used to bind to those cytosine molecules, promoting template switching and introduction of UMIs into the cDNA. cDNA is then cleaned, and the barcodes are introduced at the 5′ end. After the cDNA amplification, each sample is barcoded, and all the reactions can be pooled for the next steps which include purification, fragmentation, and adapter cassette ligation. The library preparation is finished by the further 5′ end amplification before sending the ready library for sequencing. Adapted from Ezer et al.1[href=https://www.wicell.org#bib3]\nEmbryo lysis\nTiming: 20 min\nThis section describes the handling of the embryos and placing them in the cell lysis buffer.\nEmbryo handpicking:\nUnder stereomicroscope, take one embryo from the 4-well culture dish. using EZ-Grip pipettor for the embryos until blastocyst stage. For blastocyst stage we recommend 10/20 μL pipette.\nIn 60 mm plate, place 5 drops of 30 μL each (Figure 2[href=https://www.wicell.org#fig2].): 1st in vitro culture (IVC) medium; 2nd is Acid Tyrode’s solution; 3rd is IVC medium; 4th and 5th are PBS.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2756-Fig2.jpg\nFigure 2. Graphical demonstration of the plate preparation for the removal of zona pellucida\nThere are 5 drops, each 30 μL placed on a 60 mm embryo safe dish. First and third drop in pink color represent IVC medium, 2nd drop is Acid Tyrode’s solution and 4th and 5th drops are PBS.",
    "Place embryo to the 1st drop, then to 2nd and watch the zona pellucida dissolves.\ntransfer embryo to the 3rd drop to wash out the acid.\ntransfer to the 4th drop containing PBS.\nWash embryo again in the last PBS drop.\nTransfer the whole embryo with the least amount of PBS possible to one well of the low-profile PCR strip Versiplate.\nPlace the strip on ice and spin it down in the plate centrifuge (30 s at 1500 × g) or on the table centrifuge.\nPlace the strip/plate on dry ice immediately.\nPlace the plate in the −80°C.\nCritical: It is essential that the plate is placed on dry ice as soon as possible after placing the embryos to the lysis buffer. The plate should be placed on dry ice even if the library will be prepared on the same day, as this step helps the cell lysis.\nNote: We used the whole embryos to create the library we demonstrated in this protocol. If you want to use embryonic single cells, embryo biopsy can be performed by zona drilling pipette and then blastomere extraction. Blastomere should then be placed into a PBS solution, hand-picked and transferred to one well in the cell lysis plate.\nPause point: Plates can be stored at −80°C for 12 months.\nReverse transcriptase reaction (day 1)\nTiming: 2 h 30 min\nThis is the first part of the protocol and describes the steps involved in capturing mRNA and performing the first DNA strand synthesis.\nTake out the capture cell plate from the −80°C (previously stored for maximum of 6 months) and keep it on dry ice.\nPreheat the PCR block to 80°C and transfer the plate directly from dry ice to the PCR block.",
    "Hold hand on the plate lid, and once it is warm, close the lid of the PCR machine and denature RNA for 2 min (RNA Denaturation step).\nPlace the plate immediately on ice.\nPrepare the reverse transcriptase mix using following reagents in 1.5 mL Eppendorf LoBind tube.\ntable:files/protocols_protocol_2756_5.csv\nAdd 1 μL of ERCC Spike-In mix (1: 10,000× dilution).\nVortex the mix and spin down quickly.\nDivide the mixture to 8 tube strip for an easier pipetting of mixture to the plate.\nAdd 6.5 μL to each well of the plate using an 8-channel pipette.\nQuickly vortex and spin down plate either in the plate centrifuge (20 s at 1500 × g) or spin the individual strips on the table centrifuge.\nPlace the plate in the PCR machine and start the reverse transcription (RT) reaction.\ntable:files/protocols_protocol_2756_6.csv\nSpin down the plate (1 min at 1500 × g).\nCritical: It is highly important that the RT reaction is mixed thoroughly before starting the PCR cycles.\nClean up and full cDNA amplification (day 1)\nTiming: 4 h\nThis section describes the clean up steps of reverse transcriptase reaction to remove all the unnecessary reaction elements and minimize the byproduct formations in the cDNA amplification, as well as introduction of barcoded primers to each sample and performing the cDNA amplification.\nIn a 1.5 mL tube mix 50 μL Dynabeads MyOne Carboxylic Acid beads and 400 μL capture buffer (previously stored for maximum of 6 months at 21°C–22°C)\nAdd 7 μL of magnetic beads and capture buffer mix to the RT product. Mix well by pipetting or quick vortex (vortex together with the plate holder, so that it reduces the liquid spilling to the caps).\nIncubate for 15 min at room temperature (21°C–22°C) and place the plate on a 96 well magnetic rack for 3 min.",
    "Remove all supernatant by pipetting.\nSpin the plate or take strips apart and spin down on the table centrifuge and place back on the magnetic rack. Remove all traces of the supernatant.\nResuspend the beads in 22 μL nuclease-free water.\nAdd 1.5 μL of barcoded primers (10 μM) (previously stored at −12°C for up to 12 months).\nPrepare PCR master mix in 2 mL Eppendorf DNA LoBind tube.\ntable:files/protocols_protocol_2756_7.csv\nVortex thoroughly and spin down the tube.\nAdd 26.5 μL to each well, mix well by pipetting or vortex quickly.\nStart the PCR.\ntable:files/protocols_protocol_2756_8.csv\nSpin down the evaporation drops either in plate centrifuge (1 min at 3000 × g or on the table centrifuge).\nNote: It is possible to visualize the cDNA products on a 2% TAE gel, if the library isn’t planned to be sequenced (Figure 3[href=https://www.wicell.org#fig3]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2756-Fig3.jpg\nFigure 3. cDNA visualized on 2% TAE gel\nAfter cDNA amplification in step 25 it is possible to visualize the product on the 2% TAE gel. You should observe a smear representing a variety in the length of the cDNA. In this figure you can see the difference between the strength of the smear based on the amount of initial RNA input going from 500 pg in the first 3 lanes, 50 pg in the second 3 lanes to single cell level (5 pg) in the next 3 lanes. Non template control (NTC) should not have the smear. Ladder is 1 kb.\nSample pooling and purification (day 1)\nTiming: 30 min\nThis section describes pooling together all the samples to one reaction as they have already been barcoded in the previous steps and purifying the reaction.\nPlace the plate on the 96 well magnetic rack and wait for 3 min for beads to bind.",
    "Collect the clear supernatants into six 1.5 mL LoBind Tubes. Purify the library with PCR Clean-up column (NucleoSpin Gel and PCR Clean-up/Macherey-Nagel- https://www.mn-net.com/media/pdf/02/1a/74/Instruction-NucleoSpin-Gel-and-PCR-Clean-up.pdf[href=https://www.mn-net.com/media/pdf/02/1a/74/Instruction-NucleoSpin-Gel-and-PCR-Clean-up.pdf])\nNote: Purification should be done according to the manufacturer’s instructions, except for the step 4: silica membrane should be centrifuged for 2 min instead of 1 min; for step 5: preheat the elution buffer provided in the kit at 70°C for 5 min.\nElute the cDNA twice using 16 μL each time of the previously heated elution buffer. At the end there should be 32 μL of cDNA in the clean 1.5 mL LoBind tube.\nTake out 2 μL of the library for the 1st quality check with TapeStation- QC1. There is now 30 μL of library left for the next step.\nPause point: At this point in experiment, it is possible to pause by placing the library at -20°C for up to 1 month.\nFragmentation (day 2)\nTiming: 40 min\nThis section described the fragmentation of DNA to achieve the wanted length (300-350bp) of DNA that can be sequenced on the Illumina platform.\nAMPure XP beads should be mixed well: the solution should be brown and homogeneous.\nTake 24 μL of AMPure XP beads and add them to the 30 μL of cDNA from step 29. The beads to sample ratio is 5:4.\nMix well and incubate at room temperature (21°C–22°C) for 10 min, before placing the tube to the magnetic rack for 3 min.\nRemove the supernatant and then remove the tube from the magnetic rack.\nRe-suspend the beads in 100 μL Buffer EB (previously stored for maximum of 6 months at 21°C–22°C), mix well, and incubate at RT for 1 min.",
    "Place the tube back on the magnetic rack to capture the beads. After 2 min: transfer the 100 μL supernatant containing cDNA to a 0.65 mL BioRuptor shearing microtube.\nQuickly spin down the tube and place it on ice for 10 min.\nFragmentation program is 10 cycles 30 s ON, 30 s OFF; target 350 bp (we used BioRuptor sonicator machine from 2013-2019).\nPurify the fragmented cDNA with the PCR Clean-up column (NucleoSpin Gel and PCR Clean-up/Macherey-Nagel- https://www.mn-net.com/media/pdf/02/1a/74/Instruction-NucleoSpin-Gel-and-PCR-Clean-up.pdf[href=https://www.mn-net.com/media/pdf/02/1a/74/Instruction-NucleoSpin-Gel-and-PCR-Clean-up.pdf]) according to the manufacturer’s protocol.\nNote: Purification should be done according to the manufacturer instructions, except for the step 4: silica membrane should be centrifuged for 2 min instead of 1 min.\nElute the cDNA with 32 μL of elution buffer, provided in the kit, and take 2 μL aside for the 2nd quality check with TapeStation (QC2).\nCritical: It is important that while assembling the holder for sonication, 11 extra 0.65 mL BioRuptor shearing microtubes containing 100 μL of water are placed together with the one tube containing 100 μL of cDNA, to ensure the equivalent sonication.\nNote: Fragmentation step can be done using other compatible machines such as Covaris Focused ultrasonicator, by using 130 μL microtubes and target 300 bp using manufacturer’s protocol.\nPause point: At this point in experiment, it is possible to pause by placing the library at −20°C for up to 1 month.\nEnd-repair, adapter ligation and 5′end amplification (day 2)\nTiming: 4 h\nThis section describes the preparation of DNA for the sequencing. Following the fragmentation, the DNA is cut at the random points, ends of the DNA must be repaired to be able to ligate the adaptors needed for sequencing. In this section the Buffer EB is used, please make sure it’s freshly made every 6 months and stored at room temperature (21°C–22°C).",
    "Add 12 μL of MyOne C1 Streptavidin beads to the 30 μL of fragmented cDNA from step 39, mix well by pipetting and wait for 10 min.\nPlace the tube on the magnetic rack until solution is clear. Remove and discard the supernatant.\nTake the tube off the magnetic rack and wash the beads by adding 200 μL of Buffer EB. Mix the beads well by pipetting and place the tube back to the magnetic rack. Wait until solution is clear and remove the supernatant.\nRepeat the washing (step 42) one more time.\nRe-suspend the beads in 16 μL of Buffer EB.\nAdd the following reagents:\ntable:files/protocols_protocol_2756_9.csv\nPlace the tube on the thermal shaker, incubate for 20 min on 500 rpm at RT (21°C–22°C).\nPlace the tube on the magnetic rack until solution is clear, remove the supernatant.\nWash the beads 2 times, by repeating step 42 twice.\nRe-suspend the beads in 17 μL of Buffer EB and add the following reagents:\ntable:files/protocols_protocol_2756_10.csv\nPlace the tube on the thermal shaker, incubate for 20 min on 500 rpm at 37°C.\nPlace the tube on the magnetic rack until solution is clear, remove the supernatant.\nWash the beads 2 times, by repeating the step 42 twice.\nRe-suspend in 18 μL of Buffer EB. Add the following reagents:\ntable:files/protocols_protocol_2756_11.csv\nDo not vortex, only mix gently by pipetting, incubate on the bench for 60 min at RT and mix gently every 20 min.\nPlace the tube on the magnetic rack, until the solution is clear and remove supernatant.\nPerform beads washing with 200 μL of Buffer EB twice.\nRe-suspend the beads in 20 μL of Buffer EB and add the following:\ntable:files/protocols_protocol_2756_12.csv\nTransfer 50 μL to 0.2 mL PCR tube and start the KIN-P2 program.\ntable:files/protocols_protocol_2756_13.csv\nFinal purification (day 2)\nTiming: 20 min",
    "This section describes the final library purification needed to remove the unwanted residues of the primers and reaction elements before the library can be sequenced.\nTake out the 0.2 mL tube from the PCR machine and transfer everything to a 1.5 mL LoBind tube. Place the tube on a magnetic rack. Wait until the supernatant, that now contains the PCR products, is clear and transfer it, to a clean 1.5 mL LoBind tube.\nAdd 45 μL of AMPureXP beads and mix extensively by vortexing.\nIncubate for 10 min on the bench (21°C–22°C), place on the magnetic rack and wait until the solution is clear. Remove and discard the supernatant.\nSpin down the tube for 10 s on a mini-centrifuge to collect down the drops and place back on the magnetic rack\nRemove all the traces of supernatant.\nRe-suspend the beads in 20 μL of Buffer EB, mix well by pipetting, and wait for 3 min.\nPlace back on the magnetic rack until the solution is clear. Collect the solution (ready library) and transfer it to a new 1.5 mL LoBind tube.\nTake out 2 μL for the final quality check (QC-3).\nPause point: Store the sequencing ready library at −20°C for up to 6 months.\nLibrary quality control (day 3)\nBefore the library can be send for the sequencing the final quality control should be performed to determine the library concentration which is essential for the sequencing.\nCheck the concentration of the ready library from step 66 on the TapeStation D1000 ScreenTape system. The concentration of the ready library should be 2–30 nM and peak should be around 300 bp (see Figure 4[href=https://www.wicell.org#fig4] for expected quality check results).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2756-Fig4.jpg\nFigure 4. Quality controls of the library using TapeStation",
    "In step 29, QC1 is performed using HS D5000 ScreenTape. You should see similarly to the gel visualization, a variety of transcripts in the size range of 200 bp to >2000 bp long. In step 39, QC3 is performed after fragmentation. As protocol is aiming for the fragments that are 350bp long, you should observe a wide peak around 350 bp. In step 66, QC3 is performed, and you should see a sharp peak around 350 bp.\nThe concentration of the library should be checked with the KAPA Library Quantification Kit according to the manufacturer instructions. (https://pim-eservices.roche.com/eLD/api/downloads/ca670ceb-fb38-eb11-0291-005056a71a5d?countryIsoCode=pi[href=https://pim-eservices.roche.com/eLD/api/downloads/ca670ceb-fb38-eb11-0291-005056a71a5d?countryIsoCode=pi]).\nCritical: It is important that the correct library concentration is determined before sequencing as the volume of library loaded for the sequencing is decided based on that. If the concentration between the TapeStation and KAPA kit measurement is different, we have relied on the results provided by KAPA kit.\nSequencing (day 3)\nSequencing of STRT-N libraries can be performed on the Illumina NextSeq System. While read 1 is 75+ cycles of non-index read, read 2 must be exactly 6 cycles of index read as the sample barcode is 6 bp. Download the base call (BCL) files; demultiplexing and conversion to FASTQ files are unnecessary. The location of the “BaseCalls” folder in the files will be specified as BaseCallsDir_PATH at step 72. “RunInfo.xml” in the BCL files records the number of cycles.",
    "Note: We usually sequence the libraries using NextSeq 500 with custom primer STRT2seq (Table 1[href=https://www.wicell.org#tbl1]) and High Output v2.5 kit, 75 cycles at the Biomedicum Functional Genomics Unit (FuGU). In the BCL files, there should be the “BaseCalls” folder at Data/Intensities. Although we use the 75 cycles kit, 86 and 6 cycles of sequencing are performed for reads 1 and 2 respectively. Therefore, we usually describe the logical structure as 8M3S75T6B (for step 72a; 8 + 3+75 = 86); change the structure when the length of read 1 is shorter than 86 cycles. The read1 sequencing read length is 86 bp while the read2 sequencing length is 6 bp.\ntable:files/protocols_protocol_2756_14.csv\nPreparations for data processing\nThis section includes the minimal hardware requirements, installing conda packages and pipelines as well as details of required genome indexes to be processed by STRT-N bioinformatics data processing pipeline. The installation of conda packages and pipeline and running the STRT-N pipeline should be run on Linux terminal. We tested the pipeline on Windows Subsystem for Linux running Ubuntu 20.04.3 in a Windows 11 laptop, and on the Puhti Linux cluster at the IT Center for Science (CSC) services (https://docs.csc.fi/computing/systems-puhti/[href=https://docs.csc.fi/computing/systems-puhti/]).\nHardware requirements\nBuilding genome indexes (step 71), sequence data processing (step 72), visualization on UCSC (step 73–74) and visualization using Seurat (step 75) require about 150GB, 15GB, 50MB and 150MB of memory depending on genome size and raw data size.\nInstalling packages with conda and pipelines\nThis section includes the installation of required dependencies and pipeline installation.\nCreate conda environment, install the required software packages in the yaml file and activate them as following.\nconda env create -n STRTN-test -f STRTN-env.yml\nconda activate STRTN-test",
    "Note: In this example, the required software packages will be prepared the environment named “STRTN-test”, but you may change it to any name according to your project.\nInstall the main pipeline and visualization of data pipeline from the following GitHub repository.\ngit clone https://github.com/gyazgeldi/STRTN.git[href=https://github.com/gyazgeldi/STRTN.git] STRTN-test\ncd STRTN-test\nNote: In this example, the pipeline will be cloned into the “STRTN-test” folder, but you may change it to any name according to your project.\nPreparing genome indexes and sequence dictionary\nTiming: ∼3 h using 8 CPU cores\nPrepare HISAT2 genome indexes and sequence dictionary in a platform which has big memory to rapidly and efficiently access reference sequence information. Here, we illustrate the case for house mouse genome mm39.\nObtain the genome sequences of reference and ERCC spike-ins.\nwget https://hgdownload.soe.ucsc.edu/goldenPath/mm39/bigZips/mm39.fa.gz[href=https://hgdownload.soe.ucsc.edu/goldenPath/mm39/bigZips/mm39.fa.gz]\nunpigz -c mm39.fa.gz | ruby -ne '$ok = $_ !∼ /ˆ>chrUn_/ if $_ =∼ /ˆ>/; puts $_ if $ok' > mouse_reference.fasta\nwget https://tsapps.nist.gov/srmext/certificates/documents/SRM2374_putative_T7_products_NoPolyA_v2.FASTA[href=https://tsapps.nist.gov/srmext/certificates/documents/SRM2374_putative_T7_products_NoPolyA_v2.FASTA]\ncat SRM2374_putative_T7_products_NoPolyA_v2.FASTA >> mouse_reference.fasta\nExtract splice sites and exons from the annotation file using HISAT2 (v2.2.1)9[href=https://www.wicell.org#bib9]\nHere we used wgEncodeGencodeBasicVM30 as the annotation file.\nwget https://hgdownload.soe.ucsc.edu/goldenPath/mm39/database/wgEncodeGencodeBasicVM30.txt.gz[href=https://hgdownload.soe.ucsc.edu/goldenPath/mm39/database/wgEncodeGencodeBasicVM30.txt.gz]\nunpigz -c wgEncodeGencodeBasicVM30.txt.gz | hisat2_extract_splice_sites.py - | grep -v ˆchrUn > splice_sites.txt\nunpigz -c wgEncodeGencodeBasicVM30.txt.gz | hisat2_extract_exons.py - | grep -v ˆchrUn > exons.txt\nBuild the HISAT2 indexes of the mouse reference genome and ERCC Spike-in RNAs with hisat2-build function.\nhisat2-build mouse_reference.fasta --ss splice_sites.txt --exon exons.txt mouse_index/mouse_reference\nCreate the sequence dictionary for the reference and Spike-in sequences with Picard (v2.18.29) (https://github.com/broadinstitute/picard[href=https://github.com/broadinstitute/picard]) CreateSequenceDictionary function.\npicard CreateSequenceDictionary R=mouse_reference.fasta O=mouse_reference.dict\nPut the genome indexes, genome fasta file, sequence dictionary to same folder.\nmv mouse_reference.dict mouse_reference\nmv mouse_reference.fasta mouse_reference",
    "Note: The genome indexing step requires large memory and it might not be possible to carry out it on a laptop. Therefore, we created genome indexes for the house mouse genome mm39 using wgEncodeGencodeBasicVM30 annotation file in Puhti. The details of procedure is in https://github.com/gyazgeldi/STRTN#how-to-build-hisat2-index-in-csc[href=https://github.com/gyazgeldi/STRTN] and code is available in https://doi.org/10.5281/zenodo.7524239[href=https://doi.org/10.5281/zenodo.7524239]. The built indexes can be accessed in https://doi.org/10.5281/zenodo.7457660[href=https://doi.org/10.5281/zenodo.7457660].\nSequence data processing\nTiming: ∼15 h using 8 CPU cores\nThis section includes the commands to run the main pipeline on a desktop computer. For CSC users, the main pipeline can be accessed in https://github.com/gyazgeldi/STRTN/blob/master/STRTN-CSC.sh[href=https://github.com/gyazgeldi/STRTN/blob/master/STRTN-CSC.sh]. Overall, the main pipeline automatically processes raw sequenced data file with these steps: demultiplexing, read mapping, marking duplicates, annotation, quality check, quantification and creating files for visualization. The pipeline then automatically gives following output files:\nQuality check report for all samples, named as OUTPUT-QC.txt\nQuality check report by boxplots indicating Mapped_reads, Mapped_rate, Spikein_reads, Mapped / Spikein, Spikein-5end_rate, and Coding-5end_rate for all samples to check quality of reads and to mark outlier samples with red characters (Figure 5[href=https://www.wicell.org#fig5]), named as OUTPUT-QC-plots.pdf\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2756-Fig5.jpg\nFigure 5. Output from the sequence analysis\nMapped reads, Spike-In reads, Spike-In 5′ end rate, mapped rate, mapped/Spike-In, coding 5′ end rate from a successful library containing 47 RNA samples of mouse embryos at different developmental stages and one non-template control (NTC). We removed outliers that are samples 1, 8, 9, 19, 33, and 40 for further steps.\nRead count table output, named as OUTPUT_byGene-counts.txt\nFiltering summary, OUTPUT_byGene-counts.txt.summary\nResulting BAM files (.bam)\nIndex files (.bai) of the resulting BAM files\nMetrics file indicating the number of matches/mismatches between the barcode reads and the actual barcodes is shown per lane, named as ExtractIlluminaBarcodes_Metrics\nAlignment summary, named as HISAT2_Metrics\nMetrics file indicating the numbers of duplicates, named as MarkDuplicates_Metrics",
    "BAM files containing reads except for duplicate and non-primary reads, named as OUTPUT.output.bam\nBigWig files for each strands of each sample, named as OUTPUT_plus.bw and OUTPUT_minus.bw\nBigBed file for coding-5′end annotation file, named as coding coding_5end.bb\nNote: Spike-in_5end_rate represents the proportion of STRT reads aligned to the 5′ end (50 nt) of spike-in RNAs. And coding-5end_rate represents the proportion of STRT reads aligned within the 5′ UTR of the protein-coding genes and the proximal (500 nt) upstream. These values must be high and stable enough, as a decrease in the values shows poor library synthesis quality. However, low or unstable coding-5end_rate is sometimes acceptable when it is expected, for example in the study of preimplantation embryos in which maternal transcripts are degrading. The assessment of whether values are good or bad depends on factors such as sample type and quality. For example, we found the spike-in 5′ end rate is 85%–95%, while the coding 5′ end rate is 45%–65% in a successful mouse library.\nRun the STRT-N main pipeline with the following command (see an example run). Please make sure that barcode sequence with barcode name (Table 21[href=https://www.wicell.org#bib3]) is prepared as barcode.txt.\nUsage:\n./STRTN.sh -o {OUTPUT_NAME} -g {GENOME_VALUE} \\\n-a {ANNO_VALUE} -b {BaseCallsDir_PATH} -i {Index_PATH} -w {WorkingDir_PATH} \\\n-c {center_VALUE} -r {run_VALUE} -s {READ_STRUCTURE}\nExample run:\n./STRTN.sh -o STRTN_MOUSE_LIB -g mm39 -a wgEncodeGencodeBasicVM30 \\\n-b /mnt/c/Users/gamyaz/STRTN-Pipeline/Data/Intensities/BaseCalls \\\n-i /mnt/c/Users/gamyaz/STRTN-Pipeline/mouse_index/mouse_reference \\\n-w /mnt/c/Users/gamyaz/STRTN-Pipeline \\\n-p /mnt/c/Users/gamyaz/STRTN/ENTER/pkgs/picard-2.27.4-hdfd78af_0/share/picard-2.27.4-0 \\\n-c FUGU -r RUNBARCODE -s 8M3S75T6B\nRequired and optional arguments:\n{output} defines the prefix of output files such as STRTN_MOUSE_LIB.\n{reference_genome} is the reference genome such as mm39.\n{annotation} is the gene annotation used for quality check and counting. For mm39, ref (RefSeq) or wgEncodeGencodeBasicVM∗ or kg (KnownGenes) can be chosen. See also the GitHub repository’s README.md file for details.",
    "{path/to/BaseCalls} is the path to the Illumina basecalls directory.\n{path/to/index} is the directory and basename of the HISAT2 index for the reference genome.\n{path/to/working} is the working directory.\n{Sequencing_center} is the name of the sequencing center that produced the reads.\n{Run_barcode} is the barcode of the run. Prefixed to read names.\n{picardhome} is the path to picard.jar at conda packages folder.\nHere, we describe Step-by-step methods from demultiplexing, read mapping, marking duplicates, annotation, quality check, quantification to creation files for visualization as well as optional analyzes.\nTo correctly separate and analyze the sequencing data based on barcodes, the barcodes are prepared, the number of lanes are determined and the necessary parameters file for barcodes are created. To understand which sequences came from which samples, the sequencer raw base call data files are demultiplexed with Picard ExtractIlluminaBarcodes and IlluminaBasecallsToSam. This step processes raw base call and related files which are binary reporting (InterOp) and cluster location (LOC) and creates unaligned BAM files based on the well-specific barcodes (Table 21[href=https://www.wicell.org#bib3]).\nNote: It is necessary to convert the sequencer output format to the downstream formats like SAM/BAM by defining the read structure. The input data consists of 92 base clusters (cycles) and we described this logical structure as 8M3S75T6B: 8 cycles (bases) of molecular barcode, 3 cycles skipped, 75 cycles of the template, and 6 cycles of sample barcode.\nTo align reads to GRCm39 reference genome and ERCC Spike-in RNAs (SRM 2374) [NIST SRM 2374 Certificate of Analysis, https://www-s.nist.gov/srmors/certificates/2374.pdf[href=https://www-s.nist.gov/srmors/certificates/2374.pdf], 2013] with the Gencode annotation file (wgEncodeGencodeBasicVM30) as a guide of exon junctions. The unaligned BAM files are sorted and converted to FASTQ files with Picard SamToFastq and aligned using HISAT2.",
    "To generate a unique molecular identifier (UMI)-annotated BAM files, the aligned BAM files are merged with the original unaligned BAM files by Picard MergeBamAlignment.\nTo merge all lanes, UMI-annotated BAM files corresponding to each sample derived from four lanes are merged using Picard MergeSamFiles and to mark the potential PCR duplicates, Picard MarkDuplicates is used.\nTo check the quality of reads, information on genomic regions is extracted from annotation files. After that, the resulting BAM files per sample are indexed and the reads that do have not primary alignment and PCR duplicate flags 256 and 1024 are removed using SAMtools (v1.6).10[href=https://www.wicell.org#bib10] Reads mapped to protein-coding genes and spike-in RNAs and 5′ ends of them, are counted using BEDtools (v2.30.0).11[href=https://www.wicell.org#bib11] The values of i) log10 of total mapped read counts, ii) mapping rates, iii) log10 of Spike-in RNA read counts, iv) ratios of total mapped read counts versus Spike-in RNA read counts, v) 5′ end capture rates of Spike-in RNAs, and vi) 5′ end capture rates of protein-coding genes are plotted with R (4.2.0)12[href=https://www.wicell.org#bib12] package ggplot2 (v3.4.0)13[href=https://www.wicell.org#bib13] the outlier samples are marked with barcode numbers (Figure 5[href=https://www.wicell.org#fig5]). Please consider these outlier samples for the further downstream analysis in accordance with your scientific question. As an example, we decided to remove outlier samples from the successful mouse library to make a reliable data representation because these samples might have degraded.\nTo quantify gene expression level, Subread featureCounts (2.0.1)14[href=https://www.wicell.org#bib14] is used to count reads align to 5′end of genes with parameters '-s 1 -largestOverlap -ignoreDup -primary'. In this step, uniquely mapped reads within 5′ UTR or 500 bp upstream of the protein-coding genes and the first 50 bp of spike-in sequences are counted.",
    "To visualize read alignments, resulting output BAM files are used. The BAM files are indexed and the reads that do have not primary alignment and PCR duplicate flags 256 and 1024 are removed using SAMtools with below commands for each sample.\nTo visualize the number of reads as a continuous signal, BigWig files are created. First, BedGraph files are created from BAM files by calculation of scale factor with running bin/calculationScaleFactor.R for each sample using bedtools genomecov. Followed by, the BedGraph files are converted into BigWig files for forward and reverse strands for each sample with size files using bedGrapthToBigWig.\nTo visualize annotation items, BigBed file from coding-5′-end.bed file is created. The output coding-5′-end BED file is sorted and converted into BigBed file with the chromosomal size file using bedToBigBed with below commands.\nOptional: Moreover, one can perform as abovementioned gene-based analysis by running STRTN.sh to find only reads within the 5′ UTR or the proximal upstream of protein-coding genes. Besides, one can perform TFE (transcript far 5′ end)-based analysis by running STRTN-TFE.sh. This analysis is developed originally by Töhönen et al.,20[href=https://www.wicell.org#bib20] and is modified to run in CSC and on a laptop based on TFE analysis in Ezer et al.1[href=https://www.wicell.org#bib3] Here, TFEs are defined as the first exon (5′ end region) of assembled STRT-N reads mapped to reference genome using StringTie (v2.1.7)17[href=https://www.wicell.org#bib17] and assigned with unique IDs and gene expression levels quantified as described above. The details are available at https://github.com/gyazgeldi/STRTN/blob/master/STRTN-TFE-README.md[href=https://github.com/gyazgeldi/STRTN/blob/master/STRTN-TFE-README.md].\nNote: If TFE-based analysis is planned to perform, please make sure to add the option '-dtá (downstream-transcriptome-assembly) for the main pipeline STRTN.sh or STRTN-CSC.sh, which is required in the HISAT2 alignment process, it helps the transcript assembly by StringTie.",
    "Optional: One can perform sequence quality check analysis of sequenced data by running fastq-fastQC.sh or fastq-fastQC-CSC.sh. Here, the output BAM files are converted into fastq files (without duplicated reads) that can be submitted to public sequence databases. Followed by, FASTQC files are generated for each fastq file, and based on the FASTQC results, MultiQC report is generated.\nVisualization the results in UCSC genome browser\nTiming: ∼30 min\nThis section describes how to visualize the results on genome browsers, for example UCSC Genome Browser tool21[href=https://www.wicell.org#bib21] or Integrative Genomic Viewer (https://igv.org/[href=https://igv.org/]). Hereinafter, we describe steps for visualization of data in UCSC using BAM files for alignments, BigWig files for read frequency and BigBed file of coding-5′ end for annotation items. The detailed procedure of visualization pipeline is in https://github.com/gyazgeldi/STRTN/blob/master/Visualization-in-UCSC-README.md[href=https://github.com/gyazgeldi/STRTN/blob/master/Visualization-in-UCSC-README.md]. Overall, the pipeline takes resulting BAM files, BigWig files and BigBed file of coding-5′ end as the inputs and gives fully automatically following output files.\nHub file containing required parameters in UCSC, named as hub.txt\nThe link indicating hub.txt location that can be copied directly to Track Hub in the UCSC genome browser\nTo visualize with required parameters such as type, visibility etc. hub.txt file is created for each data format types. For forward and reverse strands, color parameters are set up. As an example, first samples for each data formats are viewable. See an example hub.txt file in https://doi.org/10.5281/zenodo.7603268[href=https://doi.org/10.5281/zenodo.7603268].\nTo display these created BAM, BigWig and BigBed files (see step 72g-i) in UCSC Genome Browser, these files must be uploaded with hub.txt file to a hosting service (https://genome.ucsc.edu/goldenPath/help/hgTrackHubHelp#Hosting[href=https://genome.ucsc.edu/goldenPath/help/hgTrackHubHelp]).",
    "Note: We uploaded the files to Allas container using swift protocol and the pipeline gives automatically sharable hub.txt link that can be directly copied to Track Hub in UCSC. The code is available in STRTN-UCSC-Allas.sh (https://github.com/gyazgeldi/STRTN/blob/master/STRTN-UCSC-Allas.sh[href=https://github.com/gyazgeldi/STRTN/blob/master/STRTN-UCSC-Allas.sh]). As an example, we visualized the data using this link: https://a3s.fi/swift/v1/AUTH_2698cec7f280451ebad2e7a291561bec/STRTN_MOUSE_LIB-HUB/hub.txt[href=https://a3s.fi/swift/v1/AUTH_2698cec7f280451ebad2e7a291561bec/STRTN_MOUSE_LIB-HUB/hub.txt].\nVisualization the results using Seurat\nTiming: ∼1 min\nThis section includes details for analysis of STRT-N library results using Seurat package (v3.0.2)16[href=https://www.wicell.org#bib16] by running STRTN-Seurat.sh from normalization, data reduction to plotting using R language or R platform. The details of procedure are available in https://github.com/gyazgeldi/STRTN/blob/master/STRTN-Seurat-README.md[href=https://github.com/gyazgeldi/STRTN/blob/master/STRTN-Seurat-README.md]. Overall, the pipeline takes quality check values file, count matrix file and sample explanation file and gives fully automatically following output files.\nBeeswarm plots indicating the visualization quality check values for each developmental stage\nOutput R plots containing Elbow, JackStraw, PCA, UMAP and violin plots as the examples from successful STRT-N mouse library\nThe resulting output count matrix is used to create Seurat object with CreateSeuratObject function and the data is normalized based on spike-in normalization with NormalizeData function. We normalized measured values based on spike-in normalization because in preimplantation development, RNA amount is changing at the different stages according to ref.22[href=https://www.wicell.org#bib22] Hereby, the default per-million based normalization is invalid for this STRTN library analysis. Therefore, we added +1 value to all expression values and divided the values by sum of spike-ins expression values (see below). Differences between the expression profiling with spike-in normalization and without spike-in normalization is demonstrated in Figure 6[href=https://www.wicell.org#fig6]. We highly recommend spike-in normalization to enables accurate comparisons of expression levels between samples. Followed by, as an example, we visualized resulting data from mouse STRT-N library (Figure 7[href=https://www.wicell.org#fig7]). The example usage is available in: https://github.com/gyazgeldi/STRTN/blob/master/STRTN-Seurat.sh[href=https://github.com/gyazgeldi/STRTN/blob/master/STRTN-Seurat.sh]. See example of R-output files in https://doi.org/10.5281/zenodo.7603268[href=https://doi.org/10.5281/zenodo.7603268].\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2756-Fig6.jpg",
    "Figure 6. Differences in the expression profiling for 6 genes between the two ways of normalizing the samples: per-10000 normalization or Spike-In based normalization\n(A) violin plots obtained based on per-10000 normalization of 6 genes in early embryo development; (B) violin plot obtained based on Spike-In normalization.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2756-Fig7.jpg\nFigure 7. Output from single-cell RNA sequence analysis\nUMAP plot representation of a successful library, showing the developmental stages from 42 RNA samples.\nstrt.seurat.obj <- NormalizeData(strt.seurat.obj, normalization.method = \"LogNormalize\", scale.factor = 10000)\nreads.p1 <- cts + 1\nreads.p1.spikes <- colSums(reads.p1[1:97,])\nstrt.seurat.obj[[\"RNA\"]]@data <- as(as.matrix(log(reads.p1/rep(reads.p1.spikes, each=nrow(reads.p1)))), \"dgCMatrix\")"
  ],
  "subjectAreas": [
    "Genomics",
    "Rnaseq",
    "Sequence Analysis",
    "Bioinformatics",
    "Developmental Biology",
    "Molecular Biology",
    "Gene Expression",
    "Sequencing",
    "Single Cell"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}