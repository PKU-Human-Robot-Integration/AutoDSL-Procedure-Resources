{
  "id": 2634,
  "origin_website": "Cell",
  "title": "Determining Alternative Protein Isoform Expression Using RNA Sequencing and Mass Spectrometry",
  "procedures": [
    "Step-By-Step Method Details\nStep-By-Step Method Details\nTranscriptomics Analysis: RNA Extraction and Sequencing: Mammalian RNA Extraction from Frozen Cell Pellet\nAlternatives: see “Retrieving Publicly Available RNA-seq Data[href=https://www.wicell.org#sec3.3]”\nTiming: ∼1–3 h\nThe goal of this step is to extract high-quality RNA samples for downstream RNA sequencing.\nPlace frozen cell pellets in sample tubes on dry ice and add 600 μL (for <5 × 106 cells) TRIzol directly to each frozen pellet. Transfer the sample tube on ice. Homogenize cells with a high-speed tissue homogenizer (e.g., OMNI TH) for 10 s, then cool down the samples on ice for 1 min. Repeat this step two additional times.\nNote: Process one tube of cell pellets at a time. Homogenized samples in TRIzol can be kept on ice until all samples have been homogenized.\nCentrifuge at 16,000 × g for 15 min at 4°C to remove debris. Transfer the supernatant to a new 2.0 mL RNase-free tube.\nMeasure the sample volume using a 1,000 μL pipette. Add an equal volume of ethanol (95%–100%) to the sample and mix thoroughly by pipetting up and down. Proceed to RNA extraction using a modified protocol with the Direct-zol RNA MiniPrep kit (steps 4–11). All reagents mentioned below are supplied in the Direct-zol RNA kit.\nTransfer up to 700 μL mixture into a Direct-zol spin column in a 2.0 mL collection tube. Centrifuge at 16,000 × g for 30 s at 20°C–22°C, discard the flow through. Transfer the remaining sample mixture into the spin column and repeat centrifugation.\nIn-column DNase I treatment:\nAdd 400 μL RNA Wash Buffer to the spin column and centrifuge at 16,000 × g for 30 s at 20°C–22°C.",
    "In a new RNase-free tube, mix 75 μL DNA Digestion buffer with 5 μL DNase I (6 U/L; lyophilized DNase I is reconstituted in DNase/RNase - free water and stored at −20°C).\nAdd the mixture to the column and incubate at 20°C–22°C for 15 min.\nAdd 400 μL RNA PreWash Buffer to the column and centrifugate at 16,000 × g for 30 s at 20°C–22°C. Repeat this step two additional times.\nAdd 700 μL RNA Wash Buffer to the column and centrifugate at 16,000 × g for 30 s at 20°C–22°C. Repeat this step two additional times.\nCentrifugate at 16,000 × g for 30 s to remove any remaining buffer in the column.\nAdd 50 μL DNase/RNase-free water to the column. Sit the column at 20°C–22°C for 1 min. To elute RNA, centrifugate at 16,000 × g for 1 min at 20°C–22°C.\nNote:\nTo improve RNA recovery, warm DNase/RNase-free water (up to 60°C) can be added to the column and allow to incubate for 3–5 min.\nUse a smaller amount of water (≥ 35 μL) to elute RNA (if higher concentration of RNA is desired).\nAssess RNA quantity and quality by NanoDrop, Qubit, or Agilent Bioanalyzer. For RNA sequencing. See below for an example of typical RNA QC results using NanoDrop and Qubit IQ Integrity assay (with RNA extracted from two mouse tissues) (Table 3[href=https://www.wicell.org#tbl3]).\ntable:files/protocols_protocol_213_11.csv",
    "Critical: RNA should be free of chemical or protein contamination and A260/280 ∼1.95–2.10 and A260/230 ratios should be ∼2.0–2.2; If Bioanalyzer analysis was performed to measure RNA integrity, the RNA integrity number (RIN) should ideally be as close to 10 as possible (no rRNA degradation), but this value may be affected by sample types and species. Please refer to library generation kits for specific RIN requirements, and the Qubit RNA IQ manual for a rough conversion between RNA IQ number and RIN.\nProceed to the next step “RNA Sequencing and Quality Control of Raw Sequencing Data”.\nPause Point: Snap freeze RNA samples in liquid nitrogen and store RNA at −80°C.\nRNA Sequencing and Quality Control of Raw Sequencing Data\nPerform short-read RNA sequencing, e.g., pair-ended mRNA sequencing with up to 150 bp read length on an Illumina Next-Seq platform.\nCritical: A sufficient read depth is required to detect isoform transcripts which often exist at lower abundance than canonical forms. Compared to routine gene-level quantification, a higher sequencing depth up to 100 million reads coverage per library is recommended for isoform transcript mapping.\nQuality assessment of raw sequencing data by using quality control (QC) software packages is recommended to ensure sequencing read quality. Example tools include FastQC (Andrews, 2010[href=https://www.wicell.org#bib1]). Common quality metrics include sequence quality, adapter content, and overrepresented sequences/k-mers.\nRetrieving Publicly Available RNA-Sequencing Data",
    "As an alternative to generating custom RNA-seq data, it is possible to access and retrieve publicly available RNA-seq data for the purpose of generating custom protein sequence databases. RNA-seq data should be selected based on similarity or identity of sample tissue or cell type to the proteomics experiments counterparts in order to support sample-specific protein isoform discovery. Another emphasis should be on sequencing depth because of the low abundance of many alternative isoforms. High-quality RNA-seq data for different biological samples may be accessed from NCBI GEO or as part of the data generated by the ENCODE consortium. To download ENCODE cell and tissue data for custom database generation.\nFrom https://www.encodeproject.org[href=https://www.encodeproject.org], input search terms of sample type through “Search ENCODE portal.”\nAlternatives: sample types can be looked up via https://www.encodeproject.org/matrix/?type=Experiment&status=released[href=https://www.encodeproject.org/matrix/?type=Experiment&status=released]\nTo retrieve datasets, follow the links to the sample and download the FASTQ files.\nFollow the alignment and database generation steps below.\nGenerating Custom Databases of Alternative Protein Isoforms",
    "Note: We provide a Python software Junction Centric Alternative Splicing Translator (JCAST; https://github.com/ed-lau/jcast[href=https://github.com/ed-lau/jcast]), which is employed in the example workflow below to create sample-specific custom protein sequence databases for protein isoform identification. RNA-sequencing reads from biological replicates (e.g., n=3) of the same sample type are first mapped to a reference genome by an aligner to generate BAM files to be used as input files for rMATS (Shen et al., 2014[href=https://www.wicell.org#bib10]) to identify splice junction nucleotides expressed in all replicates. JCAST then translates the junction nucleotide sequences into peptide sequences and recover full-length protein sequences to create sample-specific protein isoform databases. In the example below, we use STAR v.2.7.3 (Dobin et al., 2013[href=https://www.wicell.org#bib3]) to map acquired RNA-sequencing reads to a reference genome. Other aligners including Tophat2 (Kim et al., 2013[href=https://www.wicell.org#bib5]) and HISAT2 (Kim et al., 2019[href=https://www.wicell.org#bib6]) can also be employed to map the RNA-sequencing reads for rMATS input.\nNote: We provide minimal example commands below in order to execute the workflow on a Linux system (Ubuntu 18.04.4). Example or placeholder file names are provided for reference where applicable. Please refer to the documentations and publications from the software developers of STAR and rMATS for additional instructions and troubleshooting guides.\nAlternatives: Besides JCAST, other software tools and workflows exist that can be used to translate RNA-sequencing reads into custom proteomics databases with different strengths and limitations. One example is alternative workflow world employed the software customProDB (Wang and Zhang, 2013[href=https://www.wicell.org#bib14]) or other compatible tools to perform three-frame translation on assembled transcripts (e.g., from TopHat/StringTie to create custom FASTA databases).\nAlignment of RNA-Sequencing Reads\nTiming: ∼4–6 h\nThe goal of this step is to map RNA-sequencing reads to a reference genome and generate BAM files containing alignment information.",
    "Download the genome assemblies from ensembl.org at ftp://ftp.ensembl.org/pub/. Select the most recent release folder (e.g., release-100; release date: 06/03/2020), navigate to the “fasta” folder and open the folder containing assemblies for the species of interest (we use Homo sapiens as an example in the following steps). Within the “homo_sapiens” folder, navigate to the “dna” folder and download the genome assembly by single clicking on the file named “Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz.”\nNote: Use primary assemblies rather than masked/soft masked genomes for alignment.\nDownload the gene annotation GTF file from Ensembl. Within the “release-100” folder, open the “gtf” folder and then the “homo_sapiens” folder. Download the genome annotation file by single clicking on the file “Homo_sapiens.GRCh38.100.gtf.gz.”\nUnzip downloaded assembly and annotation files. $ gunzip\n          filepath/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz $ gunzip filepath/Homo_sapiens.GRCh38.100.gtf.gz\nDownload and install STAR v.2.7.3 or above. $ wget https://github.com/alexdobin/STAR/archive/2.7.3a.tar.gz[href=https://github.com/alexdobin/STAR/archive/2.7.3a.tar.gz] $ tar -xzf 2.7.3a.tar.gz $ cd STAR-2.7.3a/source $ make STAR\nBuild the STAR genome index for alignment. $ STAR --runThreadN 8 --runMode genomeGenerate --genomeDir\n          filepath/[STAR index file name] --genomeFastaFiles\n          filepath/Homo_sapiens.GRCh38.dna.primary_assembly.fa --sjdbGTFfile\n          filepath/Homo_sapiens.GRCh38.100.gtf --sjdbOverhang 149\nNote: --runThreadN defines the number of threads to be used.\nNote: --sjdbOverhang defines the length of the genomic sequence to be used in the construction of a splice junction database. The ideal value is ReadLength -1, e.g., for Illumina 2 × 150 bp paired-end reads, the value is 150 − 1 = 149. Alternatively, the default value of 100 works as well as the (ReadLength -1) value in most cases.\nNote: Replace [STAR index file name] with the desired file name for the STAR index to be generated.\nNote: Refer to the STAR documentations and publications for troubleshooting.\nAlign RNA- sequencing reads with STAR (e.g., paired-end reads R1.fastq.gz and R2.fastq.gz) $ STAR --runThreadN 8 --genomeDir filepath/filename-of-STARindex\n          --readFilesIn filepath/R1.fastq.gz filepath/R2.fastq.gz\n          --readFilesCommand zcat --outSAMtype BAM SortedByCoordinate\n          --outFileNamePrefix filepath/prefix",
    "Note: --genomeDir defines the path to the genome indexes files generated in step 5.\nNote: --readFilesIn specifies the read files to be mapped. Read files can be single-end reads or paired-end reads with R1 and R2 files separated by space. To map multiple samples, separate samples by comma, for example,\nNote: --readFilesCommand is required when input read files are compressed.\nRefer to the STAR GitHub repository, documentations, and publications from the developer for additional instructions on installation and usage. (https://github.com/alexdobin/STAR[href=https://github.com/alexdobin/STAR]).\nIdentification of Transcript Splice Junctions\nTiming: ∼6–8 h\nThe goal of this step is to identify splice junction nucleotide sequences that are expressed at mRNA level in the sample.\nDownload the rMATS-turbo-0.1 docker image from https://sourceforge.net/projects/rnaseq-mats/files/MATS/rmats-turbo-0.1.tar.gz/download[href=https://sourceforge.net/projects/rnaseq-mats/files/MATS/rmats-turbo-0.1.tar.gz/download].\nInstall docker. $ sudo apt install docker.io[href=http://docker.io]\nUnzip the compressed files. $ gunzip rmats-turbo-0.1.tar.gz\nInstall the rMATS-turbo-0.1 docker image. $ sudo docker load -i rmats-turbo-0.1.tar\nMove the STAR output bam files and genome annotation gtf file into a designated folder (e.g., mydata). Specify the names of the STAR output BAM files in .txt files. $ cd mydata $ cat >b1.txt /data/Sample1-replicate1.bam,/data/Sample1-replicate2.bam Ctrl+Z $ cat >b2.txt /data/Sample1-replicate3.bam,/data/Sample1-replicate4.bam Ctrl+Z\nNote: On some computer systems, Docker may lack permission to access the data directory (e.g., the folder “mydata” in our example) depending on security settings. Modify access permissions of files/directories with chrom as necessary or mount the host directory to a container directory with the “-v” option while using “docker run” as below (see also step 6; consult Docker documentation for details: https://docs.docker.com[href=https://docs.docker.com]).\n$ docker run -v /host_directory:/container_directory run_commands",
    "The created b1.txt and b2.txt files list the bam files of replicates from the same sample. In this protocol, we rely on the quantitative and statistical output of rMATS to identify the splice junctions that are consistently expressed in all replicates at appreciable levels and discard the other junctions.\nProcess the bam files from STAR outputs using rMATS to extract splice junction information. $ sudo docker run -v ∼/mydata:/data rmats:turbo01 --b1 /data/b1.txt\n          --b2 /data/b2.txt -- gtf /data/Homo_sapiens.GRCh38.100.gtf --od /data/output -t\n          paired --nthread 4 -- readLength 150 --anchorLength 1\nNote: Change readLength value to the length of reads in your RNA-sequencing data.\nNote: Refer to the rMATS documentations and publications for more information about usage of rMATS docker image at http://rnaseq-mats.sourceforge.net/rmatsdockerbeta/DockerImage-rMATS-turbo-0.1.pdf[href=http://rnaseq-mats.sourceforge.net/rmatsdockerbeta/DockerImage-rMATS-turbo-0.1.pdf] http://rnaseq-mats.sourceforge.net[href=http://rnaseq-mats.sourceforge.net]\nOptional: Set up a virtual environment for rMATS in Python 2.7 if needed. Python 2.7 can be acquired from https://www.python.org[href=https://www.python.org]. Instruction to setting up a virtual environment in Python 2.x using virtualenv can be found in the Python documentations: https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/[href=https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/]\nIn Silico Translation of Custom Protein Sequences\nTiming: ∼3–6 h\nJCAST processes rMATS output files with options to filter out splice junctions with low or variable counts and then translates junction sequences into peptide and protein sequences.\nInstall Python3.7+ (https://www.python.org[href=https://www.python.org]) and pip (https://pip.pypa.io/en/stable/installing/[href=https://pip.pypa.io/en/stable/installing/]) following developer instruction.\nInstall JCAST v.0.2.8 or a compatible version $ python3 -m pip install jcast\nNote: JCAST can be acquired through pypi using pip or directly from Github. JCAST requires Python 3.7+ which can be acquired from https://www.python.org[href=https://www.python.org]\nOptional: To avoid potential conflicts in Python and dependency versions with other softwares, we recommend setting up a Python virtual environment for JCAST. For example, use the following command to set up a Python3.8 virtual environment\n$ python3.8 -m venv ∼/venv To use the virtual environment: $ source ∼/venv/bin/activate To install JCAST: (venv) $ pip install jcast",
    "Note: Further instruction for setting up a virtual environment in Python 3.x using venv can be found in the Python documentations: https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/[href=https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/]\nTo test whether JCAST is installed and print the help message for JCAST usage, type “jcast” in the Terminal command window:\n$ python3 -m jcast Or (venv) $ jcast\nThe following message will show up in the command window:\nusage: jcast [-h] [-o OUT] [-r READ] [-p PVALUE] rmats_folder gtf_file\n        genome Jcast retrieves splice junction information and translates into amino\n        acid positional arguments: rmats_folder               path\n        to folder storing rMATS output gtf_file                   path\n        to ENSEMBL GTF file genome                     path\n        to Genome file optional arguments: -h,\n        --help                 show\n        this help message and exit -o OUT, --out\n        OUT          name of\n        the output files [default: psq_out] -r READ, --read READ       minimum\n        read counts to consider [default: 1] -p PVALUE, --pvalue PVALUE discard junctions with rMATS pvalue\n        below this threshold [default: 0.01]\nNote: JCAST provides the options to filter out splice junction sequences with low read counts by the -r argument and sequences with variable read counts by the -p argument.\nNote: p is set at 0.01 by default, which means differentially expressed junctions (p < 0.01) between the biological replicates from the same sample group will be discarded. Only junctions expressed in all biological replicates will be kept and translated into peptide and protein sequences.\nProcess outputs from rMATs (RI.JC.txt, A5SS.JC.txt, A3SS.JC.txt, MXE.JC.txt, SE.JC.txt) and generate custom protein databases for protein identification. (venv) $ jcast path/to/rmats_folder/\n          path/to/Homo_sapiens.GRCh38.100.gtf\n          path/to/Homo_sapiens.GRCh38.dna.primary_assembly.fa -o OUT\nNote: JCAST requires three inputs. The first is the path to the folder of the splice junction files from rMATS output. The second is the path to the genome annotation file, and the third is the path to the genome FASTA file.",
    "Note: rMATS generates two output files for each splicing event, JC.txt and JCEC.txt. JC.txt includes sequences that span splice junctions of two adjacent exons and is what we use as JCAST input. JCEC.txt contains sequences which span splice junctions and locates within alternative exons.\nNote: The output of JCAST is a number of protein sequence database (FASTA) files named according to their content. These files include canonical sequences in the psq_canonical.fasta file, non-canonical/alternative sequences in one of four translation tiers in the psq_T1.fasta, psq_T2.fasta, psq_T3.fasta, and psq_T4.fasta files, as well as orphan sequence fragments that are not compatible with the Swissprot canonical sequence at the N- and/or C- terminal ends. Refer to the JCAST documentation for details on the translation tiers. The FASTA files can be combined manually using a text editor to yield the custom protein sequence databases used in database search for the shotgun proteomics workflows below.\nOptional: To test JCAST performance, download a small dataset containing rMATS input files, human genome chromosome 15 annotation file and assembly file from https://github.com/ed-lau/jcast/tree/master/tests/data[href=https://github.com/ed-lau/jcast/tree/master/tests/data]. Run JCAST:\n(venv)$ jcast path/to/rmats_folder/ path/to/Homo_sapiens.GRCh38.89.chromosome.15.gtf path/to/Homo_sapiens.GRCh38.dna.chromosome.15.fa -o OUT\nWith this test dataset JCAST will create protein sequence databases including two protein isoform sequences for the gene PKM. One is the canonical sequence which can be found in the psq_canonical.fasta file (>sp|P14618|KPYM_HUMAN Pyruvate kinase PKM), corresponding to the UniProt P14618 (KPYM_HUMAN) canonical sequence. The other non-canonical PKM isoform can be found in the psq_T1. fasta file (>sp|P14618|KPYM_HUMAN|E NSG00000067225|MXE2) and differs with the canonical sequence at amino acids 389–426 IYHLQLFEELRRLAPITSDPTEATAVGAVEASFKCCSG. The alternative peptide sequence was generated by a mutually exclusive splicing (MXE) event at the mRNA transcript.\nOptional: if several samples (i.e., a time course) need to be analyzed, this entire process may be batched using a shell script that loops through individual rMATS output folders.",
    "Mammalian Protein Extraction from Frozen Cell Pellets\nTiming: ∼30 min per sample\nThis goal of this step is to extract and solubilize proteins from cellular samples for MS experiments.\nPlace frozen cell pellets in sample tubes on dry ice. Add 1 mL of cold RIPA buffer containing 1× Halt Protease Inhibitor Cocktail into one sample tube with frozen cell pellets (∼5 × 106 cells).\nNote: The RIPA buffer and protease inhibitor mixture should be freshly prepared and kept on ice.\nOptional: RNA and protein can be extracted simultaneously from the same sample. Extractions can be performed using acidic guanidinium-thiocyanate-phenol (TRIzol; Life Technologies) followed by chloroform extraction of RNA in the aqueous phase and precipitation of proteins in the organic phase, or using solid-phase columns and reagents such as the AllPrep DNA/RNA/Protein Mini Kit (QIAGEN) following manufacture’s manual. Please see Limitations[href=https://www.wicell.org#limitations] section for additional discussion on experimental design.\nVortex for 10 s.\nWith a handheld Omni TH homogenizer, homogenize cells on ice at high speed for 10 s. Sit the cell pellets in sample tubes on ice for 1 min to avoid overheating samples by homogenization.\nRepeat step 3 for two additional times for a total of three rounds of homogenization.\nNote: Process one tube of cell pellets at a time. Homogenized samples in the RIPA buffer can be kept on ice until all samples have been homogenized.\nClean the homogenizer probe between different samples by rinsing with 50% LC-MS grade isopropanol or ethanol followed by LC-MS grade H2O for three times.\nWith a handheld sonicator (we use Fisher Model 120), sonicate homogenized samples at 40% amplitude for 1 s, pause for 5 s. Repeat step 6 for a total of 15 cycles.\nCentrifuge samples at 5,000 × g for 1 min at 4°C, and vortex for 10 s.",
    "Repeat steps 6 and 7 for two additional times for a total of three rounds of sonication.\nCentrifuge samples at 14,000 × g for 15 min at 4°C. Collect supernatants and measure protein concentration with the BCA protein assay kit following manufacturer instruction.\nProceed to the next step “Protein Digestion using Trypsin and Lys-C,” or snap freeze protein samples in liquid nitrogen and store at −80°C.\nProtein Processing and Shotgun Proteomics Analysis\nTiming: ∼24 h\nThis goal of this step is to reduce, alkylate, and proteolyze proteins into peptides for MS experiments.\nRemove detergent from protein samples using the Detergent Removal Spin Column (Pierce) following manufacturer instruction.\nQuantify protein concentration with the BCA Protein Assay Kit (Thermo).\nMeasure 100 μg protein and adjust sample volume to 100 μL in a protein low-bind Eppendorf tube with ammonium bicarbonate (100 mM).\nCritical: Ammonium bicarbonate needs to be freshly prepared.\nAdd 10 μL of 60 mM DTT into the sample. Wrap the sample tube with parafilm to prevent samples from drying out or accidental spillage. Vortex for 10 s and quickly spin on a mini spin centrifuge. Incubate at 55°C for 30 min with 600 rpm shaking.\nQuickly spin the sample on a mini spin centrifuge. Allow the sample to cool down to 20°C–22°C.\nAdd 5 μL of 375 mM IAA to the sample. Vortex for 10 s and quickly spin on a mini centrifuge. Incubate in the dark at 20°C–22°C for 30 min with optional 600 rpm shaking.\nCritical: IAA is light sensitive and needs to be freshly made.\nQuickly spin the sample on a mini centrifuge. Add 2 μg of MS-grade trypsin/Lys-C Protease Mix to the sample and wrap the tube with parafilm to prevent the sample from drying. Incubate at 37°C with optional 600 rpm shaking for 16–20 h.",
    "Note: The ratio of proteases to protein can range from 1:100–1:20 (w/w) depending on the digestion efficiency on the samples.\nAlternatives: Instead of using the trypsin/Lys-C mix, a sequential digestion can be performed in step 45: first, add 1 μg of MS-grade Lys-C to the sample and incubate the sample at 37°C for 3 h with 600 rpm shaking; next, add 1 μg of MS-grade trypsin into the sample and incubate the sample at 37°C with 600 rpm shaking for 16–20 h.\nCritical: the pH of digestion buffer should be in the range of ∼7–9 because trypsin has maximal activity in that pH range.\nQuantify peptide amount with the Pierce Quantitative Colorimetric Peptide Assay.\nProceed to the next step “Peptide Clean-Up for Downstream Mass Spectrometry Analysis.”\nPause Point: To store samples for future usage, snap freeze and store peptides at −20°C or −80°C.\nPeptide Clean-Up for Downstream Mass Spectrometry Analysis\nTiming: 1–2 days\nThis goal of this step is to clean up the peptides to remove interfering contaminants (e.g., salts) for MS analysis.\nOption 1\nClean up samples with the Pierce C18 mini spin columns for MS analysis. Dry eluted peptides in a vacuum dryer and resuspend peptides in 0.1% formic acid (in LC-MS grade water). Quantify peptides concentration using a quantitative peptide assay.\nOption 2\nProcess samples with the Pierce High pH Reversed-Phase Peptide Fractionation Kit. This kit will clean up peptides as well as perform an offline fractionation of peptides. This is necessary if two-dimensional- (2D) LC separation is intended. Dry eluted peptides in a vacuum dryer and resuspend peptides in 0.1% formic acid (in LC-MS grade water). Quantify peptides concentration using a quantitative peptide assay.",
    "Note: Due to the potentially low abundance of protein alternative isoforms, we recommend the use of 2D-LC separation prior to MS acquisition to increase proteome coverage.\nMass Spectrometry and Liquid Chromatography\nTiming: hours to days depending on sample number and LC gradient strength\nRetrieving Publicly Available Shotgun Proteomics Data\nAs an alternative to analysis of newly generated MS data, the custom protein sequence databases output by JCAST can be used to re-analyze existing data including publicly available proteomics data from persistent repositories. For example, it is possible to access and retrieve publicly available shotgun proteomics data from ProteomeXchange/PRIDE as an alternative approach to generating experimental data for protein alternative isoform identification. Proteomics data should be selected based on their similarity in tissue type and experimental condition to the RNA-seq data used to generate custom protein databases.\nNote: Access PRIDE via https://www.ebi.ac.uk/pride/[href=https://www.ebi.ac.uk/pride/]; Input search terms for datasets of interest (e.g., “cardiac”) into the “Search” field on the front page.; Follow links to datasets and download the .raw files.\nProtein Database Search\nTiming: hours to days depending on sample number\nThe goal of this step is to search the acquired MS spectra against the custom isoform databases to identify expressed protein isoforms in the samples.\nDownload and install msconvert v.3.0.11392 (Chambers et al., 2012[href=https://www.wicell.org#bib2]) (Tools - ProteoWizardproteowizard.sourceforge.net[href=http://ProteoWizardproteowizard.sourceforge.net] › tools) on a Windows or Linux computer.\nConvert vendor specific .raw files into .mzML files using msconvert with the following command in the Windows Command Prompt (Windows): filepath\\output folder\\”filepath\\msconvert.exe” “filepath\\MS.raw”\n          --filter “peakPicking vendor”\nPeptide and Protein identification by MaxQuant v.1.6.10.43 (Tyanova et al., 2016[href=https://www.wicell.org#bib13]) with its built-in search engine Andromeda.\nDownload and install MaxQuant software from https://www.maxquant.org/[href=https://www.maxquant.org/] following developer instructions.",
    "To load the custom proteome database generated by JCAST, go to the “Global Parameters” session and choose the “Sequences” tab. Click the “Add” button to designate the file path to the FASTA file. Once the upload is complete, the FASTA file will be displayed in the window. An example screen capture is shown below where the file Human_Heart_JCAST.fasta is uploaded in MaxQuant (Figure 1[href=https://www.wicell.org#fig1]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/213-Fig1.jpg\nFigure 1. Loading a Custom Database through the MaxQuant User Interface\nScreenshot showing a custom protein sequence database generated by JCAST (Human_Heart_JCAST.fasta) being loaded to MaxQuant for database search. Databases are loaded by clicking the “Add” under the “Global Parameters” > “Sequences” tabs. Additional options, including Identifier rule, Description rule, and Taxonomy can be specified (see MaxQuant documentation for details).\nNote: The exact user interface may differ based on operating systems or the version of MaxQuant used, and may change in future MaxQuant updates. Please refer to the latest MaxQuant documentations for detailed instructions.\nTypical parameter settings are shown in the table below (Table 4[href=https://www.wicell.org#tbl4]). Use default values for parameters not specified here.\ntable:files/protocols_protocol_213_12.csv",
    "MaxQuant stores search results as txt files containing information about identified peptides and proteins in the folder “\\combined\\txt\\.” A detailed description of each output file can be found in the “tables” pdf file. To collect isoform-specific unique peptides, open “peptides.txt” file and check the values in the column “Unique (Proteins)”, if the value is “yes” then this peptide is unique to a single protein sequence in the FASTA protein database; if the value is “no” then this peptide is a razor peptide shared by multiple protein sequences. The MS2 scan information for all peptides can be found in the txt file “msms.txt”. Identification confidence can be determined by the Posterior Error Probability (PEP) values and Andromeda score with lower PEP values and higher Andromeda scores indicating higher confidence.\nAlternatives: Besides MaxQuant, the custom sequence databases are compatible with other popular proteomics database search engines including Thermo ProteomeDiscoverer."
  ],
  "subjectAreas": [
    "Proteomics",
    "Rnaseq",
    "Mass Spectrometry",
    "Bioinformatics"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}