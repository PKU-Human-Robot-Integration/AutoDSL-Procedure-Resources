{
  "id": 19968,
  "origin_website": "Wiley",
  "title": "Supervised Learning of Gene Regulatory Networks",
  "procedures": [
    "Supervised learning of gene regulatory interactions is based on features of the TF-gene pair to be classified. To this end, gene-expression profiles provide a plethora of data based on features that can be extracted. A trivial set of features can be obtained by concatenating the gene-expression profiles of the TF and gene in a given pair (Ni et al., 2016[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-bib-0010]). However, such a representation does not consider the relationship between the expression of the putative target and TF in a given experiment. Here, we provide the means to extract transcriptomics features representative for a TF-gene pair.\nMaterials\nExpression of genes monitored over different developmental and environmental conditions (perturbation experiments) or over time (time-resolved experiments). Gene-expression values are usually represented in a table, Expn×p, where n denotes the number of genes, p stands for the number of experiments (e.g., conditions or time points), and the entity Expi,j, denotes the expression level of gene i in experiment j.\n1. Scale the expression profiles of TFs and genes by their respective maximum expression values (Fig. 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-fig-0002]).\nThe scaled expression values provide the coordinates for a point representation of a TF-gene pair in each experiment.\nThe following code snippet scales the expression profile of Exp (Equation 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-disp-0001]):\n         imgsrc:/cms/asset/fc2383a5-a162-4397-8157-6e4fae2e7f8b/cppb20106-math-0001.png\n2. Determine the Euclidean distance between every two experiments based on the point representation (Fig. 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-fig-0002]).\nThe result is represented by a symmetric p × p matrix for every TF-gene pair.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/46931959-a5ec-4707-a0d2-12811fae3660/cppb20106-fig-0002-m.jpg</p>\nFigure 2",
    "Steps of Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-prot-0001]. An example of expression profiles (A) of a transcription factor (TF) and a gene (G) over four samples that are scaled by the respective maximum expression in the second step (B). The scaled expression profiles for a pair of TF-genes are represented in the unit square (C), and in the second step the Euclidean distance for each pair of experiments is determined based on the point representation. The feature (D) for the TF-gene pairs is obtained in the third step by vectorizing the upper triangular matrix (excluding the diagonal as non-informative).\n3. Obtain the features of the TF-gene pair by the vectorized form of the resulting Euclidean distance matrix obtained from step 2 (Fig. 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-fig-0002]).\nEvery TF-gene pair is presented by p(p −1)/2 features.\n         imgsrc:/cms/asset/60817ece-c646-4e9f-8f84-8dcd1a2b5569/cppb20106-math-0002.png\nSteps 2 and 3 of Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-prot-0001] are implemented in lines 98-146 of the code (https://github.com/MonaRazaghi/GRADIS/blob/master/GRADIS_neg.m[href=https://github.com/MonaRazaghi/GRADIS/blob/master/GRADIS_neg.m]). These lines determine the Euclidean distance for each TF-gene pair, and vectorize it to form the feature vector.\nThe number of features can be reduced by selection of representative experiments. This can be achieved by clustering the experiments and selecting the cluster representatives as those that are used in the feature extraction presented above.",
    "Training a binary classifier requires access to two types of instances, called positive and negative, which in our case correspond to presence or absence of gene regulatory interactions for a given pair of TF and gene. Typically, there is little information available about the absence of gene regulatory interactions between TFs and target genes in real-world datasets. Hence, it is not straightforward to train a classifier, due to the lack of negative instances. We describe a detailed procedure for composing a list of negative instances given knowledge about positive instances, i.e., TF-target gene pairs along with their expression levels.\nMaterials\nHardware\nThe approach can be executed on any computer (e.g., i7 processor and 16 GB RAM) with Windows 7 operating system\nSoftware\nThe only software needed to run the code is Matlab R2017b\nData\nExpression-based features for TF-gene pairs based on the Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-prot-0001]\nA list of pairs of interacting TFs and their target genes. These pairs are referred to as positive instances and are obtained from experimentally verified interactions with different technologies.\n               \nPositive instance can be obtained from different databases: for instance, DREAM5 challenge (Marbach et al., 2012[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-bib-0006]), RegulonDB (Gama-Castro et al., 2016[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-bib-0002]), Yeastract (Teixeira et al., 2018[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-bib-0014]), and AGRIS (Yilmaz et al., 2011[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-bib-0016]).\nIf TF-target gene interactions are not verified in the organism of interest, consider transfer of interactions according to homology from model organisms.\n1. Form the class of positive instances of the training data by collecting the available experimentally verified TF-gene interactions.\n2. Consider the remaining TF-gene pairs as uncharacterized, and divide them into subsets of size (almost) equal to that of the positive class (in step 1). Assume that there are k such subsets.",
    "3. Treat one of these subsets, i, 1 ≤ i ≤ k, as a negative class and use it together with the positive class to train an SVM specific to subset i.\n4. Treat the uncharacterized TF-gene pairs in all but the i-th subset as test data and assess them by the built SVM classifier.\n5. Aggregate the individual classifiers for each of the k subsets to form the set of negative instances.\nFor a given uncharacterized TF-gene pair, the aggregation amounts to counting the number of classifiers that classify the pair as positive. A lower count would correspond to a higher likelihood that the TF-gene pair is negative. The class of negative instances is composed of those TF-gene pairs whose count is zero.\nThe implementation for Basic Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-prot-0002] can be found in the lines 151-189 of the code (https://github.com/MonaRazaghi/GRADIS/blob/master/GRADIS_neg.m[href=https://github.com/MonaRazaghi/GRADIS/blob/master/GRADIS_neg.m]).\nThe number of negative instances found with this approach is considerably higher than the number of positive ones, resulting in an unbalanced learning problem, to be considered in Basic Protocol 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-prot-0003].",
    "Having obtained a labeled training set associated with the feature vectors (see Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-prot-0001], above), an SVM can be trained to find an optimal hyperplane that separates the two classes. The training set consists of m TF-gene pairs p1, p2, …, pm, each of which belong to either of the two positive and negative classes, respectively denoted by +1 and −1. Following Basic Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-prot-0002], the negative class of TF-gene pairs is considerably bigger than the positive. Here we describe a protocol for overcoming this challenge.\nMaterials\nExpression-based features for TF-gene pairs (see Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-prot-0001])\nPositive and negative classes of TF-gene pairs: the negative class is obtained based on Basic Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-prot-0002]\n1. Form the class of positive instances of the training data by collecting the available experimentally verified TF-gene interactions.\n2. Form a class of negative instances of the same size as the class of positive instances by randomly sampling from the negative class instances provided.\n3. Train an SVM with the features and classes from steps 1 and 2.\n4. Predict the class of the uncharacterized TF-gene pairs based on the SVM.\nThe implementation for Basic Protocol 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cppb.20106#cppb20106-prot-0003] can be found in lines 191-217 of the code (https://github.com/MonaRazaghi/GRADIS/blob/master/GRADIS_neg.m[href=https://github.com/MonaRazaghi/GRADIS/blob/master/GRADIS_neg.m]).\nAverage performance and confidence intervals can be obtained by performing several samplings in step 2, above. We recommend performing at least 10 random samplings of negative instances."
  ],
  "subjectAreas": [
    "Plant Biology"
  ],
  "bigAreas": [
    "Ecology & Environmental Biology"
  ]
}