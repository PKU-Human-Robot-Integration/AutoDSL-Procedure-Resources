{
  "id": 3564,
  "origin_website": "Cell",
  "title": "Protocol for the prediction, interpretation, and mutation evaluation of post-translational modification using MIND-S",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nPTM prediction with MIND-S\nTiming: 5 min\n      Given a protein sequence (accepted in fasta format), MIND-S will predict\n      if PTMs will occur on the protein, with detailed information about the PTM\n      type and the PTM site. Predictions will be made on all targeted amino\n      acids in the protein.\n    \nSpecify an output directory to store the output.\n>mkdir result\nRun the following to make predictions.\n>python batch_predict.py \\\n> --pretrain_name saved_model/MIND_fifteenfold \\\n> --data_path sample/Q5S007.fa \\\n> --res_path result \\\n> --n_fold 15\nNote: The trained model is stored in the\n      saved_model directory (downloaded along with the MIND-S program) and can\n      be specified by the pretrain_name parameter. We recommend using the\n      MIND_fifteenfold model for predicting the 13 PTM types with n_fold = 15\n      for its most robust performance, achieved by repeating the training\n      process 15 times. For predicting the 13 O-PTM types, set pretrain_name to\n      OPTM_fifthteen. The data_path argument is used to provide the path to the\n      protein fasta file and res_path is used to provide the path to the output\n      folder, where the model outputs will be stored.\n    \n        Examine the results.\n        \n            Two files, ‘results.json’ and ‘correct_predictions.csv’, will be\n            returned from MIND-S under the output folder (Figures 1[href=https://www.wicell.org#fig1]A and 2[href=https://www.wicell.org#fig2]B).\n            \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/3134-Fig1.jpg\n                  Figure 1. Example PTM prediction output files\n                \n                  (A) screenshot from “results.json”. Each prediction is labeled\n                  as <protein UID_PTM site_PTM type: prediction score>.\n                \n                  (B) screenshot from ‘correct_predictions.csv.’ The columns\n                  correspond to protein UID, PTM site, PTM type, and prediction\n                  score.\n                \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/3134-Fig2.jpg\n                  Figure 2. Saliency Score Plot of Amino Acids Spanning the PTM\n                  Site\n                \n                  The x-axis refers to the relative positions of amino acids\n                  surrounding the PTM site, where 0 denotes the PTM site (a\n                  small red circle highlights the position of the PTM site). The\n                  y-axis refers to the saliency scores of the corresponding",
    "amino acids. A high saliency score indicates that the amino\n                  acid at the position is important for the model to make the\n                  prediction. In this case, amino acids at positions -3 and -5\n                  are important for the prediction.\n                \ntable:files/protocols_protocol_3134_1.csv\nNote: ‘results.json’ contains the\n      prediction results for every position (indexing starts at 1) in every\n      sequence in json format. Each prediction is labeled as <protein\n      uid_site_ptm_type: prediction score>. ‘correct_predictions.csv’\n      contains only predictions with a prediction score >= 0.5, which are\n      defined as the predicted PTMs. The prediction score ranges from 0 to 1,\n      and higher scores indicate a higher predicted probability for PTM\n      occurrence. Details about the PTM type abbreviations can be found in\n      Table 1[href=https://www.wicell.org#tbl1].\n    \nCritical: The above steps illustrate\n      the process of running predictions. All operations in this protocol,\n      including PTM prediction, interpretation and mutation effect inspection,\n      are required to be performed under the MIND directory.\n    \nNote: MIND-S allows batch predictions on\n      multiple proteins simultaneously. This can be done by simply including all\n      protein sequences of interest in the input fasta file.\n    \n      Identification of important amino acid for PTM predictions via\n      interpretation module\n    \nTiming: 5 min\n      This step will compute saliency scores to denote the significance of\n      flanking amino acids in the PTM prediction using the integrated gradients\n      method, where a high saliency score of an amino acid indicates a high\n      predicted importance for the PTM.\n    \n        Determine the PTM of interest.\n        \n            From ‘correct_predictions.csv’ choose the PTM of interest {uid:\n            Q5S007, site: 1444, PTM type: Phos_ST}\n          \nRun the following code to make interpretations.\n>python predict_saliency.py \\\n> --inter \\\n> --pretrain_name saved_model/MIND_fifteenfold \\\n> --data_path sample/Q5S007.fa \\\n> --res_path result \\\n> --site 1444\n> --ptm_type Phos_ST\nNote: Similar to the previous step,\n      pretrain_name specifies the model used; data_path is the path to the",
    "protein fasta file and res_path is the path to the output folder. site and\n      ptm_type refer to the position of the PTM interested within the protein\n      sequence (indexing starts at 1) and the PTM type. inter informs the model\n      to execute in interpretation mode. We allow batch interpretation on\n      multiple PTMs within a protein sequence as well. Users can provide the PTM\n      sites and their corresponding types as comma-separated lists as shown\n      below. This step will also generate a figure visualizing the\n      interpretation scores.\n    \n>python predict_saliency.py \\\n> --inter \\\n> --pretrain_name saved_model/MIND_fifteenfold \\\n> --data_path sample/Q5S007.fa \\\n> --res_path result \\\n> --site 6,1269,935,1489 \\\n> --ptm_type Palm_C,glyco_N,Phos_ST,glyco_N\n        Check the saliency scores figure generated in the result directory (Figure 2[href=https://www.wicell.org#fig2]).\n      \nNote: The interpretation module will\n      generate a figure showing the saliency scores of 10 flanking amino acids\n      on both sides of the PTM site. In the batch interpretation case, one\n      figure will be generated for each PTM. Peaks in the saliency score figure\n      indicate that the amino acids at these positions are important for the\n      prediction.\n    \nCritical: For a specific PTM predicted\n      by MIND-S in the previous step, users can leverage the interpretation\n      module in MIND-S to investigate the contribution of adjacent amino acids\n      to that PTM (Though it can be extended to every amino acid in the protein,\n      we found in practice usually the local amino acids are more important).\n    \nNote: The supported PTM types and their\n      abbreviations are shown in Table 1[href=https://www.wicell.org#tbl1].\n    \nEvaluation of mutation impact on the PTM landscape\nTiming: 5 min\n      This step examines altered PTM landscape introduced by mutations on the\n      protein and generates files highlighting the mutations that altered the\n      PTMs.\n    \nRun the following to examine the SNP effect:\n>python PTMSNP.py \\\n>--pretrain_name saved_model/MIND_fifteenfold \\\n>--data_path sample/Q5S007.fa \\\n>--res_path result \\",
    ">--snp R_1441_C \\\n>--n_fold 15\nNote: Similarly, we use pretrain_name to\n      specify the model to perform the predictions and n_fold to specify a\n      15-fold bootstrap method. We provide the path to the fasta file with\n      data_path, and the result will be stored in the res_path. snp indicates\n      the mutation of interest in the format of “WT_site_MUT”, where WT is the\n      wildtype amino acid; site is the location of the amino acid; MUT is the\n      mutant amino acid. In our example, R is the wild-type amino acid, 1441 is\n      the site of the mutation, and C is the mutant amino acid. Two files\n      ‘Q5S007.json’ and ‘Q5S007_R1441C.json’ for the wild-type and mutant\n      prediction results will be generated along with a ‘Q5S007_R1441C.csv’ that\n      summarizes the change in prediction scores. We allow batch evaluation on\n      multiple mutation within a protein sequence as well. Users can provide the\n      mutations in the same format as comma-separated lists as shown below.\n    \n        Run the following to visualize the altered PTM landscape by step 1:\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/3134-Fig3.jpg\n              Figure 3. Example Outputs for PTM Prediction with SNP\n            \n              Screenshots from the wild-type and mutant prediction results\n              ‘Q5S007_R1441C.csv’. PTM column represents the specific PTM in the\n              format of <PTMsite_PTMtype>. Prediction scores of the\n              original protein sequence and the mutant protein sequence are\n              shown under the column Orig_Prob and Mutant_Prob respectively. The\n              difference between the mutant sequence and wild-type sequence is\n              shown in the Effect column.\n            \n>python ptmfigure.py \\\n>--orig_path result/Q5S007.json \\\n>--mutant_path result/Q5S007_R1441C.json \\\n>--res_path result\nNote: Here we specify the wild-type\n      predictions (orig_path) and mutant predictions (mutant_path) to create a\n      csv file summarizing the predictions as well as a figure highlighting the\n      significant difference between the probabilities of the wild-type and the\n      mutant (Figure 3[href=https://www.wicell.org#fig3]). The resulting files will be stored\n      in res_path.",
    "Examine the final figure stored in results directory, where SNPs with\n        high impact will stand out (Figure 4[href=https://www.wicell.org#fig4]).\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/3134-Fig4.jpg\n              Figure 4. Scatter Plot of SNP effect on PTM expression\n            \n              Each point in the figure represents a unique PTM. X-axis\n              represents the protein sequence from N-terminal to C-terminal. The\n              y-axis represents the difference between mutant expression\n              probability and wild-type expression probability. Positive\n              y-values indicate a higher probability in mutant while lower in\n              wildtype, and negative y-values indicate a lower probability in\n              mutant while higher in wildtype. PTMs that are highly impacted by\n              the mutation are readily visible in this figure."
  ],
  "subjectAreas": [
    "Computer Sciences",
    "Sequence Analysis",
    "Protein Biochemistry",
    "Bioinformatics"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}