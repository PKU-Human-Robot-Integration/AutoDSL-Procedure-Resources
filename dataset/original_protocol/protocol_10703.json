{
  "id": 11114,
  "origin_website": "Jove",
  "title": "Designing a Bio-responsive Robot from DNA Origami",
  "procedures": [
    "The robot we  will design in this paper responds to a protein P by making a cargo C available to bind to receptors on the surface of a chosen target cell. The robot  is shown in Figure 1. C may be a receptor-blocking drug; a  growth factor etc., and a way to chemically link it to a DNA oligonucleotide must  be available that does not destroy its function.  The robot has  two states. When inactive, DNA gates on the two external 'lips' are hybridized,  making sure the robot remains closed such that any cargo loaded within it is  securely sequestered. In the presence of protein P, the gates open by either one of several mechanisms (discussed  below) allowing the robot to open and expose the cargo. When designing the  structure, consider that the robot has to be flexible enough to close onto  itself in the closed state, and spring to the open state when the gates enable  it to do so. Modeling the behavior of a DNA structure integrating thermodynamic  and mechanical components is difficult, and the actual object might require  some iterative improvement. Nevertheless, here we focus on the design process  using a general working model, which can be built upon.\nNote:",
    "For  a more comprehensive understanding of the process of DNA origami design and  folding, we highly recommend reading the original caDNAno paper by Douglas and  colleagues19 which explains the  abstract representation of DNA in the design interface and how it relates to the  actual molecular structure of a 3D DNA shape. This paper is accompanied by two  video tutorials describing the caDNAno representation and interface in a very  clear way. Additionally, we recommend reading the more recent paper by Dietz  and colleagues describing many important aspects and detailed protocols of the  folding process, including the Cando analysis tool21.\n1.\tDownload and Install caDNAno 2.0 and Autodesk Maya 2012\nNote: Autodesk software is free for students and academic use. The instructions below  include setting up an academic account at Autodesk.\nCreate  an academic account at http://students.autodesk.com/[href=http://students.autodesk.com/]. After receiving the  account setup e-mail, click the activation link and fill in your preferences as  desired.\nDownload the free version of Maya 2012  from the download center.\nInstall  Maya 2012 on your computer.\nRun  Maya once before installing caDNAno 2.0.\nDownload  and install the latest version of caDNAno 2.0 from http://cadnano.org/[href=http://cadnano.org/].\nRun  Maya 2012. A caDNAno icon should appear at the top right corner of the  graphical user interface. Click the icon to go into caDNAno.\n2.\tOutline the Desired Shape and Scaffold Strand Path\nThe  design interface of caDNAno within Maya includes 3 panels (Figure 2):\n\t   \nTop  panel: lattice view, where the shape is initially outlined. This panel enables  double helix-level actions and provides a section view of the shape.\nBottom  panel: editing panel, enabling single base-level actions.\nRight  panel: a Maya-generated real time 3D model of the shape",
    "Click  the \"Honeycomb\" icon. Zooming in on and out of the lattice in the top panel can  be done by mouse scroll up and down, respectively.\n  caDNAno  enables two possible design lattices, honeycomb and square; in this paper we  will use the honeycomb layout, although the square lattice could be generally  used as well22.\t\nStart  by drawing the section of the desired shape on the left panel.\n  Each  circle represents a double DNA helix. To choose the helices which build the  shape, simply left-click on their center (Figure  3). Continue helix by helix until the entire shape is outlined. Alternatively,  the shape can be drawn by pressing the left mouse button and continuously  drawing the shape's outline. Any action can be undone by clicking Edit menu and  \"Undo\", or by the keyboard shortcut CTRL+Z (PC) or CMD+Z (Mac).\n  At  this point, the selected helices will appear yellow. At the same time, the  bottom panel will display a side view of the shape, comprised of these helices.  The helix numbering in the bottom panel is consistent with numbering in the top  one.  \nObserve  the bottom panel. Each helix is represented by two rows of squares: the rows  are the two strands of the double helix, with each square representing a base (Figure 4).",
    "The  orange vertical bar determines where editing actions take place along a helix. The  base position along the grid appears as a number above the orange bar.\t   The helix framework's default  length is 42 bases. The length can be extended by clicking one of the grey  arrow icons at the top right corner of the editing panel and choosing the  extension length (in multiples of 21, which correspond to two full turns of the  DNA helix, in which one turn spans 10.5 bases) (Figure 4). The grid will extend to the direction of the chosen  arrow.  \nTo  plot the actual scaffold strand path throughout the shape, press the mouse  button, start from the first helix and go continuously over all the helices  following the same order they were initially selected in section 2.3. Note that:\n\t    \nThe  helices selected this time will change color to orange.\nIn  the bottom panel, scaffold strand fragments will be automatically drawn at the  selected helices.\nThe  right panel will show the 3D model of the shape being built in real time. At  the end of this process, a draft of the scaffold strand path will be  automatically drawn in the bottom panel (Figure  5).\nDraw  a rectangle around all the leftmost edges of the scaffold path. Note that edges so selected will appear red (Figure 6).\nExtend  the scaffold path by dragging the selected edges as a group to the left side of  the grid. Repeat this process for the right edges until the path is properly  extended. Note that scaffold extension also extends the 3D shape in the right  panel (Figure 7).",
    "Locate  the scaffold path parts that are isolated from the rest, and connect them. In  our shape, for example, helices 0-9 form an isolated part. Helix 9 needs to be  connected to helix 12 (note that helices 9 and 10 are not adjacent in the shape  [top panel] so they cannot be connected).\nZoom  in on the strands to be connected, and using the \"Select\" tool click on any  point on one of the strands. Upon clicking any point along a blue scaffold  fragment, 'bridge' icons appear between helices, denoting the positions where crossovers  are allowed. In these positions, bases in adjacent helices face each other  directly, allowing the strands to cross over from helix to helix without  deforming or twisting the DNA. The number appearing next to each bridge icon  indicates the number of helix it will crossover to (Figure 8).\nTo  create crossovers, left click the bridge icon of choice. A scaffold crossover will  be generated, meaning the scaffold crosses at this point from helix to helix (Figure 9). Repeat this process until  the scaffold traverses all helices and creates a closed loop that spans the  entire shape, leaving no regions that are isolated from the rest of the shape.\nNote that while crossovers appear to span a distance in the software, in reality  they do not include any DNA base. Physically, the crossover \"bridge\" contains  only one phosphate unit of the DNA backbone that links the two bases from the adjacent  helices together.  \nBefore  moving on to the next step, make sure the entire scaffold is continuous, and no  part of it is isolated from the others.\n3.\tDefine Opening Mechanism Axes",
    "The  described robot opens in response to a defined biological input to expose its  payload. Opening takes place in a shell-like manner, with two halves (helices  0-29 make up one half, helices 30-61 make up the second half) revolving around  two axes. The axes are formed by crossovers between helices 29-30 and 61-0,  which are the only crossovers between those halves and are positioned only in or  close to the left edge of the grid. The right edge will contain the gate  strands (discussed below).\nErase  the existing crossover between helices 29-30. To erase the crossover, click the  \"knee\" point in either strand. This leaves a nick in both strands where the  crossover used to be. To seam the nicks, press SHIFT and click each nick.\nCreate  a new crossover between helices 29-30 as close as possible to the left edge of  the grid (Figure 10).\nCreate  a new crossover between helices 61 and 0 as close as possible to the left edge  of the grid.\n4.\tDefine Payload Attachment Sites\nAfter  we finish plotting the scaffold strand path, we need to define the payload  attachment (loading) sites. Loading sites are in fact staple strands that  extend out of their helices as single stranded 'branches'. It is therefore  important to define very precisely where along the helix this branching occurs,  to make sure it extends to the desired direction. If we define staple  extensions arbitrarily, loading sites might occur on the external side of the robot  instead of the internal side.\nTo  make sure a staple extends to a specific direction only, we plot an additional  helix, which serves as guides for the directional branching of the staple from  the main body. After extending the desired loading site staple, the guide helix  is removed.",
    "Let  us define 4 loading sites facing towards the internal side of the robot. The  loading sites will branch out of helices 3, 27, 34, and 58. For each site, in  the top panel click the helix immediately adjacent to these helices that faces  the internal side (Figure 11). This  will add the helices to the grid in the bottom panel. Do not second-click these  helices yet.\n5.\tAdd and Edit Staples\nClick  \"AutoStaple\". The software will automatically add staple sequences in various  colors (Figure 12). Note that  staples have been added to the 3D shape in the right panel. Staple colors are  consistent for the bottom and right panels. In addition, there is an indicator  on the bottom left corner of the interface, which indicates a staple.\nNote:  staples cannot be too long, too short or circular. Most of the staples  generated here do not meet these criteria, and have to be edited. The first  step in editing them is automatic (see next step).\t\nClick  \"AutoBreak\". A dialogue box will open (Figure  13), asking for user-defined parameters for this action:\n\t    \nTarget  length (bp): anticipated length of staple if possible\nMin  length (bp): minimal length allowed for a staple\nMax  length (bp): maximal length allowed for a staple\nMin  dist to xover (bp): the minimal number of base pairs a staple can traverse  between its edge and a crossover or between two crossovers.\n          Use  the default parameters, click OK. The software will break the staples according  to these parameters to the best of its ability (Figure 14).",
    "Erase  all the staple crossovers between helices 29-30 and 61-0, to enable these  helices to separate and enable the robot to open. Erasing staple crossovers  will require some manual editing to correct staples that become too short or  irrational as a result of this action. To do this properly, follow the  instructions in the following sections.\n  Make sure to leave the scaffold crossovers created in sections 3.2 and 3.3 intact.\t\nConsider,  for example, the first staple crossover (cyan and black staples) from the left  between helices 29 and 30 (Figure 15).  Erase both bridges of this crossover by clicking each knee point or bridge so  it appears red, then hitting DELETE (Figure  16).\nSeam  the two staples on helix 29 by pressing SHIFT and clicking the nick between  them. Similarly, seam the three staples on strand 30 to a single staple (Figure 17). Staples can be manually  extended or shortened by clicking an edge and dragging it as desired. Take care  not to circularize any staple. Figure 18 shows the gap between helices 29-30 after complete editing of staple  crossovers. Repeat this process for helices 0 and 61, and manually edit all the  staples in each helix.\nLocate  staples that are drawn by a thick line, meaning they require further editing.  Examine each one and correct as necessary. For example, staples that are too  short can be erased (Figure 19) or  extended if possible.\n6.\tCreate Loading Sites and Gates\nSecond-click  the loading site helices in the top panel, and extend the resulting scaffold  strand fragments in the bottom panel by clicking an edge and dragging it as  desired (Figure 20).",
    "Manually  add staples to these scaffold fragments by placing the orange vertical bar at  the desired position along the scaffold, going over the guide helices on the  left panel, holding SHIFT and clicking. This will add a staple precursor at  each helix (Figure 21).\nExtend  the staple precursors to full length as well by clicking and dragging.\nLocate  the red bridge icons, denoting allowed crossover positions between the guide  strand (for example, helix 62) and the chassis (for example, helix 3).\nChoose  the most convenient location to introduce a crossover and click the bridge icon (Figure 22). A convenient location  requires minimal editing of existing staples in the chassis.\nIn  the guide helix (helix 62), delete the staple part that is not a part of the  loading site, and shorten the participating part to the desired length. The  desired length should provide both specificity for loading different types of  cargo, and binding strength. Typically, an 18-mer tail should be fine. Make  sure the staple remains drawn by a thin line, otherwise edit it until it is.\nIn  the chassis, edit the changed staples as necessary.\nErase  the guide (helix 62) leaving only the staple extension.\nRepeat  steps 6.4-6.8 for all loading sites (Figure  23).\n7.\tDesigning Gate Strands\nThe  gate strands are the only strands, except for the axes, linking helices 29-30  and 61-0. In contrast to the axes, the gate strands are not crossovers. Rather,  they hybridize to form a double stranded segment that serves as the sensor for  the biological input of choice. Once the gate duplexes are displaced, the  entire robot can entropically revolve around the axes and open.\nLocate  the proper positions for gate strands. These will be staples on helices 29, 30,  61, and 0.",
    "For  example, examine the 29-30 gate region. There are convenient staple strands  flanking helices 29 and 30 on the right side of the grid, which can be used as  gate strands. Note that they face opposite directions.\nClick  the edge of one of the potential gate strands to extend it outside of the  shape. If the edge lies over a scaffold crossover, its selection could be  simplified by making sure only \"Stap\"(les) are selectable, by clicking off  \"Scaf\"(fold) in the \"Selectable\" toolbar on the top right side of the  interface.\nExtend  both staples to form the gate strands. Edit the staples if this extension  requires it (Figure 24). Repeat this  for the gate strands of helices 0 and 61.\nNote  that for now, the actual length does not matter, since the sensor DNA (e.g.  aptamer) will replace the gate strand sequences at the sequence completion  step.\t\n8.\tChoose Scaffold Sequence\nClick  the \"Seq\" tool. Place the cursor anywhere on the scaffold strand and click. A  dialog box will open asking us to choose the scaffold DNA source (Figure 25).\nChoosing  the source DNA greatly depends on the robot size. For example, M13mp18 ssDNA  (p7249), and its extended derivatives (p7308 etc.) which have generally been the  choice for large DNA origami shapes, fit when the scaffold strand is ~7 kb  long. If the scaffold of the designed shape is significantly shorter than the  chosen source, the excess scaffold strand that is not hybridized to any staple  will create a loop of ssDNA protruding from the folded shape. While this  usually poses little problem for relatively short loops, multi-kb long loops  could drastically interfere with folding and function of the robot. Therefore  it is important to fit the chosen source to the shape scaffold length.",
    "For  example, if the scaffold strand needed to fold a small shape is ~1,600 bases  long, which is significantly shorter than the preset sources in the dialog box,  a custom sequence can be used as scaffold. Several sources can be considered.  For example, the M13mp18 can be digested with a specific restriction enzyme  that produces a fragment of the desired length. Designing such a source can be  done at NebCutter (http://tools.neb.com/NEBcutter2/[href=http://tools.neb.com/NEBcutter2/]) by pasting the M13mp18  sequence (http://www.neb.com/nebecomm/tech_reference/restriction_enzymes/dna_sequences_maps.asp?#.UAygyzFWomR[href=http://www.neb.com/nebecomm/tech_reference/restriction_enzymes/dna_sequences_maps.asp?#.UAygyzFWomR]) in the NebCutter input  window, and mapping restriction sites. Another option is to use pre-digested  ssDNA, such as the phiX174 virion ssDNA HaeIII digest, available from New  England Biolabs.\nIn  the dialog box, click \"M13mp18\". Note that the chosen DNA sequence has been  added to the scaffold and staple strands in the bottom panel.\n9.\tExport Staple Sequence as a Spreadsheet\nClick  \"Export\" on the top toolbar, and choose a destination filename for the staple  list. Click \"Save\".\nLocate  the destination .csv file and open it.\nThe  spreadsheet shows the staple list, which can be sent as is to a DNA synthesis  company. The first two columns display the start and end coordinates, with the  number outside the brackets denoting helix number and the number inside  brackets denoting base position.\n10.\tAssign Gate and Loading Sequences\nIn  the staple list, you will notice that some sequences begin or end with a string  of question marks \"?????\". These question marks denote that since no scaffold  strand hybridizes with these specific staple regions, they cannot be assigned  complementary sequences. These are in fact the extensions we designed for the  gate strands and loading sites, and therefore these need to be assigned manually  now.\nGate:",
    "The  gates determine the nature of the biological input upon which the robot will  switch from inactive to active state and expose its payload. Each single dsDNA  gate can encode response to one biological input (or more), so a profile of inputs  required for robot activation can be defined.\n           Let  us assume for this example that the biological cue triggering robot activation  is a restriction enzyme, which could indicate the presence of infectious  bacteria.           \nFirst  consider that the gate ssDNA strands do not hybridize immediately after  branching out of their helices. Designing the gate otherwise might impede  hybridization during folding. Therefore, each branch should start with a spacer  string. We typically use poly-T as spacer strings, as this sequence provides  flexibility.\nWe  also assume that the length of the gate hybridization region is 20 bases,  containing the target restriction site in its middle.\nTherefore  the gate might look like this:\n\t          [Helix 29]-5'-.....TTTTTTTGTGAGTTxxxxxxGCTAGAG-3'\n            \t[Helix 30]-3'-.....TTTTTTTCACTCAAxxxxxxCGATCTC-5'\n           \t  The \"…..\" denote the staple region that hybridizes with the scaffold strand, therefore it has a sequence already and should not be changed.\n           \t  The random duplex \"GTGAGTT\" and its complement ensures the restriction site is not partly open, and provides some extra bases to ensure effective digestion by the enzyme.\n       \t  The \"x\" denotes the restriction site. The random duplex \"GCTAGAG\" and its complement provide some extra bases for the enzyme to work efficiently, but also makes sure the gate strand is sufficiently long to ensure good robot closure.",
    "Before choosing a restriction site as a target, make sure the entire robot structure, loading sites and other part of the gate itself are not digested by the enzyme of choice. In this examination, the NEBCutter 0-cutter list (enzymes which do not cut the entire sequence) highlighted EagI, isolated from the Enterobacter Pantoea agglomerans, as a potential enzyme that could indicate the presence of an enterobacterial infectious.\t\t\t\nThe gate now looks like this (yellow marks EagI restriction site):\n\t\t\t  [Helix 29]-5'-.....TTTTTTTGTGAGTTCGGCCGGCTAGAG-3'\n\t\t  [Helix 30]-3'-.....TTTTTTTCACTCAAGCCGGCCGATCTC-5'\nNote that this design assumes that after digestion, the sequence \"GTGAGTTCGG\" (Tm = 32 °C) is not sufficiently long or thermodynamically stable to hold the robot closed anymore. This assumption will most likely need to be verified experimentally.\t\t\t\nThe  second gate can be the same in which case the robot would only respond to one enzyme,  or can be designed with a different site, increasing specificity of robot. More  restriction sites can be added onto the same strand, increasing the complexity  and specificity of the robot.\nLoading  sites:\n\t    \nThe  loading site can be a universal sequence. Alternatively, loading sites can be  based on unique sequences, which will decrease modularity but improve control  over cargo orientation and ratios (for different types of cargo).\nFinally,  the loading site oligonucleotides should include a chemical functional group  enabling them to conjugate with any payload: protein, nanoparticle, etc. Make  sure the chemical group is mounted on the correct end (5' or 3'), according to  the staple direction.\n11.\tSimulate Results in CANDO\nAfter  the job is saved as a .json file, it can be uploaded to CANDO for analysis.  CANDO is a finite-element based simulation of the DNA structure that can estimate  its rigidity and stability in solution21.\nGo  to http://cando-dna-origami.org/[href=http://cando-dna-origami.org/]",
    "Click  \"Submit a caDNAno file for analysis\" and fill all the necessary information.\nAnalysis  in CANDO usually takes up to 15-20 min. At the end, an e-mail message lets us  know the analysis is complete, providing a link to download the simulation  results (Figure 26).\n12.\tOrder DNA and Fold the Robot\nOnce  the design process is complete and CANDO analysis shows satisfactory prediction  of the product, the staple strand list generated in sections 9-10 can be  ordered. Typically, staple strands do not require particular purification;  however, it is recommended that special purpose strands such as gates or loading  sites be purified by HPLC.\nThe  steps following DNA order, namely folding, purification and evaluation of  product, including visualization of the folded structure by either atomic force  microscopy (AFM) or transmission electron microscopy (TEM) are outside the  scope of this paper, and can be found in previous reports17,18,20,21 . A TEM image of the robot  designed here is brought as an example (Figure  27). Sample preparation and staining was carried out exactly as described  elsewhere21.Subscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Bioengineering"
  ],
  "bigAreas": [
    "Bioengineering & Technology"
  ]
}