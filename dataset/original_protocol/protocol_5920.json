{
  "id": 6270,
  "origin_website": "Bio",
  "title": "An Image Analysis Pipeline to Quantify Emerging Cracks in Materials or Adhesion Defects in Living Tissues",
  "procedures": [
    "Image acquisitionOur image analysis pipeline was developed to detect and quantify cell separations in plant epidermis. Such images can be obtained using a confocal microscope and by either staining the cell wall or cell contour with a fluorescent dye, or by imaging plants expressing a fluorescent reporter of the cell contours (typically, a protein at the plasma membrane). Z-Stacks can be obtained and projected in 2D (e.g., using Fiji, max intensity). It is however crucial to obtain images in which there is a strong contrast between the cells and the “cracks” (i.e., the zone where cells are separated. In Figure 1C the regions corresponding to cells are of comparable pixel intensity as the gaps between cells, making it impossible to automatically distinguish them). Furthermore, because our pipeline works by segmenting the whole cracks, the cracks need to form a closed domain (For example, in Figure 1D, the joints marking the cracks (white zones), overlap with one another, making it impossible to distinguish them individually with our pipeline). Thus our pipeline can in principle work with any 2D grayscale image containing clear-cut closed cracks (see examples of suitable and non-suitable images in Figure 1).imgsrc:https://en-cdn.bio-protocol.org/attached/image/20180925/20180925200113_0410.jpgFigure 1. Suitable image type. A. Z-projection (maximal intensity) of a confocal image stack from a propidium iodide stained light-grown hypocotyl from the qua1-1 mutant with cell adhesion defects (see Verger et al., 2018). B. Cracks in rocks (credit photo: Pierre Thomas). In A and B the cracks are marked by a high pixel intensity contrast and form closed domains. C. Z-projection (maximal intensity) of a confocal image stack from a qua1-1 pPDF1::mCit:KA1 (plasma membrane reporter) cotyledon epidermis (see Verger et al., 2018).",
    "Although such fluorescent reporter can provide suitable images for our analysis, in this particular case the contrast between the cracks and the cell content is too low to allow a segmentation of the cracks with our pipeline. D. Picture of cracks in rocks (credit photo: Pierre Thomas). In this case the cracks do not form closed domains as most of them overlap. In addition, the pixel intensity is very variable throughout the picture such that some cracks do not exhibit a strong differential in pixel intensity. White arrowheads point to examples of cracks or cell separations in these images.Prerequisite: Image quality, preprocessing and threshold for “crack detection” in FijiIn order to determine if your images are suitable for this image analysis pipeline you need to make sure that the cracks will be properly segmented by pixel intensity:Load your 2D image in Fiji (Software 1).Change your image type to 8-bit. Image > Type > 8-bit (Figure 2B) and/or pick the right channel from a multichannel (e.g., RGB) image (Image > Color > Split channels).Optionally you may enhance the contrasts of your image using the “Enhance Contrast...” function (Process > Enhance Contrast…> Set “Saturated pixels” to 0.3%).Note: You may use a different approach (e.g., increase exposition time or laser intensity during image acquisition) to obtain enough contrast to segment the cracks. Smooth your image with a median filter to remove noise (Process > Filters > Median… [Figure 2C]). Set the radius to a suitable value to reduce the noise, without blurring the image too much. Here again, you may also use a different approach to reduce the noise of your image, as long as in the end, you obtain a smoother detection of the cracks.Using the “Threshold...",
    "” tool, determine the suitable threshold that best separates the cracks from the surrounding regions (Figures 2D and 2E).CRITICAL STEP: Depending on the nature and quality of your image, it may be difficult or impossible to segment the cracks based on a pixel intensity threshold. If most of your images are in this situation, this image analysis pipeline is not adapted to your study. If you are able to properly separate the cracks from the surrounding regions, you may proceed with the analysis. Save your image in .tif or .jpg (File > Save As > Tiff… or JPEG…) and add ”_XXXthld” at the end of the name (where XXX is the threshold value previously determined in Step B5 as suitable to segment the cracks (e.g., “sample_1_162thld.tif”. See Figures 2D-2F). The value before “thld” is the threshold value that will be used for the image segmentation later on (it has to be three digit long).You can pre-process as many images as you need before going further with the analysis. They will all be automatically processed if they are grouped in a folder. Note that in order to quantify and compare cracks orientation in multiple images, the images should be in a consistent orientation. The corresponding arborescence has to be organized as follows: A “main” directory (later on referred as “updir” in the script), containing subdirectories (e.g., different mutants or growth conditions), each containing all the corresponding images (Figure 2F).imgsrc:https://en-cdn.bio-protocol.org/attached/image/20180925/20180925200128_7260.jpgFigure 2. Image preprocessing in Fiji. A. Z-projection (maximal intensity) of a confocal image stack from a propidium iodide stained light-grown hypocotyl from a qua1-1 mutant with cell adhesion defects (see Verger et al., 2018). B-C.",
    "Images are preprocessed in imageJ: The image is converted to 8-bit (B) and a median blur with a radius of 3 is applied to reduce the noise and ease the segmentation (C). D-E. The threshold tool is used to determine the suitable threshold for segmentation in the pipeline. (D) Red zones will be segmented as cracks. (E) The threshold is adjusted in order to segment the cracks properly (e.g., here to a value of 162). F. Example of file arborescence required for the pipeline to process the image series. G. Z-projection (maximal intensity) of a confocal image stack from a propidium iodide stained light-grown hypocotyl from a wild-type seedling showing no cell adhesion defects and thus not suitable to detect cracks with our pipeline (see Verger et al., 2018). H-I. Because the differences in pixel intensity are locally small (unlike the qua1-1 mutant with bright cell separation signals in panel A-D), we are unable to segment properly the image either with a threshold value of 50 (H) or 45 (I) as an example.Installation procedureYou will need to have python (Software 2) installed on your computer in order to run the script (Software 5). The script has been designed, and should thus run properly, with python 2.7. You can then either directly run the script if you already have all the required dependencies (Software 3) in your python environment or install all the required dependencies in your python environment. If you do not have Python installed, or do not wish to interfere with your current Python environment, proceed with the steps below for our recommended installation using miniconda (Software 4), which will install python and all the required dependencies.Download the miniconda installer from the official website (link below “Software 4”, or here LINUX[href=https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh], MAC[href=https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh] and WINDOWS[href=https://repo.continuum.io/miniconda/Miniconda2-latest-Windows-x86_64.exe]).",
    "Alternatively you can use wget to perform this download from a terminal (LINUX or MAC). Open a new terminal window and run the command line below:For LINUX: wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh[href=https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh]For MAC:wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh[href=https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh] [href=https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh] Install miniconda by running the installer:For LINUX and MAC: Open a new terminal window, navigate to the directory where you downloaded the installer (most likely in your “Downloads” folder. e.g., cd path/to/Downlaods/. Note: Input the actual path that leads to the folder “/Downlaods/”) and run:For LINUX:bash Miniconda2-latest-Linux-x86_64.sh rm Miniconda2-latest-Linux-x86_64.shFor MAC: bash Miniconda2-latest-MacOSX-x86_64.sh rm Miniconda2-latest-MacOSX-x86_64.shFor WINDOWS: Execute the installer and follow the instructions.During the installation (LINUX, MAC and WINDOWS) you will be asked a number of choices. You can set the directory of your choice when asked (e.g., ~/.miniconda). Make sure to answer YES when asked to add conda to your PATH.At this point, you should have miniconda installed. Test your installation by closing your current terminal window and running conda in a new terminal to make sure the command is found:condaDownload and extract the “cell_separation_analysis” repository from Github (following the link in Software 5, or here[href=https://github.com/sverger/Cell_separation_analysis]). On the Github page, click on the “Clone or download” green button at the right of the page. Then download and extract the zip.Note: This folder contains the script (“Cell_separation_analysis.py”), a dependencies installation file for miniconda (“cell-sep-env.yml”) and test sample images (“Test_files”). In a terminal, navigate to the “/cell_separation_analysis-master” folder that you have extracted.cd path/to/Cell_separation_analysis-master/Note: Input the actual path that leads to the folder “/Cell_separation_analysis-master”. In the same terminal, create a new conda environment using the provided YAML file that lists all the software dependencies:conda env create -f cell-sep-env.yml Note: This will install Python and all the required dependencies. It may take a few minutes to complete the installation.",
    "When the installation is complete, in the same terminal, activate the environment:source activate cell-sep-env Note: You will have to run this command every time you want to use the cell separation analysis program, just after opening a new terminal window. You can then check your installation and whether the script runs properly by running the script on our test images. In a terminal, run:ipythonThis will launch ipython. In ipython, navigate to the “/cell_separation_analysis-master” folder that you have downloaded:cd path/to/Cell_separation_analysis-master/In the python console, type:%run Cell_separation_analysis.pyThis should run the script and generate its output in the “/Test_files” folder of “/Cell_separation_analysis-master”.Running the scriptIn order to run the script with your own images, you need to edit the “parameter” section of the script. To do so, open the “Cell_separation_analysis.py” file in a text editor. Scroll down to the section called “parameters” where there are 7 entries that you may modify (see Figure 3):imgsrc:https://en-cdn.bio-protocol.org/attached/image/20180925/20180925200232_6291.jpgFigure 3. Parameter settings. Cell_separation_analysis.py Python script opens in a text editor, displaying the “parameters” section. The parameters can be modified according to your own requirements and the file can be saved before running the script.Set the directory where you placed the images to analyze. Remember that your folder has to be organized in a specific way: A “main” directory corresponding here to “updir”, containing subdirectories (e.g., different mutants or growth conditions), each containing all the corresponding images (Figure 2F). You can either enter the full path to the directory (e.g., /Home/Path/to/updir/), or simply enter ./updir/ (where you replace “updir” by the actual name of your folder). In the latter case, you will have to navigate to the parent folder of your “updir” in Ipython before running the script (as described in Step C8).Set the pixel size. This is required in order to perform analyses of crack area.",
    "Usually, for confocal images this information can readily be found by loading the original image in Fiji and looking at its properties (Image > Properties… > Pixel width or height). The unit of length should be micron. For other types of images, you will need to determine the actual pixel size, for example in Fiji, using an internal scale (Analyze > Set Scale…).Determine the minimum and maximum area of crack. This step corresponds to a filter as it eliminates areas which are too small (“min_area_of_crack”, e.g., background noise) as well as the global background of the image (“max_area_of_crack”, e.g., the empty space around the tissue). These values are in pixel number. You may have to try several times with different values in order to determine the right parameters empirically.Set the threshold type. The cracks can be of either a higher or lower pixel intensity than the surrounding region. Thus the threshold can be set as “min” or max”. The “max” will detect and segment zones with lower signal intensity (i.e., the crack is darker than the surrounding region) and the “min” will detect and segment zones with higher signal intensity (i.e., the crack is lighter than the surrounding region).You may then decide to run more global analyses if you have multiple sample types (“Global_Output_Size”) and multiple images by sample type (Global_Polarhist_output). See “Data analysis” section to determine if you should run these analyses. These are by default set to “False” which mean they will not be performed. Replace “False” by “True” if you want them to be performed.Once all the parameters are correctly set, save the script and run it as described in Step C8."
  ],
  "subjectAreas": [
    "Cell Biology",
    "Plant Science"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics"
  ]
}