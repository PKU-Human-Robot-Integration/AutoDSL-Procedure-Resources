{
  "id": 2158,
  "origin_website": "Cell",
  "title": "3DCoop: An approach for computational inference of cell-type-specific transcriptional regulators cooperation in 3D chromatin",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nEstimate the genome-wide TR binding events\nTiming: days to weeks; computational time scales with sample number and resources\nWhen the TR motifs and the open chromatin profile of a specified cell type are prepared, the genome-wide TR binding events can be estimated by TF footprint analysis. Here, TF footprint sites are identified by using PIQ (version 1.3) (Sherwood et al., 2014[href=https://www.wicell.org#bib12]) based on the K562 DNase-seq and uniformly integrated TR motifs. PIQ has been incorporated into the 3DCoop repository within the “PIQ” folder. It can also be obtained from https://bitbucket.org/thashim/piq-single/src/master/[href=https://bitbucket.org/thashim/piq-single/src/master/]. The detailed usage of PIQ is described in the “README.md” file from the Bitbucket repository or the “PIQ/README.md” file from the 3DCoop GitHub repository. We only describe the main key steps here. According to the hardware on which we run the 3DCoop pipeline, nearly one week is needed to get the final genome-wide binding events for all TRs using one thread. On average, it takes 5–15 min per TR with one thread. Troubleshooting 4[href=https://www.wicell.org#sec6.7].\nGenerate the putative binding site via PWM (Position Weight Matrix) across the whole genome. There are 3,105 motifs in our uniformly integrated dataset. This step should be executed for each motif, which can be achieved by using the following script:\n$cd 3DCoop # Change the work directory to 3DCoop folder if not\n$mkdir -p PIQ_results/PWM\n$for idx in $(seq 1 3105)\n$do\n$Rscript PIQ/pwmmatch.exact.r PIQ/common.r datasets/ human_TR_motif.txt\n$idx PIQ_results/PWM/\n$done\nNote: This step does not depend on the cell type and the choice of DNase-seq BAM file. So, the running result can be used many times once executed. Besides, for convenience, we have provided a script in the GitHub repository to run this step in batch mode.",
    "Note: Before using PIQ, please change the path to the “3DCoop” folder to make sure that the R scripts can be found. Another way is to add the PIQ to the system “PATH” by adding a line such as “export PATH=/path_to_3DCoop/PIQ:$PATH” in the “$HOME/.bashrc” file.\nConvert the DNase-seq BAM file to the internal binary RData format which can be read by the R language. It will be used in the next step. Troubleshooting 4[href=https://www.wicell.org#sec6.7].\n$cd 3DCoop # Change the work directory to 3DCoop folder if not\n$mkdir -p PIQ_results/BAM\n$Rscript PIQ/bam2rdata.r PIQ/common.r >PIQ_results/BAM/K562.RData\ndatasets/K562.bam\nNote: This step does not depend on the choice of motifs. But it should be executed for each cell type.\nIdentify the potential genome-wide TF footprint by combining PWM and BAM. Use the following script to automate such a step:\n$cd 3DCoop # Change the work directory to 3DCoop folder if not\n$mkdir -p PIQ_results/tmp\n$mkdir -p PIQ_results/call\n$for idx in $(seq 1 3105)\n$do\n$Rscript PIQ/pertf.r PIQ/common.r PIQ_results/PWM PIQ_results/tmp\nPIQ_results/call PIQ_results/BAM/K562.RData $idx\n$done\nNote: The temporary folder “PIQ_tmp” is used to store some large temporary matrices. It can be deleted after the successful completion of this step. Besides, for convenience, we have provided a script in the GitHub repository to run this step in batch mode.\nFilter the binding events. As per the recommendation by PIQ, the purity value of 0.7, which means that 70% of instances of motif matches could be true binding sites, can be used to filter the PIQ results.\nNote: For each binding site, PIQ will give it a purity value. The purity, which is estimated using the background binding sites, is a proxy for positive predictive value (PPV).\nMerge the binding events by TRs. This can be achieved by the merge sub-command from bedtools.",
    "Note: The genome-wide binding events are estimated by motifs. The match instances of all motifs should be merged when there is more than one motif for a certain TR.\nCritical: For compatibility reasons, our embedded version of PIQ is recommended for use since there is a small bug in the original codes. We have fixed it in our incorporated version.\nOrganize inputs\nTiming: <10 min\n3DCoop needs two main inputs, the TR binding events estimated by computational approaches (or detected by experiments) and the high-resolution chromatin loops. These files should be named and organized correctly (Figure 1[href=https://www.wicell.org#fig1]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1637-Fig1.jpg\nFigure 1. The folder structure of the inputs\nThe input files must be renamed to the required format. The green, blue, and cyan text indicate the shell command, folder name, and file name, respectively. The rectangle, rounded rectangle, and underscore indicate the name of tissue/cell type, name of TR, and filename extension, respectively.\nOrganize the binding events in BED format. The binding events should be placed in one folder with the cell type information.\nEach BED file must be renamed as “<CELL>_<TR>.bed”, such as “K562_CTCF.bed”.\nOrganize all BED files into a designed folder. There are 738 BED files for K562 in total.\n$mkdir -p inputs/peaks/K562\n$cp <PATH>/∗.bed inputs/peaks/K562/\nCritical: The binding events must be stored in BED format with at least three columns: chromosome, start coordinate, and end coordinate.\nOrganize the chromatin loops. Similar to the BED files, the chromatin loops should also be placed in one folder with the cell type information. Troubleshooting 5[href=https://www.wicell.org#sec6.9].\nMake sure the chromatin loops are stored in BEDPE format and renamed as “<CELL>.bedpe”, such as “K562.bedpe”.\n$mkdir -p inputs/interactions/K562\n$cp datasets/K562.bedpe inputs/interactions/K562/",
    "Critical: The chromatin loops must be stored in BEDPE format with eight columns, chromosome 1, start coordinate 1, end coordinate 1, chromosome 2, start coordinate 2, end coordinate 2, loop ID or name, and interaction score. The last column for the interaction score can be set to 1 when this information is unavailable.\nBreak the chromatin loops into genomic intervals. We provide the “bin/bedpe2bed.pl” script to do this. It will generate a file named “K562.bed” beside “K562.bedpe”. There are 23,498 unique genomic intervals in this BED file.\n$# Usage: perl bin/bedpe2bed.pl <INPUT_DIR (containing one or more BEDPE\nfiles)>\n$perl bin/bedpe2bed.pl inputs/interactions/K562\nNote: The BED (Browser Extensible Data) format provides a flexible way to represent genomic features. It contains one feature per line with tab-delimited columns. Three columns are required and nine additional columns are optional. The first three required columns are “chromosome”, “start”, and “end”, representing the chromosome name, start position, and end position of the genomic feature, respectively. More details about the BED format can be found on the page “Data File Formats” from UCSC. Here is a snippet of the genomic intervals used for this protocol in BED format:\nchr1    850000    860000\nchr1    900000    910000\nchr1    910000    920000\nchr1    960000    970000\nchr1    1000000    1010000\nMake configuration file\nTiming: <5 min\nA configuration file for tuning the 3DCoop pipeline is needed. The given name of the configuration file will be passed as a parameter to the scripts. For clarification, the name “K562.cfg” is used here.\nWrite the configuration file. The configuration file is a text file with two columns (tab-delimited) and several rows. A real configuration file like this (Figure 2[href=https://www.wicell.org#fig2]):\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1637-Fig2.jpg\nFigure 2. The configuration file",
    "(A and B) The configuration file in the text view (A) and Microsoft Excel view (B). The green text indicates the shell command. The gray arrow indicates the tab separator.\nkey  value\nspecies  human\nmode  3D\ndir_in  inputs\ndir_out  outputs\ncells  K562\nfraction  1\ncpus  50\ncutoffs  0.05\nextract_clique  no\npie  true\nNote: Here, we briefly explain the keys and corresponding values in the configuration file. “species” can be set to “human” or “mouse”. “mode” can be set to “3D” or “1D” to indicate the running mode. “dir_in” and “dir_out” indicate the folders for inputs and outputs. “cells” indicates which cell type will be processed. “fraction” indicates a minimal overlap fraction of a peak to assign it to a certain interaction loop. “cpus” specifies the number of threads. “cutoffs” specifies the cutoff for cluster extraction. “extract_clique” indicates whether to find and extract all cliques (subsets of TRs, all adjacent to each other) from each cluster. “pie” indicates whether to display the pie chart for each TR to show the TR categories.\nNote: When the chromatin loops are not available, the user can use 3DCoop in 1D mode by setting “mode” to “1D”. Troubleshooting 5[href=https://www.wicell.org#sec6.9].\nNote: 3DCoop can be used for several tissue/cell types in batch mode. Please refer to the usage manual for details.\nNote: “cutoffs” is recommended to be set to “auto” to define the cutoff automatically for the first time. Then the user can choose a detailed cutoff and change it in the configuration file based on the results. Troubleshooting 6[href=https://www.wicell.org#sec6.11].\nNote: “no” is recommended for “extract_clique” because enabling it will use a huge amount of memory and take a long time to extract cliques from large clusters.\nNote: “true” for “pie” is only valid for human. Please set “false” for mouse.\nRun 3DCoop pipeline",
    "Timing: <1 h; computational time scales with sample number and resources\nThe 3DCoop pipeline starts with the TR binding events and the chromatin loops to get the TR-specific contact maps. Then the generalized Jaccard similarity is used to construct the TR pair-wise correlation matrix, and the graphical Lasso algorithm (Glasso) is adopted to estimate the precision matrix. Finally, the overlapping clustering method is incorporated to compute communities, and then the TR clusters, TR maximum cliques, and TR pairs are extracted. These steps have been split into sequential scripts. The only mandatory one is the configuration file.\nCritical: Make sure that the “3DCoop” conda environment has been activated before running the pipeline. If not, it can be activated by “conda activate 3DCoop”. Troubleshooting 1[href=https://www.wicell.org#sec6.1].\nPrepare data for Jaccard calculation. This step is to connect the binding events and the chromatin loops for each TR and build the TR-specific contact maps for all TRs that reflect the TR co-binding in 3D chromatin. The chromatin interaction is assigned as the TR-specific contact map when a peak can be mapped to either end of this interaction.\n$# Usage: perl bin/01_02_prepare4jaccard.pl <CONFIGURATION_FILE>\n$perl bin/01_02_prepare4jaccard.pl K562.cfg\nCalculate the Jaccard for TR pairs. The generalized Jaccard similarity is calculated by considering the interaction intensity of each TR-associated contact. A TR pair-wise correlation matrix will be generated.\n$# Usage: perl bin/03_jaccard.pl <CONFIGURATION_FILE>\n$perl bin/03_jaccard.pl K562.cfg\nCritical: For hundreds of TRs, please set “cpus” in the configuration file to use multiple threads (20 or more) for saving running time.\nEstimate the precision matrix. Based on the TR pairwise correlation matrix, the Glasso is adopted to estimate the precision matrix to reduce the false positive rate of potential TRs dependency. The copula nonparanormal graphical model is used with the huge package (version 1.3.5) in R.\n$# Usage: Rscript bin/04_glasso.R <CONFIGURATION_FILE>",
    "$Rscript bin/04_glasso.R K562.cfg\nIdentify the TR clusters. The overlapping clustering method, which allows a single TR to be involved in multiple cooperation communities, is incorporated to estimate the network modules using ClusterONE (version 1.0) (Nepusz et al., 2012[href=https://www.wicell.org#bib7]). Then, the igraph R package (version 1.2.6) is used to analyze and extract the TR clusters, TR maximum cliques, and TR pairs based on the results from ClusterONE.\n$# Usage: perl bin/05_clusterone.pl <CONFIGURATION_FILE>\n$perl bin/05_clusterone.pl K562.cfg\nVisualize the TR cooperation network. The TR cooperation network is visualized using the igraph and ggnetwork (version 0.5.10) R packages from different angles, including with or without the TR names, with or without the TR categories.\n$# Usage: perl bin/06_network.pl <CONFIGURATION_FILE>\n$perl bin/06_network.pl K562.cfg\nApplications\nTiming: hours to days; computational time scales with sample number and resources\nThe TR cooperation detected by the 3DCoop pipeline can be used in many biological scenarios, such as interpreting the disease-causal variants identified by a genome-wide association study, understanding the dynamics during cell development or differentiation, and so on. For convenience, we have provided a script to identify the TRs and TR pairs associated with given disease-causal variants using TR cooperation information:\n$perl bin/map_variant2TRpair.pl K562.cfg K562 variants.bed\nThe program can be used to get the variant-associated TRs and TR pairs based on the coordinates of variants. The variants are stored in BED format and should be provided as an additional input. The script will produce one folder named “07_variants2TRs”. “variants2TRpairs.txt”, which stores the relationship between variants, TRs, and TR pairs, is the key output file. Besides, “snp2peak2bin2loop.txt” reports the mapping relationship between variants, TR peaks, genome bins, and chromatin loops. A detailed description of inputs and outputs can be found in the usage manual."
  ],
  "subjectAreas": [
    "Genomics",
    "Bioinformatics",
    "Systems Biology",
    "Genetics",
    "Gene Expression"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}