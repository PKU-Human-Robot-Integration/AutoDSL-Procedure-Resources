{
  "id": 10584,
  "origin_website": "Jove",
  "title": "Creating a Structurally Realistic Finite Element Geometric Model of a Cardiomyocyte to Study the Role of Cellular Architecture in Cardiomyocyte Systems Biology",
  "procedures": [
    "All methods described here have been approved by the University of Auckland Animal Ethics Committee and the University of California San Diego Institutional Animal Care and Use Committee, where the tissue protocol was originally developed.\n1. Experimental Preparation\nPrepare stock solutions of 0.15 M and 0.3 M sodium cacodylate buffers at pH 7.4 according to Table 1.\nPrepare glutaraldehyde fixative (2% paraformaldehyde (PFA) + 2.5% glutaraldehyde + 0.2% tannic acid in 0.15 M sodium cacodylate buffer at pH 7.4) using components listed in Table 1.\nDissolve 2 g of PFA powder in 20 mL of distilled water at 60 °C on a hotplate with constant stirring.\nAdd 1 M NaOH solution until the solution is clear.\nWait until the temperature of the solution is below 40 °C, then add 10 mL of glutaraldehyde and 20 mL of 0.3 M sodium cacodylate.\nAdd 0.2 g of tannic acid and dissolve it in the solution.\nAdd 50 mL of 0.15 M sodium cacodylate.\nStore three or four 20 mL scintillation vials of fixative in fridge at 4 °C, or on ice if used on the same day.\nPrepare Tyrode's solution with 20 mM 2,3- butanedione monoxime (BDM), according to the recipe in Table 1.\nConstruct a Langendorff apparatus inside a fume cupboard.\nClamp two 100 mL plastic syringe tubes to two different retort stands, approximately 70 cm high from the stand base.\nConnect the plastic syringe tubes and a connector tube using 3 mm-inner-diameter tubing and a three-way stopcock as shown in Figure 1.\nFit a 3 mm outer-diameter cannula to the bottom of the connector tubing, where the heart will be tied for perfusion fixation.\nFill the syringe tubes with Tyrode's solution and fixative solutions at 37 °C.\nRemove air bubbles within the tubing by passing the syringe solutions through them.",
    "2. Acquire Electron Microscopy Data of Cardiomyocyte Ultrastructure\nPrepare the animal for excision and chemical fixation of the heart.\n\tNOTE: This protocol details the steps to process adult male Wistar (name for a specific breed of albino rat) rat cardiac tissue. The protocol may require modifications when the cardiac tissue is sourced from other species.\n\t\nAnesthetize the animal by treating the rat (200-250 g by body weight) with 0.5 mL of 250 U/mL heparin via intraperitoneal injection. Wait for 10 min, then treat the rat with intraperitoneal injection of pentobarbital (210 mg/kg of body weight).\nConfirm a proper degree of anesthesia by testing the toe pinch reflex.\nEuthanize the animal by cervical dislocation.\nHarvest the heart using dissection procedures similar to previously published JoVE articles22,23, then place it in ice-cold saline.\nIsolate the ascending aorta and cannulate. Ensure that the tip of the cannula sits just above the semi-lunar valve, where the coronary arteries branch off. Tie a thread tightly around the ascending aorta.\nConnect the cannula to the gravity-driven Langendorff apparatus operated at ~70 cm above the base of the system (Figure 1).\nTwist the stopcock on the Langendorff system to perfuse the heart with Tyrode's solution, including 20 mM BDM (a myosin inhibitor) for 2-3 min.\nTwist the stopcock to begin perfusion with fixative of 2% paraformaldehyde, 2.5% glutaraldehyde, and 0.2% tannic acid in 0.15 M sodium cacodylate at 37 °C for 10 min. If successful, the heart will turn pale brown and become stiff and rubbery.\nUsing a razor blade, dissect tissue blocks from the left ventricular (lateral) free wall and obtain tissue blocks approximately 1 mm3 in size.",
    "Store the samples in pre-cooled 20 mL scintillation vials of the same fixative on ice for 2 h. Store as many samples as possible in the vials, and ensure that the samples are submerged in the solution.\n\t\tCAUTION: It is important to keep samples cold until after the 100% dehydration step below.\nFurther fixation and staining of samples for electron microscopy.\nPour 100 mL of 0.15 M sodium cacodylate buffer in a glass beaker and cool it on ice.\nPrepare equal volumes of 4% osmium tetroxide and 0.3 M sodium cacodylate, followed by the addition of 0.08 g of potassium ferrocyanide to make a heavy metal stain solution containing 2% potassium ferrocyanide in 2% osmium tetroxide and 0.15 M sodium cacodylate. Cool the solution on ice.\nPipette the fixative out and replace it with enough cold 0.15 M sodium cacodylate buffer to submerge samples in the vials. Place the vials on ice for 5 min.\nRepeat step 2.2.3 four more times with 0.15 M sodium cacodylate to remove excess fixative.\n\t\tCAUTION: Do not use glass pipettes because tiny shards can get into the sample and can ruin diamond knives during tissue block sectioning. It is important to pre-cool all solutions on ice before adding them to the sample. It is also important that the sample remains covered by solution all time (very brief periods of partial coverage lasting no more than a few seconds may be briefly tolerated during solution exchanges). When washing or replacing solutions, add the new solution quickly after removing the previous solution. Keep the scintillation vials on ice between washes. Note that this step is not time sensitive, the tissue blocks can be washed slightly longer, if needed.",
    "Replace sodium cacodylate buffer with ice-cold heavy metal stain solution and store it on ice overnight. Ensure that the ferrocyanide is well mixed by shaking the vial by hand; the solution should turn black.\n\t\tCAUTION: Work in the fume hood when performing this step because osmium is toxic.\nDilute 4% aqueous uranyl acetate (UA) stock solution (Table 1) to 2% using equal volumes of stock UA solution and double distilled water, and cool it down on ice.\nReplace heavy metal stain with ice-cooled 0.15 M sodium cacodylate buffer, and let the sample incubate for 5 min on ice.\nRepeat step 2.2.7 four more times on ice to rinse off any excess heavy metal stain solution.\nRinse the samples four times, with a 2-min wait-period in between in purified water (double-distilled is sufficient).\nReplace purified water with ice-cold 2% UA and let the sample incubate for 60-120 min on ice.\nCool down five 20 mL scintillation vials of ethanol (enough to submerge samples) on ice that will be used in the dehydration step. The six vials have increasing percentages of ethanol in distilled water: 20%, 50%, 70%, 90%, and 100%.\nPour pure acetone into another 20 mL scintillation vial and cool on ice along with the ethanol vials.\nRinse samples in purified water four times with 2 min waiting periods on ice to wash excess UA.\nDehydrate samples in ethanol.\nDehydrate in cold ethanol series by successively replacing solution within the sample vial as follows, on ice: 20% ethanol for 10 min; 50% ethanol for 10 min; 70% ethanol for 10 min; 90% ethanol for 10 min; then twice in 100% ethanol for 10 min.",
    "Transition sample to room temperature by replacing the final 100% ethanol with cooled pure acetone and place the sample vial on a room-temperature lab bench for 10 min.\nPerform one more 10 min wash in pure acetone at room temperature to remove condensation that is observable within the vials. While incubating, make up the acetone/resin solutions.\nReplace the pure acetone in the vials with 50:50 pure acetone and epoxy resin (with proportions for epoxy resin components as stated by the manufacturer). Use all components from the same batch. Leave the resin-filled sample vials overnight on a rotor.\nEmbed samples in resin.\nReplace 50:50 resin with 75% resin (25% acetone) and incubate for 3 h, followed by further incubation/infiltration in 100% resin for 4 h at room temperature.\nReplace the 100% resin with fresh 100% resin, and leave the sample vials overnight for deeper penetration of the resin into the tissue samples.\nTake samples out of the vials and place them in containers that are oven-friendly and have a flat base; aluminum or silver foil baking cups can be used for this purpose, for example.\nGently pour (to avoid displacement of the samples) fresh resin over the samples (thus embedding samples in resin) and polymerize the resin and samples in an oven at 60 °C for 48 h.\nRe-orient resin blocks to image cells in cross-section.\nObtain 1 µm thick test sections from the resin blocks using an ultramicrotome with a glass knife to assess cell orientation24.\nStain the thick test sections for 20 s with 1% toluene blue and 1% borax.\nExamine muscle cell orientation under a bright field microscope.",
    "Based on the orientation inferred from the images of the stained test sections, re-orient longitudinally or obliquely oriented (similar to Figure 2A) resin blocks to ensure that cells are exposed to the glass knife so that they will be cut in cross-section (similar to Figure 2B).\nImage tissue sections using electron tomography.\nObtain semi-thin sections (~300 nm) of the reoriented tissue blocks using a diamond knife and transfer the sections onto copper grids25.\nStain the thick sections with 2% UA and Sato lead25.\nApply colloidal gold particles on both sides of the sections25.\nObtain sets of single or dual-axis tilt series of projected images from -70 ° to +70 °25.\nUse IMOD20 to reconstruct the 3D image stack (a series of 2D images that provide the 3D information of a single electron tomography section) of the cell. This reconstructed stack will be segmented in the next step.\n3. Segment Myofibrils and Mitochondria Regions from the EM 3D Image Dataset\nExecute the IMOD program \"3dmod\".\nWithin the 3dmod graphical user interface, enter the address of the \".rec\" or \".mrc\" file that contains the 3D reconstructed image dataset of the cell (generated in step 2.7) into the entry box labeled \"Image file(s):\", then press \"OK\".\nUnder the \"File\" menu, select New Model, then save the file with an appropriate name using the \"Save Model as\"… menu item under \"File\".\n\tNOTE: An object in IMOD can contain a collection of segmented components that make up the \"object\". By default, a new model contains a new object with the id \"#1\".\nUnder the \"Special\" menu, select \"Drawing Tools\". This will open a new tool bar similar to that shown in Figure 3A.",
    "NOTE: There are several tools that can be used to create contours around the different organelle boundaries. More help on ways to use these tools can be found in the IMOD20 documentation.\nChoose the \"Sculpt\" option in the \"Drawing Tools\" menu, and move the mouse over to the image window; a circular contour centered on the mouse pointer will appear.\nBy holding the middle mouse button down over a mitochondrion (the darker regions of the image files, as illustrated by demarcations with green contour lines in Figure 3A), drag the perimeter of the circle contour into the shape of its boundary.\nOnce contouring of the mitochondrion boundary is complete, release the middle button and repeat steps 3.6 for each mitochondrion in the data. Each contour will automatically be recognized by IMOD as a new contour within the same object.\nUnder the \"Edit | Object \"menu, select \"New\" to create a new object. This will automatically increment the total number of objects by one and assign this number to the new object.\nRepeat steps 3.6 and 3.7 to segment and save myofibril contours.\nRepeat step 3.8, followed by step 3.6, to segment the cell boundary as well.\nSave the model file under the \"File\" menu.\nExecute the following commands in a command-line window to convert each object grouping into a binary mask as illustrated in Figure 4A-C.\n\t\nExtract a specific object from the model \"imodextract object modelfile outputmodelfile\" where \"object\" is the number of the object to be extracted.\nCreate a mask for that object: imodmop -mask 255 outputmodelfile imagefile outputmask.mrc\nConvert the file into a tif stack: mrc2tif -s outputmask.mrc outputmask.tif\n4. Create a Finite Element Mesh from the Segmented Components",
    "Iso2mesh is a freely available MATLAB program to convert TIFF image stacks into volumetric tetrahedral finite element meshes. Download and add iso2mesh to the MATLAB path from iso2mesh.sourceforge.net.\nDownload the source codes and data to simulate RyR clusters on the mesh from the github website https://github.com/CellSMB/RyR-simulator.\nStart the CardiacCellMeshGenerator MATLAB application (Figure 5).\nLoad the different organelle component masks into MATLAB using the three push buttons on the upper left hand side of the GUI.\nCreate another binary image stack that demarcates gaps between myofibrils and mitochondria as shown in Figure 6A.\n\t\nOpen ImageJ.\nUsing the File | Open dialog, load the myofibrils and mitochondria tiff stacks into the program.\nInitiate the image addition plugin by selecting \"Process | Calculator Plus\".\nSelect the myofibril image stack as i1, the mitochondria image stack as i2, and choose the \"Add\" operator. Click \"OK\".\nAfter a new image stack representing the result of 4.5.4 appears, select \"Edit | Invert\" to produce an image stack similar to Figure 6A.\nLoad the file containing the binary image stack of the gaps between myofibrils and mitochondria by pushing the \"RyRGapsFile\" button on the CardiacCellMeshGenerator program.\nPush \"Generate Mesh\" on the GUI. This will trigger the iso2mesh command v2m with the 'cgalmesh' option to generate a tetrahedral mesh similar to Figure 4E. Three files will be output at the end of this step: an .ele file, a .face file, and a .node file that will contain the listing of nodes that make up the elements, the nodes that make up the faces, and the coordinates of the nodes, respectively.\n5. Mathematically Map the Spatially Varying Density of Ion-channels of Interest onto the Finite Element Mesh.\nGenerate the necessary inputs for the RyR-Simulator by pushing the button labelled Generate RyR-Simulator inputs on the GUI.",
    "NOTE: The button will trigger a function generateRyRsimulatorInputs.m, which uses the following information from step 4 to generate the inputs:\n\t(1) outDir: the location to output files that are necessary for RyR cluster simulation.\n\t(2) imres: the pixel resolution in the three directions of the image stacks.\n\t(3) myofibril_file: the file containing the binary image stack like that shown in Figure 4B.\n\t(4) sarcolemma_file: the file containing the binary image stack like that shown in Figure 4A.\n\t(5) ryrgaps_file: the file containing the binary image stack like that shown in Figure 5A.\n\t\nAfter this function executes, check that the following files have been created within the directory specified as the outDir path:\nd_axial_micron.txt, which represents the axial distance between the position of the z-disc and the remainder of the pixels in the image stack.\nd_radial_micron.txt, which represents the Euclidean distance (excluding the axial component) from each pixel in the set of possible RyR cluster locations to the pixels on the z-disc plane.\nW_micron.txt, which represents the list of spatial coordinates of all the available positions for RyR clusters to be present.\nThe remaining 3 files in the folder contain the suffix \"_pixel\" rather than \"_micron\" to denote that the values within these files have been written out in pixel coordinate form.\nSimulate RyR cluster distributions on the binary image stack of myofibrils.\nPush the button labelled \"Open RyR-simulator in R\" to initiate the R program.\nOn the R-gui, select \"File | Open\" and find the file \"settings.R\" within the RyR-Simulator package (RyR-Simulator/source/settings.R).\nAlso open the file ryr-simulator-parallel.R (located in RyR-Simulator/source/ryr-simulator-parallel.R). Environments like Rstudio (https://www.rstudio.com) or a plain command line interface can be used, e.g. using the R64 command in a shell or command window.\nChange the parameters in settings.R file as detailed below:",
    "Set Path2 to the folder address that contains files listed in 5.1.2 for an experimentally acquired confocal image stack of RyR clusters and myofibrils.\n\t\t\tNOTE: The github repository folder input-files/master-cell/ already contains files that were generated for a previously collected image stack.\nSet Path4 to a folder address where the files that were generated in step 5.1.2 are stored.\nSet Path3 point to a folder where the user wants the simulated RyR cluster locations to be saved.\nSet N to the number of RyR clusters to be simulated in the model (typically in the range of 200 to 300).\nSet etol, a tolerance setting, for the difference between the experimentally measured spatial distribution of RyR clusters and the model simulated spatial distribution of RyR clusters.\nSet numIter to limit the number of attempts that the RyR-Simulator should take to find a simulated RyR cluster pattern that satisfies the etol value.\n\t\t\tNOTE: Values for etol and numIter have been set to typical values within the settings.R file.\nSet numPatterns to the number of different RyR cluster patterns that the user wants to simulate (typically, it is useful practice simulating 99 patterns for statistical confidence).\nSet numCores to enable the use of several CPU threads (cores) for faster parallel processing with R to simulate the point patterns.\nCheck that the following packages are installed using the package installer gui in R: snow, doSNOW, doparallel, foreach, iterators, and rgl.\nExecute the simulator by entering the following command in the R command window: source('path to ryr-simulator-parallel.R',chdir=TRUE)\n\t\tNOTE: The output of the RyR-Simulator program is a list of .txt files (a numPatterns file will be generated) that contain coordinate lists in N rows and 3 columns, which represent the x, y, and z coordinates of the N simulated RyR clusters.",
    "Map points as spatial densities onto a computational model using the CardiacCellMeshGenerator.\nBy selecting the button labelled \"Select RyR points file\", choose a simulated RyR cluster distribution text file from those that were output by the RyR-Simulator.\nExecute \"RyR Density Mapper\" on the GUI in MATLAB. This will map the spatial locations of the simulated RyR clusters in the .txt file in step 5.3.1 onto the finite element mesh that was generated in step 4.8 using a method called a spherical kernel intensity estimator method26.\n\t\tNOTE: The output from this step is a file with .txt extension that contains a list of values for the numeric density of the ion-channel per unit spherical volume at each of the computational mesh nodes.\nSubscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Bioengineering"
  ],
  "bigAreas": [
    "Bioengineering & Technology"
  ]
}