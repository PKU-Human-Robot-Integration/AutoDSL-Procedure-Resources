{
  "id": 4034,
  "origin_website": "Cell",
  "title": "Protocol for HSDFinder: Identifying, annotating, categorizing, and visualizing duplicated genes in eukaryotic genomes",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nPreparing the protein BLAST search result file\nTiming: minutes to hours\nUpload a protein BLAST-search (BLASTP) result file for your genome of interest in tab-separated values (tsv) format as the first input file (File 1) of HSDFinder. This protocol will go over how to acquire local BLAST-search results via an example FASTA file. The example file can be acquired from GitHub under the tutorial directory (Figure 3[href=https://www.wicell.org#fig3]A).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/748-Fig3.jpg\nFigure 3. Screenshots of specific steps when running HSDFinder\n(A) Example GitHub dataset for running HSDFinder.\n(B) Examples of text input files.\n(C) The upload option to submit HSDFinder.\n(D) The three point-and-click features for running HSDFinder.\n(E) Example of an output from HSDFinder.\nNote: You can ignore this step and proceed with your own protein dataset if you know how to acquire the appropriate BLASTP search results.\nDownload the BLAST Package and FASTA file. The BLAST-search result example can be found in the ZIP file in the GitHub “tutorial” directory under the name HSDFinder_example_doc.zip (Figure 3[href=https://www.wicell.org#fig3]A).\nThe BLAST Package can be found via https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/[href=https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/]. Please download the appropriate tools based on your computer operating systems (Windows, MacOS or Linux)\nUnzip the “HSDFinder_example_doc.zip” file, the file named “Chlamydomnas_UWO241_protein.fasta” is the example FASTA file.\n# display the first ten rows of the FASTA file.\n$ head Chlamydomnas_UWO241_protein.fasta\n>g1.t1\nMAATVENVVERVKSFSSVVRGVKSGKPDGATTQLVQETIEILATYCDFEEVVPVCLKFLDEVLTAAPQTSTLIRLEGGAK\nIFPSIIRNFMGVDASILALCAKVMCKCASGSPAMQHHLVKEKGLPTLLLSCCSAHAGEPAVVGPLLEVLVALARYSKGAT\nALSNANLVHACKELLVGLMGHWHAFGMVLKLIKSVMKHEGPCLAALKAGEVVRLLLGVARLVSRMPDQRKLLKRASRTLW\nVLSQRSLHPLPEMELNWPHTHTHTHTHTHTHT\n>g2.t1\nMMMLAYRFGFTTLMYATVKGHADAMRLLLKHPSADTAAMMMLTDIRGCTALMFAAQDGHVNAIRMLLDHPSADVAARIAV\nRSTVGISALTSAAGFAAGQPTLSRRASPARSCTPLLFLLRRVAVEPQLCDTQ\n>g3.t1\nMVPTDGARHGWTATSLPAILGAASHAKITVQQLVVGGPPPSCPYGPEIVGRSLSLFSKSAKTWDRAPGGVVSAFCAATGE\nBuild a database via the example FASTA file.\nUsing the command line below:\n# The makeblastdb command is used to construct a protein database by taking in the FASTA file with the parameter (-in), setting up the database type (e.g., protein) with the parameter (-dbtype protein), and titling the name of database (e.g., database_name) with parameters (-title database_name).",
    "# note: if your FASTA data are nucleotides, you can change the database type with the parameter (-dbtype nucl)\n> makeblastdb -in Chlamydomnas_UWO241_protein.fasta -dbtype prot -title database_name\nUsing BLASTP search option to blast the amino acid sequences against themselves.\n# The blastp command is used to do the protein similarity search by searching the query file (Chlamydomnas_UWO241_protein.fasta) against the protein database created from former step with the default parameters, such as ‘-evalue’ indicating the significance of the BLAST hits, ‘-outfmt’ meaning the tabular format of the BLAST result, and ‘-out’ telling the file name of the output file (e.g., BLASTP_UWO241.txt).\n> blastp -query Chlamydomnas_UWO241_protein.fasta -db database_name -out BLASTP_UWO241.txt -evalue 1e-5 -outfmt 6\nCritical: Make sure to use the BLASTP option, which allows for greater sensitivity (Figure 1[href=https://www.wicell.org#fig1]A). The BLAST output parameter has to be format to 6. Users can adjust the parameter of the E-value, but we recommend that it be no greater than 1e-5 (to ensure accurate predictions). Trouble shooting 1[href=https://www.wicell.org#sec6.1].\nThis will give a BLAST result file formed by a 12-column spreadsheet including the key information from query name to percentage identity, etc. (Figure 3[href=https://www.wicell.org#fig3]B).\nThe 12-column explanation of BLAST search result file at format 6 (Table 1[href=https://www.wicell.org#tbl1])\nquery_ID (e.g., g735.t1)\nseq_ID (e.g., g741.t1)\npercentage_identity (e.g., 96.237)\naligned length (e.g., 744)\nmismatches (e.g., 28)\ngap_openings (e.g., 0)\nquery_start (e.g., 1)\nquery_end (e.g., 744)\nsequence_start (e.g., 1)\nsequence_end (e.g., 744)\ne-value (e.g., 0.0)\nbit-score (e.g., 1219)\nIf the BLAST-result file is too large to be copied and pasted, users have the option to upload a BLASTP-search result as the input of file 1 (Figure 3[href=https://www.wicell.org#fig3]C). Troubleshooting 2[href=https://www.wicell.org#sec6.3].\nPreparing the InterProScan search result file\nTiming: minutes to hours",
    "Upload an InterProScan search result file of your genome in tsv format as the second input file (File 2). User has to download and install the InterProScan individually to acquire the input file for HSDFinder tool. The latest InterProScan documentation can be found via the link https://interproscan-docs.readthedocs.io/en/latest/index.html[href=https://interproscan-docs.readthedocs.io/en/latest/index.html]. But, here, we provide the necessary steps to use InterProScan:\nInstallation requirements\nInterProScan is developed to run on Linux and no versions are planned for Windows or Apple (MAC OS X) operating systems.\nSoftware requirements: 64-bit Linux; Perl 5; Python 3; Java JDK/JRE version 11.\nObtaining the core InterProScan software (Direct link: ftp://ftp.ebi.ac.uk/pub/software/unix/iprscan/5/5.51-85.0/interproscan-5.51-85.0-64-bit.tar.gz).\nRunning InterProScan\nOnce a user has uncompressed the package of InterProScan, it can be run directly from the command line.\n#If run this script with no arguments, the usage instructions will be presented.\n>./interproscan.sh\nRun the shell script below:\n# interproscan.sh is the command taking in the input file with parameter (-i) and setting up the format of output file (e.g., tsv format). ‘-dp’ is to ensure all the database matches proceeded in local environment.\n>/interproscan.sh -i proteins_of_your_genome.fasta -f tsv -dp\nOutput files\nInterProScan should run through properly without any warnings and it will create a tsv output file containing several member database matches, including Pfam, etc. For your convenience, the InterProScan search result example can be found in the ZIP file under the GitHub directory of tutorial with the name HSDFinder_example_doc.zip. Troubleshooting 3[href=https://www.wicell.org#sec6.5]\nThe 13-column explanation of InterProScan search result file (Table 2[href=https://www.wicell.org#tbl2])\nProtein accession (e.g., g735.t1)\nSequence unique code (e.g., c82510c09b797ecced03c40f4da02ffb)\nSequence length (e.g., 247)\nProtein signature (e.g., Pfam)\nSignature accession (e.g., PF11999)\nSignature description (e.g., Protein of unknown function (DUF3494))\nStart location\nStop location\nE-value (or score) (e.g., 2.2E-47)\nStatus - is the status of the match (T: true)",
    "Date - is the date of the run (e.g., 15-11-2019)\nInterPro annotations - accession (e.g., IPR021884)\nInterPro annotations - description (e.g., Ice-binding protein-like)\nNote: Before clicking the submission button, there are three personalized options designed for HSDFinder (amino acid pairwise identity, amino acid length difference, and protein function database)\nYielding the output of HSDFinder with three personalized options\nTiming: minutes to hours\nBy default, HSDFinder will filter duplicates with near-identical protein lengths (within 10 amino acids) and 90% pairwise identities. With such a strict cut-off, the user will capture the most similar duplicated genes within the dataset. But keep in mind that less similar duplicates will not necessarily be identified (Figure 3[href=https://www.wicell.org#fig3]D).\nNevertheless, the user has the option to use different parameters and thresholds (from 30%–100% pairwise identity or from within 10-100 amino acid variance). Note that the false-positive rate of HSDs will increase with larger amino acid variance and smaller amino acid pairwise identity.\nThe output of this step is an 8-column spreadsheet with information on the HSD identifier, gene copy number, and Pfam domain (Figure 3[href=https://www.wicell.org#fig3]E).\nThe 8-column explanation of HSDFinder result file.\nHSDs identifiers: By default, the first gene model of the duplicate gene copy is used as the HSD identifer. (e.g., g735.t1)\nDuplicate gene copies (within 10 amino acids, ≥90% pairwise identities) (e.g., g735.t1; g741.t1; g8053.t1)\nAmino acid length of duplicate gene copies (aa) (e.g., 744; 744; 747)\nPfam identifier (e.g., PF11999; PF11999; PF11999)\nAnalysis (e.g., Pfam / PRINTS / Gene3D)\nPfam Description (e.g., Protein of unknown function (DUF3494); Protein of unknown function (DUF3494); Protein of unknown function (DUF3494))\nInterPro Entry Identifier (e.g., IPR021884; IPR021884; IPR021884)\nInterPro Entry Description (e.g., Ice-binding protein-like; Ice-binding protein-like; Ice-binding protein-like)",
    "Critical: A HSDFinder result example can be found in the ZIP file under the GitHub directory of tutorial with the name HSDFinder_example_doc.zip (Figure 3[href=https://www.wicell.org#fig3]A). Troubleshooting 4[href=https://www.wicell.org#sec6.7].\nVisualizing the HSDFinder results in Microsoft Excel\nTiming: minutes to hours\nThe user can conveniently set different values to create a trendline graph of the gene copies numbers under different criteria. Check the example we used below. The genome datasets are from the psychrophilic green alga Chlamydomonas sp. UWO241 (NCBI BioProject: PRJNA547753) (Figures 4[href=https://www.wicell.org#fig4]A and 4B).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/748-Fig4.jpg\nFigure 4. Visualizing the HSD results under different thresholds\n(A) Table of duplicate gene copy numbers at different thresholds of amino acid pairwise identity and deduced amino acid length.\n(B) Line graph of duplicates set to different thresholds of amino acid pairwise identity and deduced amino acid length. The X-axis indicates the deduced amino acid length (aa) of each duplicate and the Y-axis tells the number of gene copies. Images adopted from (Zhang et al., 2021[href=https://www.wicell.org#bib18]) with permission.\nNote: The online heatmap tool is a great choice if you want to compare HSDs (and their associated KEGG pathway categories) among two or more species.\nUpload the results of HSDFinder from your respective genomes\nTiming: hours to days\nUpload the results of HSDFinder from your respective genomes. Two files are needed to plot heatmap for each species. The first input file is the output of your species of interest after running the HSDFinder; file examples are given to guide the appropriate input file (Figure 5[href=https://www.wicell.org#fig5]A).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/748-Fig5.jpg\nFigure 5. Screenshots of specific steps when visualizing HSDs in a heatmap\n(A) Test data from GitHub used to visualize HSDs across species.\n(B) The input file options for the visualization tool.\n(C) Example of submitted files.",
    "Hands-on protocol to create heatmap with Test data. Download the Heatmap_Test_data.zip via the link from GitHub (https://github.com/zx0223winner/HSDFinder[href=https://github.com/zx0223winner/HSDFinder]).\nWe provide the data from eight algal species (Chlamydomonas sp. UWO241, Chlamydomonas sp. ICE-L, Chlamydomonas reinhardtii, Chlamydomonas eustigma, Gonium pectorale, Dunaliella salina, Volvox carteri, and Fragilariopsis cylindrus). Users can create a heatmap by selecting some of them.\nEach folder represents one species. There are two files in each folder. For C. reinhardtii, for example, there is a file named “HSD_Chlamy_90pct_10aa.txt”, which contains the C. reinhardtii nuclear genome HSDs results (filtering option more than 90% amino acid pairwise identity and within 10 amino acid differences).\nAnother file named “Chlamy_KO_annotation.txt” represents the retrieved results from the KEGG database, documenting the correlation of KO accession with each gene model identifier.\nThe user can upload the respective files to the web server to create the heatmap (Figures 5[href=https://www.wicell.org#fig5]B and 5C).\nUpload a gene list with KO annotation from KEGG database\nTiming: minutes to hours\nThe second file is retrieved from the KEGG database documenting the correlation of KO accession with each gene model identifier. User has to use the Ghost KOALA or BlastKOALA analysis tool of KEGG to acquire the KO annotation file of the genome (https://www.kegg.jp/ghostkoala/[href=https://www.kegg.jp/ghostkoala/]). But, here, we provide the necessary steps to guide using the tools:\nBlastKOALA accepts a smaller dataset and is suitable for annotating high-quality genomes.\nUpload query amino acid sequences in FASTA format.\nEnter taxonomy group of your genome.\nEnter KEGG GENES database file to be searched.\nEnter your email address. An email will be sent to you for confirmation of your input data. Make sure to click on the link in the email to initiate your job and then you will receive another email once it is finished.",
    "GhostKOALA accepts a larger dataset (e.g., 300 Mb) and is suitable for annotating metagenomes.\nUpload query amino acid sequences in FASTA format.\nEnter KEGG GENES database file to be searched.\nEnter your email address. Same as above (1d).\nFrom the KEGG email link, the user can download the gene list with the KO annotations. The format of the output file can be referred to in Table 3[href=https://www.wicell.org#tbl3]. Explanation of the 2-column input file for KO accession (Table 3[href=https://www.wicell.org#tbl3]).\ntable:files/protocols_protocol_748_3.csv\nGene identifier (e.g., g10.t1)\nKO accession (e.g., K09481)\nUse the Ghost KOALA or BlastKOALA analysis tool of KEGG to acquire the KO annotation file of your genome (https://www.kegg.jp/ghostkoala/[href=https://www.kegg.jp/ghostkoala/]). An example of a KO annotation file is given under the GitHub directory of tutorial with the name Heatmap_Test_data.zip. Troubleshooting 5[href=https://www.wicell.org#sec6.9]\nFill in the organism’s name. This is the identifier used to compare HSDs among different species. To add more species, use the “+add species” button and select the respective files. Troubleshooting 6[href=https://www.wicell.org#sec6.11].\nNote: For the best visualization results, select at least two species. However, the result can still be visualized using a single species. Additional examples of KO annotation files are provided under the GitHub directory of tutorial with the name Heatmap_Test_data.zip.\nCritical: Make sure you have an organism name for the files you chose to upload (Figure 5[href=https://www.wicell.org#fig5]B).\nOutput files of the online heatmap visualization tool\nTiming: minutes\nOnce the files are uploaded, there is an option to designate the figure size. The ‘row’ option can change the width of the heatmap image, and the ‘col’ option can change the length of the heatmap image (Figure 6[href=https://www.wicell.org#fig6]A).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/748-Fig6.jpg\nFigure 6. Screenshots of heatmap example\n(A) Option for choosing the size of the heatmap.\n(B) The scale and metrics in the heatmap.\n(C) High-resolution image and spreadsheet of the heatmap result files.",
    "(D) Example of the heatmap file (.eps) visualizing the HSDs across seven green algal species. Figure 6[href=https://www.wicell.org#fig6]D was adapted with permission from (Zhang et al. 2021[href=https://www.wicell.org#bib18]).\nTap the “Create Heatmap” button and a pending image will jump out. It usually takes less than one minute to run with three to five species selected (Figure 6[href=https://www.wicell.org#fig6]B).\nThe heatmap of HSD levels across species\nTiming: minutes\nOnce the input files have been submitted, the HSDs numbers for each species will be displayed in a heatmap under different KEGG functional categories. On the left side, the color bar indicates a broad range of categories of HSDs that have functional pathway matches, such as carbohydrate metabolism, energy metabolism, and translation. The color for the matrix indicates the number of HSDs across species.\nBelow the image, there is an option to download the high-resolution image file and the tab-delimited file for future analysis (Figure 6[href=https://www.wicell.org#fig6]C).\nThe 8-column explanation of the tab-delimited file (.tsv) file (Table 4[href=https://www.wicell.org#tbl4]).\ntable:files/protocols_protocol_748_4.csv\nIdentifier (e.g., 0)\nPathway category1 (e.g., 09101 Carbohydrate metabolism)\nPathway category2 (e.g., 00010 Glycolysis / Gluconeogenesis [PATH: ko00010])\nKEGG KO_ID (e.g., K13979)\nFunction (e.g., yahK; alcohol dehydrogenase (NAP+))\nSpecies_name (e.g., UWO241)\nHSDs_ID (e.g., g1713.t1)\nHSDs_Num (e.g., 1)\nIf you are not satisfied with the heatmap figure size (e.g., the image texts are overlapped), you can always rerun with more appropriate ‘width and length’ options."
  ],
  "subjectAreas": [
    "Genomics",
    "Sequence Analysis",
    "Bioinformatics"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}