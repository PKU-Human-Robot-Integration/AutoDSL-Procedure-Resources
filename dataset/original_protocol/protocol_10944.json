{
  "id": 11581,
  "origin_website": "Jove",
  "title": "A Networked Desktop Virtual Reality Setup for Decision Science and Navigation Experiments with Multiple Participants",
  "procedures": [
    "All methods described here have been approved by Research Ethics Committee of ETH Zürich as part of the proposal EK 2015-N-37.\n1. Recruit Participants for the Planned Experimental Session.\nSample the participants within particular constraints (e.g., age, gender, educational background) using the participant recruitment system.\nSend invitations by email to the randomly selected participants using the contact information provided by the recruitment system.\nWait for these participants to register via the online system. Make sure that more participants than required (e.g., 4 overbooked participants for a session that requires 36 people) register. Overbooked participants help ensure that a session is viable in the event of no-shows.\nEnsure that a confirmation email is sent to registered participants automatically.\n2. Prepare the Experimental Session.\nPrepare the laboratory environment.\n\t\nPrint the participant list from the recruitment system.\nTurn on the server and the lights in the control room of the DeSciL and organize the testing rooms according to the required number of participants.\nCopy the executable experiment program and its corresponding configuration files on the network drive. This executable program deploys a custom-written software framework based on the Unity game engine to support client-server communication among different computers through a local area network. For navigation experiments, the framework provides a bird-eye observer server system for monitoring the client’s behaviors during the experiment.\nOpen PowerShell Integrated Scripting environment on the Windows desktop. In the PowerShell console, specify an array of computer names (e.g., $pool = “descil-w01”, “descil-w02”…) to create a client pool object. Next, type Start-Pool $pool to start the client computers and Register-Pool $pool to connect the server to the client computers.\nPrepare the computers on the client side before launching the program. Type Invoke-Pool { Mount-NetworkShare $path} to direct the computers to enter the right folder path.",
    "Execute the prepared functions on the server (i.e., Start-GameServer) and on the clients (i.e., Invoke-Pool { Start-GameClient }). Specify the IP address of the server as parameter of the function.\nWait for a message on the server’s monitor that indicates a successful connection.\nDistribute the consent forms and pens in each cubicle. The consent forms contains the information regarding the study (e.g., the purpose of the study, potential risks and benefits of the experiment), the contact information for the experimenter, and a legal disclaimer.\nShuffle the deck of seating cards that indicate the seating arrangement of the participants.\nWelcome the participants.\n\t\nAsk the participants to wait outside of the laboratory. 5 min before the official start time, check the participants’ identity documents to ensure that they match the list of registered participants. At the same time, let the participants pick a card that indicates their seat number. Have the participants walk to the corresponding cubicle and wait for the experiment to begin.\nWait a few minutes for the participants to read and sign the consent forms. Collect these forms before conducting the experiment.\n3. Conduct the Experiment.\nBroadcast the experiment instructions with the microphone to all of the participants. Inform them of the basic rules, including no communication to other participants and no personal electronic devices permitted. Ask the participants to raise their hands if they have any questions regarding the experiment.\nBegin the experiment by presenting the demographic questionnaire (e.g., gender and age) on each client.",
    "Deploy the training scene to teach the participants how to maneuver through the virtual environment. If the participants have trouble using the control interface (e.g., mouse and keyboard), walk towards their cubicle in order to assist them. Keep monitoring the participants’ progress by requesting screenshots from all of the clients (i.e., type Get-ScreenShots on PowerShell console) until all of the participants have finished the training session.\nAfter the training session, begin the testing phase of the experiment. Observe the participants’ behaviors from the bird’s-eye interface on the server computer. Send warning messages to the participants through the program if they are doing something abnormal by clicking on their avatar. Otherwise, try not to interfere with the participants during the experiment.\nEnsure that there is a short waiting period before each trial for loading the next scene and allowing the participants to read the instructions.\n4. Finalize the Experiment.\nClose the server and client program by typing Stop-GameClient and Stop-GameServer in the PowerShell console.\nAsk the participants to remain seated until their number is called over the microphone.\nExtract the participants’ final scores from the file “Score.txt” in the project folder on the server computer and convert their scores into a monetary payment.\nCall the cubicle numbers one at a time and meet each participant at the reception desk. Thank the participants and give them the corresponding payment.\nExamine the cubicles and collect any remaining pens or forms.\nCopy and save the experiment data from the server to an external disk for future analysis.\nSubscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Behavior"
  ],
  "bigAreas": [
    "Ecology & Environmental Biology"
  ]
}