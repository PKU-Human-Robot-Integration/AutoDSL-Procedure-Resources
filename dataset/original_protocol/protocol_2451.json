{
  "id": 2584,
  "origin_website": "Cell",
  "title": "Microbiota DNA isolation, 16S rRNA amplicon sequencing, and bioinformatic analysis for bacterial microbiome profiling of rodent fecal samples",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nFecal collection\nTiming: 5 min per mouse\nMouse fecal collection is to be completed in a sterile environment and as quickly as possible, to avoid potential microbial contamination. Ensure appropriate PPE is worn and all items used in the collection process are sterilized to minimize sample contamination.\nAssemble cage base with lid and label each cage with appropriate mouse number prior to beginning fecal collection.\nSpray each cage with 80% ethanol and wipe with paper towel. Wait until the cage is completely dry as an additional sterilization measure.\nPlace each mouse into the appropriately labeled clean cage for up to 5 min or until the mouse has excreted 4–8 fresh fecal pellets or a minimum of 35 mg of feces.\nReturn the mouse to the home cage.\nUsing a fresh needle for each collection, use the needle tip to carefully collect the pellets and place into an appropriately labeled 5 mL Eppendorf tube.\nNote: Do not collect fecal pellets that have been in contact with urine, see troubleshooting 1[href=https://www.wicell.org#sec5.1].\nPlace the Eppendorf tube immediately into a cooler box with dry ice, before storing at −80°C until further processing.\nNote: All cages are sterilized using a commercial cage and rack washer and commercially available chemicals. The wash cycle runs for 240 s at 55°C using TP Alka detergent followed by a dripping cycle for 30 s and neutralization for 4 s using TP Acid. Neutralization is followed by a rinse cycle for 20 s at 82°C, steam sanitization and an exhaust cycle for 60 s at 45°C.",
    "Note: Immediately freezing and storing fecal samples at −80°C is considered best practice for preserving microbial composition (Fouhy et al., 2015[href=https://www.wicell.org#bib8]; Wu et al., 2010[href=https://www.wicell.org#bib30]). Bacterial species remain viable for up to 10 years when stored at −80°C (Simione et al., 1991[href=https://www.wicell.org#bib26]).\nDNA extraction from fecal pellets\nTiming: 5–7 h for 94 samples and 2 controls\nThis step aims to extract genomic DNA from the previously collected fecal samples. Ensure appropriate PPE is worn during the extraction process.\nExtraction of genomic DNA in fecal samples:\nIn a biosafety cabinet, take ∼25 mg of mouse fecal sample and prepare the genomic DNA using the QIAamp PowerFecal Pro DNA kit as per manufacturer’s instructions[href=https://www.qiagen.com/us/products/discovery-and-translational-research/dna-rna-purification/dna-purification/genomic-dna/qiaamp-powerfecal-pro-dna-kit/] (QIAGEN).\nFor the positive control, thaw and vortex the ZymoBIOMICS Microbial Community Standard (Zymo Research) to ensure even mixing. Take 30 μL of the microbial standard and add to a PowerBead tube containing C1 buffer provided in the kit.\nFor the negative control, add in 50 μL of nuclease-free water to a PowerBead tube containing C1 buffer provided in the kit.\nPerform bead beating at 5,000 rpm for 30 s on Precellys 24 tissue homogenizer (Bertin Instruments) or equivalent homogenizer to ensure complete lysis of the sample.\nFollow the manufacturer’s instructions[href=https://www.qiagen.com/us/products/discovery-and-translational-research/dna-rna-purification/dna-purification/genomic-dna/qiaamp-powerfecal-pro-dna-kit/] for the remaining steps and elute the extracted DNA with 85 μL of nuclease free water. Troubleshooting 2[href=https://www.wicell.org#sec5.3].\nQuantify the extracted DNA using Qubit dsDNA HS assay kit, Quant-iT PicoGreen dsDNA Assay kit or equivalent.\nAssess the purity of the extracted DNA by measuring the A260/230 and A260/280 ratio using Nanodrop.",
    "Note: This protocol describes the steps for the processing of fecal samples using QIAamp PowerFecal Pro DNA kit. Other kits that could be used for manual preparation include QIAGEN DNeasy PowerSoil Kit, or QiaSymphony PowerFecal Pro DNA kit. It is important to choose kits specifically for extracting genomic DNA from fecal or soil material to enable efficient lysis and to eliminate inhibitors of downstream sequencing applications that are commonly found in fecal samples.\n16S amplicon library generation\nTiming: 5–7 h when running triplicate PCR reactions in parallel\nThis step aims to generate the 16S sequencing library targeting the V4 hypervariable region of the 16S rRNA for sequencing following the protocol outlined by Caporaso et al. (2018)[href=https://www.wicell.org#bib3] for the Earth Microbiome Project. The Golay barcodes for demultiplexing are located on the forward primer 515F. Ensure appropriate PPE is worn during this process.\nNote: PCR products can contaminate reagents, instruments and genomic DNA samples; please see troubleshooting 3[href=https://www.wicell.org#sec5.5], for potential solutions.\nPrepare the 515F and 806R primer:\nResuspend the lyophilized primer in nuclease-free water for a stock concentration of 100 μM.\nIncubate at room temperature for 2 min.\nVortex for 10 s and then centrifuge the primers at a speed of 15,000 g for 30 s.\nDilute the primers to a working concentration of 10 μM.\nPerform PCR amplification of 16S V4 rRNA:\nPrepare the PCR reaction master mix containing the following volumes per reaction and multiply by three to perform PCR reactions in triplicates:\ntable:files/protocols_protocol_2085_1.csv\nAliquot the master mix according to the number of reactions into thermocycle-compatible tubes or 96-well PCR plate.",
    "Add in 0.5 μL of the Golay-barcoded 515 forward primer into each tube or well. Each triplicate reaction of the same sample should have the same Golay-barcoded 515 forward primer and each sample should have a unique Golay-barcoded 515 forward primer.\nAdd in 1 μL of DNA template into each reaction.\nThe final reaction should contain the following:\ntable:files/protocols_protocol_2085_2.csv\nSetup the thermocycler conditions as follows and run the PCR:\ntable:files/protocols_protocol_2085_3.csv\nPause point: The PCR cycle will take approximately 2 h 45 min and the PCR reactions can remain on the thermocycler until the next step.\nPooling and normalizing amplicon libraries:\nPool the triplicate PCR reactions for each sample into a single volume of 75 μL. Run the amplicon libraries on an agarose gel to verify the presence of PCR product with the expected size of ∼390 bp.\nQuantify the amplicons using Qubit HS assay kit, Quant-iT PicoGreen dsDNA Assay kit or equivalent. The expected ranges for positive and negative control are 10–30 ng/μL and 0–2 ng/μL respectively. Fecal samples are expected to generate an amplicon concentration of 10–30 ng/μL. Troubleshooting 4[href=https://www.wicell.org#sec5.7].\nCombine 240 ng of each sample into a single tube. Pool 2 μL of the negative control and 10 μL of the positive control in the final tube.\nClean-up the amplicon library pool using Ampure XP beads (Beckman Coulter).\nAllow the beads to come to 23°C and vortex to resuspend before usage.\nIn a clean Eppendorf tube, add 200 μL of the resuspended Ampure XP beads to 400 μL of amplicon pool and repeat until all the pool has been transferred.\nMix by inverting the tube 10 times.\nIncubate at 5 min at 23°C.",
    "Pellet the beads on a magnetic rack for approximately 2 min or until the solution turns clear and a visible bead is formed close to the magnet.\nPrepare 80% v/v ethanol in nuclease-free water.\nWash the beads:\nPipette off the supernatant and discard.\nWash the beads with 500 μL of freshly prepared 80% v/v ethanol without disturbing the pellet.\nPipette off the 80% v/v ethanol and discard.\nRepeat the wash one more time.\nPulse centrifuge the tube and replace the tubes on the magnetic rack.\nPipette off residual ethanol and allow the pellet to dry for ∼30 s. Do not overdry the pellet to the point of cracking, a good rule of thumb is that the pellet should be wet but not shiny.\nRemove the tube from the magnetic rack and resuspend pellet in 200 μL nuclease-free water. Incubate at room temperature for 2 min.\nReturn the tubes to the magnetic rack until the solution is clear. Remove and retain 200 μL of eluate from all tubes into a single tube.\nQuantify the pool using Qubit HS assay kit, Quant-iT PicoGreen dsDNA Assay kit or equivalent. The pool should be between 0.5–5 ng/μL. Given that the expected amplicon size is 390 bp, and dsDNA is 660 g/mol/bp, determine concentration of the pool in molarity as below:\nConc. in nM =     X  n g / μ l    ( 390 )   ( 660 )       x 106\nIf a pool is less than 2 nM, it may be required to repeat pooling and Ampure XP concentration. Otherwise, dilute the amplicon pool to 2 nM.\n16S amplicon library sequencing\nTiming: 0.5–1 h of preparation, ∼24 h on the MiSeq instrument",
    "This step aims to sequence the 16S amplicon library on the MiSeq platform using MiSeq v2 Reagent kit 2 × 150 bp (300 cycles) (Illumina, San Diego, California, USA). Ensure appropriate PPE is worn during the sequencing process.\nPrepare the 16S Read 1, Read 2 and Index sequencing primers:\nResuspend the lyophilized primer in nuclease-free water to 100 μM.\nIncubate at room temperature for 2 min.\nVortex for 10 s and then centrifuge the primers at a speed of 15,000 g for 30 s.\nThaw the MiSeq v2 reagent cartridge in a water bath at room temperature for at least 1 h before usage.\nDenature and dilute the libraries to 6.5 pM:\nAdd 10 μL of freshly diluted 0.2 N NaOH to 10 μL of 2 nM library in a clean microfuge tube.\nMix by pipetting gently 10 times.\nIncubate for 5 min at room temperature.\nQuench the reaction with 980 μL of pre-chilled HT1 provided in the kit, vortex and put on ice.\nFurther dilute the sample to 6.5 pM by adding 325 μL of the reaction from the previous step to 675 μL of HT1 in a new microfuge tube.\nMix and chill until use.\nDenature and dilute PhiX Control v3 (Illumina) to 6.5 pM:\nAdd 2 μL of 10 nM PhiX and 8 μL nuclease-free water to a new microfuge tube.\nAdd 10 μL 0.2 N NaOH to the tube.\nMix by pipetting gently 10 times.\nIncubate for 5 min at room temperature.\nQuench with 980 μL of pre-chilled HT1 provided in the kit, vortex and put on ice.\nFurther dilute the PhiX by adding 81.2 μL of the reaction from the previous step to 168.8 μL HT1 in a new microfuge tube.\nMix and chill until use.",
    "Mix the reagents in the MiSeq cartridge by inverting 5–10 times and to ensure all reagents have defrosted. Gently tap down the cartridge to settle the reagents to the bottom of the well.\nLoad the sequencing primers and library onto the MiSeq cartridge. Pierce wells with a clean 1 mL pipette tip and add:\nTo well 12: 4 μL of Read 1 primer (100 μM).\nTo well 13: 4 μL of Index primer (100 μM).\nTo well 14: 4 μL of Read 2 primer (100 μM).\nTo well 17: Prepare the final loading sample with 15% PhiX by adding 850 μL of 6.5 pM sample and 150 μL of 6.5 pM PhiX Control in a clean microfuge and load 600 μL into the well.\nRun the sequencing on the MiSeq instrument using either Base Space or sample sheet. Troubleshooting 5[href=https://www.wicell.org#sec5.9].\nNote: To ensure that there are at least 100,000 sequencing reads per sample, which is adequate for microbiome profiling, no more than 192 samples should be multiplexed per sequencing run given the MiSeq output of 20 million reads.\nNote: 10%–15% of the high diversity PhiX spike-in is commonly used for best results when sequencing 16S libraries given its low diversity.\nBioinformatic analysis & data pre-processing\nTiming: 3–5 h including data visualization\nThis step aims to generate amplicon sequence variants (ASVs), taxonomic classification of ASVs, calculation of alpha and beta diversity and multivariate statistical analysis. R programming was used. Specific to this study we analyzed results based on sex and housing groups. Computational resources used included a 3.1 GHz Dual-Core Intel Core i5 processor and 16 GB 2,133 MHz LPDDR3 memory.",
    "Note: All statistical and pre-processing analyses were performed using R software (version 4.1.0), with the use of R packages biomformat V1.20.0, dada2 V1.20.0, Phyloseq V1.36.0, ggpubr V0.4.0, ggplot2 V3.3.6, mixOmics V6.16.3, nlme V3.1-158 and vegan V2.6-2. The Qiita platform was used for processing the raw FASTQ data, however the QIIME2 platform would be a suitable alternative.\nAs in Gubert et al. (2022)[href=https://www.wicell.org#bib11], we present the specific steps to investigate sex and housing groups using R and graphical outputs. The R code below can be modified appropriately for similar statistical analyses, and for further improved analyses.\nProcess Illumina MiSeq sequence raw FASTQ data using Qiita for quality control, demultiplexing sequences and trimming to generate ASVs.\nNote: Qiita has built in quality control. Default options can be used to run the pre-processing pipeline. Please refer to the Qiita Processing Data[href=https://qiita.ucsd.edu/static/doc/html/processingdata/index.html] page for relevant quality scores.\nLoad all required libraries into R.\n> library(biomformat)\n> library(dada2)\n> library(phyloseq)\n> library(ggpubr)\n> library(ggplot2)\n> library(mixOmics)\n> library(nlme)\n> library(vegan)\n> library(DECIPHER)\n> library(phangorn)\n> library(gghighlight)\n> library(dplyr)\nRead and pre-process the data.\nRead the ASV count table saved as an ‘.biom’ file in the data folder using ‘biomformat’ R package and filter out the brain samples that were included in the biom file.\nNote: The brain samples included in the .biom file were used for a different study.\n> raw_data<-read_biom(\"data/DMGPR00078.biom\")\n###Converte the data into matrix format###\n> count_data<-as(biom_data(raw_data),\"matrix\")\n###Order the column names to filter brain samples###\n> count_data<-count_data[,order(colnames(count_data))]\n###Filter out the counts related to brain samples (i.e., last 23 samples were removed###\n> gut_count_data<-count_data[,-(c(96:118))]\n###Filter ASVs that have 0 across all samples (i.e., ASVs related to brain samples)###\n> filtered_gut_counts<-gut_count_data[rowSums(gut_count_data[,])>0,]\n### Read sample information and convert qualitative variables into factors###\n> sample<-read.csv(\"Data/Gut sample information (DAMG_FM009).csv\")[,-c(1:3)]\n> sample$Genotype<-factor(sample$Genotype, levels=c(\"WT\",\"HD\"))\n> sample$Housing <-factor(sample$Housing, levels = c(\"SH\",\"EE\",\"EX\"))",
    "> sample$Sex<-factor(sample$Sex, levels=c(\"Female\", \"Male\"))\n> sample$Box <-factor(sample$Box, levels = c(\"1\",\"1.1\",\"2\",\"2.1\",\"3\",\"3.1\",\"5\",\"5.1\",\"6\",\"6.1\",\"7\",\"7.1\",\"9\",\"9.1\",\"10\",\"10.1\",\"11\",\"11.1\",\"13\",\"13.1\",\"14\",\"14.1\",\"15\",\"15.1\",\"17\",\"17.1\",\"18\", \"18.1\",\"19\",\"19.1\",\"21\",\"21.1\",\"22\",\n\"22.1\",\"23\",\"23.1\"),labels =c(\"A\",\"a\",\"B\",\"b\",\"C\",\"c\",\"D\",\"d\",\"E\",\"e\",\"F\",\"f\",\"G\",\"g\",\"H\",\"h\",\"I\",\"i\",\"J\",\"j\",\"K\",\"k\",\"L\",\"l\",\"M\",\"m\",\"N\",\"n\",\"O\",\"o\",\"P\",\"p\",\"Q\",\"q\",\"R\",\"r\"), ordered = TRUE)\n### Create a new qualitative variable by concatenating two variables###\n> sample$Sex_Geno<-factor(paste0(sample$Sex,\"_\",sample$Genotype))\n> sample$Housing_Geno<-factor(paste0(sample$Housing,\"_\",sample$Genotype))\nUse the reference database ‘silva_nr99_v138.1_wSpecies_train_set.fa.gz’ or most updated version and ‘dada2’ R package for taxonomy classification.\n> seq<-rownames(filtered_gut_counts)\n> taxa_clasification <- assignTaxonomy(seq, \"data/silva_nr99_v138.1_wSpecies_train_set.fa.gz\", multithread=FALSE)\nConvert the data into phyloseq object using ‘phyloseq’ R package.\n> asvmat = filtered_gut_counts\n> rownames(asvmat) <- paste0(\"ASV_\", 1:nrow(asvmat))\n> colnames(asvmat) <- paste0(\"Sample_\", 1:ncol(asvmat))\n> taxmat = as.matrix(taxa_clasification[,-1])\n> rownames(taxmat) <- rownames(asvmat)\n> ASV = otu_table(asvmat, taxa_are_rows = TRUE)\n> TAX = tax_table(taxmat)\n> physeq = phyloseq(ASV, TAX)\n> sampledata<-sample_data (data.frame(sample, row.names= sample_names (physeq)))\n> physeq = phyloseq(ASV, TAX, sampledata)\nExample of an expected output of ‘physeq’ R object: imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx4.jpg\nConstruct an unrooted phylogenetic tree with random root data using the ‘phangorn’ and ‘DECIPHER’ R packages.\n> seqs<-seq\n> names(seqs) <- rownames(taxmat)\n> alignment <- AlignSeqs(DNAStringSet(seqs), anchor=NA)\n> phang.align <- phyDat(as(alignment, \"matrix\"), type=\"DNA\")\n> dm <- dist.ml(phang.align)\n> treeNJ <- NJ(dm)\n> fit = pml(treeNJ, data=phang.align)\n> fitGTR <- update(fit, k=4, inv=0.2)\n> fitGTR <- optim.pml(fitGTR, model=\"GTR\", optInv=TRUE, optGamma=TRUE, rearrangement = \"stochastic\", control = pml.control(trace = 0))\n> physeq_count_with_mit = phyloseq(ASV, TAX, sampledata,phy_tree(fitGTR$tree))\n> set.seed(711)\n> phy_tree(physeq_count_with_mit) <- root(phy_tree(physeq_count_with_mit),sample(taxa_names(physeq_count_with_mit), 1), resolve.root = TRUE)\nExample of an expected output of ‘physeq_count_with_mit’ R object: imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx5.jpg\nRemov non-bacterial sequences (i.e., mitochondria) from the phyloseq object.\n> MT1 <- subset_taxa(physeq_count_with_mit, Family == \"Mitochondria\")\n> MT1 <- as(tax_table(MT1), \"matrix\")\n> MT1 <- MT1[, 5]\n> goodTaxa <- setdiff(taxa_names(physeq_count_with_mit), names(MT1))\n> physeq_count<- prune_taxa(goodTaxa, physeq_count_with_mit)\nExample of an expected output of ‘physeq_count’ R object: imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx6.jpg\nCalculate beta diversity measures (i.e., Bray Curtis distance and Unweighted Unifrac distance) and relative abundances for each sample by normalizing counts to 1.\n> physeq_ra = transform_sample_counts(physeq_count, function(x) x/sum(x))",
    "Inspect the library sizes (i.e., the number of reads) in each sample to identify any heterogeneous library sizes using ‘ggplot2’ and ‘gghighlight’ R packages.\nNote: Based on the results, 'Sample 65' is identified with a low library size. However, this sample is not removed from further analysis as there is no compelling reason to do so.\n> lib.size <- data.frame(Lib.size=apply(otu_table(physeq_count), 2, sum))\n> lib.size$Sample<-rownames(lib.size)\n> ggplot(lib.size, aes(x=Sample,y = Lib.size)) +geom_bar(stat = \"identity\")+ ggpubr::rotate_x_text() +xlab(\"Sample\") + ylab(\"Library Size\")+\ngghighlight(min(Lib.size)< 20000, label_key =Sample)\nExample of an expected output:\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx7.jpg\nCalculate alpha diversity using ‘phyloseq’ R package.\nFollowing Kong et al., 2018[href=https://www.wicell.org#bib14] reads are rarefied to 15,000 using ‘phyloseq’ R package. Since the lowest library size is reported to be 17871, all the samples are rarefied to 15,000.\nNote: The rationale behind rarefaction is to adjust the differences in library sizes across samples to aid comparisons of alpha diversity. However, alpha diversity may not be accurate on rarefied data. Users interested in alpha diversity can normalize samples to a median sequencing depth, which is preferred over rarefaction (McMurdie and Holmes, 2014[href=https://www.wicell.org#bib22]).\n> physeq.rarefied = rarefy_even_depth(physeq_count, rngseed=1, sample.size=15000, replace=F)\nAlpha diversity measures included in Gubert et al. (2022)[href=https://www.wicell.org#bib11] were:\nSpecies richness (observed).\nShannon diversity index, which considers richness and relative abundance or evenness of ASVs.\nInverse Simpson diversity index which also considers richness and relative abundance or evenness of ASVs but is less sensitive to rare species compared to the Shannon index.\nNote: Other alpha diversity measures are available in ‘estimate_richness’ function (i.e., \"Observed\", \"Chao1\", \"ACE\", \"Shannon\", \"Simpson\", \"InvSimpson\", \"Fisher\"). If one need all these measures, leave out the argument ‘measures’ (i.e., alpha_div<-estimate_richness(physeq.rarefied)) from the command below.\n> alpha_div<-estimate_richness(physeq.rarefied, measures = c(\"Observed\",\"Shannon\",\"InvSimpson\"))\nVisualize alpha diversity using boxplots with the use of ‘ggplot2’ and ‘ggpubr’ R packages.\n> P1<-plot_richness(physeq.rarefied,x=\"Housing\",measures=c(\"Observed\"), color = \"Sex\")+facet_grid (∼Genotype)",
    "> P1$layers <- P1$layers[-1]\n> P1<-P1+geom_point(position = position_dodge(width=0.75))+geom_boxplot(data = P1$data, aes(x = Housing, y = value, color = Sex),\nalpha = 0.1)+ labs(y=\"Alpha Diversity- Observed\")\n> P2<-plot_richness(physeq.rarefied, x=\"Housing\",measures=c(\"Shannon\"), color = \"Sex\")+facet_grid (∼Genotype)\n> P2$layers <- P2$layers[-1]\n> P2<-P2+geom_point(position = position_dodge(width=0.75))+geom_boxplot(data = P2$data, aes(x = Housing, y = value, color = Sex),\nalpha = 0.1)+ labs(y=\"Alpha Diversity- Shannon\")\n> P3<-plot_richness(physeq.rarefied, x=\"Housing\",measures=c(\"InvSimpson\"), color = \"Sex\")+facet_grid (∼Genotype)\n> P3$layers <- P3$layers[-1]\n> P3<-P3+geom_point(position = position_dodge(width=0.75))+geom_boxplot(data = P3$data, aes(x = Housing, y = value, color = Sex),\nalpha = 0.1)+ labs(y=\"Alpha Diversity- Inverse Simpson\")\n> ggarrange(P1, P2, P3, labels = c(\"A\", \"B\", \"C\"),ncol = 3, nrow = 1)\nExample of an expected output:\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx8.jpg\nAnalyze variance of the alpha diversity measures.\n> alpha_div.df<-cbind(sample_data(physeq.rarefied)[,1:3],alpha_div)\n> summary(aov(Observed∼Housing+Sex+Genotype, data=alpha_div.df))\n> summary(aov(Shannon∼Housing+Sex+Genotype, data=alpha_div.df))\n> summary(aov(InvSimpson∼Housing+Sex+Genotype, data=alpha_div.df))\nExample of an expected output:\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx9.jpg\nCalculate beta diversity using ‘phyloseq’ R package.\nUse non rarefied counts.\nBray Curtis distance accounts for the abundance between ASVs.\n> distBC = phyloseq::distance(physeq_ra, method = \"bray\")\nUnweighted Unifrac distance is based on the phylogenetic relationship between the ASVs.\n> distUF = UniFrac(physeq_ra, weighted = F, normalized = T, parallel = F)\nVisualize beta diversity using Principal Co-ordinate Analysis (PCoA) using ‘phyloseq’ R package.\nVisualize PCoA for Bray Curtis distance.\n> bray_pcoa <- ordinate(physeq = physeq_ra, method = \"PCoA\", distance = \"bray\"\n> p<-plot_ordination(physeq = physeq_ra, ordination = bray_pcoa,color= \"Housing\", shape =\"Sex_Geno\", title = \"PCoA: Bray-Curtis\")\n> p$layers <- p$layers[-1]\n> p+scale_shape_manual(values = c(16,1,17,2))+ scale_fill_discrete(c(\"#F8766D\",\"#619CFF\",\"#00BA38\"))+ theme(text = element_text(size = 16)) + geom_point(size=4)\nExample of an expected output: imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx10.jpg\nVisulaize PCoA for Unweighted Unifrac distance.\n> ordUF = ordinate(physeq_ra, method = \"PCoA\", distance = distUF)\n> p<-plot_ordination(physeq_ra, ordUF, color = \"Housing\", shape = \"Sex_Geno\")+ ggtitle(\"Unweighted UniFrac PCoA\")\n> p$layers <- p$layers[-1]\n> p+scale_shape_manual(values = c(16,1,17,2)) +\n  scale_fill_discrete(c(\"#F8766D\",\"#619CFF\",\"#00BA38\"))+\n  theme(text = element_text(size = 16)) + geom_point(size=4)",
    "Example of an expected output: imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx11.jpg\nConduct Permutational Multivariate Analysis of Variance (PERMANOVA) on Beta diversity measures using ‘vegan’ R package.\nBray Curtis distance.\n> adonis2(distBC ∼ Housing+Sex+Genotype, data = data.frame(sample_data(physeq_ra)))\nExample of an expected output: imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx12.jpg\nUnweighted Unifrac distance.\n> adonis2(distUF ∼ Housing+Sex+Genotype, data = data.frame(sample_data(physeq_ra)))\nExample of an expected output: imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx13.jpg\nFilter counts to remove ASVs with low counts across samples for further statistical analysis:\nAdd an offset of 1 to the whole data matrix to remove zeros prior to centered log ratio transformation.\n> data.raw = data.frame(t(asvmat))\n> taxonomy.details = data.frame(taxmat)\n> indiv<-data.frame(sample,row.names=rownames(t(asvmat)))\n> Data.16S<-list(data.raw=data.raw+1, taxonomy.details=taxonomy.details, indiv=indiv)\n> data.offset <- Data.16S$data.raw\nRemove ASVs with sum counts of less than 0.01% (Le Cao et al., 2016[href=https://www.wicell.org#bib17]) of the sum of all counts for entire cohort as well as for the two sexes separately.\n> low.count.removal = function(data, percent=0.01){\nkeep.asv = which(colSums(data)∗100/(sum(colSums(data))) > percent)\ndata.filter = data[,keep.asv]return(list(data.filter = data.filter, keep. asv = keep.oasv))\n}\n###Entire dataset###\n> result.filter <- low.count.removal(data.offset, percent=0.01) > filter.data.raw<-result.filter$data.filter\n> filter.taxonomy<-taxonomy.details[colnames(filter.data.raw),]\n> filterASV_16S<-list(filter.data.raw=filter.data.raw,\n            filter.taxonomy=filter.taxonomy, indiv=indiv)\n###Females###\n> indiv_female=indiv%>%filter(Sex==\"Female\")\n> data.raw_female=data.raw[rownames(indiv_female),]\n> taxonomy.female<-taxonomy.details[colnames(data.raw_female),]\n> data.offset.female <- data.raw_female+1\n> result.filter.female <- low.count.removal(data.offset.female, percent=0.01)\n> filter.data.raw.female<-result.filter.female$data.filter\n> filter.taxonomy.female<-taxonomy.details[colnames(filter.data.raw.female),]\n> filterASV_16S.female.pca<-list(filter.data.raw=filter.data.raw.female,\n                    filter.taxonomy=filter.taxonomy.female, indiv=indiv_female)\n###Males###\n> indiv_male=indiv%>%filter(Sex==\"Male\")\n> data.raw_male=data.raw[rownames(indiv_male),]\n> taxonomy.male<-taxonomy.details[colnames(data.raw_male),]\n> data.offset.male <- data.raw_male+1\n> result.filter.male <- low.count.removal(data.offset.male, percent=0.01)\n> filter.data.raw.male<-result.filter.male$data.filter\n> filter.taxonomy.male<-taxonomy.details[colnames(filter.data.raw.male),]\n> filterASV_16S.male.pca<-list(filter.data.raw=filter.data.raw.male,\n                filter.taxonomy=filter.taxonomy.male, indiv=indiv_male)\nVisualize Principal Component Analysis (PCA) results for entire cohort as well as for the two sexes separately using the ‘mixOmics’ R package.\n###Entire dataset###\n> pca.result <- pca(filterASV_16S$filter.data.raw, logratio = 'CLR')\n> plotIndiv(pca.result, group = filterASV_16S$indiv$Housing, title = 'PCA plot', pch.levels =levels(filterASV_16S$indiv$Sex_Geno), pch = c(16,1,17,2), legend = TRUE,ind.names = FALSE,legend.title = 'Housing', legend.title.pch = \"Gender_Genotype\", col = c(\"#F8766D\",\"#00BA38\",\"#619CFF\"), level.colors=levels(filterASV_16S$indiv$Housing))\n###Females###\n> pca.result.female <- pca(filterASV_16S.female.pca$filter.data.raw, logratio = 'CLR')",
    "> plotIndiv(pca.result.female, group = filterASV_16S.female.pca$indiv$Housing, pch=filterASV_16S.female.pca$indiv$Genotype,title = 'PCA plot-Female', legend = TRUE, legend.title = \"Housing\", legend.title.pch = \"Genotype\", ellipse= TRUE)\n###Males###\n> pca.result.male <- pca(filterASV_16S.male.pca$filter.data.raw, logratio = 'CLR')\n>plotIndiv(pca.result.male, group = filterASV_16S.male.pca$indiv$Housing, pch=filterASV_16S.male.pca$indiv$Genotype,title = 'PCA plot-Male', legend = TRUE, legend.title = \"Housing\", legend.title.pch = \"Genotype\",ellipse= TRUE)\nExample of an expected output:\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx14.jpg\nIdentify ASVs which segregate and contribute to stratification of samples according to housing conditions (for a given sex and genotype) using Sparse Partial Least Squares regression- Discriminant Analysis (sPLS-DA) (Lê Cao et al., 2011[href=https://www.wicell.org#bib16]) using ‘mixOmics’ and ‘dplyr’ R packages. Example of an expected output for the female-HD data.\nChoose the optimal parameters for sPLS-DA (number of components and number of variables to select on each component).\n###Filtering female HD data###\n> female_hd.16S= filterASV_16S.female.pca$indiv%>%filter(Genotype==\"HD\")\n> Y=female_hd.16S$Housing\n> X=filterASV_16S.female.pca$filter.data.raw[rownames(female_hd.16S),]\n###Parameter tuning for splsda###\n> set.seed(2543)\n> tune.splsda.female_hd <- tune.splsda(X, Y, ncomp = 3, logratio = 'CLR', validation = 'Mfold', folds = 5, progressBar = FALSE, test.keepX = seq(5,100,5),dist = 'max.dist', measure = \"BER\", nrepeat = 10)\n> ncomp <- 2\n> select.keepX <- tune.splsda.female_hd$choice.keepX[1:ncomp]\nRun sPLS-DA with the optimal parameters, output as 'ncomp' and 'select.keep' from above.\n> splsda.female_hd <- splsda(X, Y, logratio = 'CLR', ncomp = ncomp, keepX = select.keepX)\nVisualize sample plots with 0.95 confidence ellipse plots showing discrimination between housing conditions.\n> plotIndiv(splsda.female_hd, group = female_hd.16S$Housing, ind.names = FALSE, ellipse = TRUE, legend = TRUE, title = 'Comp 1 & 2', size.xlabel = rel(1.5), size.ylabel = rel(1.5), size.axis = rel(1), size.legend = rel(1.1), size.legend.title = rel(0), style = \"ggplot2\")\nExample of an expected output: imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx15.jpg\nVisualize loading plots showing the highest median value of the ASVs with color code corresponding to the housing conditions.\n> plotLoadings(splsda.female_hd, comp = 1, title = 'Loadings-comp 1', plot = FALSE, contrib = 'max', method = 'median', size.name =0.8,size.title=1)",
    "> plotLoadings(splsda.female_hd, comp = 2, title = 'Loadings-comp 2', max.name.length=50, plot = FALSE, contrib = 'max', method = 'median', size.name = 1,size.title=1, ndisplay = 35)\nExample of an expected output: imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx16.jpg\nCalculate the overall and class-wise error rates.\n> perf.plsda.female_hd <- perf(splsda.female_hd, validation = \"Mfold\", folds = 5, progressBar = FALSE, auc = TRUE, nrepeat = 10)\n### Overall error rates###\n> perf.plsda.female_hd$error.rate\n### Class-wise error rates###\n> perf.plsda.female_hd$error.rate.class\nExample of an expected output:\nOverall error rates. imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx17.jpg\nClass-wise error rates. imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx18.jpg\nVisualize Principal Component Analysis (PCA) results with cage/box number to examine random effects in the data using ‘mixOmics’ R package.\n> plotIndiv(pca.result, group =filterASV_16S$indiv$Box, title = 'PCA plot with Cage', ind.names = filterASV_16S$indiv$Box, cex = 1.5, style = \"lattice\")\nExample of an expected output: imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx19.jpg Since we observed some cage effect, linear mixed models (LMMs) are fitted separately for each of the sexes separately with genotype and housing as fixed effects and cage as random effects to identify which fixed effects and their interactions may explain ASV abundance using ‘nlme’ R package. Example for the female data.\nTo account for compositional data Gloor et al. (2017)[href=https://www.wicell.org#bib10], first transform raw counts using centred log-ratio transformation.\n> clr.female.data<-logratio.transfo(X = filterASV_16S.female.pca$filter.data.raw, logratio = 'CLR')\n> df.female.clr<-cbind(filterASV_16S.female.pca$indiv, data.frame(clr.female.data[,]))\nFit LMMs on each ASV and extract the relevant p-values. Troubleshooting 6[href=https://www.wicell.org#sec5.11].\n> dep_vars.fe <-grep(\"ASV_\", colnames(df.female.clr), value = T)\n> p_val.fe<-lapply(dep_vars.fe, function(r) {\n  f <- formula(paste(r, \"Genotype + Housing+ Genotype:Housing\", sep = \"∼\"))\n  m <- lme(fixed = f, random = ∼ 1 |Box, data = df.female.clr)\n  m$call$fixed <- f\n  round(summary(m)$tTable[2:6,5],4)})\n> Matrix_pval.fe <- matrix(unlist(p_val.fe), ncol = 5, byrow = TRUE)\n> rownames(Matrix_pval.fe)<-dep_vars.fe\n> colnames(Matrix_pval.fe)<-c(\"P-value (HD)\", \"P-value (EE)\", \"P-value (EX)\", \"P-value (HD∗EE)\", \"P-value (HD∗EX)\")\nExample of an expected output: imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx20.jpg",
    "Adjust p-values for multiple testing using the Benjamin and Hochberg (BH) procedure (Benjamini and Hochberg, 1995[href=https://www.wicell.org#bib2]).\n> Matrix_fdr.fe<-apply(Matrix_pval.fe, 2, function(x) p.adjust(x, method=\"BH\"))\n> colnames(Matrix_fdr.fe)<-c(\"Adj P-value (HD)\", \"Adj P-value (EE)\", \"Adj P-value (EX)\", \"Adj P-value (HD∗EE)\", \"Adj P-value (HD∗EX)\")\n> female.lmm<-data.frame(Matrix_fdr.fe)\nExample of an expected output: imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2085-Fx21.jpg"
  ],
  "subjectAreas": [
    "Genomics",
    "Rnaseq",
    "Bioinformatics",
    "Systems Biology",
    "Health Sciences",
    "Cancer",
    "Single Cell",
    "Microbiology",
    "Genetics",
    "Molecular Biology",
    "Model Organisms",
    "High Throughput Screening"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}