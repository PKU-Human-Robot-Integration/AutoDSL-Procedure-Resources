{
  "id": 19697,
  "origin_website": "Wiley",
  "title": "Compare_Genomes: A Comparative Genomics Workflow to Streamline the Analysis of Evolutionary Divergence Across Eukaryotic Genomes",
  "procedures": [
    "We developed compare_genomes, a transferable and extendible comparative genomics workflow for eukaryotic species built using the Nextflow framework and Conda package management system. It provides a wieldy pipeline to test for non-random evolutionary patterns that can be mapped to evolutionary processes to help identify the molecular basis of specific biological properties of the species analyzed. Additionally, it provides a template that other comparative genomics pipelines can use for improved reproducibility. It is also worth mentioning that other comparative genomics analysis methods exist that are not included in this workflow. These include syntenic block detection, as well as population genetics tools such as demographic history estimation to infer divergence times between populations or species.\nA detailed user manual describing how to install, set up, and run the workflow is presented in the README page of the compare_genomes project repository (https://github.com/jeffersonfparil/compare_genomes[href=https://github.com/jeffersonfparil/compare_genomes]). We included a tutorial analyzing four Arabidopsis species. Here, we detail the steps needed to run this example.\nNecessary Resources\nTo run this workflow using the provided example dataset: A minimum of one CPU core, one gigabyte (GB) of random-access memory (RAM), and 100 GB of free storage (our tests using the example dataset revealed that leveraging 32 CPU cores operating at base clock speeds of 2 GHz and using 50 GB of RAM enabled the completion of the analysis within 6 hr)\nDownload and run the example\n1. Download the compare_genomes repository:\n         \ngit clone https://github.com/jeffersonfparil/compare_genomes.git\n2. Install Conda. For more information, please follow the official Conda installation guide (https://conda.io/projects/conda/en/latest/user-guide/install/index.html[href=https://conda.io/projects/conda/en/latest/user-guide/install/index.html]). Installation on Linux can be achieved via:\n         \nwget    https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\nsh./Miniconda3-latest-Linux-x86_64.sh\n3. Import and activate the compare_genomes Conda environment:\n         \nconda    env    create    -n    compare_genomes    --file compare_genomes/compare_genomes.yml\nconda activate compare_genomes",
    "4. Edit the configuration file, i.e., compare_genomes/config/params.config, by replacing line number 2, dir = ‘/data/TEST’, with the absolute path on the user's computer that will be used as the output directory for the workflow:\n         \ncd compare_genomes\nnano config/params.config\nReplace “dir='/data/TEST'” with your path.\n5. Run the example:\n         \nchmod +x run.sh\ntime ./run.sh\nEdit configuration files\n6. To set up the workflow for a new analysis, edit the seven configuration files located in compare_genomes/config/.\n         \na.‘urls.txt’: list of web links or absolute paths to the genome sequences, genome annotations, coding DNA sequences, and amino acid sequences for at least three species to be included in the analyses. It is formatted as a headerless, two-columned, comma-separated file. Column 1 contains the filenames of the genome sequence, genome annotation, coding DNA sequence, and amino acid sequences (species names and extension names should be the consistent across these files, e.g., ‘.fna’ for the genomes, ‘.gff’ for the annotations, ‘.cds’ for the coding DNA sequences, and ‘.faa’ for the amino acid sequences). Column 2 contains the URL (uniform resource locator) of the zipped (‘.gz’ or ‘.zip’) or unzipped files for download. Alternatively, this can be the absolute path to the pre-downloaded zipped or unzipped files on a local computer.\nb.‘dates.txt’: list of pairwise divergence times between species. This information can be found at http://timetree.org[href=http://timetree.org]. Divergence times between all pairs of species are not required. Pick at least two pairs of species divergence times, ideally including the outgroup species. This file is formatted as a headerless, two-columned, tab-delimited file. Column 1 contains the pair of species separated by a comma with the same names used in the ‘urls.txt’. Column 2 contains the time in million years, e.g., ‘-160’ for 160 million years ago.",
    "c.‘comparisons_4DTv.txt’: list of species and pairs of species to be included in the estimation of transversion rates among four-fold-degenerate sites (4DTv). This statistic is used to set the molecular clock, with more mutations at the third codon position meaning more divergence time between a pair of sequences. By default, 4DTv is estimated using genes present with two copies. Edit line 34 of ‘compare_genomes/modules/assess_WGD.nf’ to include genes with more than two copies. This is formatted as a headerless, one-columned file. Column 1 contains the species and/or pairs of species names, which should match the names in ‘urls.txt’, and species pairs should be written as, for example, “Zea_mays X Oryza_sativa”.\nd.‘venn_species_max_5.txt’: list of at most five species to be plotted in the Venn diagram comparing the differences and commonalities of gene families between species. It is currently not possible to fit more than five species in the Venn diagram because of the limitations of the plotting package used. This is formatted as a headerless, one-columned file. Column 1 contains the species names matching those in ‘urls.txt’.\ne.‘genes.txt’: links to the gene sequences to be tested for significant expansion/contraction and for nonsynonymous/synonymous mutation (Ka/Ks) rates between pairs of sequences within and among species. It is formatted as a headerless, three-columned, comma-separated file. Column 1 contains phenotype names or some identifier (noncritical information). Column 2 contains the species names from which the gene sequence was derived and can be a species not included in ‘urls.txt’ (noncritical information). Column 3 contains the URL of the genes to be downloaded and analyzed.\nf.‘params.config’: configuration file listing the parameter values for the specific analyses to be conducted.\n                  \n‘dir’: output directory.\n‘species_of_interest’: a single species of interest, which should match one of the species listed in ‘urls.txt’.",
    "‘species_of_interest_panther_HMM_for_gene_names_url’: URL to the Panther HMM database to extract gene names from, preferably from the species used for the gene ontology (GO) term enrichment analysis. See the current release list at http://data.pantherdb.org/ftp/sequence_classifications/current_release/PANTHER_Sequence_Classification_files/[href=http://data.pantherdb.org/ftp/sequence_classifications/current_release/PANTHER_Sequence_Classification_files/].\n‘urls’: location of ‘urls.txt’.\n‘dates’: location of ‘dates.txt’.\n‘comparisons_4DTv’: location of ‘comparisons_4DTv.txt’.\n‘venn_species_max_5’: location of ‘venn_species_max_5.txt’.\n‘genes’: location of ‘genes.txt’.\n‘cafe5_n_gamma_cats’: number of the Gamma values (parameter of the substitution model) to use for the assessment of significant gene family expansion and contraction using CAFE5. If this is equal to 1, then we use the substitution model without the gamma function.\n‘cafe5_pvalue’: significance threshold for the gene family expansion and contraction test.\n‘go_term_enrich_genome_id’: genome ID for the species specified in ‘species_of_interest_panther_HMM_for_gene_names_url’ or some closely related species. Find the appropriate taxon ID at https://pantherdb.org/services/oai/pantherdb/supportedgenomes[href=https://pantherdb.org/services/oai/pantherdb/supportedgenomes].\n‘go_term_enrich_annotation_id’: code for the gene ontology level to be used, e.g., “GO:0008150” for \"Biological Process\". See the list of GO codes at https://pantherdb.org/services/oai/pantherdb/supportedannotdatasets[href=https://pantherdb.org/services/oai/pantherdb/supportedannotdatasets].\n‘go_term_enrich_test’: GO term enrichment test, which can be set to either “FISHER” (Fisher's exact test) or “BINOMIAL” (binomial distribution test).\n‘go_term_enrich_correction’: multiple testing correction which can be set to “NONE”, “FDR” (false-discovery rate), or “BONFERRONI” (Bonferroni correction).\n‘go_term_enrich_ngenes_per_test’: number of randomly sampled genes to include in each GO term enrichment analysis.\n‘go_term_enrich_ntests’: number of GO term enrichment test replications to perform.\ng.‘process.config’: configuration file setting the computing resource allocation. Assign the number of ‘cpus’ and ‘memory’ capacity to use for low- and high-resource tasks with ‘LOW_MEM_LOW_CPU’ and ‘HIGH_MEM_HIGH_CPU’, respectively.\nWorkflow of compare_genomes\n7. The compare_genomes workflow consists of nine analysis steps under the default setup (Fig. 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.876#cpz1876-fig-0001], left).",
    "a.Download the user-defined genome datasets: genome sequences (fasta, .fna), annotations (general feature format, .gff), coding DNA sequences or CDS (.cds), protein sequences (fasta, .faa), protein-coding gene models (probabilistic protein model format, .hmm), corresponding gene ontology terms (.txt), and protein sequences of specific genes of interest (.faa).\nb.Identify orthogroups using OrthoFinder (Emms & Kelly, 2019[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.876#cpz1876-bib-0004]) and gene families for each orthogroup using HMMER3 (Mistry et al., 2013[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.876#cpz1876-bib-0008]) and Panther HMMs (protein-coding gene family models; Thomas et al., 2022[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.876#cpz1876-bib-0015]). An orthogroup is a set of genes descended from a single gene from the last common ancestor of all the species included in the analysis.\nc.Infer phylogenetic trees for each orthogroup using IQ-TREE 2 (Minh et al., 2020[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.876#cpz1876-bib-0007]) based on CDS alignments generated by MACSE (Ranwez et al., 2011[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.876#cpz1876-bib-0013]) and the most likely nucleotide substitution model inferred by ModelFinder (Kalyaanamoorthy et al., 2017[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.876#cpz1876-bib-0005]).\nd.Infer the rate of sequence divergence based on transversion rates among four-fold-degenerate sites (4DTv) in single-copy genes between pairs of species using the custom Julia script for this purpose that ships with compare_genomes. 4DTv is a proxy for time, where the accumulation of transversion mutations at the degenerate (neutral) site is proportional to the amount of time passed.\ne.Identify whole-genome duplication events using 4DTv computed from multi-copy gene families. If the paralogs within a genome show an accumulation of 4DTv that is greater than 0, it is likely that a genome duplication or polyploidization occurred from which the multiple paralogs are derived.\nf.Test for significant gene family expansion or contraction across genomes using CAFE (version 5; De Bie et al., 2006[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.876#cpz1876-bib-0002]). Gene family expansion and contraction are calculated relative to the gene family count in the ancestral species given the phylogenetic tree from IQ-TREE 2. Expanded and contracted gene families can be indicative of adaptation.",
    "g.Analyze gene ontology (GO) term enrichment for significantly expanded gene families using the Panther GO API (Mi et al., 2019[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.876#cpz1876-bib-0006]). To test the significantly contracted gene families, replace all instances of the term ‘expanded’ with ‘contracted’ in lines 47-59 of ‘compare_genomes/modules/GO_enrichment.nf’.\nh.Visualize a summary of the results (i.e., see Fig. 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.876#cpz1876-fig-0001], right, for a sample output). This generates the summary output of the whole-genome-level analysis.\ni.This optional step is available for testing hypotheses involving specific genes: analyze user-defined genes of interest, i.e., gene family expansion/contraction analyses with CAFE, and estimate non-synonymous to synonymous nucleotide substitution rates (Ka/Ks) using KaKs_Calculator 2.0 (Wang et al., 2009[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.876#cpz1876-bib-0017]) and custom R script.\nCompare_genomes was implemented using Nextflow to easily integrate other Linux-based bioinformatics analysis steps. Analysis steps can be easily added or modified, for example by adding a GO term enrichment analysis for significantly contracted gene families, or substituting MACSE for another multiple sequence alignment tool.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/87506be9-3fb0-4a29-b99e-e34dd1c8a3fa/cpz1876-fig-0001-m.jpg</p>\nFigure 1\nLeft, the steps performed by the compare_genomes comparative genomics workflow. Right, a sample output plot generated by the compare_genomes workflow using four Arabidopsis species, with three parts indicated by letters (see Understanding Results for description)."
  ],
  "subjectAreas": [
    "Bioinformatics"
  ],
  "bigAreas": [
    "Bioinformatics & Computational Biology"
  ]
}