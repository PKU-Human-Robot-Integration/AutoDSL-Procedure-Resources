{
  "id": 9316,
  "origin_website": "Jove",
  "title": "Using Informational Connectivity to Measure the Synchronous Emergence of fMRI Multi-voxel Information Across Time",
  "procedures": [
    "1. Prepare the fMRI Data\nNote: After conducting an fMRI scan, pre-process the collected data using the tools available in most fMRI software packages prior to starting this protocol (although spatial smoothing should be avoided or minimized to preserve multi-voxel patterns). An example of a suitable dataset is described in a previous application of the method7.\nRemove motion and mean white matter signals from the time series of pre-processed fMRI data by creating a regression model with predictors for motion parameters (roll, pitch, yaw, x, y, z) and mean white matter signal. Conduct the analyses below on the resulting residuals (i.e. the remaining variance).\nImport the generated residuals into an analysis package (e.g., MATLAB, Python). The open source Informational Connectivity Toolbox (http://www.informationalconnectivity.org) can import fMRI data into MATLAB.\nZ-score each voxel's time series.\nSeparate the dataset's timepoints into independent sets ('folds'), such as different scanner runs. Note: Using scanner runs ensures independence between folds, which can otherwise be difficult to guarantee (for example, dependencies could be created between a run's timepoints during pre-processing). Runs could be grouped together to reduce the number of folds (e.g. ,even and odd runs2), although using single runs will give more training data.\nCreate a record of the condition labels associated with timepoints by generating a vector of condition labels that is N timepoints long.\nShift the condition labels forward in each run by a number of times-to-repetition (TRs) equivalent to 5 sec, in order to account for the hemodynamic lag between events and recorded fMRI signals.\n2. Select and Analyze a Seed Region\nSelect a seed region by isolating an anatomical area, functionally localized region or top-performing 'information brain mapping' searchlights10.\n\tNote: Steps 2.2 to 4.2 below can be performed by the open-source Informational Connectivity MATLAB Toolbox (http://www.informationalconnectivity.org[href=http://www.informationalconnectivity.org]).",
    "Compare the MVP of each time-point to a prototypical MVP for every condition (Note: this is the same approach as used in the popular correlation-based nearest neighbor classifier2). Figure 1 (top) gives an example from real data collected as participants viewed blocks of four types of man made objects.\n\t\nCalculate a prototypical (mean) MVP for every condition by averaging the timepoints of each condition in all-but-one fold. This is the 'training' data for each fold (e.g., for fold 2 of 5, mean-MVPs are calculated from timepoints in folds 1, 3, 4, and 5).\nCorrelate every timepoint's MVP with the mean-MVP of each condition from the training data. This will give every timepoint one correlation value for each condition (Note: the condition with the highest correlation here would be the prediction of the popular correlation based MVPA classifier2)\nFisher-transform the r-values to z-scores.\nQuantify 'MVP discriminability' for each timepoint: First identify the correlation from 2.2.3 that represents the relationship between the timepoint's MVP and the mean-MVP of that timepoint's condition, and then subtract the highest of the remaining correlations (i.e. 'correlation with correct condition' minus 'maximum correlation with an incorrect condition'). The result is that timepoint's MVP discriminability. An alternative (and valid) approach would be to subtract the average correlation of the incorrect conditions.\n\tNote: The suggested approach has the intuitive advantage that timepoints with positive discriminability values are correctly classified by the correlation based classifier, while timepoints with negative values are not correctly predicted. An example of the resulting values is shown in Figure 1 (bottom). The steps up to this point are captured in the formulae below.\nimgsrc://cloudfront.jove.com/files/ftp_upload/51226/51226_2.3_equations.jpg",
    "x̅ is a normalized 1-by-m row vector with m voxel activation values at time-point n, y̅ is a normalized 1-by-m row vector of the mean training pattern for correct (c) or incorrect (i) conditions for time-point n. The artanh function applies the Fisher z transform.\n3. Calculate a Time Series of MVP Discriminability for Each Searchlight\nConduct a searchlight analysis10: Place a three-dimensional cluster around each voxel in turn (a 'searchlight').\nRepeat steps 2.2 and 2.3 for each searchlight, so that every searchlight has a time series of MVP discriminability values (one per timepoint).\n4. Calculate Informational Connectivity Between the Seed and Searchlights\nCorrelate the seed's MVP discriminability time series (from 2.3) with each searchlight's discriminability time series (from 3.2) using Spearman's Rank correlation. The resulting rs value is the IC between the seed and searchlight.\nAssign each searchlight's IC value to the searchlight's central voxel and write out the resulting individual's brain map.\n5. Calculate Group Statistical Map\nIf the data are not already in standardized space (e.g., Talairach or MNI), transform participants' IC maps into the same space.\nOptionally smooth the individuals' searchlight maps.\nCreate a group statistical map using a one way t-test for whether each searchlight's IC value is significantly greater than zero.\n6. Test Significance\nNote: Numerous approaches exist for determining statistical significance of fMRI group maps. As a permutation test can determine significance with minimal assumptions, while accounting for the dataset's level of smoothing (as each permuted group map undergoes the same processing), this option is outlined below.\nFor each of 1,000 permutations, randomly shuffle the seed's MVP-discriminability values across the time series. Keep adjacent timepoints with temporal autocorrelations (such as timepoints within the same block) together (for example, by shuffling blocks rather than adjacent TRs).",
    "Calculate individuals' IC maps for each permutation (step 4 above).\nGenerate 1,000 permuted group maps: Randomly select one permuted IC map from each participant and conduct a group test on this random set (step 5 above).\nThreshold every permuted group map at a desired threshold (e.g., p < 0.001) and extract the maximum cluster size from the map.\nSort the resulting 1,000 maximum-cluster volumes and identify the cluster size at the 95th percentile (e.g., the 50th largest for 1,000 permutations).\nApply the threshold used in 6.4 (e.g., p < 0.001) and the minimum cluster size from 6.5 to the real (non-permuted) IC group map in order to make it cluster-corrected to p < 0.05. Because every permuted map draws on the same MVP discriminability values (in a different order), this significance map highlights regions with more synchronous discriminability values than expected by chance."
  ],
  "subjectAreas": [
    "Neuroscience"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research"
  ]
}