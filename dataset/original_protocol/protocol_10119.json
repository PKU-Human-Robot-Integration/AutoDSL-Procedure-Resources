{
  "id": 10530,
  "origin_website": "Jove",
  "title": "Three-dimensional Printing of Thermoplastic Materials to Create Automated Syringe Pumps with Feedback Control for Microfluidic Applications",
  "procedures": [
    "1. 3D-printing and Assembly of Syringe Pump\nPrepare and 3D-print the syringe pump components\nDownload the .STL design files from the Supplemental Files of this paper.\n\t\tNOTE: There are six .STL files, titled 'JoVE_Syringe_Clamp_10mL_Size.stl', 'JoVE_Syringe_Platform.stl', 'JoVE_Syringe_Plunger_Connectors.stl', 'JoVE_Syringe_Pump_End_Stop.stl', 'JoVE_Syringe_Pump_Motor_Connector.stl', and 'JoVE_Syringe_Pump_Traveler_Push.stl', in the Supplemental Files. These files correspond to the 3D-printed components of the syringe pump.\nPrepare these files for printing by opening them in a software package dedicated to the conversion of .STL model files to executable instruction sets for the 3D-printer being used. Ensure that the proper software is being used as some printers will require proprietary software, whereas others may be able to print directly from the .STL file.\nPrint the plastic components using acrylonitrile butadiene styrene (ABS) with a high-quality 3D-printer setting. If other common 3D-printing materials are being used, such as polylactic acid (PLA) or other thermoplastic elastomers, make sure that the finished mechanical properties (e.g., elasticity, yield strength) are comparable to ABS.\nDetach the printed parts from the printing platform of the 3D-printer. Remove the printed supporting structure from the finished parts.\n\t\tNOTE: The supporting structure is designed by the printer-specific software used to convert the .STL model files to the executable instruction set for the 3D-printer. The amount and the structure of the supporting material may vary based on the software used.\nSmooth the printed components by sanding any rough edges using sandpaper. For best results, use sandpaper with a grit size of approximately 220. Make sure all components are smooth before assembling.\nEnsure that all seven parts have been printed.",
    "NOTE: These parts have been named the following: (I) Motor Connector, (II) Traveler Push, (III) End Stop, (IV) Syringe Platform, (V) Syringe Clamp, (VI) Syringe Plunger Male Connector and (VII) Syringe Plunger Female Connector. The Roman numeral for each component is referred to in Figure 2A. A detailed list of the mechanical parts for the assembly is found in the Table of Materials.\nAssemble the syringe pump (Figure 2)\nFasten the stepper motor to a threaded rod using a motor shaft Z-axis flexible coupler with set screws. Before continuing, make sure that rotating the stepper motor shaft drives the threaded rod without slippage.\nConnect the syringe platform to the motor connector by firmly pressing the syringe platform's connection pegs into the mating holes on top of the motor connector.\nAttach the assembled part in step 1.2.1 with the part in step 1.2.2 by fastening four 16 mm screws through the motor connector.\nInsert two linear ball bearings and a 0.8 mm hex nut into the openings located on the bottom of the traveler push.\nAlign the threaded rod on the motor connector through the 0.8 mm hex nut in the traveler push.\nInsert the two linear shafts through the traveler push and the motor connector.\nPlace two hex nuts in the hexagonal spaces of the motor connector piece, and then use two 16 mm screws to tighten the connections, securing the linear shafts from moving.\nInsert the ball bearing into the middle opening of the end stop.\nConnect the end stop with the assembled components from step 1.2.7.\nPlace two hex nuts in the hexagonal spaces of the end stop piece, and then use two 16 mm screws to tighten the connections to affix the end stop to the assembly.",
    "Attach the syringe plunger female connector piece to the traveler push piece using two steel lock nuts and two 16 mm screws.\nPlace a 10 mL syringe on the top of the pump. Ensure the head of the plunger is aligned into the notch of the syringe plunger female connector piece and the top of the syringe barrel is fixed into the slot of the motor connector.\nInsert the syringe plunger male connector piece into the syringe plunger female connector. Ensure that there is a tight fit between the male and female components, securing the plunger in place.\nConnect the syringe clamp to the syringe platform using two hex nuts and two 35 mm screws, ensuring the syringe barrel is fixed into the slot of the syringe clamp.\n2. Microfluidic Device Preparation\nFabricate master molds using photolithography\n\tNOTE: A procedure detailing the design and fabrication of master molds for microfluidic device fabrication may be found in previous literature12.\n\t\nUsing the preferred computer-aided design (CAD) software, create the required drawings for a photomask and print it onto a glass or quartz plate.\n\t\tNOTE: Other materials may be acceptable based on the requirements of the mask aligner used. The printing of these photomasks is typically completed by a third-party vendor.\nUse photolithography methods to create a master mold from the photomask. Perform this procedure in a cleanroom environment.\nExpose the fabricated master mold to a fluorosilane vapor in a vacuum desiccator.\n\t\tNOTE: This process facilitates the release of polydimethylsiloxane (PDMS) from the master mold when fabricating microfluidic devices. To treat the master mold, add three drops of fluorosilane to a beaker and place the beaker in a vacuum chamber.",
    "Apply a vacuum for 1 min. Close the vacuum chamber but keep the master mold in the chamber for 30 min to allow for the deposition of fluorosilane. As a safety precaution, perform this procedure in a fume hood to limit exposure to the hazardous fluorosilane vapor.\nFabricate PDMS devices\nWeigh the PDMS pre-polymer in a weigh boat. Although the desired thickness of the final PDMS device may vary, 30 g of pre-polymer works well for a master mold of 100 mm in diameter.\nMeasure and add a curing agent in a 1:10 ratio to the pre-polymer. For a master mold of 100 mm in diameter, add 3 g of a curing agent.\nMix the pre-polymer and curing agent vigorously by hand using a disposable spatula. After 30 s, check that there are small, regularly separated air bubbles in the solution, indicating the pre-polymer and curing agents are well-mixed.\nPlace the master mold in a culture plate and carefully pour the PDMS mixture on top of the master mold.\n\t\tNOTE: The desired thickness of the PDMS device may vary depending on its application.\nDegas the mixture in a vacuum desiccator for 1 hr. Ensure that no bubbles are observable within the mixture. If there are any bubbles present, release the vacuum pressure quickly, and then reapply a vacuum. Allow the mixture to sit for at least 10 min after this procedure.\nMove the PDMS mixture to an oven set at 90 °C. Allow the mixture to cure for 30 min.\nRemove the PDMS from the master mold. Cut the PDMS into the desired dimensions using a razor blade. Wear gloves to limit the PDMS exposure to contaminants.",
    "Punch holes for inlet and outlet ports with a 23 G dispensing needle. To facilitate this process, file the needle with a metal file or sandpaper to sharpen the blunt ends. Ensure that the punctuated cylinder of PDMS is removed from the needle after every puncture.\n\t\tNOTE: Needles with different sizes can be used for punching holes. Ensure the size is slightly bigger than the needles used in step 3 of this protocol.\nWash the PDMS with filtered deionized water and air-dry the PDMS using an air or nitrogen source fitted with a 0.2 µm filter.\n\t\tNOTE: The exact pressure is not critical, and a pressurized gas source from a building's central system works well for this step.\nClean a No. 1 borosilicate cover glass substrate with a surfactant, such as a powdered detergent, and air-dry it using a pressurized air source fitted with a 0.2 µm filter. Clean it thoroughly as cover glass is often coated with a hydrophobic lubricant and is unable to bind to PDMS unless it is properly cleaned.\nUsing pressure-sensitive tape, lightly touch the PDMS to remove any residual dust. To ensure the molded features are not compromised, do not press with large amounts of force on the tape.\nPlace the PDMS device and a cleaned cover glass into an oxygen plasma cleaner for 1 min. Ensure the color from the plasma cleaner chamber is bright magenta during the process. Make sure that the PDMS device has its molded features exposed, face-up, in the plasma cleaner.\nTake the PDMS and the cover glass from the plasma cleaner and place the cover glass, face-down, onto the PDMS device.",
    "NOTE: This will cause the cover glass and the PDMS to bond almost immediately. If the binding is not visible, gently press the cover glass to the PDMS in a section of PDMS devoid of molded features. This should cause bonding to occur between the PDMS and the cover glass.\nPut the PDMS device in an oven at 90 °C for at least 12 h to ensure the PDMS and the cover glass are well-bonded.\n3. Feedback-controlled Syringe Pump System Assembly\nRemove an appropriate amount of the length of the wire insulation and shielding from a pressure sensor's electrical cable using a razor. Be gentle when cutting to ensure the wires are not compromised above the desired length. Once the insulation and shielding are removed, connect the wires to male rectangular connectors.\nUsing a similar approach to the previous step, remove 1 - 2 cm of the wire insulation from a stepper motor's leads and connect the wires to male rectangular connectors.\nAffix the syringe onto the inlet side of the pressure sensor. Connect a 22 G dispensing needle onto the outlet side of the pressure sensor.\nSlide one end of 0.51 cm diameter tubing over the 22 G dispensing needle attached to the pressure sensor.\nSlide the other end of 0.51 cm diameter tubing over a 22 G dispensing needle that can be connected to the microfluidic device. Connect the needle to the inlet port of the microfluidic device.\nConnect the outlet port of a microfluidic device to a waste disposal reservoir using a 22 G needle and 0.51 cm diameter tubing, similar to the inlet port's connection.\nAssemble the electronic circuit on a prototyping breadboard according to the diagram in Figure 3.",
    "NOTE: This breadboard serves to condition the signal from the pressure sensor to be monitored by a microcontroller. Other compatible microcontrollers may be used to monitor the pressure sensor signal.\nConnect the wires from the stepper motor with the stepper motor driver. Connect the wires from the pressure sensor and the stepper motor driver with the breadboard according to the schematic in Figure 3. The exposed wires from the pressure sensor are color-coded and should be connected as follows: red should connect to V+, black should connect to V-, green should connect to Signal+, and white should connect to Signal-.\nConnect the output signal from the breadboard with the analog input pin on the microcontroller.\nConnect the logic input pins from the stepper motor driver with the digital pins on the microcontroller. The STEP input on the stepper motor driver is connected with a pulse width modulated (PWM) port of digital pins on the microcontroller, denoted by a '~' sign.\nConnect the power supply with the breadboard according to the diagram in Figure 3. Set the power supply to 10 V for the breadboard and the stepper motor driver.\n4. Pressure Sensor Calibration\nNOTE: Based on the amplifier chosen in this paper, the formula to calculate the gain is G = 5 + (200k/RG) with RG = R1 and G = amplifier gain. The amplifier gain here is approximately 606. This value can be changed by changing the resistance used for R1. In addition, as the logic level of the microcontroller board is 5 V and the instrumentation is powered with 10 V, a simple voltage divider circuit, R2 and R3, is used to safeguard the output signal to be no more than 5 V.\nDownload and install the appropriate integrated development environment (IDE) for the microcontroller.",
    "Download the controller code titled 'Pressure_Sensing.ino' from the Supplemental Files. Use this code is to acquire the pressure signal from dual pressure sensors.\n\tNOTE: The microcontroller and controller code used in this paper include analog input pins with a 10-bit resolution which read the analog signals from the pressure sensor every 200 ms to actuate the stepper motors. The number in the bracket of analogRead() corresponds to the analog input pin connected to the output signal from the voltage divider circuit in the pressure sensor circuit in Figure 3. The delay variable represents the interval at which the signal is reevaluated and the output accordingly, in ms.\nApply known pressures to the inlet of the sensor with the outlet capped and measure the resulting output signal.\n\tNOTE: A simple method to calibrate the pressure sensor uses a reservoir with water held at varying heights. The resulting gravitational pressure detected will allow one to calibrate the pressure sensor.\nPlot the diagram with the calibration pressure applied (Pa) on the x-axis and the pressure signal (V) on the y-axis to get a numerical value of the y-intercept.\nApply this numerical value in the controller code, such as the sensor1Offset and sensor2Offset variables in the 'Dual_Pump_PID_Control.ino' code of the Supplemental Files, to calibrate the pressure value in the feedback control system.\n5. Capturing Images from the Microfluidic Device\nConnect a microcontroller to an open-source single-board computer via a serial interface so that the image captured by the microcomputer triggers pressure measurements to be taken by the microcontroller.\nConnect a camera module made for the single-board computer to one of the eye-pieces of a stereomicroscope. Here, a 20X magnification is used to image the microfluidic devices.\n6. Controlling Syringe Pressure Pumps",
    "Open the IDE for the open-source microcontroller. Download the Timer.h13 and AccelStepper.h14 libraries to the microcontroller's IDE library directory.\nDownload the controller code titled 'Dual_Pump_PID_Control.ino' from the Supplemental Files. This code is used to control the feedback-controlled syringe pump system with two pumps.\nProgram the controller code so that it fits the experiment being conducted. Modify the control parameters or the timing parameters to fit the desired response and duration of the experiment. Compile and upload the code to the microcontroller before running the experiment.\n\tNOTE: In the controller code, setPoint1/2 values are used to change the pressure level and stepper1/2Out values are used to adjust the pump speed. The last two values in the AccelStepper stepper1/2 column correspond to the port number on the microcontroller. The milliTiming variable dictates the frequency of reading the analog signal from the pressure sensors and the printTiming variable dictates the frequency of outputting speed and pressure values to a serial monitor for inspection. All units are in ms. The maxError variable is determined from the logic level of the microcontroller board. A value of 5 is used here as the microcontroller in this protocol is 5 V.\nTurn on the power supply for the syringe pumps system. Set the voltage to 10 V for the stepper motor power supply.\n7. Tuning the PID Controller Parameters\nNOTE: The ideal controller parameter values may vary depending on the application and the microfluidic device geometry. For example, for long-term studies (hours), a lower proportional constant (Kp) may be preferable to minimize overshoot at the expense of response time. These tradeoffs depend on experimental conditions and objectives.\nTune the controller, using a manual approach, by first adjusting the proportional constant (Kp) to improve the response time of a step function.",
    "NOTE: Although algorithmic approaches may be used, manual tuning works for the microfluidic applications shown in this paper.\nNext, alter the integral (Ki) and differential (Kd) parameters to minimize the overshoot and ensure a set-point stability.\nSet the PID values for the Kp, Ki, and Kd variables in the controller code of the Supplemental Files.\nSubscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Bioengineering"
  ],
  "bigAreas": [
    "Bioengineering & Technology"
  ]
}