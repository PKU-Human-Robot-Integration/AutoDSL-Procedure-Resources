{
  "id": 1640,
  "origin_website": "Cell",
  "title": "Protocol for using NoBadWordsCombiner to merge and minimize “bad words” from BLAST hits against multiple eukaryotic gene annotation databases",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nPreparing the NCBI-NR and UniProtKB/Swiss-Prot protein BLAST-search result files\nTiming: ∼2 days (depending on the amount of the data, computing power, and Internet speed.)\nUpload protein BLAST-search result files from your genome of interest in tab-separated values (tsv) format as the input files (Tables 1[href=https://www.wicell.org#tbl1] and 2[href=https://www.wicell.org#tbl2]) of NoBadWordsCombiner. This protocol will go over how to acquire local BLAST-search results via an example FASTA file. The example file as well as the hands-on tutorial (Online_NoBadWordsCombiner Tutorial.pdf) can be acquired from GitHub under the tutorial directory (Figure 1[href=https://www.wicell.org#fig1]A).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1104-Fig1.jpg\nFigure 1. The NoBadWordsCombiner home page\n(A) The GitHub web interface of this tool.\n(B) Uploading the necessary input files.\n(C) The interface of running the tool.\n(D) The output example of the tool.\nNote: You can ignore this step and proceed with your own protein data set if you know how to acquire the appropriate BLASTP search results.\nDownload the BLAST package and FASTA file. A BLAST-search result example file is found in the ZIP file in the GitHub ‘tutorial’ directory under the name NoBadWordsCombiner_file_examples.zip (Figure 1[href=https://www.wicell.org#fig1]A). Also, the ‘blastdbv5-user-guide.pdf’ document in the GitHub ‘tutorial’ directory contains complementary vignettes to help guide users.\nDownload the BLAST Package via https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/[href=https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/]. Please select the appropriate version based on your computer operating system (Windows, MacOS, or Linux)\nUnzip the ‘NoBadWordsCombiner_file_examples.zip’ file; the file named ‘Chlamydomonas_UWO241_protein.fasta’ is the example FASTA file.\n# Display the first ten rows of the FASTA file.\n> head Chlamydomonas_UWO241_protein.fasta\n>g1.t1\nMAATVENVVERVKSFSSVVRGVKSGKPDGATTQLVQETIEILATYCDFEEVVPV\nCLKFLDEVLTAAPQTSTLIRLEGGAK\nIFPSIIRNFMGVDASILALCAKVMCKCASGSPAMQHHLVKEKGLPTLLLSCCSA\nHAGEPAVVGPLLEVLVALARYSKGAT\nALSNANLVHACKELLVGLMGHWHAFGMVLKLIKSVMKHEGPCLAALKAGEVVRL\nLLGVARLVSRMPDQRKLLKRASRTLW\nVLSQRSLHPLPEMELNWPHTHTHTHTHTHTHT\n>g2.t1\nMMMLAYRFGFTTLMYATVKGHADAMRLLLKHPSADTAAMMMLTDIRGCTALMFA\nAQDGHVNAIRMLLDHPSADVAARIAV\nRSTVGISALTSAAGFAAGQPTLSRRASPARSCTPLLFLLRRVAVEPQLCDTQ\n>g3.t1\nMVPTDGARHGWTATSLPAILGAASHAKITVQQLVVGGPPPSCPYGPEIVGRSLS\nLFSKSAKTWDRAPGGVVSAFCAATGE\nSet up the manually curated UniProtKB/Swiss-Prot database and computationally calculated NCBI-NR database.",
    "The ‘uniprot_sprot.fasta.gz’ file can be downloaded directly from https://www.uniprot.org/downloads[href=https://www.uniprot.org/downloads]. When downloading, choose Reviewed (Swiss-Prot) in FASTA format under the parent directory. The NCBI-NR BLAST v5 databases can be accessed via https://ftp.ncbi.nlm.nih.gov/blast/db[href=https://ftp.ncbi.nlm.nih.gov/blast/db]. Some necessary files (e.g., nr.00.tar.gz, nr.00.tar.gz.md5, and nr.01.tar.gz) can be automatically downloaded via a custom Perl script at step 2c.\nThe ‘makeblastdb’ command will construct a protein database by taking in the FASTA file with the parameter (-in), setting up the database type (e.g., protein) with the parameter (-dbtype protein), and titling the name of database (e.g., uniport_prot_database) with parameters (-title database_name). The ‘-out’ option will yield the database output name (e.g., uniport_db).\n# Note: if your FASTA data are represented by nucleotides, you can\nchange the database type with the parameter (-dbtype\nnucl)\n> ./makeblastdb -in uniprot_sprot.fasta -dbtype prot -\ntitle uniprot_prot_database -out uniprot_db\nTo download the NCBI-NR v5 databases, use the Perl script ‘update_blastdb.pl’, which is in the downloaded BLAST+ package (https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/[href=https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/LATEST/]). # This command will download the NCBI-NR database (https://ftp.ncbi.nlm.nih.gov/blast/db/v5[href=https://ftp.ncbi.nlm.nih.gov/blast/db/v5]) with the name ‘nr’ without using the makeblastdb command to redo it. It could take minutes to hours for processing, depending on the speed of the Internet.\nUsers can first check all available databases via the command below.\n> perl update_blastdb.pl --blastdb_version 5 –\nshowall\n# This will give the results like this:\n# Connected to NCBI; downloading BLASTDBv5\n# human_genome\n# landmark\n# …\nUsers can then run the command below to download the nr database, which includes 55 volumes of data (>100 Gb). Alternatively, users can manually download these 110 files (i.e., nr.00.tar.gz, nr.00.tar.gz.md5, etc.) from the link: https://ftp.ncbi.nlm.nih.gov/blast/db/v5[href=https://ftp.ncbi.nlm.nih.gov/blast/db/v5].\n> perl update_blastdb.pl --blastdb_version 5\nnr --decompress\n# This will bring the results like this:\n# Connected to NCBI; downloading BLASTDBv5\n# Downloading nr (55 volumes) ...\n# Downloading nr.00.tar.gz...\n# Downloading nr.00.tar.gz.md5\n#...",
    "Use the BLASTP search option to blast the amino acid sequences against the uniport_db and nr_v5 databases. The BLASTP command can do the protein similarity search by searching the query file (Chlamydomonas_UWO241_protein.fasta) against the protein database created from the former step with default parameters, such as ‘-evalue’ (indicating the significance of the BLAST hits), ‘-outfmt’ (meaning the format of the BLAST result), and ‘-out’ (telling the file name of the output file; e.g., BLASTP_UWO241_uniprot.xml).\n>./blastp -query Chlamydomonas_UWO241_protein.fasta -db\nuniprot_db -out BLASTP_UWO241_uniprot.xml -evalue 1e-5 -\noutfmt 5\nThe BLAST XML file (-outfmt 5) can include useful information compared to the BLAST Tabular file (-outfmt 6), such as the aligned sequence, the sequence of the hit, and the description of hits in the database. However, the XML format is not human-readable. Users will need to employ a commonly used parser (Blastxml_to_tabular.py) (Cock et al., 2015[href=https://www.wicell.org#bib4]), which is a custom python script, to convert a BLAST XML file to a desired tabular output (tab-delimited file).\nUsers can first download the script Blastxml_to_tabular.py via the link from the key resources table[href=https://www.wicell.org#key-resources-table]. Then run the command below.\n> python blastxml_to_tabular.py -c\nqseqid,qlen,salltitles,sseqid,slen,bitscore,qframe,\npident,evalue,qstart,qend,sstart,send,length\nBLASTP_UWO241_uniprot.xml >\nBLASTP_UWO241_uniprot.tsv\nThe parameters behind the option ‘-c’ in the Blastxml_to_tabular.py script will yield desired columns in the output tab-delimited file. For example, ‘qseqid’ refers to query sequence ID and ‘qlen’ refers to query length. These desired parameters will create a 14-column table (e.g., Tables 1[href=https://www.wicell.org#tbl1] and 2[href=https://www.wicell.org#tbl2]).",
    "To speed up the NCBI BLAST search, users can specify one or more (comma-delimited) taxids, or a file containing multiple taxids on the command-line. For example, to search against the Chlamydomonas reinhardtii (Taxonomy ID: 147) and Chlamydomonas eustigma (Taxonomy ID: 57939) nuclear genomes, use the command shown below. Also, we recommend that users browse the ‘blastdbv5-user-guide.pdf’ document in the GitHub ‘tutorial’ directory to familiarize themselves with the creation of either taxids or taxidlist.\n>./blastp -query Chlamydomonas_UWO241_protein.fasta -db\nnr –taxids 147,57939 -out BLASTP_UWO241_NCBI-NR.xml -\nevalue 1e-5 -outfmt 5\n# Multiple taxonomy IDs are delimited by ','.\n#Similar to Step 2e, the BLASTP_UWO241_NCBI-NR.xml file\nwill be converted to BLASTP_UWO241_NCBI-NR.tsv via the\ncommand below.\n> python blastxml_to_tabular.py -c\nqseqid,qlen,salltitles,sseqid,slen,bitscore,qframe,pide\nnt,evalue,qstart,qend,sstart,send,length\nBLASTP_UWO241_NCBI-NR.xml > BLASTP_UWO241_NCBI-NR.tsv\n# The option ‘-c’ refers to the desired output columns\nwhich can be set in comma-delimited format (e.g.,\nqseqid,qlen,salltitles)\nCritical: Make sure to use the BLASTP option, which allows for greater sensitivity. The BLAST output parameter must be in format 5. Users can adjust the parameter of the E-value, but we recommend that it be no greater than 1e-5 (to ensure accurate predictions). Troubleshooting 1[href=https://www.wicell.org#sec6.1].\nThis will give two BLAST result files formed by 14-column spreadsheets, including key information, such as query name and percentage identity.\nThe 14-column explanation of parsed BLAST search result files (Tables 1[href=https://www.wicell.org#tbl1] and 2[href=https://www.wicell.org#tbl2]).\nQueryAcc (e.g., g2.t1)\nQuery_Length (e.g., 399)\nHitDescription (e.g., ankyrin, partial [Anaeromyces robustus])\nHitName (e.g., gi|1183350135|gb|ORX78377.1|)\nHitLength (e.g., 235)\nHitBits (e.g., 65.4698)\nHSP_rank (e.g., 1)\n%ID (e.g., 40.2298851)\neValue (e.g., 3.61E-10)\nQuery_Start (e.g., 19)\nQuery_end (e.g., 279)\nHit_start (e.g., 18)\nHit_end (e.g., 96)\nHSP_length (e.g., 87)\nIf users want to upload different BLAST files or mistakenly submitted an incorrect file, they can reload the browser page or simply overlap with another file. Troubleshooting 2[href=https://www.wicell.org#sec6.3]",
    "Preparing the gene name list and a gene list with KO annotations from the KEGG database\nTiming: ∼3 h (depending on the queuing time of GhostKOALA)\nUsers can retrieve the third and fourth files from the genome FASTA file and the KEGG database, which include the correlation of the KO accession with each gene model identifier (Figure 1[href=https://www.wicell.org#fig1]B). The gene name file is the baseline to merge all the different functional annotations.\nUsers can acquire the gene name list file by the following command lines. We use the FASTA file from the UWO241 genome as an example (Table 3[href=https://www.wicell.org#tbl3]). # ‘grep’ is the command used in the dash shell to grasp each line containing the word pattern of ‘>’. ‘sed’ is used to substitute all the ‘>’ into none, which generates a clean name list file.\nUsers can first test the function of grep via the command below:\n> grep “>” Chlamydomonas_UWO241_protein.fasta| wc\n# This should turn out the results as follows:\n# 16325 16325 168617\nUsers can then carry out the following step to acquire a gene name file.\n> grep “>” Chlamydomonas_UWO241_protein.fasta | sed\n‘s/>//g’ > UWO241-gene_name_list.txt\nAs for a gene list with KO annotation, users have the option to use the GhostKOALA (genome size ≥ 300MB) or BlastKOALA analysis tool of KEGG to acquire the KO annotation file of the genome (https://www.kegg.jp/ghostkoala/[href=https://www.kegg.jp/ghostkoala/]). Below, we provide the necessary steps for using the tools:\nBlastKOALA accepts a smaller dataset and is suitable for annotating high-quality genomes.\nUpload the query amino acid sequences in FASTA format.\nEnter the taxonomy group of your genome.\nEnter the KEGG GENES database file to be searched.",
    "Enter your email address. An email will be sent to you for confirmation of your input data. Click the link in the email to initiate your job; you will receive another email once it is finished.\nGhostKOALA accepts larger datasets (e.g., 300 Mb) and is suitable for annotating metagenomes.\nUpload the query amino acid sequences in FASTA format.\nEnter the KEGG GENES database file to be searched.\nEnter your email address. Same as above (7d).\nFrom the email link of KEGG, users can download the gene list with the associated KO annotations. The format of the output file is referred to in Table 4[href=https://www.wicell.org#tbl4]. Explanation of the 2-column input file for KO accession (Table 4[href=https://www.wicell.org#tbl4]):\nGene identifier (e.g., g59.t1)\nKO accession (e.g., K10849)\nUse the GhostKOALA or BlastKOALA analysis tool of KEGG to acquire the KO annotation file of your genome (https://www.kegg.jp/ghostkoala/[href=https://www.kegg.jp/ghostkoala/]). We provide an example of a KO annotation file under the GitHub directory of the tutorial with the name NoBadWordsCombiner_file_examples.zip. Troubleshooting 3[href=https://www.wicell.org#sec6.5]\nPreparing the InterProScan search result file\nTiming: ∼3 h\nUpload an InterProScan search result file of your genome in tab-delimited format as the fifth input file (Table 5[href=https://www.wicell.org#tbl5]). Users must individually download and install InterProScan to acquire the input file for the NoBadWordsCombiner tool. The latest InterProScan documentation can be found via the link https://interproscan-docs.readthedocs.io/en/latest/index.html[href=https://interproscan-docs.readthedocs.io/en/latest/index.html]. Here, we provide the necessary steps for using InterProScan:\nInstallation requirements:\nInterProScan is developed to run on Linux and no versions are planned for Windows or Apple (MAC OS X) operating systems.\nSoftware requirements: 64-bit Linux; Perl 5; Python 3; Java JDK/JRE version 11.\nObtaining the core InterProScan software (Direct link: ftp://ftp.ebi.ac.uk/pub/software/unix/iprscan/5/5.51-85.0/interproscan-5.51-85.0-64-bit.tar.gz).\nNote: this is a large file (around 8 Gb).\nRunning InterProScan:\nOnce the InterProScan package is uncompressed, it can be run directly from the command line.",
    "#If run this script with no arguments, the usage\ninstructions will be presented.\n>./interproscan.sh\nRun the shell script below:\n# interproscan.sh is the command taking in the input\nfile with parameter (-i) and setting up the format of\noutput file (e.g., tsv format). ‘-dp’ is to ensure all\nthe database matches proceeded in local environment.\n>./interproscan.sh -i\nChlamydomonas_UWO241_protein.fasta -f tsv -dp\nOutput files:\nInterProScan should run without any warning, and it will create a tsv output file (i.e., Chlamydomonas_UWO241_protein.fasta.tsv) containing several member database matches, including Pfam. For your convenience, an example of an InterProScan search result is found in the ZIP file under the GitHub directory of tutorial with the name NoBadWordsCombiner_file_examples.zip. Troubleshooting 4[href=https://www.wicell.org#sec6.7]\nThe 13-column explanation of InterProScan search result file (Table 5[href=https://www.wicell.org#tbl5]):\nProtein accession (e.g., g5250.t1)\nSequence unique code (e.g., f246997202ceeb0ebfd5ea2f454be9a2)\nSequence length (e.g., 262)\nProtein signature (e.g., Pfam)\nSignature accession (e.g., PF02469)\nSignature description (e.g., Fasciclin domain)\nStart location (e.g., 123)\nStop location (e.g., 259)\nE-value (or score) (e.g., 5.80E-09)\nStatus - is the status of the match (T: true)\nDate - is the date of the run (e.g., 31-03-2019)\nInterPro annotations - accession (e.g., IPR000782)\nInterPro annotations - description (e.g., FAS1 domain)\nNote: Before clicking the submission button, users can select one of nine protein signatures (i.e., Pfam, CDD, Hamap, PRINTS, ProDom, ProSitePattern, ProSiteProfiles, SFLD, or TIGRFAM). We set the Pfam domain parameter as the default in order to collect larger database entries and because it has been widely used in many sequence analysis and genome annotation projects. Users can select other protein signatures, such as CDD, which can utilize 3D structures to decipher sequence structure and functional relationships. The descriptions of the various protein signatures are shown below:",
    "Pfam: A large collection of protein families, each represented by multiple sequence alignments and hidden Markov models (HMMs).\nCDD: Prediction of Conserved Domains Database.\nHamap is a system for the classification and annotation of protein sequences.\nPRINTS: A fingerprint is a group of conserved motifs used to characterize a protein family.\nProDom is a comprehensive set of protein domain families automatically generated from the UniProt Knowledge Database.\nProSitePatterns and ProSiteProfiles: PROSITE consists of documentation entries describing protein domains, families, and functional sites as well as associated patterns and profiles to identify them.\nSFLDs are protein families based on Hidden Markov Models or HMMs.\nTIGRFAMs are protein families based on Hidden Markov Models or HMMs.\nOutput file of the NoBadWordsCombiner tool\nTiming: ∼3 min\nTap the submit button and a pending image will jump out (Figure 1[href=https://www.wicell.org#fig1]C). It usually takes less than three minutes to run with a 200 Mb genome-sized file (Figure 1[href=https://www.wicell.org#fig1]D). Troubleshooting 5[href=https://www.wicell.org#sec6.9]\nThe output of 23-column tab-delimited mega table (Table 6[href=https://www.wicell.org#tbl6])\ntable:files/protocols_protocol_1104_6.csv\nID (e.g., 2)\nGene or QueryAcc (e.g., g2.t1)\nLength or Query_Length (e.g., 817)\nNoBadName_Hit_Des or HitDescription (e.g., 2-5A-dependent ribonuclease OS=Mus musculus OX=10090 GN=Rnasel PE=1 SV=2)\nNoBadName_Hit_Name or HitName (e.g., sp|Q05921|RN5A_MOUSE)\nNoBadName_%ID or %ID (e.g., 34.8837209)\nNoBadName_eValue or eValue (e.g., 4.14E-06)\nNCBI_Hit_Des or HitDescription (e.g., ankyrin, partial [Anaeromyces robustus])\nNCBI_Hit_Name or HitName (e.g., gi|1183350135|gb|ORX78377.1|)\nNCBI_%ID or %ID (e.g., 40.2298851)\nNCBI_eValue or eValue (e.g., 3.61E-10)\nSwiss_Hit_Des or HitDescription (e.g., 2-5A-dependent ribonuclease OS=Mus musculus OX=10090 GN=Rnasel PE=1 SV=2)\nSwiss_Hit_Name or HitName (e.g., sp|Q05921|RN5A_MOUSE)\nSwiss_%ID or %ID (e.g., 34.8837209)\nSwiss_eValue or eValue (e.g., 4.14E-06)\nKEGG_KO (e.g., K03267)\nKEGG_Des (e.g., ERF3, GSPT; peptide chain release factor subunit 3)\nProtein signatures (e.g., Pfam)\nPfam_No (e.g., PF12796)\nPfam_Des (e.g., Ankyrin repeats (3 copies))\nPfam_evalue (e.g., 1.80E-11)\nInterpro_No (e.g., IPR020683)\nInterpro_domain (e.g., Ankyrin repeat-containing domain)",
    "The reason we created two columns for the header (e.g., NoBadName_Hit_Des or HitDescription) is to reduce ambiguity. A uniform header is needed when merging different databases. We also included the percentage identity and E-value for each type of BLAST search result, which can be easily compared. If two BLAST database hit descriptions are both without ‘bad words’, the one with lower E-value will be chosen."
  ],
  "subjectAreas": [
    "Genomics",
    "Sequence Analysis",
    "Bioinformatics"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}