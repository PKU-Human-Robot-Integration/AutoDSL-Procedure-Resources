{
  "id": 11928,
  "origin_website": "Jove",
  "title": "A Data Integration Workflow to Identify Drug Combinations Targeting Synthetic Lethal Interactions",
  "procedures": [
    "1. Retrieving synthetic lethal gene pairs\nData retrieval from BioGrid.\n\t\nDownload the latest BioGRID interaction file in tab2 format from https://downloads.thebiogrid.org/Download/BioGRID/Latest-Release/BIOGRID-ALL-LATEST.tab2.zip either using a web browser or directly from the Linux command line using curl or wget18.\n##download and unpack the latest BioGRID interaction file\n\t\t#download latest BioGRID interaction file using curl\n\t\tcurl -o biogrid_latest.zip https://downloads.thebiogrid.org/Download/BioGRID/Latest-Release/BIOGRID-ALL-LATEST.tab2.zip\n\t\t#unpack the downloaded data file\n\t\tunzip biogrid_latest.zip\n\t\tBG=\"BIOGRID-ALL-3.5.171.tab2.txt\"\n\t\t \nAfter the zip archive has been downloaded, unpack archive must and note the name of the actual dataset file (BIOGRID-ALL-X.X.X.tab2.txt) for subsequent steps. The BioGRID datafile holds interactions of different types that will be filtered in the next step.\n\t\tNOTE: Other sources (e.g. DRYGIN, SynlethDB) holding synthetic lethal interactions exist, as outlined in the discussion.\nFilter for synthetic lethality and negative genetic interactions (Experimental System).\n\t\nUse information in the column “Experimental System” (column number 12) that indicates the nature of supporting evidence for an interaction to identify synthetic lethal interactions.\nRestrict the dataset to entries with a value of either Negative Genetic or Synthetic Lethality. In the same step, filter columns and only retain columns relevant for subsequent analysis steps as listed in table 1 below.\n##restrict the BioGRID interaction file to relevant columns and only retain interactions classified as negative genetic and synthetic lethality\n\t\tcut -d \"^I\" -f 1,8,9,12,16,17 \"${BG}\" \\\n\t\t| awk -F \"\\t\" 'BEGIN{\n\t\tOFS=\"\\t\"\n\t\t}\n\t\t{\n\t\tif(NR == 1){\n\t\tprint $0\n\t\t}else if($4 == \"Negative Genetic\" || $4 == \"Synthetic Lethality\"){\n\t\tprint $0\n\t\t}\n\t\t}' > bg_synlet.txt\n\t\tNOTE: In the code snippets ^I is used to represent horizontal tabs. Additional BioGRID categories such as synthetic growth defect may be included. Other columns of relevance for this workflow are listed in Table 1. BioGRID also retains the scores for individual interactions. Cutoffs may be used to identify strong/high confidence interactions.\ntable:\n﻿0,1",
    "Column number,Column header name\n3,Gene Name\n12,Species\n13,Drug IDs\nTable 1: Relevant columns of the BioGRID datafile.\nIdentify species for which synthetic lethal interactions were reported.\n\t\nDetermine the number of synthetic lethal interaction partner tax-IDs to get an estimate on the number of synthetic lethal interactions being available per organism.\n##count the number of appearances of each tax id in the previously extracted synthetic lethal interactions\n\t\tcut -d \"^I\" -f5,6 bg_synlet.txt | tail -n +2 | tr \"\\t\" \"\\n\" \\\n| sort | uniq -c | sort -r -g\n\t\tNOTE: As a result of step 1, a list of synthetic lethal interactions with gene symbols from organisms in which the interactions were determined. The majority of synthetic lethal interactions have been determined in model organisms. When loading files into a spreadsheet program (e.g., Excel) avoid ruining Gene Symbols19,20.\n2. Translating synthetic lethal gene pairs to human orthologs\nRetrieve human orthologs for relevant model organisms identified in step 1.3.\n\t\nRetrieve human orthologs from Ensembl BioMart21 by linking the respective model organism gene dataset with the human gene dataset. Use the gene symbols denoting the gene in the model organism and orthologous human genes for this task. Use the Ensembl BioMart webservice to automatize the retrieval process and send the query directly to BioMart RESTful access for retrieving the orthologous gene pairs (see example below and Ensembl BioMart Help & Documentation for further details).\n##retrieve human orthologous for Saccharomyces Cerevisiae from Ensembl BioMart by using curl to send the BioMart query directly to the BioMart RESTful access service\n\t\tcurl -o s_cerevisiae.txt --data-urlencode 'query=<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t\t<!DOCTYPE Query>\n\t\t<Query virtualSchemaName = \"default\" formatter = \"TSV\" header = \"0\" uniqueRows = \"1\" count = \"\" datasetConfigVersion = \"0.6\" >\n<Dataset name = \"scerevisiae_gene_ensembl\" interface = \"default\" >\n\t\t<Attribute name = \"external_gene_name\" />\n\t\t</Dataset>",
    "<Dataset name = \"hsapiens_gene_ensembl\" interface = \"default\" >\n\t\t<Attribute name = \"external_gene_name\" />\n\t\t</Dataset>\n\t\t</Query>\n\t\t' \"http://www.ensembl.org/biomart/martservice\"\n\t\tIn order to retrieve the orthologous human genes for other model organisms, replace the value of the name attribute of the first Dataset element with the name of the respective Ensembl dataset and re-execute the query.\n\t\tNOTE: The process of ortholog mapping is well-documented in Ensembl BioMart Help & Documentation (http://www.ensembl.org/info/data/biomart/biomart_combining_species_datasets.html).\nAccess an example BioMart query for human orthologs for Saccharomyces cerevisiae, the top species identified in step 1.3, via the URL http://www.ensembl.org/biomart/martview/9b71da1415aba480a52b8dc7dd554d63?VIRTUALSCHEMANAME=default&ATTRIBUTES=scerevisiae_gene_ensembl.default.feature_page.external_gene_name|hsapiens_gene_ensembl.default.feature_page.external_gene_name&FILTERS=&VISIBLEPANEL=linkattributepanel.\n\t\tNOTE: Other sources (e.g. roundup, oma browser, HomoloGene, inparanoid) for homology mapping exist, as outlined in the discussion section of this manuscript.\nAdd human orthologs to extracted synthetic lethal interactions.\n\t\nJoin synthetic lethal interactions based on organism tax-ID and gene symbol with the orthologous pairs retrieved in step 2.1. For human synthetic lethal interaction pairs either create artificial orthologous pairs for each human gene present in the dataset or make sure that human synthetic lethal interactions are not discarded while joining and transfer the human gene symbols into the newly added columns.\n##collect ortholog mappings in a single file and join with synthetic lethal interaction file\n\t\t#create a target file with headers for collecting ortholog mappings\n\t\techo \"tax_id/gene_symbol^Ihuman_gene_symbol\" > mapping.txt\n\t\t#repeat this step for each model organism, take care to adapt input file name and tax-ID\n\t\t#adds for each ortholog pair in s_cerevisiae.txt a new entry in mapping.txt: The Gene Symbol is prefixed with the tax id to ease subsequent joining with the synthetic lethal interactions file\n\t\tawk -F \"\\t\" 'BEGIN{\n\t\tOFS=\"\\t\"\n\t\torg_tax_id=\"559292\"\n\t\t}\n\t\t{\n\t\tif($1 != \"\" && $2 != \"\"){\n\t\tprint org_tax_id\"/\"$1, $2\n\t\t}\n\t\t}' s_cerevisiae.txt >> mapping.txt\n#create artificial mapping entries for human genes\n\t\tawk -F \"\\t\" 'BEGIN{\n\t\tOFS=\"\\t\"\n\t\thuman_tax_id=\"9606\"\n\t\t}\n\t\t{\n\t\tif($5 == human_tax_id){",
    "print $5\"/\"$2, $2\n\t\t}\n\t\tif($6 == human_tax_id){\n\t\tprint $6\"/\"$3, $3\n\t\t}\n\t\t}' bg_synlet.txt | sort -u >> mapping.txt\n\t\t#add required join keys (tax id/Gene Symbol) to synthetic lethal interactions\n\t\tawk -F \"\\t\" 'BEGIN{\n\t\tOFS=\"\\t\"\n\t\t}\n\t\t{\n\t\tif(NR == 1){\n\t\tprint $0, \"Key Interactor A\", \"Key Interactor B\"\n\t\t}else{\n\t\tprint $0, $5\"/\"$2, $6\"/\"$3\n\t\t}\n\t\t}' bg_synlet.txt > tmp_bg_synlet_w_keys.txt\n#join synthetical lethal interactions with orthologous pairs\n\t\tmerge tmp_bg_synlet_w_keys.txt mapping.txt 7 1 > tmp.txt\n\t\tmerge tmp.txt mapping.txt 8 1 > bg_synlet_mapped.txt\n\t\tNOTE: The merge command used in this example is not a standard Unix command. However, its implementation with the help of the GNU Core Utilities sort and join is straightforward. The command has been introduced to hide the complexity of sorting the files before they can be joined with the command join. An implementation of merge can be found at https://github.com/aheinzel/merge-sh.\nUse of any gene identifier uniquely identifying the gene in a certain namespace for best possible results.\n\t\tNOTE: Step 2 results in a list of synthetic lethal interactions from multiple organisms mapped to human genes.\n3. Mapping synthetic lethal interaction partners to drugs\nRetrieve drug-target pairs from DrugBank.\n\t\nDownload DrugBank data from the downloads section of DrugBank and create an account first if not already created22. Use the CSV file with drug target identifiers (protein identifiers section: https://www.drugbank.ca/releases/latest#protein-identifiers) and the DrugBank vocabulary (open data section: https://www.drugbank.ca/releases/latest#open-data) with DrugBank identifiers and names. Alternatively, extract the required information from the XML database dump.\n##restrict the DrugBank drug target file to relevant columns and only retain entries for human molecular entities\n\t\tDB_TARGETS=\"all.csv\"\n\t\tDB_NAMES=\"drugbank vocabulary.csv\"\n#extract relevant columns and reformat to use tab as column seperator\n\t\tcsvtool col 3,12,13 -u TAB \"${DB_TARGETS}\" > target_to_drugs_agg.txt\nawk -F \"\\t\" 'BEGIN{\n\t\tOFS=\"\\t\"\n\t\t}\n\t\t{\n\t\tif(NR == 1 || $2 == \"Humans\"){\n\t\tprint $1, $3\n\t\t}",
    "}' target_to_drugs_agg.txt > human_target_to_drugs_agg.txt\n\t\tNOTE: DrugBank data is provided in two main formats. The complete database is available as XML file. In addition, the majority of data is made available in a series of comma-separated value (CSV) files.\nBe aware that DrugBank also records non-human drug-targets. The species column (column number 12) can be used to extract human drug-targets.\n\t\tNOTE: For better readability names of the extracted columns are provided in Table 2. Other sources (e.g. the Therapeutic Target Database or Chembl) holding drug-target links exist, as outlined in the discussion section.\ntable:\n﻿0,1\nColumn number,Column header name\n3,Gene Name\n12,Species\n13,Drug IDs\nAdd drug names to drug-targets.\n\t\nSince drug name and drug-target information is provided in two separate CSV files, merge the information from the two files to subsequently add names of drugs targeting a synthetic lethal interaction partner to synthetic lethal interactions. Join the two datasets using the common DrugBank-drug-ID column. Normalize the drug-target dataset first that it only contains a single DrugBank-drug-ID per row, as the initial file may hold multiple DrugBank drug IDs in a row if a protein is targeted by multiple drugs.\n##generate a single file holding drug target gene symbol, DrugBank drug ID and drug name\n\t\t#normalize drug-target dataset\n\t\tawk -F \"\\t\" 'BEGIN{\n\t\tOFS=\"\\t\"\n\t\t}\n\t\t{\n\t\tif(NR == 1){\n\t\tprint $0\n\t\t}else if($1 != \"\" && $2 != \"\"){\n\t\tsplit($2, drug_targets, \";\")\n\t\tfor(i in drug_targets){\n\t\tdrug_target = drug_targets[i]\n\t\tgsub(/ /, \"\", drug_target)\n\t\tprint $1, drug_target | \"sort -u\"\n\t\t}\n\t\t}\n\t\t}' human_target_to_drugs_agg.txt > human_target_to_drug.txt\n#extract relevant columns and reformat to use tab as column separator\n\t\tcsvtool col 1,3 -u TAB \"${DB_NAMES}\" > drugbank_id_to_name.txt\nmerge human_target_to_drug.txt \\\n\t\tdrugbank_id_to_name.txt 2 1 > db_human_drug_targets.txt\n\t\tNOTE: Column one and three in the drugbank vocabulary.csv file hold the DrugBank drug ID and the respective name.",
    "Add drugs targeting synthetic lethal interaction partners to synthetic lethal interaction dataset.\n\t\nJoin the synthetic lethal interaction dataset with the drug-target drug name file generated in the previous step using the gene symbol columns to add drugs to synthetic lethal interactions. Take care to add drug names for both partners of each synthetic lethal interaction.\n\t\t \n##enhance the synthetic lethal interaction file by adding drugs targeting the partners of each synthetic lethal interaction\n\t\tmerge bg_synlet_mapped.txt db_human_drug_targets.txt 9 1 > tmp.txt\n\t\tmerge tmp.txt db_human_drug_targets.txt 10 1 > bg_synlet_mapped_drugs.txt\n\t\tNOTE: Step 3 results in synthetic lethal interaction from multiple organism with their orthologous human genes and drugs targeting these genes.\n4. Establishing the set of currently tested drug combinations in clinical trials\nGet access to ClinicalTrials.gov data.\n\t\nRetrieve information on clinical trials in XML format from ClinicalTrials.gov on either (i) individual trials, (ii) trials resulting from a search query, or (iii) all trials in the database. Alternatively use the resources provided by the clinical trials transformation initiative which also hosts all data from ClinicalTrials.gov in a relational database. See step 4.4 for further details.\n\t\tNOTE: A free account is required to access the cloud-hosted database instance hosted by the clinical trials transformation initiative. In addition, a plsql client is required.\nFocus on interventional trials.\nFilter for trials specific for the indication of interest.\n\tNOTE: ClinicalTrials.gov provides disease names from the NCBI Medical Subject Headings (MeSH) controlled vocabulary. Contrary to submitter provided disease names, the controlled vocabulary allows to efficiently identify trials for the indication of interest. Nevertheless, one must keep in mind that the NCBI MeSH controlled vocabulary is a thesaurus. Therefore, check the MeSH Browser (https://meshb.nlm.nih.gov) if the general indication of interest has any child/narrower terms and include them if appropriate.",
    "Retrieve the identified trials together with the drugs tested in these trials. A query for trials in the general indication of ovarian cancer is provided below.\n##retrieve interventional trials for the general indication ovarian cancer from the clinical trials transformation initiative hosted relational database containing ClinicalTrials.gov data\n\tcat <<EOF |\n\t\\pset footer off\n\tSELECT DISTINCT s.nct_id, s.brief_title, i.intervention_type, i.name\n\tFROM studies s\n\tINNER JOIN browse_conditions c ON(s.nct_id = c.nct_id)\n\tINNER JOIN interventions i ON(s.nct_id = i.nct_id)\n\tWHERE s.study_type = 'Interventional'\n\tAND c.mesh_term IN (\n\t'Ovarian Neoplasms',\n\t'Carcinoma, Ovarian Epithelial',\n\t'Granulosa Cell Tumor',\n\t'Hereditary Breast and Ovarian Cancer Syndrome',\n\t'Luteoma',\n\t'Meigs Syndrome',\n\t'Sertoli-Leydig Cell Tumor',\n\t'Thecoma'\n\t)\n\tORDER BY s.nct_id, i.intervention_type;\n\tEOF\n\tpsql --host=\"aact-db.ctti-clinicaltrials.org\" --username=\"XXX\" --password --no-align --field-separator=\"^I\" --output=\"clinical_trials.txt\" aact\nExtract drug names and map to DrugBank names.\n\tNOTE: While it is tempting to directly use the drug names retrieved from clinical trials of interest one must be aware that intervention names in ClinicalTrials.gov are entered by the submitter as free text. As a consequence, the names are not standardized, brand names may be used instead of the common compound name and there is no guarantee for proper data normalization (e.g. multiple drug names in one entry). In addition, it is common that drugs are submitted with a different intervention type, differing from drug. Therefore, mapping of the retrieved intervention names to DrugBank drug names is best carried out manually.\n\t  ##Obtain a list of interventions used in the previously retrieved set of clinical trials.\n\tcut -d \"^I\" -f3,4 clinical_trials.txt | tail -n +2 | sort -u\n\tNOTE: Columns three and four hold type of intervention and intervention name, respectively.\nComplement with drugs already in clinical use from guidelines\n\tNOTE: Step 4 results in a list of drugs under evaluation/in use for the indication of interest.",
    "5. Identification of drug combinations targeting synthetic lethal interactions\nSearch for synthetic lethal interactions being targeted by two drugs of interest. Restrict the dataset from step 3 to drugs of interest by filtering out lines in the file holding both drug A and drug B.\n##only retain entries for synthetic lethal interactions and drugs triggering them where both partners are targeted by the two drugs of interest (drug_a and drug_b)\n\tawk -F \"\\t\" '{\n\tif( ($12 == drug_a && $14 == drug_b) || ($12 == drug_b && $14 == drug_a) ){\n\tprint $0\n\t}\n\t}' drug_a=\"XXX\" drug_b=\"YYY\" bg_synlet_mapped_drugs.txt\nEnsure that neither of the two drugs alone is targeting both synthetic lethal interaction partners. Check the drug targets of each identified drug in the dataset from step 3.2 and evaluate whether both identified synthetic lethal partners are targets of the specific drug.\n##find all drug target entries for a given drug name\n\tawk -F \"\\t\" '{\n\tif($3 == drug){\n\tprint $0\n\t}\n}' drug=\"XXX\" db_human_drug_targets.txt\n\tNOTE: A drug that would target both synthetic lethal interaction pathways would be toxic to any cell, so theoretically it is not a valuable multi- target agent. That is the reason why this possibility is excluded in this step of the algorithm.\n\t \n6. Testing selected new drug combinations in vitro\nTreat human breast cancer cell lines and human benign mammary epithelial cells cultured in standard in vitro culturing methods in a humidified a 37 °C atmosphere with 5% CO2 with various drug combinations.\nUse media supplemented with fetal bovine serum and penicillin as well as streptomycin sulfate to hinder bacterial infection.\nDilute drugs in solvents such as DMSO or phosphate-buffered saline in at least four different concentrations based on their previously established IC50 (inhibitory concentration) and use them in combination or alone for treatment of cells.",
    "Perform cell viability assays and apoptosis assays such AnnexinV/7-AAD stainings to determine cytotoxic effects caused by treatments.\nMonitor pharmacological inhibition of suspected molecular targets using western blots.\nDistinguish synthetic lethality from purely additive effects calculating the combinatory index (CI) as described by Chou and others23.\nSubscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Cancer Research"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research"
  ]
}