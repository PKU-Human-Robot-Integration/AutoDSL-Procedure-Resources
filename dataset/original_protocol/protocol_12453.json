{
  "id": 14199,
  "origin_website": "Jove",
  "title": "A Method for Investigating Age-related Differences in the Functional Connectivity of Cognitive Control Networks Associated with Dimensional Change Card Sort Performance",
  "procedures": [
    "1. Obtain Approval for Working with Human Subjects\n2. fMRI Data Acquisition\nAcquire fMRI data following procedures suitable for young children (see Raschle, et al.12). Make every effort to limit possible age-related differences in task performance and motion, as these differences introduce unwanted confounds that limit one's capacity to draw inferences about developmentally-relevant differences in brain activation and functional connectivity.\n\tNote: In the current protocol, a repeated-trials version of the DCCS was administered in the form of a block design13. Each run includes two 8-trial switch blocks and two 8-trial repeat blocks, where switch blocks consist of 4 switch trials and 4 repeat trials, and repeat blocks consist of 8 repeat trials. The protocol is perfectly suitable for use with event-related fMRI data. However, block designs are nice to work with when first getting acquainted with ICA, as it is easy to see task modulations in the component time courses.\nPreprocess fMRI data following standard fMRI preprocessing procedures.\n\t\nRealign all functional images to the same orientation and position. Typically, the first functional volume is used as a reference image for all other volumes to be aligned to.\nCoregister the T1-weighted (anatomical) image with the T2*-weighted (functional) scans, so that activation is superimposed onto the correct anatomical location.\nNormalize all of the images to a standardized size, space, and position with the selection of a template brain (e.g. Talairach space). This helps to ensure that homologous regions from different subjects are being compared.\n\t\tNote: Images are warped to Talairach space in the current protocol, although other templates may also be used (for example, MNI {Montreal Neurological Institute} space).\nSmooth all functional volumes in the data set with a 6  to 10 mm smoothing kernel.",
    "Sequester preprocessed volumes into a separate set of directories. Use \"Functional scans\" as the top directory. Within \"Functional scans\" include a separate directory for each participant, and within each participant directory, a separate directory for each run. The data is now ready for ICA analysis.\n3. Group Independent Component Analysis (ICA)\nDownload and install group ICA software. There are a number of toolboxes available for implementing ICA on different types of neurophysiological data, including fMRI. While any toolbox that performs group ICA would potentially be suitable, the one utilized in the current protocol is called GIFT. GIFT was developed by Vince Calhoun and colleagues at the University of New Mexico. The GIFT toolbox is a set of MATLAB scripts that works together with SPM, a well-known fMRI analysis package. Both can be downloaded for free from the internet (GIFT: mialab.mrn.org/software/gift/index.html#; SPM: www.fil.ion.ucl.ac.uk/spm/). Once downloaded, add the GIFT toolbox and all sub-directories to the MATLAB search path and save path file.\nComputing a group ICA on fMRI data using GIFT makes substantial demands on RAM memory. The precise demands on memory will vary depending on the number of participants, the amount of data collected from each participant, and the resolution of the data. To avoid memory issues, it is best to run the ICA analysis on a server. If running the analysis on a local computer, the RAM requirements can be estimated through the use of a script \"icatb_mem_ica.m\" that is part of GIFT.\nSet-up or parameterize the analysis. Do this by modifying a pre-existing batch script called \"Input_data_subjects_1.m\" that is stored in GIFT under \"icatb_batch_files\".\n\tNote: This can also be done by using GIFT's Graphical User Interface. However, it is much easier, with a bit of practice, to set up the analysis by modifying this pre-existing script.",
    "Specify data modality as fMRI\nSpecify Type of Analysis as ICA with ICASSO. This will ensure the ICA is run with the ICASSO procedure. ICASSO estimates the reliability of the decomposition by running the ICA several times starting with different random seeds. It then tests the similarity of each result by means of clustering. Use of ICASSO is recommended as mean of checking the quality of the ICA decomposition, but will considerably extend the time it takes GIFT to complete the analysis.\n\t\t\nTo run the ICA with the ICASSO procedure, select '2' under \"Type of analysis\" and then parameterize the ICASSO procedure in the succeeding lines of the setup file.\nMaximize the performance of the group PCA by choosing '1' under Group PCA performance settings. Consider setting this parameter to '2' should problems of insufficient RAM memory occur.\nTo enable later sorting of resulting components using predictors from a standard SPM design matrix, specify whether or not there are different matrices for different subjects.\nSpecify where the preprocessed functional data are stored and whether an SPM.mat file containing the design matrix is stored together with the preprocessed functional data.\n\t\t\nThe most straightforward way of getting GIFT to read the data is if every participant has the same number of runs, and the data directory is structured as described in Step 2.3 under fMRI data acquisition. If so, then under DataSelectionMethod, chose '1' for Method 1, and complete the parameter \"sourceDir_filePattern_flagLocation\" by including the filepath where the data are stored, the file format of the data, and a statement indicating that individual sessions are stored as subdirectories within each subject folder.\nIndicate the directory where the output of the analysis should be written. Do not write the results to the same directory where the data are stored.",
    "Provide a prefix that will be added to all output files.\nProvide a filepath to a mask. All volumes submitted to ICA are masked. GIFT provides a default mask. For this work, an in-house script to generate a mask from the data that will be submitted to ICA. At a minimum, the mask should eliminate skull, extra-cerebral space, and especially the eyeballs. Signal from eyeball voxels will show very large fluctuations during a run and will therefore have a sizable influence on the structure of the final components. Figure 3 illustrates what a good mask should look like.\nSpecify the type of group PCA to be used. Use 'subject specific.'\nSpecify the back-reconstruction method. In this stage, individual subject IC's and their associated time courses are computed from the results of the group analysis. GICA is recommended for obtaining the best time courses, although there is considerable discussion in the literature on this point.\nSpecify data pre-processing type. Use intensity normalization to avoid non-numerical values (i.e. infinites, and NaN's) in the output. In this example, we chose the default of '1'.\nSpecify the type of PCA (we use standard) and accept default values under PCA Options. GIFT performs a PCA on each run of each participant and retains a number of components equal to the number of sources to be unmixed in the ICA. The PCA serves two important purposes. First, it helps to eliminate sources of noise that are unique to each participant and each run. Second, it makes the computational demands of the analysis more tractable.",
    "Specify how many PCAs to run on the data before the ICA (2 is recommended). As well, specify how many components to retain after each PCA (if running 2, it is recommended that the number of components retained after the first PCA is twice the number retained after the second).\nSpecify how the data should be scaled. For this work, z-score scaling was used.\nChoose a blind source separation algorithm for the ICA. For this work, Infomax was used. GIFT offers a choice of at least 10 different algorithms.\nRemaining parameters can be left as is.\nOnce the ICA is completed, select from among available components those that are of potential theoretical interest. Through the GIFT GUI, choose component selection: spatial sorting sorts the spatial components by means of spatial correlation with a pre-existing template; temporal sorting sorts the component time courses by means of linear predictors from the SPM design matrix that you can store with the data (see 3.3.5).\n\tNote: Both approaches to component selection have utility. However, when working with task data, temporal selection criteria are particularly useful, as they provide a means of verifying that the selected component was activated by the task. In the case of the DCCS, use of temporal sorting can be used to confirm that the selected component was more active during switch blocks than during repeat blocks.\nTest whether child and adult versions of these selected components differ. Aggregate child and adult components of interest into two separate groups and test by means of a two-sample t-test regions where the components vary. This is relatively easy to do through the GIFT GUI.\nSubscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Behavior"
  ],
  "bigAreas": [
    "Ecology & Environmental Biology"
  ]
}