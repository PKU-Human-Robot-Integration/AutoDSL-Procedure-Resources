{
  "id": 3064,
  "origin_website": "Cell",
  "title": "GlycoMME, a Markov modeling platform for studying N-glycosylation biosynthesis from glycomics data",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nHere, the described step-by-step methods are for two purposes as demonstrated in Liang et al.1[href=https://www.wicell.org#bib1] First, a generic Markov model is fitted to the glycomic profiles (glycoprofiles) of a glycoprotein drug produced by different glycoengineered cell lines. By visualizing the biosynthetic models of N-glycosylation, users gain insights into the glycoengineering impact on theoretical glycosylation reactions. Second, one may use the fitted models of single-glycosyltransferase-knockout (single-GT-KO) cell lines to predict the theoretical glycoprofiles of a glycoprotein produced by the cell lines with combinatorial GT knockouts. The glycoprotein whose glycoprofiles are predicted can be a different protein from the glycoprotein whose single-GT-KO glycoprofiles are used for fitting. As examples, we generated sample-specific models for 7 glycoprofiles of glycoengineered erythropoietin (EPO) produced by different single-GT-KO CHO-K1 or wildtype cell lines.22[href=https://www.wicell.org#bib22] We then use a few fitted single-GT-KO EPO models to predict 2 glycoprofiles of EPO produced by the cell lines with combinatorial glycosyltransferase (GT) knockouts. Lastly, we use a few fitted single-GT-KO EPO models to predict 2 glycoprofiles of Enbrel produced by similar CHO cell lines with the knockout impact learned from the EPO models.\nVisualize and preprocess dataset\nTiming: 5 min\nThis step prepares the data in the Data_user.xlsx for usage by MATLAB and visualizes the user-supplied experimental glycoprofiles (glycomic data) and glycan structure annotations (if available). This step can also be used to check the quality of entered data.\nAfter initiating the MATLAB working environment, open the MATLAB script Step1A_Load_Preprocessed_Data_Fitting.m.\nIn the script editor, specify the name of the dataset to be used at line 5.\nNote: “Data.xlsx” is the name for the demonstration dataset and “Data_user.xlsx” is the name for the user-supplied dataset.\n> DatafileName = 'Data.xlsx';",
    "Run the entire script. A figure of the relative glycomic signals and a figure of glycan annotations will be generated for each sample, such as shown in Figure 3[href=https://www.wicell.org#fig3].\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2607-Fig3.jpg\nFigure 3. Visualization of the experimental glycoprofile of EPO produced by the wildtype CHO-K1\n(A and B) (A) relative glycomic profile (B). glycan structures for each annotated m/z values, if provided. (B) will not be generated if no annotation is provided.\nNote: for advanced users, rendering selected glycan annotations only can be achieved by modifying the inputs of function visualizeExpData according to the comments in the script.\nThe pre-processed data are stored in the structure variable DataSet and as MATLAB-readable file Data.mat in the Data folder.\nNote: for advanced users, information regarding the created variables for pre-processed data can be found as comments in the script.\nConstruct a generic N-glycosylation Markov model\nTiming: 10 min\nThis step will generate a generic N-glycosylation Markov model, which will be later used to generate sample-specific models by fitting to the experimental glycoprofiles.\nOpen the MATLAB script Step2A_Create_Generic_Glycan_Network_Fitting.m.\nIn the script editor, specify the name of the dataset to be used in line 4.\n> load Data.mat\nNote: “Data.xlsx” is the name for the demonstration dataset and “Data_user.xlsx” is the name for the user-supplied dataset.\nRun the entire script.\nNote: for advanced users, the scope of the reactions considered can be achieved by modifying the variable RxnSel and the inputs of function CreateGlycanRxnList according to the comments in the script. For practicality, the complexity level of the network should not exceed 23. Complexity level is defined as the maximal number of times a core Man9 glycan is modified by glycosidases and/or glycosyltransferases in a stepwise fashion.",
    "The generic model and fitting parameters are stored in the structure variable GenericNetwork and as MATLAB-readable file GenericNetwork.mat in the Data folder.\nGenerate sample-specific N-glycosylation Markov models by fitting to experimental glycoprofiles\nTiming: 40 h (1 h/fitted model × 15 fitted models per sample (or 30 fitted models for the WT sample) × 7 samples / 3 MATLAB sessions)\nThis step generates sample-specific N-glycosylation Markov models by fitting the generic model with their corresponding experimental glycoprofiles. This is a time-intensive step, and multiple MATLAB sessions can run in parallel to expedite the process.\nOpen the MATLAB script by clicking on Step3A_Fit_Markov_Models_with_WT_Glycoprofile.m in the “Current Folder” panel in MATLAB.\nIn the script editor, specify the name of the dataset to be used in line 4.\n> load Data.mat\nNote: “Data.xlsx” is the name for the demonstration dataset and “Data_user.xlsx” is the name for the user-supplied dataset.\nSpecify the name(s) of the samples (glycoprofiles) to be fitted in line 13. For example\n> ProfSel =\n{'WT','B4galt1','St3gal3','St3gal4','St3gal6','B3gnt2','Mgat2'};\nNote: The name(s) provided here should be the same as the names appearing in the variable DataSet.ProfNames. To fit all the profiles in the dataset, users can instead specify the variable ProfSel as:\n> ProfSel = DataSet.ProfNames;\nSpecify the number of models to be fitted for the wildtype sample (base glycoprofile) in Line 25 and for each of the other samples in Line 23. For Example:\n> num = 5; % Number of models fitted for each profile\n> if strcmp(ProfSel{a},'WT')\n  num = 10; % Number of models fitted for the WT profile\n> end",
    "Note: this is the number of models fitted for each profile per MATLAB session. In this case, 3 MATLAB sessions were run in parallel, with a total of 5 × 3 = 15 models fitted for each single-GT-KO profile and 10 × 3 = 30 models fitted for the wildtype profile.\nSpecify any arbitrary number for IDNum in Line 97. For example:\n> IDNum = 1;\n> savedFileName =\n  ['OptimizationResults_',num2str(IDNum),'.mat'];\nNote: The fitted model parameters are stored in the structure variable OptimizationResults and as MATLAB-readable file OptimizationResults_#.mat in the Data/OptimizationResults folder. Here, number 1 is arbitrarily chosen as the IDNum and OptimizationResults_1.mat will be the file name.\nRun the script.\nNote: After step 14, users may decide whether to run multiple MATLAB sessions in parallel to reduce the time needed to obtain sufficient models for each sample. The memory-intensive optimization process will need approximately 8 GB RAM per MATLAB session. The number of fitted models per hour will be approximately equal to the number of MATLAB sessions. 3 MATLAB sessions were run in parallel for this demonstration. The amount of RAM (% usage) used per MATLAB session can be obtained from the operating system’s task manager while running one session when using the parallel pool in MATLAB. To ensure fitting quality, MATLAB sessions should not collectively utilize >95% RAM.\nOptional: To run a new MATLAB session in parallel, open a new MATLAB session and repeat steps 9–14. It is essential to specify a unique IDNum number at step 13 for each MATLAB session so that the saved files OptimizationResults_#.mat from the different sessions do not overwrite each other.",
    "A message box (Figure 4[href=https://www.wicell.org#fig4]) will show up when the fitting of all the glycoprofiles in a MATLAB session is completed. If multiple MATLAB sessions are opened, close all but one MATLAB session when all runs are completed.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2607-Fig4.jpg\nFigure 4. A message box will appear when fitting is completed in a MATLAB session\nVisualize fitted glycoprofiles from sample-specific models\nTiming: 2 h (approx. 15 min per sample)\nThis step generates figures showing the quality, parameter values (transition probabilities), and other characteristics of the fitted models and glycoprofiles, in comparison to the experimental profile. This step also stores computed features of the fitted models, which are used for prediction purposes in later steps.\nClick on Step4A_Visualize_Fitted_Glycoprofiles.m in the “Current Folder” panel in MATLAB.\nIn the script editor, specify the name of the dataset to be used in line 4.\n> load Data.mat\nNote: “Data.xlsx” is the name for the demonstration dataset and “Data_user.xlsx” is the name for the user-supplied dataset.\nRun the script and generate figures for each glycoprofile.\nCritical: Users can assess the fitted models and glycoprofiles from their corresponding output figures. The figures generated from the fitted models of the wildtype profile (WT) are used as examples:\nGraphs in Figure 5[href=https://www.wicell.org#fig5] allow users to inspect the fitted model parameters (transition probabilities, or TPs) and assess the fitting quality, similarly performed in Liang et al.1[href=https://www.wicell.org#bib1]\nFigure 6[href=https://www.wicell.org#fig6] allows users to inspect which glycan intermediates are theoretically important to generate the experimentally observed glycoprofiles (if the models are well-fitted).\nFigure 7[href=https://www.wicell.org#fig7] allows advanced users to compare additional network parameters by reaction types of the fitted Markov models.\nComputed model features and glycoprofiles are now generated from the fitted Markov models and added as new subfields in the structure variable OptimizationResults.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2607-Fig5.jpg",
    "Figure 5. Visualization of fitted model parameters (transition probabilities) and theoretical glycoprofiles computed from the fitted Markov models for the wildtype EPO glycoprofile\n(A) Boxplot of the log10(transition probabilities) (log10(TP), or the model parameters) of all the fitted Markov models by reaction types. The reaction types are organized in three separate panels depending on where they primarily occur in the three different Golgi compartments represented in the models (cis, medial, and trans). The boxplot data can be inspected in the variable Optimization.WT.xval, where each row represents a fitted model and each column represents a reaction type in the same order of the plot’s (left to right).\n(B) The average of fitted glycoprofiles (Prediction) is compared with the experimental glycoprofile (Experimental). Fitted RMSE represents the root mean squared error between the fitted average and the experimentally measured signals, whereas the random RMSE represents the error between the average signals generated by multiple random models and the experimentally measured signals. Leakage represents the percentage of total signals that are not detected in the experimental measurement. Generally, well-fitted models should meet at least two criteria: Random RMSE should be at least 10 times bigger than the Fitted RMSE and the leakage should be smaller than 10%. The entirety of predicted data can be inspected in the variable Optimization.WT.Predata_noRes, where each column represents a m/z value (or numbering) and each row represents a fitted model.\n(C) The graph shows the predicted major glycoforms at the m/z of fitted signals with top relative intensities as shown in (B). These predicted glycoforms can be cross validated with existing experimental annotations if available.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2607-Fig6.jpg\nFigure 6. An interactive figure generated by MATLAB shows the major intermediate glycans (blue nodes) that are theoretically important to generate the experimentally observed glycans (red nodes)",
    "The size of a node is proportional to the log-scale values of all model fluxes into the node. The glycan that a node represents can be revealed by clicking the node in the MATLAB figure. Each edge represents a reaction (or reactions) required to convert one glycan to another. An edge is only labeled if there is only one reaction converting one glycan to the other.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2607-Fig7.jpg\nFigure 7. Additional network information regarding the fitted models\n(A) model pseudo-fluxes by reaction types and by compartments (left to right, cis, medial, trans-Golgi). The edges of a Markov network are associated with different reaction types, and the summations of all edge weights (models fluxes through the edges) associated with respective reaction types were defined as pseudo-fluxes. The model pseudo-fluxes can be inspected in the variable OptimizationResults.WT.FluxesbyComp.\n(B) model reactant pseudo-concentration for each reaction type and by compartments (left to right, cis, medial, trans-Golgi). For each reaction type, pseudo-concentration is defined as the summation of edge weights of all in-edges into the nodes that represent the glycan substrates of the reaction type. The values can be inspected by clicking the individual bars in the plot.\n(C) Heatmap of model predicted relative glycoform ratios at each m/z values (or numbering of glycans) based on model pseudo-fluxes. The most abundant glycoform at each m/z value is highlighted in red. Each row represents a glycoform and each column represents an m/z value. The heatmap data and the labels can be inspected in OptimizationResults.WT.GlycoformData.\nNote: Please refer to the comments in the script for additional information regarding the subfields. The new OptimizationResults variable is stored as ProcessedModels.mat in the Data folder.\nPredict EPO glycoprofiles following combinatorial GT knockouts from fitted EPO glycoprofiles of single GT knockouts\nTiming: 15 min",
    "This step predicts the EPO glycoprofiles of combinatorial GT knockouts de novo from the fitted EPO glycoprofiles of single GT knockouts.\nClick on Step5A_Conduct_Comparative_Analytics.m in the “Current Folder” panel in MATLAB.\nIn the script editor, specify the name of the dataset to be used in line 4.\n> load Data.mat\nNote: “Data.xlsx” is the name for the demonstration dataset and “Data_user.xlsx” is the name for the user-supplied dataset.\nRun the script.\nClick on Step6A_Predict_glycoprofiles_of_combinatorial_KOs.m in the “Current Folder” panel in MATLAB.\nIn the script editor, specify the name of the dataset to be used in line 4. “Data.xlsx” is the name for the demonstration dataset and “Data_user.xlsx” is the name for the user-supplied dataset.\n> load Data.mat\nNote: “Data.xlsx” is the name for the demonstration dataset and “Data_user.xlsx” is the name for the user-supplied dataset.\nStarting from Line 13, specify EPO glycoprofiles with the desired combinations of isozyme knockouts that will be predicted, along with the wildtype EPO glycoprofile.\n> KnockoutSel = {{'St3gal4','St3gal6'};...\n  {'Mgat2','St3gal4','St3gal6'}};\n> BaseProfSel = 'WT';\nNote: The demonstration specifies two predictions of EPO glycoprofiles from cell lines with St3gal4/St3gal6 double knockouts and with Mgat2/St3gal4/St3gal6 triple knockouts.\nRun the script and generate relevant figures for each predicted glycoprofile.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2607-Fig8.jpg\nFigure 8. Visualization of the predicted model parameters (transition probabilities) and theoretical glycoprofiles computed from the predicted EPO glycoprofile produced by the cell line with Mgat2/St3gal4/St3gal6 triple knockouts\n(A) Boxplot of the log10(transition probabilities) (log10(TP), or the model parameters) of all the fitted Markov models by reaction types. The reaction types are organized in three separate panels depending on where they primarily happen in the three different Golgi compartments represented in the model (cis, medial, and trans).\n(B) The average of predicted glycoprofiles.",
    "(C) The graph shows the predicted major glycoforms at the m/z of predicted signals with top relative intensities shown in (B). Refer to Appendix E of Liang et al.1[href=https://www.wicell.org#bib1] for a complete assessment of the prediction performance of 6 different combinatorial knockouts.\n(D) Heatmap of model predicted relative glycoform ratios at each m/z values (or numbering of glycans) based on model pseudo-fluxes. The most abundant glycoform at each m/z value is highlighted in red. Each row represents a glycoform and each column represents an m/z value. The values of these visualized results can be found in corresponding variables detailed in the Figure 5[href=https://www.wicell.org#fig5] description.\nNote: Figure 8[href=https://www.wicell.org#fig8] shows an example of the predicted EPO glycoprofile produced by the cell line with Mgat2/St3gal4/St3gal6 double knockouts.\nPredict Enbrel glycoprofiles from a combinatorial GT knockout, based on fitted EPO glycoprofiles of single GT knockouts and Enbrel glycoprofile produced in wildtype cells\nTiming: 12 h\nThis step predicts the Enbrel glycoprofiles of combinatorial GT knockouts de novo from the fitted EPO glycoprofiles of single GT knockouts.\nFollowing the same step for data collection (before you begin[href=https://www.wicell.org#before-you-begin], step 10), organize the Enbrel glycoprofile produced by the wildtype cell line (as a demonstration) as the Excel file DrugXData.xlsx.\nClick Step1B_Load_Preprocessed_Data_for_WT_DrugX.m in the “Current Folder” panel in MATLAB and run the script.\nClick Step2B_Create_Generic_Glycan_Network_Prediction_for_WT_DrugX.m in the “Current Folder” panel in MATLAB and run the script.\nClick Step3B_Fit_Markov_Models_with_WT_Glycoprofile_for_DrugX.m in the “Current Folder” panel in MATLAB.\nSpecify the number of models to be fitted for the wildtype glycoprofile of Enbrel in Line 17. For example:\n> num = 10; % Number of models fitted for each profile\nSpecify an arbitrary number for IDNum in Line 31. For example:\n> IDNum = 1;\n> savedFileName =\n  ['OptimizationResults_DrugXWT_',num2str(IDNum),'.mat'];",
    "Note: The fitted model parameters are stored in the structure variable OptimizationResults and as MATLAB-readable file OptimizationResults_#.mat in the Data/OptimizationResults folder. Here, number 1 is chosen and OptimizationResults_DrugXWT_1.mat will be the file name.\nRun the script.\nNote: After step 33, users may decide whether to run multiple MATLAB sessions in parallel to reduce the time needed to obtain sufficient models for the wildtype glycoprofiles of Enbrel. The memory-intensive optimization process will need approximately 8 GB RAM per MATLAB session. The number of fitted models per hour will be approximately equal to the number of MATLAB sessions. 3 MATLAB sessions were run in parallel for this demonstration and took ∼10 h.\nOptional: To run a new MATLAB session in parallel, open a new MATLAB session and repeat steps 9–14. It is essential to specify a unique IDNum number at step 13 for each MATLAB session so that the saved files OptimizationResults_#.mat from the different sessions do not overwrite each other.\nA message box (Figure 9[href=https://www.wicell.org#fig9]) will appear when fitting of all the glycoprofiles in a MATLAB session is completed. If multiple MATLAB sessions are opened, close all but one MATLAB session when all runs are complete.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2607-Fig9.jpg\nFigure 9. A message box will show up when fitting is completed in a ‘MATLAB session\nClick on Step4B_Visualize_Fitted_WT_Glycoprofiles_for_DrugX.m in the “Current Folder” panel in MATLAB. Run the script, and figures will be generated for the fitted wildtype Enbrel glycoprofile.\nNote: Refer to step 18 and the descriptions of Figures 7[href=https://www.wicell.org#fig7] and 8[href=https://www.wicell.org#fig8] for the interpretation of these figures.\nClick on and open Step6B_Predic_glycoengineered_glycoprofiles_of_DrugX.m in the “Current Folder” panel in MATLAB.\nStarting from Line 13, specify EPO glycoprofiles with the desired combinations of isozyme knockouts that will be predicted, along with the name of the wildtype EPO glycoprofile.\n> KnockoutSel = {{'B3gnt2'},…\n  {'B3gnt2','St3gal3','St3gal4','St3gal6'}};",
    "Note: The demonstration specifies two predictions of EPO glycoprofiles from cell lines with B3gnt2 single knockout or with B3gnt2/St3gal3/St3gal4/St3gal6 quadruple knockouts.\nRun the script, and three graphs will be generated for each predicted glycoprofile.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2607-Fig10.jpg\nFigure 10. Visualization of the predicted model parameters (transition probabilities) and theoretical glycoprofiles computed from the predicted Enbrel glycoprofile produced by B3gnt2/St3gal3/St3gal4/St3gal6 quadruple knockouts\n(A) Boxplot of the log10(transition probabilities) (log10(TP), or the model parameters) of all the fitted Markov models by reaction types. The reaction types are organized in three separate panels depending on where they primarily occur in the three different Golgi compartment represented in the model (cis, medial, and trans).\n(B) The average of predicted glycoprofiles.\n(C) The graph shows the predicted major glycoforms at the m/z values of predicted signals with top relative intensities as shown in (B).\nCritical: Figure 10[href=https://www.wicell.org#fig10] shows an example of the predicted Enbrel glycoprofile produced by cell lines with B3gnt2/St3gal3/St3gal4/St3gal6 quadruple knockouts."
  ],
  "subjectAreas": [
    "Biotechnology And Bioengineering",
    "Bioinformatics",
    "Systems Biology"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}