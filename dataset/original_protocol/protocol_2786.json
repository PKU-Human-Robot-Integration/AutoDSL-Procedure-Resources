{
  "id": 2945,
  "origin_website": "Cell",
  "title": "Protocol to determine antibody affinity and concentration in complex solutions using microfluidic antibody affinity profiling",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nConjugation of protein with fluorescent label\nTiming: 1–2 days\n      The first critical step to determining the affinity of an antibody to the\n      target antigen of interest (e.g., the SARS-CoV-2 RBD used in this study)\n      is the proper conjugation of the antigen with the correct fluorophore.\n      Here, we detail all the steps required to obtain a high-quality labeled\n      antigen (schematically summarized in Figure 1[href=https://www.wicell.org#fig1]).\n    \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2484-Fig1.jpg\n          Figure 1. Workflow to effectively conjugate an antigen with Alexa\n          Fluor™ 647 for use in a MAAP assay that will determine the affinity\n          and concentration of the labeled antigen to its target antibody\n        \n          (A-C) The target protein is solubilized in PBS and conjugated with\n          Alexa Fluor 647 dye.\n        \n          (D-F) Purification is conducted on an AKTA Pure System, fractions of\n          the eluted Alexa 647-conjugated target protein are collected, and the\n          molar label:protein ratio is calculated on a Nanodrop.\n        \n          (G-H) For those fractions for which the dye:protein ratio is close to\n          1, the Rh is measured (G). The fractions where Rh is close to 3.5 nm are pooled, concentrated, and stored.\n        \n        Dissolve 1 mg of Alexa Fluor™ 647 NHS ester in 80 μL of dimethyl\n        sulfoxide (DMSO) to prepare a 10 mM solution.\n      \nCritical: Due to the hygroscopic\n      properties of DMSO, always ensure to use a fresh, unopened vial of DMSO\n      and do not re-use once open. Instead, prepare 100 μL aliquots of DMSO and\n      store at −20°C, but do not re-freeze once it has been thawed.\n    \n        Dissolve 8.4 g of sodium bicarbonate (NaHCO3) in 95 mL of\n        ultrapure water and adjust the pH to 8.3 using 1 M HCl. Thereafter, add\n        ultrapure water to a final volume of 100 mL to prepare a 1 M labeling\n        buffer solution.\n      \nNote: The storage temperature of the",
    "labeling buffer solution is at −20° Celsius and its storage up to 180 days\n      or longer.\n    \n        Using 100 μg of the protein probe (e.g., SARS-CoV-2 RBD), solubilize the\n        protein to a minimum concentration of 0.5 mg · mL−1 in PBS\n        buffer (pH 7.4).\n      \nCritical: If the protein probe is\n      dissolved in a buffer which contains primary amines (e.g., Tris) make sure\n      to exchange into PBS buffer prior to labeling. This can be achieved by\n      using a Zeba™ chromatography desalting cartridge.\n    \n        Add the 1 M labeling buffer to the protein probe solution to a final\n        concentration of 200 mM by adding 20 μL of the labeling buffer to 100 μL\n        of the protein solution.\n      \n        Then add the Alexa Fluor™ label stock solution to the protein probe at a\n        molar label:protein ratio of 3:1 and allow the labeling reaction to\n        incubate overnight at 4°C.\n      \nNote: Considering that the label is\n      dissolved in DMSO, ensure that the final concentration of the label stock\n      solution in the label reaction does not exceed 1.8% (v/v) otherwise the\n      DMSO could interfere with the structural integrity of the probe. Moreover,\n      to avoid photobleaching of the dye ensure to keep the reaction mixture in\n      a dark environment.\n    \n        Using a Superdex 75 Increase 10/300 column (Cytiva) that is coupled to\n        an ÄKTA™ Pure Protein Purification System (Cytivia) pass the reaction\n        mixture through the column to separate the free Alexa Fluor™ 647 dye\n        from the labeled protein solution by size-exclusion chromatography (SEC)\n        and collect 100 μL fractions of the eluted protein.\n      \nNote: Depending on the purity or\n      homogeneity of the protein sample the free dye can alternatively be\n      removed from the protein sample by using a Zeba™ desalting column (Thermo\n      Scientific). However, the use of a SEC column is advantageous to",
    "simultaneously remove the free dye and purify the protein as a polishing\n      step.\n    \n        Using a Nanodrop One (Thermo Scientific) determine the concentration of\n        both the protein probe and conjugated label in each fraction using a\n        wavelength of 280 nm and the Alexa Fluor™ 647 setting on the instrument,\n        respectively.\n      \nNote: When measuring the protein\n      concentration ensure that the sloping dye correction and analysis\n      correction function on the Nanodrop are disabled.\n    \n        Based on the measured protein yield (in mg · mL−1), convert\n        the protein concentration to molarity and determine the labeling ratio\n        by looking at the protein: dye concentration ratio.\n      \nNote: For globular proteins such as RBD,\n      the molecular weight can be converted to the hydrodynamic radius assuming\n      the protein adopts a compact, globular fold using the online calculator\n      tool provided\n      here[href=https://www.fluidic.com/toolkit/hydrodynamic-radius-converter/], or a PDB structure can be used to predict a hydrodynamic radius using\n      the online tool provided\n      here[href=https://www.fluidic.com/resources/Toolkit/hullrad-calculator/].\n    \nCritical: Some proteins carry\n      posttranslational modifications and do therefore have a larger\n      hydrodynamic radius when measured by MDS. While the expected Rh based on the nominal molecular weight of RBD would be\n      2.5 nm, it is experimentally measured to have 3.5 nm due to glycosylation.\n    \n        The Fluidity One-M instrument measures the hydrodynamic radius (Rh) of the fractions with labeling ratios of 0.5–2. The\n        measured Rh – here – should be around 3.5 nm.\n      \n        Pool those fractions with a measured Rh ∼ 3.5 nm,\n        concentrate the sample using a 10 kDa Amicon® Ultra Centrifugal Filter\n        unit and measure the final protein and dye concentration using a\n        Nanodrop One (Thermo Scientific). The final concentrated and labeled\n        sample should be stored at –80°C in PBS (pH 7.4) containing 10% (w/v)\n        glycerol as a cryoprotectant.\n      \n      Affinity and concentration determination using Fluidity One-M\n    \nTiming: 2–3 h per sample and antigen",
    "First prepare the buffer solution used in the protocol (Figure 2[href=https://www.wicell.org#fig2]A).\n    \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2484-Fig2.jpg\n          Figure 2. Workflow for preparing serum samples for a MAAP assay that\n          will be analyzed by MDS on the Fluidity One-M (Fluidic Analytics)\n        \n          (A) A serum or plasma sample is thawed and centrifuged at 14,000 xg\n          for 10 min.\n        \n(B) The serum stock samples are prepared using Viscomatch buffer.\n          (C) The flow buffer dilutions and serum samples containing the probe\n          protein are prepared.\n        \n(D) The Fluidity One-M chip plate is loaded for analysis.\n        To prepare a viscomatch buffer (PBS, 5% (w/v) human serum albumin (HSA)\n        and 10% (w/v) glycerol, pH 7.4), weigh 5 g of glycerol and dissolve in ∼\n        15 mL of PBS (pH 7.4). Transfer the resuspended glycerol to a 50 mL\n        falcon tube containing 2.5 g of HSA and add PBS (pH 7.4) to a final\n        volume of 50 mL. Allow the HSA to dissolve by slowly inverting the\n        mixture overnight at 4°C.\n      \nNote: The storage temperature of the\n      viscomatch buffer is at 4° Celsius and its storage up to 30 days or\n      longer.\n    \n      The next step is to prepare the patient samples (Figure 2[href=https://www.wicell.org#fig2]B).\n    \nNote: In the study presented in this\n      protocol, heparin plasma samples were used. However, the method works\n      equally with serum samples. For the sake of readability of the protocol,\n      we refer to plasma or serum interchangeably.\n    \n        Thaw a sample of human plasma or serum and centrifuge at 14,000 × g\n        for 10 min at 4°C and decant the supernatant to a fresh Eppendorf tube\n        for subsequent use.\n      \n        Take 9 μL of undiluted (100%) serum and mix it with 1 μL of the\n        viscomatch buffer to prepare a serum solution at a final concentration\n        of 90%.",
    "Take 8 μL of the 100% serum and mix it with 32 μL of the viscomatch\n        buffer to prepare a 20% serum solution.\n      \n        Then take 8 μL of the 20% serum and mix it with 32 μL of the viscomatch\n        buffer to prepare a 4% serum solution.\n      \n      Prepare the stock solutions of the conjugated RBD VOCs and mix them with\n      the patient serum samples (Figure 2[href=https://www.wicell.org#fig2]C).\n    \n        Prepare 100 μL of a 20 nM and 200 nM stock solution of the probe\n        protein, here conjugated SARS-CoV-2 wild type, delta, or omicron RBD\n        variants, in the viscomatch buffer.\n      \nNote: To keep this part of the protocol as\n      generic as possible, we here refer to the probe protein rather than\n      specifically to conjugated RBD VOCs.\n    \n        To prepare the final samples, mix the stock solutions of the probe\n        protein and the samples at equal amounts with each other. In detail,\n        take 7.5 μL of the 4, 20 and 100% serum and mix each sample with 7.5 μL\n        of the 20 nM protein probe stock solution to prepare samples of 0, 2, 10\n        and 50% serum in the presence of 10 nM of the probe protein.\n      \n        Repeat the same process to prepare samples with 100 nM of labeled probe\n        by using the 200 nM protein probe stock solution.\n      \nNote: Here, we use a low concentration of\n      probe protein (i. e., 10 nM) to detect binding of low concentration\n      targets contained in the sample. This approach is further explained in the\n      supplemental information of work recently published.1[href=https://www.wicell.org#bib1]\n        Prepare a similar set of samples with matching buffer (i.e., serum flow\n        buffer) by taking 15 μL of the 4, 20 and 100% serum and mixing it with\n        15 μL viscomatch buffer.\n      \n        Incubate the samples on ice or a cooling block at 4°C for a period of\n        30 min.",
    "Having prepared the samples, load them onto a Fluidity One-M microfluidic\n      chip (Figure 2[href=https://www.wicell.org#fig2]D).\n    \n        Using the\n        Fluidity Cloud[href=http://cloud.fluidic.com/] platform (Fluidic\n        Analytics), create a custom MAAP assay template for the Fluidity One-M\n        chip plate layout. Fill in the details of each sample such as the serum\n        concentration, protein probe concentration and buffer composition for\n        each circuit on the plate. For this study a wavelength of 647 nm (i.e.,\n        red wavelength), a viscosity setting of 3 and a size range of 3\n        (3–14 nm) will need to be selected.\n      \nNote: The viscosity setting of 3 is the\n      default setting for serum and plasma but other probes or biospecimen may\n      have a different viscosity property. The size range described here is\n      characteristic of the SARS-CoV-2 experiment performed to demonstrate the\n      assay. For other types of samples, sizes may vary. Fluidic Analytics\n      provides a tool to predict sizes based on molecular weights as a guidance\n      for selection of appropriate size ranges.\n    \n        Using a Fluidity One-M microfluidic chip plate (Fluidic Analytics) load\n        4 μL of the 90% serum in both the auxiliary and sample port in circuit\n        A1 to determine the maximum background signal of the sample (Figure 2[href=https://www.wicell.org#fig2]D).\n      \n        Load 4 μL of the 50% serum flow buffer in the auxiliary ports of\n        circuits B1, 2, and 3 and F1, 2, and 3, 4 μL of the 10% serum flow\n        buffer in the auxiliary ports of circuits C1, 2, and 3 and G1, 2, and 3,\n        4 μL of the 2% serum flow buffer in the auxiliary ports of circuits D1,\n        2, and 3 and H1, 2, and 3 and 4 μL of the viscomatch buffer in the\n        auxiliary ports of circuits E1, 2, and 3. Allow 90 s for the flow buffer\n        to prime the circuits (Figure 2[href=https://www.wicell.org#fig2]D).",
    "Load 4 μL of the 50% serum reaction mixture in the sample ports of\n        circuits B1, 2, and 3 and F1, 2, and 3, 4 μL of the 10% serum reaction\n        mixture in the sample port of circuits C1, 2, and 3 and G1, 2, and 3,\n        4 μL of the 2% serum reaction mixture in the sample ports of circuits\n        D1, 2, and 3 and H1, 2, and 3, and 4 μL of the 0% serum sample in\n        circuits E1, 2, and 3. As highlighted in Figure 2[href=https://www.wicell.org#fig2]D,\n        circuits B-E will contain 10 nM of the protein probe and circuits F-H\n        will contain 100 nM of the protein probe.\n      \nNote: The settings referred to above are\n      suitable for SARS-CoV-2 RBD VOCs. Other proteins of other molecular sizes\n      may require different parameters.\n    \n        Load the template (.csv file) onto the Fluidity One-M (Fluidic\n        Analytics) and select “New Experiment”. Then load the chip plate\n        containing the samples of interest into the instrument and select “Start\n        Run”. A full chip plate will take ∼25 min to complete.\n      \n        Once complete export the data (.csv and .json file) and upload the JSON\n        files onto the\n        Fluidity Cloud[href=http://cloud.fluidic.com/] (Fluidic\n        Analytics) using the “Upload Measurements” tab.\n      \n        Once uploaded set up a “New Experiment” using the “MAAP assay with\n        Bayesian fit”, “Add” the data files, click “Create Experiment” and “Run\n        analysis”.\n      \n      Based on these measurements, we obtain our first results (Figure 3[href=https://www.wicell.org#fig3]A).\n    \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2484-Fig3.jpg\n          Figure 3. Additional measurements to refine the KD and target concentration parameters\n        \n          (A) The data from the initial conditions (i.e., 2, 10 and 50% of serum\n          with 10 and 100 nM of the protein probe) may yield a complete data\n          set.\n        \n          (B) In most situations, additional samples need to be prepared to\n          better refine the data. Using Bayesian statistical analysis, the",
    "Fluidity Cloud (Fluidic Analytics) will predict a concentration range\n          of both the serum and protein probe concentration that will refine the\n          data set.\n        \n          (C) The refined data set yielding a defined KD and target concentration for the interaction\n          after additional measurements.\n        \n        Once the data analysis is complete the results of the Bayesian analysis\n        will be reflected as a summary of the calculated KD,\n        the target concentration, a binding curve and a summary of the\n        background signal-corrected Rh and -fluorescence\n        intensity for each measured sample. Furthermore, additional tabs will\n        reflect the quality control of the data analysis and a posterior\n        distribution of the KD and target concentration\n        parameters of the model.\n      \n        The data from the initial conditions (i.e., 2, 10 and 50% of serum with\n        10 and 100 nM of the protein probe) may yield a complete data set, but\n        in many situations additional samples need to be prepared to better\n        refine the data. Using Bayesian statistical analysis, the\n        Fluidity Cloud[href=http://cloud.fluidic.com/] (Fluidic\n        Analytics) will predict a concentration range of both the serum and\n        protein probe concentration that will refine the data set (Figure 3[href=https://www.wicell.org#fig3]B). For instance, in Figure 2[href=https://www.wicell.org#fig2], based on the\n        predictive concentration range a sample containing 400 nM of the protein\n        probe and 2% of the patient serum was prepared to refine the measured\n        data. The additional samples will be prepared and measured in a similar\n        manner to the steps mentioned previously.\n      \n      In the current study, we performed a MAAP assay to obtain affinity and\n      concentration measurements in samples of 41 patients. The final KD and active concentration values were obtained after\n      the iterative measurement approach depicted above (see\n      Figure 3[href=https://www.wicell.org#fig3]C). In some cases, there were simply no\n      anti-RBD antibodies, or the concentration and/or affinity of the\n      antibody:RBD interaction was too low that no binding event could be",
    "measured. In total, the affinity and concentration for antibody:RBD\n      interaction were determined in 67% of samples for wild type RBD, in 64% of\n      samples for delta RBD, and in 51% of samples for omicron RBD. Importantly,\n      the limit of detection (sensitivity) for this method was shown to be at a\n      KA of around 0.01 nM-1 (i.e., KD of around 100 nM) and at a probe protein\n      concentration of about 10 nM (see supplementary materials in1[href=https://www.wicell.org#bib1]). The data from the MAAP assay for all patients has been summarized in\n      Table 1[href=https://www.wicell.org#tbl1]. Thus, in terms of strict biophysical\n      characterization of our samples, the journey – i.e., the protocol – ends\n      here. The next chapter shows one possible way (among many others) of how\n      affinity and concentration measurements can be used.\n    \ntable:files/protocols_protocol_2484_3.csv\n      All measured log10-transformed values are given, where\n      available. Unit for KA: M-1. Unit for IgG\n      concentration: M. Values are rounded to two decimal places for reasons of\n      representation in the table.\n    \nVisualization, and interpretation of measurements\nTiming: 30 min\n      Apart from simply obtaining a concentration and affinity value for an\n      interaction (which may be the final goal when characterizing a monoclonal\n      antibody), the downstream applications of knowing these parameters is\n      immense and has been, or could be, utilized in many ways. The affinity and\n      concentration data in general, as exemplified here for SARS-CoV-2\n      (summarized in Table 1[href=https://www.wicell.org#tbl1]), provide an excellent\n      opportunity for utilization in other exploratory studies such as factors\n      involved in coagulation11[href=https://www.wicell.org#bib11] or population-based\n      seroprevalence estimates,12[href=https://www.wicell.org#bib12] amongst many others. In\n      the current dataset, we have combined the affinity values with demographic\n      and clinical data as well as with ELISA-derived immunoglobulin sub- and\n      isotype titer values (shown as -log(EC50) or p(EC50)\n      values), for multiple overlapping and distinct SARS-CoV-2 spike and\n      nucleocapsid (NC) epitopes,1[href=https://www.wicell.org#bib1] part of which is shown in\n      Table 2[href=https://www.wicell.org#tbl2].",
    "table:files/protocols_protocol_2484_4.csv\n      Sex: male (M) or female (F). Age was partitioned into age groups for this\n      table. The p(EC50) values of IgG against wild type, delta, and\n      omicron RBD are shown, rounded to two decimal places. More features of the\n      same dataset are part of a manuscript recently published.1[href=https://www.wicell.org#bib1]\nNote: Determining the affinity of\n      antibodies for the SARS-CoV-2 NC protein (instead of spike) could be\n      another interesting approach. However, we have not performed MAAP assays\n      using the NC in this protocol. Instead, we use information from ELISA for\n      correlation analyses.\n    \n      Prior to the visualization and interpretation of the data it needs to be\n      brought into an appropriate format.\n    \n        We load the required libraries for the next steps in\n        R statistical software, and we read the data presented in\n        Tables 1[href=https://www.wicell.org#tbl1] and 2[href=https://www.wicell.org#tbl2] which were\n        exported as CSV files.\n      \nlibrary(gplots)\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(ggridges)\nrequire(graphics)\nlibrary(tidyverse)\nlibrary(tidyr)\nlibrary(magrittr)\nlibrary(dplyr)\nMAAP <- read.csv(\"MAAP.csv\") # the first data\n          frame\nAdditional <- read.csv(\"Additional.csv\") # the second\n          data frame\nCombined_df <- left_join(MAAP,Additional,by=\"ID\")\nNote: These steps are not pivotal to the\n      determination of affinity and concentration (as it was generated by the\n      Fluidity Cloud (Fluidic Analytics)), which constitute the key element of\n      this protocol. While we provide code and examples for data exploration, we\n      do not detail how to install or utilize R software (the code\n      deployed here was written and executed in R 4.2.0 within\n      R Studio 2022.07.1 Build 554). Similar plots to those that will be\n      shown could be generated using other programming languages like\n      Python or software packages like GraphPad Prism.\n    \ngenerate_colnames <- function(starts_with, ends_with){\n  pattern <- paste0(\"ˆ\", starts_with,\n          \".∗\", ends_with, \"$\")\n  colnames <- colnames(Combined_df)[grepl(pattern,\n          colnames(Combined_df))]\n  colnames\n}\nstarts_with_vec <- c(rep(\"KA\", 3), rep(\"Conc\",\n          3), \"RBD\")\nends_with_vec <- c(rep(c(\"(omicron|delta|wt)\",\n          \"u\", \"l\"), 2), \"IgG\")\nall_columns_list <- mapply(starts_with = starts_with_vec,\n          ends_with = ends_with_vec, FUN = generate_colnames,\n                  SIMPLIFY =",
    "FALSE, USE.NAMES = FALSE)\nmake_tidy_df <- function(columns, valuesTO){\n  c <- Combined_df %>% dplyr::select(ID,\n          all_of(columns), Groups, Sex, Age, REGN) %>%\n    pivot_longer(cols = columns,\n            names_to =\n          \"Type_sort\",\n            values_to =\n          valuesTO) %>%\n    mutate(Type_sort =\n          case_when(str_detect(Type_sort, \"delta\") ∼\n          \"delta\",\n                      str_detect(Type_sort,\n          \"omicron\") ∼ \"omicron\",\n                      TRUE\n          ∼ \"wt\"))\n}\nall_tidy_dfs <- mapply(columns = all_columns_list, valuesTO =\n          c(\"KA\", \"KA_u\", \"KA_l\",\n          \"Conc\", \"Conc_u\", \"Conc_l\",\n          \"ELISA\"),\n            FUN =\n          make_tidy_df, SIMPLIFY = FALSE)\nMAAP_ELISA_RBDs <- all_tidy_dfs %>% purrr::reduce(left_join,\n          by = c(\"ID\", \"Groups\", \"Sex\",\n          \"Age\", \"REGN\", \"Type_sort\"))\nMAAP_ELISA_RBDs <- MAAP_ELISA_RBDs %>%\n  mutate(Type_sort_numbered =\n          case_when(str_detect(Type_sort, \"delta\") ∼\n          \"02_delta\",\n                    str_detect(Type_sort,\n          \"omicron\") ∼ \"03_omicron\",\n                    TRUE\n          ∼ \"01_wt\"))\n        We then convert the data from the so-called wide into the long format, a\n        requirement to perform some of the analyses in R with the\n        libraries we prefer.\n      \nNote: The R object called\n      MAAP_ELISA_RBDs, which is the data frame used for all subsequent\n      analyses, can be accessed\n      here[href=https://doi.org/10.5281/ZENODO.7455494],10[href=https://www.wicell.org#bib10]\n      together with the actual script. Script and R object, together,\n      allow to conduct the analyses shown next.\n    \n      Using the measured KA and antibody concentration\n      from the MAAP assay, we now present both these parameters from all\n      patients in one plot.\n    \n        We execute the code to obtain a simple affinity versus antibody\n        concentration plot, including the confidence intervals of the\n        measurements (Figure 4[href=https://www.wicell.org#fig4]A).\n        \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2484-Fig4.jpg\n              Figure 4. Data visualization and exploration\n            \n              (A) All quantifiable data points reflecting KA (in M−1) and IgG concentration\n              values (in M) are plotted..\n            \n              (B) Same as (A) but including a 2D scatter plot with integrated\n              density contours. Triangles denote patients receiving the REGN-COV\n              cocktail. RBD variants: wild type (WT, gray), delta (blue),\n              omicron (yellow). Dotted lines represent the measurements of the\n              same patient sample against different RBD variants. Plot taken\n              from.1[href=https://www.wicell.org#bib1] Higher affinity and higher\n              concentration (for A and B) are indicated in red writing with an",
    "arrow. 95% confidence intervals for each point are colored in\n              light red.\n            \n              (C) Boxplot analysis of KA values for WT, delta,\n              and omicron RBD variants. Samples of patients treated with\n              REGN-COV antibody cocktail are shown in red color.\n            \n              (D) KA and IgG concentration were plotted\n              against the respective ELISA titers, i.e., p(EC50)\n              values, obtained for WT, delta, and omicron RBD variants.\n              Concentration, but not affinity, is shown to correlate with titers\n              measured by ELISA. Data and plots are from work recently\n              published.1[href=https://www.wicell.org#bib1]\nggscatter(MAAP_ELISA_RBDs, x = \"KA\", y =\n          \"Conc\",\n      fullrange = TRUE,\n      rug = TRUE) +\n  ggtitle('KA versus IgG concentrations – all\n          data') +\n  labs(y=\"IgG concentration (M)\", x='KA\n          (1/M)') +\n  geom_errorbar(data=MAAP_ELISA_RBDs, aes(ymin =\n          Conc_l,\n                              ymax =\n          Conc_u), size=0.05, width = 0.05, alpha=0.1, color =\n          'red') +\n  geom_errorbarh(data=MAAP_ELISA_RBDs, aes(xmin =\n          KA_l,\n                                xmax =\n          KA_u), size=0.05, height = 0.05, alpha=0.1, color =\n          'red') +\n  yscale(\"log10\", .format = TRUE) +\n  xscale(\"log10\", .format = TRUE)\nNote: Here we plot the equilibrium\n      association constant KA, which is the inverse of the equilibrium dissociation constant, KD. That is, the lower the KD value the higher the\n      affinity of the interaction. Both KA as well as\n      KD can be used as a parameter to highlight the\n      affinity of an interaction.\n    \n      Next, we combine the MAAP data with additional information from\n      Table 2[href=https://www.wicell.org#tbl2]. In this example, we aim to identify whether\n      in this collective of patients with a history of infection with wild type\n      or delta SARS-CoV-2 and/or vaccination with pre-omicron vaccines, the\n      affinity of plasma antibodies statistically differs among the three RBD\n      VOC.\n    \n        We execute the code to obtain another version of the same plot, this\n        time including information on the SARS-CoV-2 RBD antigen used (i.e.,\n        wildtype, delta, or omicron RBD) and whether the patients were\n        therapeutically treated with monoclonal antibodies targeting SARS-CoV-2",
    "spike (referred to as REGN-COV), see Figure 4[href=https://www.wicell.org#fig4]B.\n      \nggscatter(MAAP_ELISA_RBDs, x = \"KA\", y =\n          \"Conc\",\n      color =\n          \"Type_sort\",\n      shape = \"REGN\",\n      palette = \"jco\",\n      fullrange = TRUE,\n      rug = TRUE) +\n  stat_density_2d(data=MAAP_ELISA_RBDs, geom =\n          \"polygon\",\n        aes(alpha =\n          ..level.., fill = Type_sort),\n        bins = 4) +\n  scale_alpha_continuous(range=c(0.1,0.3)) +\n  ggtitle('KA versus IgG concentration -\n          annotated') +\n  labs(y=\"IgG concentration (M)\", x='KA\n          (1/M)') +\n  geom_errorbar(data=MAAP_ELISA_RBDs, aes(ymin =\n          Conc_l,\n                            ymax =\n          Conc_u), size=0.05, width = 0.05, alpha=0.1, color =\n          'red') +\n  geom_errorbarh(data=MAAP_ELISA_RBDs, aes(xmin =\n          KA_l,\n                                xmax =\n          KA_u), size=0.05, height = 0.05, alpha=0.1, color =\n          'red') +\n  yscale(\"log10\", .format = TRUE) +\n  xscale(\"log10\", .format = TRUE)\nNote: As mentioned earlier, there is a\n      degree of samples where quantification was not possible as antibody\n      concentration and/or affinity were below the limit of detection. This can\n      be potentially important when interpreting the data as some data points\n      cannot be shown. To manage such results, we have performed additional\n      analyses and provided further explanations elsewhere.1[href=https://www.wicell.org#bib1]\n        We then execute the code to look at the affinity differences between\n        wild type, delta, and omicron RBD in a more statistical manner (Figure 4[href=https://www.wicell.org#fig4]C).\n      \nggscatter(MAAP_ELISA_RBDs, x = \"KA\", y =\n          \"Type_sort_numbered\",\n      conf.int = TRUE,\n      color = \"REGN\",\n      palette =\n          c(\"#0073C2FF\", \"#A73030FF\"),\n      fullrange = TRUE,\n      rug = FALSE,\n) +\n  ggtitle('KA versus Wildtype, Delta,\n          Omicron') +\n  labs(y=\"RBD variant\", x='KA\n          (1/M)') +\n  geom_boxplot(alpha=0) +\n  xscale(\"log10\", .format = TRUE)\nNote: For statistical analyses, we first\n      perform a Kruskal-Wallis test with subsequent Wilcoxon rank sum test with\n      Holm correction for multiple comparisons, comparing groups with\n      α < 0.01 for Kruskal-Wallis against all other groups.\n    \n        We now aim to correlate both affinity and concentration with the\n        respective ELISA-derived titer values for the same RBD variant. We\n        execute the code to obtain a correlation plot (Figure 4[href=https://www.wicell.org#fig4]D).\n      \nggscatter(MAAP_ELISA_RBDs, x = \"KA\", y =\n          \"ELISA\",\n      add = \"reg.line\",",
    "conf.int = TRUE,\n      fullrange = TRUE,\n      rug = FALSE) +\n  stat_cor() +\n  ggtitle('KA versus ELISA titre') +\n  labs(y=\"p(EC50) values\", x='KA\n          (1/M)') +\n  xscale(\"log10\", .format = TRUE)\n  ggscatter(MAAP_ELISA_RBDs, x = \"Conc\", y =\n          \"ELISA\",\n      add = \"reg.line\",\n      conf.int = TRUE,\n      fullrange = TRUE,\n      rug = FALSE) +\n  stat_cor() +\n  ggtitle('IgG concentration versus ELISA\n          titre') +\n  labs(y=\"p(EC50) values\", x='IgG\n          concentration (M)') +\n  xscale(\"log10\", .format = TRUE)\n      The Pearson correlation coefficient (R) for the correlation of ELISA\n      p(EC50) values with KA is 0.29\n      (p-value = 0.015), and with IgG concentration 0.72 (p-value =\n      5.4 × 10−13), indicating that ELISA titers (a mesh of affinity\n      and concentration) are determined by antibody concentrations and much less\n      by antibody affinity.\n    \nNote: For further examples on how to\n      correlate the different data types, including immunoglobulin sub- and\n      isotypes, please refer to the following manuscript1[href=https://www.wicell.org#bib1]\n      published in iScience."
  ],
  "subjectAreas": [
    "Immunology",
    "Antibody",
    "Health Sciences",
    "Proteomics",
    "Surface Plasmon Resonance (Spr)",
    "Protein Biochemistry"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics"
  ]
}