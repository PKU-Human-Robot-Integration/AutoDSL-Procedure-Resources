{
  "id": 4215,
  "origin_website": "Cell",
  "title": "Use of scREAD to explore and analyze single-cell and single-nucleus RNA-seq data for Alzheimer’s disease",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nChecking AD studies summary statistics\nTiming: 10 min\nThis section allows one to browse the overall summary statistics, including species, disease condition, brain regions, and gender. The researcher can then make an informed decision of which dataset of interest one should navigate to.\nThe current release of the scREAD collected datasets from 15 studies in total. Based on the metadata provided from the original papers, we constructed the original samples into 73 datasets, each of which corresponds to a specific species (human or mouse), gender (male or female), brain region (entorhinal cortex, prefrontal cortex, superior frontal gyrus, cortex, cerebellum, subventricular zone, superior parietal lobe, or hippocampus), disease or control, and age stage (7 months, 15 months, or 20 months for mice, and 50–100+ years old for human).\nNavigate to https://bmbls.bmi.osumc.edu/scread/[href=https://bmbls.bmi.osumc.edu/scread/], and the dataset summary should be listed (Figures 1[href=https://www.wicell.org#fig1]A and 1B).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/973-Fig1.jpg\nFigure 1. Overview of the scREAD homepage\n(A) The pie charts represent four factors of distribution: species, control/disease condition, brain region, and gender from the left side to the right side, respectively. Each color in each pie chart represents one element, and the number represents the distribution ratio for each element under each factor for 73 datasets.\n(B) The table shows the general information of all 73 datasets. Users can select filters and the table will be updated accordingly. Clicking a row in the table will pop up the dataset overview panel, and users can navigate to the dataset details page through the link.\nYou can either click on one of the pie charts or select filters from the dataset summary table, including species, sample condition, brain region, and gender. The content of the table will be updated accordingly.",
    "You can click any row in the table, and a dataset overview panel will pop. You can further navigate to the dataset details page through the link.\nSearching genes of interest from the differential gene expression (DGE) analysis results\nTiming: 20 min\nThis section allows one to search a gene of interest from DGE analysis results across multiple comparisons. For detailed gene information, the researcher can check from the link to the dataset ID of interest (Figure 2[href=https://www.wicell.org#fig2]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/973-Fig2.jpg\nFigure 2. Example DGE analysis searching result of the GAD1 gene, a marker gene of inhibitory neurons\nUsers can select filters and the table will be updated accordingly.\nTo search genes of interest from DGE analysis results across multiple datasets, type the gene symbol in the search box, and click on the search button. You can select filters to specify dataset sources or decide which comparison types should be displayed.\nThe query results are returned from multiple DGE analyses, including cell-type-specific genes, subcluster specific genes, AD vs control differentially expressed genes (DEGs), or AD vs AD DEGs.\nCell-type-specific genes were identified by performing DGE analysis between the cell type of interest and the average of the remaining cell types.\nSubcluster-specific genes were identified by performing DGE analysis between the subcluster of interest and the average of the remaining subclusters from the same cell type.\nAD vs control DGE analysis was performed within the same cell type, brain region, and gender. For example, Male-AD-Prefrontal cortex vs Male-Control-Prefrontal cortex.\nAD vs AD DGE analysis was performed within the sample cell type while based on different sample conditions. For example, one AD vs AD comparison can be Male-AD-Prefrontal cortex vs Male-AD-Entorhinal Cortex or Male-AD-Prefrontal cortex vs Female-AD-Prefrontal cortex.",
    "Note: The ‘multiple comparison types’ in the comparison type selection box include disease vs control performed within the same dataset and disease vs disease performed from two different datasets. A positive log foldchange (FC) value indicates the gene expressions are higher in the first group. The log FC is returned in the natural logarithm.\nChecking cell clustering results\nTiming: 20 min\nIn this section, we used a dataset from scREAD as an example to show the analysis result (ID: AD00103), https://bmbls.bmi.osumc.edu/scread/AD00103[href=https://bmbls.bmi.osumc.edu/scread/AD00103]. This dataset consists of 6,629 cells isolated from a human AD female prefrontal cortex sample (Mathys et al., 2019[href=https://www.wicell.org#bib11]). As we know, not all cells collected from AD patient samples are malignant, and some healthy cells may be included in the cell populations, which were defined as healthy-like cells in Granja et al.’s study (Granja et al., 2019[href=https://www.wicell.org#bib4]). We applied this concept to all AD datasets in scREAD and defined these healthy-like cells as control-like cells. These control-like cells maintain distinct regulatory mechanisms and gene expression patterns compared to AD cells, and they will disturb the accurate identification of AD cell types. Thus, we removed these control cells from disease datasets and identify AD-associated cells. Here, scREAD filtered out 950 control-like cells and kept 5,679 AD-associated cells for the downstream analysis. See the quantification and statistical analysis[href=https://www.wicell.org#quantification-and-statistical-analysis] section for more details about how scREAD filtered out control-like cells.\nChecking cell clustering results (Figure 3[href=https://www.wicell.org#fig3]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/973-Fig3.jpg\nFigure 3. Cell clustering and gene expression result from the scREAD homepage\nCell clustering results including UMAP plot colored by cell types or subclusters (left), and searching gene expression using the same UMAP coordinates (right). The darker the color is in this UMAP, the higher the expression value of the gene.",
    "By default, all the cell types will be selected and the corresponding Adjusted Rand Index (ARI) will be displayed. The ARI score is used to evaluate the similarity of our predicted cell types compared with the original cell labels in the original paper.\nNote: The ARI score will not be displayed when the cell labels were not provided from the original paper, and a silhouette score will be displayed instead. Meanwhile, the ARI score will be hidden if users did not select all cell types.\nChoose one of these cell types, the following Uniform Manifold Approximation and Projection (UMAP)(Becht et al., 2019[href=https://www.wicell.org#bib1]) will change to the UMAP of predicted subclusters for this specific cell type.\nA sliding bar is used for controlling the size of each point in the following UMAP. It ranges from 1 to 10, i.e., the bigger the number is, the larger the point size is.\nThis function bar contains several quick buttons for graphic operations.\nHovering the cursor on cell points will display cell type, cell name, and the UMAP coordinates.\nThe legend of this UMAP plot will be displayed based on the genes selected in the drop-down bar. The darker the color is in this UMAP, the higher the expression value of the gene.\nCritical: Rendering gene expression scatter plot can be slow due to network speed or a large number of cells data need to process, please be patient while scREAD is fetching data from the backend server.\nChecking differential expression (DE) results and performing functional enrichment analysis\nTiming: 20 min\nIn this section, we used the same example data from checking cell clustering results to illustrate DGE analysis results and to perform functional gene set enrichment analysis based on DEGs.",
    "First, apply the necessary filtering criteria from the DGE analysis results panel (Figure 4[href=https://www.wicell.org#fig4]A).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/973-Fig4.jpg\nFigure 4. Differential gene expression (DGE), and functional gene set enrichment based on DEGs\n(A) Differential gene expression analysis panel, the comparison groups include cell-type-specific genes, subcluster specific genes, and DEGs from the cross-dataset comparison.\n(B) KEGG pathway, GO biological process, molecular function, and cellular component analysis using the DEGs from (A), an enriched genes example were displayed on the 5th GO cellular component term.\nDGE analysis groups for browsing cell-type-specific genes, subcluster specific genes, and DE genes from the cross-dataset comparison.\nChoose the cell type of interest in DGE analysis.\nChoose the log fold-change ranges. (default = 0.5; ranges from 0 to 5).\nThe adjusted p value ranges. (default = 0.05; ranges from 10ˆ−6 to 1).\nThe DE direction can filter by all DE genes, only up-regulated genes, only down-regulated genes (default = ’all’).\nYou can search for genes that you are interested in, and then the following table will return the matching result.\nDownload the currently listed table.\nGeneCards database (https://www.genecards.org/[href=https://www.genecards.org/]) is linked to each gene in the table.\nNote: Adjusting any parameters above will immediately affect the displayed DEGs table.\nPerforming functional gene set enrichment (Figure 4[href=https://www.wicell.org#fig4]B)\nKEGG pathway, GO biological process, GO molecular function, and GO cellular component analysis using the DEGs from above, an example of enriched genes are displayed on the 4th GO cellular component term. You can also search for a specific item by entering the content that you want to search in the search box.",
    "Critical: The functional gene set analysis results are calculated in real-time by sending the DEGs to the Enrichr (Kuleshov et al., 2016[href=https://www.wicell.org#bib9]) web server (https://maayanlab.cloud/Enrichr/[href=https://maayanlab.cloud/Enrichr/]). Thus, changing DEG log FC or p value cutoffs can significantly change the results of enrichment analysis. Considering Enrichr does not provide options to submit a custom background and the results could be potentially misleading (Timmons et al., 2015[href=https://www.wicell.org#bib13]). We also provide a link to another enrichment analysis tool, g: Profiler (https://biit.cs.ut.ee/gprofiler/[href=https://biit.cs.ut.ee/gprofiler/]), which allows users to submit custom background gene sets.\nIdentifying cell-type-specific regulons\nTiming: 20 min\nIn this section, we describe the process of identifying cell-type-specific regulons (CTSRs) using IRIS3.\nIn the DE section, when you select the “Cell-type-specific genes” item in the “Group” select box, cell-type-specific regulon analysis will be performed. CTSRs results are displayed at the bottom of the screen. Click on the “Cell-type-specific regulons” bar, detailed CTSRs information will be shown.\nThe CTSRs are displayed in a reactive table in the DE section, each row shows that for each cell type, a set of genes are regulated by a specific transcription factor (TF). Clicking on the “Regulon overview” panel, a table in the panel summarizes the overall cell number and regulon number in each cell cluster (Figure 5[href=https://www.wicell.org#fig5]A).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/973-Fig5.jpg\nFigure 5. Cell-type-specific regulon (CTSR) analysis results from IRIS3\n(A) Overview table of identified CTSRs.\n(B) An example of CTSR (p value < 0.05), stars indicate differential expressed gene within the cell type, the corresponding matched TF is linked to the HOCOMOCO database.\n(C) UMAP plot colored by regulon activities in each cell.",
    "You can navigate into the IRIS3 to see the detailed results of this job by clicking the 'Open cell-type-specific regulon result page in the new tab' button. In the table, the index number will be given to represent CTSRs (Figure 5[href=https://www.wicell.org#fig5]B).\nBoth gene compositions of regulons and their expression values across different cell types can be intuitively displayed in a heatmap. Regulons are ranked in increasing order of the empirical p values of regulon specificity scores (RSS) as described above, and a regulon is named as CTn-Rm with 'n' representing the index of cell type and 'm' represents the regulon rank. Due to the space limitation, only the top ten regulons and their corresponding genes are showcased in the heatmap, and the component genes of each regulon are indicated as green rectangles. The heatmap records the log-transformed expression level of each top-ten-regulon-covered gene across all cells.\nRegulon results are separately showcased in each cell type. Click on the \"CT#\" button to switch to see results in other cell types. A scatter plot shows the distribution of the RSS of each regulon. CTSRs are ranked top and marked as blue dots with their representative TF names, and insignificant regulons are marked as grey dots. For each regulon, genes and the corresponding TF are presented (Figure 5[href=https://www.wicell.org#fig5]B) with several actions that link to showing heatmap, functional gene set enrichment analysis, and regulon activities in the UMAP plot (Figure 6[href=https://www.wicell.org#fig6]C). A more detailed interpretation of each regulon can be found on the IRIS3 website, https://bmbl.bmi.osumc.edu/iris3/tutorial.php#3example&q=2[href=https://bmbl.bmi.osumc.edu/iris3/tutorial.php#3example%26q=2].\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/973-Fig6.jpg\nFigure 6. Overlapping genes and annotated cell type (ct) from the example dataset\n(A) The up-regulated overlapping genes in Human Entorhinal Cortex Astrocytes (ast).\n(B) The log FC, dataset source, and rankings from the overlapping genes table in (A).",
    "(C) A UMAP plot of the control dataset example with six cell types was annotated from the scREAD workflow.\n(D) A UMAP plot of the disease dataset example with six cell types was transferred from the example reference control dataset.\nCritical: The CTSRs results are only available when you selected the cell-type-specific option in the DEG group box.\nOptional step: calculating overlapping DEGs from multiple comparisons\nTiming: 1 h\nIn this section, we provide a workflow for calculating overlapping DEGs from multiple comparisons. Suppose we have   m   AD vs control comparisons from a cell type of interest in a specific brain region. For each comparison, we select top   t   DEGs based on the ranked log FC. We define an \"overlapping gene\" as the gene that appears at least   n   times in   m   comparisons (  n ≤ m  ).   t ,  n  are parameters set by the users.\nHere, we provide two approaches, you can follow the code example below on your local R environment; For users wishing to avoid setup procedures, you can use the following link from Google Colab, which is an interactive computational environment that combines live code, visualizations, and explanatory text, https://colab.research.google.com/drive/1lInXa6jD4yc7RGJc0EWDfy5NNoXT1qye?usp=sharing[href=https://colab.research.google.com/drive/1lInXa6jD4yc7RGJc0EWDfy5NNoXT1qye?usp=sharing].\nIf you wish to perform the calculation in your local computer, first, load the R packages, scREAD data, and predefined functions in your R local environment:\nlibrary(tidyverse)\nlibrary(RVenn)\nlibrary(rlist)\nlibrary(knitr)\ntryCatch({\n  load(\n    url(\n      'https://bmbl.bmi.osumc.edu/downloadFiles/scread/protocol/scread_db.rdata[href=https://bmbl.bmi.osumc.edu/downloadFiles/scread/protocol/scread_db.rdata]'\n    )\n  )\n}, error = {\n  load(\n    url(\n      'https://github.com/OSU-BMBL/scread-protocol/raw/master/overlapping_genes/scread_db.rdata[href=https://github.com/OSU-BMBL/scread-protocol/raw/master/overlapping_genes/scread_db.rdata]'\n    )\n  )\n})\nTo calculate overlapping genes, these parameters are needed\nThe number of genes to be selected in each AD vs control DEG results (default = 100)\nSpecies (default = Human)\nBrain region (e.g., Entorhinal Cortex)\nDE direction (e.g., up)",
    "Overlap threshold (For example, A gene is an overlapping gene if A should at least appear 3 times in total 4 comparisons, here the threshold is 3)\nWe can then process some of our metadata:\nREGION_LIST <- sort(unique(dataset$region))\nCT_LIST <- sort(unique(cell_type_meta$cell_type))\nCT_SHORT_LIST <- CT_LIST\nCT_SHORT_LIST[CT_LIST==\"Oligodendrocyte precursor cells\"] <- \"opc\"\nCT_SHORT_LIST <- tolower(substr(CT_SHORT_LIST, 1, 3))\nBelow are the necessary settings to calculate the overlapping genes.\nWe use the top 100 DE genes in each AD vs control comparison:\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/973-Fx1.jpg\nSpecies should be either 'Human' or 'Mouse':\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/973-Fx2.jpg\nSpecify our brain region of interest, here we selected the 5th brain region in REGION_LIST variable, i.e., Entorhinal Cortex':\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/973-Fx3.jpg\nDE direction should either 'up' or 'down', 'up' means we select DE genes that are expressed higher in the disease dataset (the first group):\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/973-Fx4.jpg\nThe OVERLAP_THRES should be manually defined based on your interest and the total number of comparisons in scREAD. For example, scREAD have 4 total AD vs control datasets comparisons, we set the threshold to 3, meaning that we want to find overlapping genes that are at least appeared in 3 comparisons:\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/973-Fx5.jpg\nNow, we can calculate the overlapping genes based on the parameters above, the results are stored in a list variable:\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/973-Fx6.jpg\nTwo tables can be generated by accessing the result variable:\nThe overlapping genes in the selected brain region (Figure 6[href=https://www.wicell.org#fig6]A)\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/973-Fx7.jpg\nThe detailed information, including rankings, log FC, dataset source information from the overlapping genes (Figure 6[href=https://www.wicell.org#fig6]B)\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/973-Fx8.jpg\nOptional section 7: Running the scREAD backend analysis workflow locally\nTiming: 2 h\nIn this section, we present how to run the scREAD workflow to process a custom dataset. The workflow can be used in the Unix command-line environment with R installed.",
    "Download the scREAD workflow and an example dataset from https://github.com/OSU-BMBL/scread-protocol/tree/master/workflow[href=https://github.com/OSU-BMBL/scread-protocol/tree/master/workflow], the folder should contain the following files (5 min):\ncustom_marker.csv: A manually created marker gene list file used for identified cell types.\nfunctions.R: Visualization functions used in R.\nbuild_control_atlas.R: build control cells atlas Seurat object from count matrix file.\ntransfer_cell_type.R: filter out control-like cells in disease dataset.\nrun_analysis.R: run analysis workflow, and export tables in the scREAD database format.\nexample_control.csv. The example control dataset.\nexample_disease.csv. The example disease dataset.\nBuild the control atlas file from the raw gene expression matrix (5 min).\nPrepare your control gene expression data. In the data frame, the first column should be gene symbols and other columns as cell labels. Put all code and data in a working directory. (e.g., PATH_TO_WD), in this protocol, we will run example_control.csv.\nbuild_control_atlas.R takes three parameters:\nWorking directory path.\nControl data path.\nOutput data ID.\nNext, run the following command, remember to change PATH_TO_WD to your working directory path:\ncd PATH_TO_WD\nRscript build_control_atlas.R PATH_TO_WD example_control.csv control_example\nThe expected output for this step contains four files:\ncontrol_example.rds: The Seurat R object storing example control data.\ncontrol_example_expr.txt: Filtered gene expression matrix.\ncontrol_example_cell_label.txt: The first column is the cell name, the second column is the cell type information.\ncontrol_example_umap.png: UMAP plot of example control data colored by cell types (Figure 6[href=https://www.wicell.org#fig6]C).\nTransfer cell types based on control atlas, the goal of this step is to annotate cell type using the control atlas as the reference, onto the disease gene expression matrix file (∼5 min).\nPut all code and data in a working directory. (e.g., PATH_TO_WD) after you have generated the control atlas file (control_example.rds).\ntransfer_cell_type.R takes four parameters:\nWorking directory path.\nControl atlas Seurat object file name.\nDisease gene expression matrix name.\nOutput disease data ID.\nNext, run the following command",
    "cd PATH_TO_WD\nRscript transfer_cell_type.R PATH_TO_WD control_example.rds example_disease.csv disease_example\nThe expected output for this step contains four files:\ndisease_example.rds: The Seurat R object storing example disease data.\ndisease_example_expr.txt: Filtered gene expression matrix.\ndisease_example_cell_label.txt: The first column is the cell name, the second column is the cell type information.\ndisease_example_umap.png: UMAP plot for disease data colored by cell types (Figure 6[href=https://www.wicell.org#fig6]D).\nRun data analysis, the goal of this step is to identify cell-type-specific genes, DEGs from two example datasets (60 min).\nPut all code and data in a working directory. (e.g., PATH_TO_WD) after you have generated the control atlas file (control_example.rds), and the disease file (disease_example.rds)\nrun_analysis.R takes three parameters:\nWorking directory path.\nControl Seurat object file name.\nDisease Seurat object file name.\nNext, run the following command:\ncd PATH_TO_WD\nRscript run_analysis.R PATH_TO_WD control_example disease_example\nThe expected output for this step contains three folders:\n/de. Differential gene expression analysis results.\nCell-type-specific genes.\nSub-cluster specific genes.\nDEGs between two conditions.\n/dimension: UMAP coordinates for two datasets.\n/subcluster_dimension: UMAP coordinates for each sub-clusters in two datasets.\nIdentify CTSRs using IRIS3 (2 h).\nNavigate to https://bmbl.bmi.osumc.edu/iris3/submit.php[href=https://bmbl.bmi.osumc.edu/iris3/submit.php], submit two jobs for the two example datasets:\nupload control_example_expr.txt and control_example_cell_label.txt\nupload disease_example_expr.txt and disease_example_cell_label.txt\nThe expected output for IRIS3 contains these files:\nLists\nCTSR gene list\nMarker gene list\nGene module list\nMotif list\nTranscription factor list\nTables\nPredicted cell types\nBulk ATAC peak enrichment\nTAD association\nFigures (only display on the website)\nCTSR active UMAP\nCTSR gene heatmap\nTrajectory\nUMAP\nCritical: You need to open the advanced options tab in the IRIS3 submission page to upload a custom cell label."
  ],
  "subjectAreas": [
    "Rnaseq",
    "Single Cell",
    "Neuroscience",
    "Bioinformatics"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}