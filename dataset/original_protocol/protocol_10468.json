{
  "id": 10879,
  "origin_website": "Jove",
  "title": "Real-time Monitoring of High Intensity Focused Ultrasound (HIFU) Ablation of In Vitro Canine Livers Using Harmonic Motion Imaging for Focused Ultrasound (HMIFU)",
  "procedures": [
    "This protocol was approved by the Institutional Animal Care and Use Committee of Columbia University. All the data acquisition and processing were performed using the Matlab environment.\n1. Experimental Set-up\nDegas an ex vivo canine liver sample during 90 min. Put the liver sample in a tank filled with degassed Phosphate Buffered Solution (Figure 1). Fix the liver sample on an acoustic absorber with needles at the extremities of the liver.\nInsert a 64-element, 0.32 mm pitch, 2.5 MHz center frequency phased array (imaging) through a circular hole located in the center of a 93-element hemispherical array HIFU transducer (therapeutic) at 4.5 MHz center frequency, 70 mm focal depth and 1.7 mm x 0.4 mm focal size11. Align both transducers co-axially and fix the imaging transducer into the therapeutic transducer with adjustment screws.\n\t\nCover the HIFU transducer with a volume-controlled polyurethane membrane filled with flowing degassed water to cool it down. Mount the transducer assembly on a computer-controlled 3-D positioner.\nConnect the HIFU transducer to a function generator sending a 25 Hz amplitude modulated sine waveform with 500 mV maximum amplitude. Connect the imaging transducer to a fully programmable ultrasound system using the software Matlab.\n\tNote: A software associated with the ultrasound system and using the Matlab environment has to be installed on the computer connected to the system. A 50 dB RF amplifier and a matching network should be placed between the HIFU transducer and the function generator to respectively amplify the power and match the impedance.",
    "Create a polar grid, using Matlab, starting 50 mm from the surface of the array and 40 mm deep in the radial direction with a spatial step of 9.625 µm and of 90° in the azimuthal direction with 128 lines and which origin is the focus of the diverging wave. Define the source of the diverging wave 10.24 mm (half the size of the aperture) behind the surface of the array and centered in the lateral direction.\n\t\nCreate a Cartesian grid, using Matlab, starting 50 mm from the surface of the array and 40 mm deep in the axial direction with a spatial step of 9.625 µm and 20 mm wide in the lateral direction with 64 lines for the plane wave. Define the source of the plane wave on the surface of the array. For each grid, compute the time from the source to each point of the grid and back to each element of the array.\nEnter “ReconMat_DW” for diverging wave imaging or “ReconMat_PW” for plane wave imaging in the Matlab command window and press “Enter” to create a reconstruction matrix associated with a standard delay-and-sum algorithm for each grid. Apply the delay-and-sum algorithm to each vector of the standard basis and retrieve the non-zeros elements of the resulting matrix11. Allocate the non-zero elements obtained from the resulting matrix to the sparse matrix at the corresponding location. Save the reconstruction matrix on the computer hard drive.\n\tNote: The diverging and the plane wave methods use two distinct reconstruction matrices.",
    "Cast the reconstruction matrix to a GPU matrix. Enter “SetUpP4_2Flash_4B_streaming_DW” for diverging wave imaging or “SetUpP4_2Flash_4B_streaming_PW” for plane wave imaging in the Matlab command window and press “Enter” to create a setup file for the ultrasound channel data acquisition using the script associated with the phased array and provided by the manufacturer of the ultrasound system. Name the setup file “P4-2Flash_DivergingWave.mat” for diverging wave imaging and “P4-2Flash_PlaneWave.mat” for plane wave imaging.\n\t\t Note: A commercial software package has to be installed on the computer to cast the reconstruction sparse matrix to a GPU matrix.\nSynchronize the ultrasound system with the function generator using an external trigger so that high frame rate ultrasound data acquisition of the liver starts at the same time as HIFU.\nOpen Matlab. Run the setup script “SetUpP4_2Flash_4B.m” provided by the ultrasound system manufacturer to use B-mode imaging. Name the created setup file: “P4-2Flash_4B_Bmode.mat”. Use the “VSX” command and when “Name of .mat file to process:” is prompted, enter the name of the setup file “P4-2Flash_4B_Bmode.mat”. Move both transducers and use the B-mode display that appeared on the computer screen to position them in the targeted region of the liver to ablate. Target a region approximately 1 cm under the surface of the liver to avoid high ultrasound attenuation due to absorption. Save a conventional B-mode image of the liver on the computer.\n\tNote: Here we performed HIFU ablations at 11 different locations in two liver specimens by moving the transducers with the 3-D positioner for each ablation.\n2. Ultrasound Data Acquisition\nOpen Matlab. Use the “VSX” command and when “Name of .mat file to process:” is prompted, enter the name of the setup file “P4-2Flash_DivergingWave.mat” for diverging wave imaging or “P4-2Flash_PlaneWave.mat” for plane wave imaging. Start the HIFU and apply it during 2min to the targeted region.",
    "Acquire the RF channel data at 1,000 frames per second during 2 min using diverging waves. Alternatively, acquire the RF channel data at 1,000 frames per second during 2 min using plane waves.\nTransfer the data to a host computer every 200 frames via a PCI express cable. Alternatively, for real-time streaming, acquire the RF channel data at 167 frames per second during 2 min using plane waves and transfer the data to a host computer every 2 frames.\n\tNote: The imaging methods with set of 200 frames provides high temporal resolution within each set but create gaps between each set and is appropriate for off-line processing. The imaging method at 167 fps has a lower temporal resolution but does not create any gaps across the entire ablation time and is appropriate for real-time streaming.\nCast the RF channel data matrix to a single precision GPU matrix with Matlab. Multiply the RF channel data matrix by the reconstruction matrix to obtain the reconstructed RF data11.\n3. Displacement Imaging\nCreate a 6th order Butterworth low pass filter at 4 MHz cutoff frequency using the DSP System Toolbox of Matlab. Apply this low pass filter to the reconstructed RF data to filter out the 4.5 MHz HIFU component.\nEstimate the axial displacement between consecutive frames using 1-D normalized cross-correlation with a 3.1mm-window length and 90% overlap.\nCreate a 6th order Butterworth low pass filter at 100 Hz cutoff frequency using the DSP System Toolbox of Matlab. Apply this low pass filter to the temporal displacement data using Matlab to retrieve the 50 Hz-oscillatory frequency component.",
    "Define a region of interest (ROI) as the focal region at -6 dB (1.7 x 0.4 mm in water) and located 70 mm away from the transducer surface. Extract the displacement data in this ROI. Estimate the displacement signal-to-noise ratio (SNRd) at the focal region after 2 min of ablation as the ratio between the mean displacement and the standard deviation of the displacement in the ROI.\nExtract the 50 Hz temporal displacement signal at the focus from the displacement matrix data. Convert the temporal displacement signal at the focus into audible sound using Matlab.\nSubscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Bioengineering"
  ],
  "bigAreas": [
    "Bioengineering & Technology"
  ]
}