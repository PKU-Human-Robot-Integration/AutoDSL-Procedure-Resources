{
  "id": 11964,
  "origin_website": "Jove",
  "title": "Establishing a Competing Risk Regression Nomogram Model for Survival Data",
  "procedures": [
    "The research protocol was approved by the Ethics Committee of Jinhua Hospital, Zhejiang University School of Medicine. For this experiment, the cases were obtained from the Surveillance, Epidemiology, and End Results (SEER) database. SEER is an open-access database that includes demographic, incidence and survival data from 18 population-based cancer registries. We registered on the SEER website and signed a letter of assurance to acquire the research data (12296-Nov2018).\n1. Data source\nObtain cases from the databases as well as permission (if any) to use the cases from the registries.\n\tNOTE: The cohort data are uploaded in Supplementary File 1. Readers who already have survival data with competing risks can skip this section.\n2. Installing and loading packages and importing data\nNOTE: Perform the following procedures based on R software (version 3.5.3) using the packages rms15 and cmprsk16 (http://www.r-project.org/).\nInstall rms and cmprsk R packages.\n>install.packages(\"rms\")\n>install.packages(\"cmprsk\")\nLoad the R packages.\n>library(\"rms\")\n>library(\"cmprsk\")\nImport the cohort data.\n>Dataset<-read.csv(\"…/Cohort Data.csv\") # cohort data is the example\n3. Nomogram based on the Cox Proportional Hazards Regression model\nEstablish the Cox Proportional Hazards Regression model.\n\tNOTE: The independent variables (X) include categorical variables (dummy variables, such as race) and continuous variables (such as age). The factors significant in the univariable analysis will be selected for the use in multivariable analysis.\n\t\nFit the Cox proportional hazards model to the data. Establish the Cox proportional hard regression model using the function cph. The simplified format in R is shown below:\n> f0 <- cph(Surv(Survivalmonths, status) ~ factor1+ factor2+…,\nx=T, y=T, surv=T, data=Dataset)\n\t\tNOTE: Death was set as the status in the example code.\nDevelop a Cox Regression Nomogram using the commands detailed below.\n> nom <- nomogram(f0, fun=list(function(x) surv(24, x)…), funlabel=c(“2-year predicted survival rate”…), maxscale=100, fun.at)\n> plot (nom)",
    "NOTE: Take the 2-year predicted survival rate as an example.\n4. Nomogram based on the Competing Risk Regression Model\nEstablish the Competing Risk Regression Model.\n\t\nFit the competing risk regression model. Readers could include the factors that they consider important, this step could be skipped. In the example, the factors significant in the univariable analysis are included.\n\t\tNOTE: The censoring variable is coded as 1 for the event of interest and as 2 for the competing risk event. To facilitate the analysis, Scrucca et al.17 provide an R function factor2ind(), which creates a matrix of indicator variables from a factor.\nFor categorical variables, carefully code them numerically when including them in the competing model. That is, for a categorical variable made of J levels, create J-1 dummy variables or indicator variables.\nTo establish a competing risk regression model, first place prognostic variables into a matrix. Use the function cbind() to concatenate the variables by columns and fit them into the competing regression model.\n>x <-cbind(factor2ind(factor1, \"1\"), factor2ind(factor2, \"1\")…)\n> mod<- crr (Survivalmonths, fstatus, failcode=1 or 2, cov1=x)\nPlot the competing nomogram\n\tNOTE: The beta value (β value) is the regression coefficient of a variate (X) in the formula of the Cox proportional hazards regression. The X.score (comprehensive effect of the dependent variable) and X.real (at special timepoints, for example, 60 months, to predict the cumulative incidence function) are calculated from the Cox regression model and then, a nomogram is established.\n\t\nUse the function nomogram to construct Cox nom (as listed in step 3.2).\nReplace X.beta and X.point as well as total.points, X.real, and X.score of the competing risk regression model.\n\t\t\nGet the baseline cif, that is cif(min). See Supplementary file 2 for details.\n> x0=x\n> x0 <- as.matrix(x0)\n> lhat <- matrix(0, nrow = length(mod$uftime), ncol = nrow(x0))",
    "> for (j in 1:nrow(x0)) lhat[, j] <- cumsum(exp(sum(x0[j, ] * mod$coef)) * mod$bfitj)\n> lhat <- cbind(mod$uftime, 1 - exp(-lhat))\n> suv<-as.data.frame(lhat)\n> colnames(suv)<- c(\"time\")\n> line24<-which(suv$time==\"24\")\n> cif.min24<-suv[line24,which.min(suv[line24,])]\nReplace the X.beta and X.point.\n> lmaxbeta<-which.max(abs(mod$coef))\n> maxbeta<-abs(mod$coef[lmaxbeta])\n> race0<-0\n> names(race0)<-\"race:1\"\n> race.beta<-c(race0,mod$coef[c(\"race:2\",\"race:3\")])\n> race.beta.min<-race.beta[which.min(race.beta)]\n> race.beta1<-race.beta-race.beta.min\n> race.scale<-(race.beta1/maxbeta*100) # how the scale is calculated\n> nom$Race$Xbeta<-race.beta1\n> nom$Race$points<-race.scale\n\t\t\tNOTE: Take race as an example.\nReplace the total X.point and X.real.\n> nom$total.points$x<-c(0,50,100, …)\n> real.2y<-c(0.01,0.1,0.2,…)\n\t\t\tNOTE: Replacements are according to the minimax value.\nCalculate the X.score and plot the nomogram.\n> score.2y<-log(log((1-real.2y),(1-cif.min24)))/(maxbeta/100)\n> nom$`2-year survival`$x<-score.2y\n> nom$`2-year survival`$x.real<-real.2y\n> nom$`2-year survival`$fat<-as.character(real.2y)\n> plot(nom)\n\t\t\tNOTE: X.score=log(log((1-X.real),(1-cif0)))/(maxbeta/100). The equations for the X.score and X.real relationship can be calculated according to the intrinsic attribution of the competing model(crr). Cif0 means baseline cif, which will be calculated by the predict.crr function.\n5. Subgroup analysis based on the Group Risk Score (GRS)\nCalculate the risk score (RS)\n\tNOTE: Calculate the risk score for each patient by totalling the points of every variable. Cut-off values are used to classify the cohort. Taking 3 subgroups as an example, use the package meta to draw a forest plot.\n\t\nInstall and load the R packages\n> install.packages(\"meta\")\n> library(\"meta\")\nObtain the GRS and divide the cohort into 3 subgroups.\n> d1<-Dataset\n> d1$X<-nom$X$points\n> #For example, d1$race[d1$race==1]<-nom$race$point[1]\n> d1$RS<-d1$race + d1$marry + d1$histology + d1$grademodify + d1$Tclassification + d1$Nclassification\n\t\t> d1$GRS<- cut(d1$RS, quantile(d1$RS, seq(0, 1,1/3)), include.lowest = TRUE, labels = 1:3)\nDraw the forest plot. Get the HR, LCI and UCI via the function crr.\n> subgroup<-crr(ftime, fstatus, cov1, failcode=1)\n> HR<- summary(subgroup)$conf.int[1]\n> LCI<- summary(subgroup)$conf.int[3]\n> UCI<- summary(subgroup)$conf.int[4]\n> LABxx<-c(\"Low Risk\", \"Median Risk\", \"High Risk\")\n> xx<-metagen(log(HR), lower = log(LCI), upper = log(UCI), studlab = LABxx, sm = \"HR\")",
    "> forest(xx, col.square = \"black\", hetstat =TRUE, leftcols = \"studlab\")\nSubscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Cancer Research"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research"
  ]
}