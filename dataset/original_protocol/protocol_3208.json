{
  "id": 3397,
  "origin_website": "Cell",
  "title": "Using DeepContact with Amira graphical user interface",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nTiming: 15 min to analyze 30 electron\n      microscopic images using a workstation with GPU NVIDIA Quadro RTX 8000\n    \nThe following steps are for Usage of DeepContact in Amira GUI.\n        Select “Python” -> “Environment” -> “deepcontact” in the menu.\n        Restart Amira when change python environment.\n      \n        Select an image file: Click Project -> open data, and select an Image\n        file in common EM image formats, e.g., Digital Micrograph, MRC and TIFF,\n        for processing.\n      \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2978-Fx29.jpg\n      Create Deep Contact Prediction function: Right click on the image panel,\n      select AI -> Deep Contact Prediction -> Create.\n    \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2978-Fx30.jpg\n        Define “Deep Contact Prediction” functional parameters in “Properties”\n        interface.\n        imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2978-Fx31.jpg\n            Inputs: “Single” or “Batch” can be selected here.\n            imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2978-Fx32.jpg\n            Single: process initially selected data, and the visualization\n            result will be shown directly in Amira; Batch: an input folder and\n            an output folder must be selected respectively, and all the images\n            in the input folder will be processed automatically.\n            imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2978-Fx33.jpg\n            Outputs: an output folder is selected to save the processed visual\n            and statistical results.\n          \n            Args:\n            Resolution: the current system will transform the image into\n            10 nm/pixel resolution according to the resolution parameter.\n            Crop Size: the size of the cropping file is calculated automatically\n            according to the resolution of the inputting image, and which\n            ensures the normalization of a patch size into 10 μm × 10 μm field\n            of view. For example, if image data is in 5 nm/ pixel resolution the\n            Crop Size will be automatically determined as 2048.\n          \n            Console: click “Show” to display the status of the program operation\n            in Console.\n          \nClick “apply” to execute the task\n      The loading of the program will take some time in the initial run, which\n      requires user’s conformation. Click “Continue” to execute task\n      immediately, Click “Quit” to quit the task.\n    \nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2978-Fx34.jpg\n        Result.",
    "The statistical result will be displayed in Console, and the\n            information marked in red can be ignored, which will not affect the\n            execution of the program.\n            imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2978-Fx35.jpg\n            When you select “Single” in the “Input” panel, the visualization\n            result will be displayed in Amira with “Ortho Slice”.\n            imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2978-Fx36.jpg\n            When select “Batch” in the Input panel, both the visualization\n            result and two ∗.csv files with statistical results will be given in\n            the folder named in “Outputs” panel.\n          \n            Visualization result will be given in ∗.png format in 10 μm × 10 μm\n            field of view in the “output folder”.\n            imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2978-Fx37.jpg\n            Statistical result will be given as Result.csv and Result_dist.csv\n            in the “output folder” folder.\n          \n            Parameters in Result.csv are listed as below:\n            \n                Mito_length: perimeter of all segmented mitochondrial in an EM\n                image.\n              \nMito_length_mean: mean perimeter of the mitochondria.\n                Contact_length: length of all segmented contact in an EM image.\n              \n                Ratio_number: the number of segmented contact in an EM image /\n                the total number of segmented mitochondrial in an EM image.\n              \n                Ratio_length: length of all segmented contact in an EM image /\n                perimeter of all segmented mitochondrial in an EM image.\n              \n                ER_Length: the perimeter of all segmented ER in an EM image.\n              \n                Mito_Elongation: mitochondria_perimeter2 / (4π×area).\n              \nER_Elongation: ER_perimeter2 / (4π×area).\n            Parameters in Result_dist.csv are listed as below:\n            imgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2978-Fx38.jpg\n                dist_N: N is pixel-based contact width intervals. One pixel\n                corresponds to a length of 10 nm. dist_N give the value of\n                contact length ratio in of N pixel (N×10 nm) width interval."
  ],
  "subjectAreas": [
    "Computer Sciences",
    "Cell Biology",
    "Microscopy"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics",
    "Bioengineering & Technology"
  ]
}