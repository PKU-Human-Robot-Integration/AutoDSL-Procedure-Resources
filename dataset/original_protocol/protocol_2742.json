{
  "id": 2896,
  "origin_website": "Cell",
  "title": "Integration of SNP genotyping and 16S rRNA amplicon sequencing to identify heritable gut microbes in chickens",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nPart 1. Sample collection\nTiming: 2 days\nWe randomly selected 100 60-week-old female chickens (ten birds per breed) from 10 breeds. And all birds were randomly selected from different cages in order to avoid cage effect bias.\nBlood was collected from the wing veins of chickens into vessels containing EDTA anticoagulant and stored at −20°C. As soon as the cecal contents were collected and frozen in liquid nitrogen immediately, they were stored at −80°C for further use.\nChicken genomic DNA from blood was extracted using the Blood DNA Kit following the manufacturer’s instructions. As an alternative, tissues can also be used to extract host genomic DNA.\nMicrobial genomic DNA from cecal contents or feces was extracted using the DNA Stool Mini Kit following the manufacturer’s instructions. To increase the efficiency during the extraction, a bead-beating homogenization step was applied during the DNA extraction.11[href=https://www.wicell.org#bib11]\nPart 2. SNP genotyping and amplicon sequencing\nTiming: 2 weeks\nThis section describes the experimental process of the SNP genotyping and 16S rRNA amplicon sequencing data of the gut microbiota.\nSNP genotyping.\nSamples were genotyped by the commercial service company with 55K high-density SNP chips. The 55K SNP chip contains 52,184 SNP probes across 28 autosomes and two sex chromosomes (chrZ and chrW). We should select the SNP chip type according to the host and aim of study accordingly.\nMicrobial genomic DNA of cecal contents or feces was used as templates to amplify regions of the 16S rRNA gene.",
    "We use a two-stage PCR protocol as recommended by Illumina (https://support.illumina.com/documents/documentation/chemistry_documentation/16s/16s-metagenomic-library-prep-guide-15044223-b.pdf[href=https://support.illumina.com/documents/documentation/chemistry_documentation/16s/16s-metagenomic-library-prep-guide-15044223-b.pdf]), using a KAPA HiFi HotStart ReadyMix (2×). Compared with the traditional protocol, it will decrease the ratio of chimeras and increase the accuracy. The primers we used here are CCTACGGGNBGCASCAG (forward) and GACTACNVGGGTATCTAATCC (reverse) to amplify V3-V4 variable regions of the 16S rRNA genes. The primers used in the study may be different from the protocol.\nAfter converting the genome coordinates to the chicken reference genome (galGal5), 28 autosomes were extracted for further analyses.\n>plink --file rawdata --recode --allow-extra-chr -autosome-num 28 --out outfile_autosome\nNote: --autosome-num: The number of autosomes of the host. This parameter should adjust according to the host.\nAfter PCR product purification, quantification and homogenization, the library was completed. The pooled library was sequenced on the Illumina HiSeq platform (2 × 250 bp). To avoid the bias caused by the sequencing depth, we recommend that it is better to have a depth of approximately 40,000 raw sequencing reads per sample, which is sufficient for comparative analysis.12[href=https://www.wicell.org#bib12]\nNote: Before sequencing, a dsDNA quantification is required. This procedure can be performed by Qubit™ dsDNA HS and BR Assay Kits or real-time PCR.\nPart 3. Analyses of microarray and 16S rRNA amplicon sequencing data\nTiming: 2 days\nThis section describes the bioinformatic analyses of the SNP genotyping and 16S rRNA amplicon sequencing data of the gut microbiota.\nBefore the analysis, we must have obtained the two files (rawdata.ped and rawdata.map) from the sequencing company. Generally, genetic variations in sex chromosomes would be irrelevant to the aim of our study. Thus, we need to extract the SNPs in autosomes and filter out some SNPs for the downstream analyses. We can run the bash commands in terminal:\n>plink --file outfile_autosome -geno 0.05 -mind 0.05 -maf 0.05 --recode --out filterdata",
    "Note: Here, the plink software would process the two input files (filterdata.ped and filterdata.map) and generate two output files (filterdata.ped and filterdata.map). There are some parameters can be adjusted in this procedure:\n--geno: Removed all SNPs with a deletion rate higher than 0.05.\n--mind: Remove all individuals with a miss rate over 0.05.\n--maf: Remove all SNPs with minor allele frequencies (MAF) less than 0.05.\nStatistical analysis of Illumina microarray data.\nThe population structure was calculated by PLINK, and the bash commands are as follows.\nPrincipal component analysis (PCA):\n>plink --file filterdata --pca 10 --out plink\nNote: The eigenvectors are written to the file named plink.eigenvec; top eigenvalues are written to the file named plink.eigenval.\nIdentity by state (IBS):\n>plink --file filterdata --distance --out filterdata_ibs\nNote: output formats: --distance causes a matrix file to be written to plink.dist, and a list of corresponding sample IDs to plink.dist.id.\nThe PCA result was visualized in R, the R commands are as follows.\n> require(ggplot2)\n> require(ggsci)\n> pca0 <- read.table('plink.eigenvec',header = T,sep = '\\t')\n> pca1 <- pca0[,2:4]\n> pca1$Breeds <- c(rep(‘<Group1>’,<N1>), rep(‘<Group2>,<N2>))\n> p1 <- ggplot(pca1, aes(x = PC1, y = PC2, color = Breeds)) +\n  geom_point(size = 1) +\n  cale_color_npg() +\n  theme_bw()\n> p1\nNote: We should modify “<Group1>”, “<Group2>” with our own group names, and “<N1>” and “<N2>” with the number of samples of each group, if the order of plink.eigenvec was sorted by groups.\n16S rRNA gene amplicon sequencing data processing using QIIME2.\nImporting raw sequence files into QIIME2. Run the bash commands in terminal:\n> conda activate qiime2-2022.2\n> qiime tools import \\\n  --type ‘SampleData[PairedEndSequencesWithQuality]’ \\\n  --input-path manifest \\\n  --output-path demux.qza \\\n  --input-format PairedEndFastqManifestPhred64V2",
    "Critical: We need create a text file called a “manifest file”, which maps sample identifiers to fastq.gz or fastq absolute filepaths that contain sequence and quality data for the sample. The file manifest contained three columns. The first column is the sample-id, and the second and the third columns are the absolute path of the forward and reverse read files (Figure 1[href=https://www.wicell.org#fig1]). There may exist some changes in the format of the file, we should adjust it accordingly.\nGenerate a summary of the amplicon sequencing results.\n> qime demux summarize \\\n  --i-data demux.qza \\\n  --o-visualization demux.qzv\nCritical: we can visualize the output file demux.qzv by dragging the file into the website (view.qiime.org[href=http://view.qiime.org], Figure 2[href=https://www.wicell.org#fig2]). It will help us to determine the position to be truncated in the next step. In this example, we have a quality score over 30 for the first 240 bases for forward and reverse reads. So, the number of “--p-trunc-len-f” and “--p-trunc-len-r” can be set to 240 in the next step. Good quality of the forward and reverse sequences could be merged after trimming off low-quality bases.\nPerform quality control and denoising sequences with DADA2.13[href=https://www.wicell.org#bib13] Running these bash commands in the QIIME2 conda environment:\n> qiime dada2 denoise-paired \\\n  --i-demultiplexed-seqs demux.qza \\\n  --p-trim-left-f 17 \\\n  --p-trim-left-r 21 \\\n  --p-trunc-len-f 240 \\\n  --p-trunc-len-r 240 \\\n  --o-table table.qza \\\n  --o-representative-sequences rep-seqs.qza \\\n  --o-denoising-stats denoising-stats.qza \\\n  --p-n-threads 16",
    "Note: The “--p-trim-left-f” and “--p-trim-right-r” are the lengths of the forward and reverse primers applied during the library. In the downstream analyses, we used DADA2 to detect and correct Illumina amplicon sequence data. So, we need remove primer sequences from the sequences if they were present in your sequencing data. As an alternative, we can use the plugin “cutadapt” in the QIIME2 conda environment to trim the primer sequences before this process.\n> qiime cutadapt trim-paired \\\n  --i-demultiplexed-sequences demux.qza \\\n  --p-cores 8 \\\n  --p-front-f CCTACGGGNBGCASCAG \\\n  --p-front-r GACTACNVGGGTATCTAATCC \\\n  --o-trimmed-sequences trimed_demux.qza\nAssigning taxonomy of each amplicon sequence variant (ASV). We can assign the taxonomy of each ASV by running the bash commands:\n> qiime feature-classifier classify-sklean \\\n  --i-classifier SILVA_classifier_V3V4.qza \\\n  --i-reads rep-seqs.qza \\\n  --o-classification taxonomy.qza\nNote: We can use the feature classifiers (greengenes_classifier_V3V4.qza) generated by Greengenes database to assign taxonomy of each ASV.\nFilter feature tables. In this step, we need to: i) Retain the features that contain a phylum-level annotation; ii) Remove all features that contain either mitochondria or chloroplast; iii) Filtering features that show up in only one sample. We can run the bash commands in the QIIME2 conda environment:\n> qiime taxa filter-table \\\n  --i-table table.qza \\\n  --i-taxonomy taxonomy.qza \\\n  --p-include D_1__ \\\n  --p-exclude mitochondria,chloroplast \\\n  --o-filtered-table table_filt.qza\n> qiime taxa filter-seqs \\\n  --i-sequences rep-seqs.qza \\\n  --i-taxonomy taxonomy.qza \\\n  --p-include D_1__ \\\n  --p-exclude mitochondria,chloroplast \\\n  --o-filtered-sequences rep-seqs_filt.qza\n> qiime feature-table filter-features \\\n  --i-table table_filt.qza \\\n  --p-min-samples 2 \\\n  --o-filtered-table table_filt_2nd.qza\n> qiime feature-table summarize \\\n  --i-table table_filt_2nd.qza \\\n  --o-visualization table_filt_2nd.qzv \\\n  --m-sample-metadata-file sample_metadata.tsv\nNote: Here, we should create a file (“sample_metadata.tsv”) manually as the input file. The file contained two columns. The first column is the “sample-id”, and the second column is the “Group”.",
    "View the taxonomic composition of our samples with interactive bar plots. We need to export the file to be recognized by the website (https://view.qiime2.org[href=https://view.qiime2.org]) by running the bash commands:\n> qiime taxa barplot \\\n  --i-table table_filt_2nd.qza \\\n  --i-taxonomy taxonomy.qza \\\n  --m-metadata-file sample_metadata.tsv \\\n  --o-visualization taxa-bar-plots.qzv\nAlpha and beta diversity of the gut microbiota. The diversity is an important aspect should be valued in the study of the gut microbiota, we can calculate the alpha and beta diversity by running the bash commands in the QIIME2 conda environment:\n> qiime phylogeny align-to-tree-mafft-fasttree \\\n    --i-sequences rep-seqs_filt.qza \\\n    --o-alignment aligned-rep-seqs.qza \\\n    --o-masked-alignment masked-aligned-rep-seqs.qza \\\n    --o-tree unrooted-tree.qza \\\n    --o-rooted-tree rooted-tree.qza\n> qiime diversity core-metrics-phylogenetic \\\n  --i-table table_filt_2nd.qza \\\n  --i-phylogeny rooted-tree.qza \\\n  --m-metadata-file sample_metadata.tsv \\\n  --p-sampling-depth 16786 \\\n  --output-dir core-metrics-results\nNote: The parameter of “--p-sampling-depth” should be adjusted according to the minimum number of the file named “table_filt_2nd.qzv”. This file can be visualized by dragging into the website (https://view.qiime2.org[href=https://view.qiime2.org]). We can also set to a certain number to filter out the samples of poor sequencing.\n> qiime diversity alpha-group-significance \\\n  --i-alpha-diversity core-metrics-results/shannon_vector.qza \\\n  --m-metadata-file sample_metadata.tsv \\\n  --o-visualization core-metrics-results/shannon-group-significance.qzv\n> qiime diversity beta-group-significance \\\n  --i-distance-matrix core-metrics-results/bray_curtis_distance_matrix.qza \\\n  --m-metadata-file sample_metadata.tsv \\\n  --m-metadata-column Group \\\n  --o-visualization core-metrics-results/bray_curtis-significance.qzv \\\n  --p-pairwise\nNote: We can set multiple groups for our samples by adding columns to the file named sample_metadata.tsv.\nExport the abundance of all ASVs and their taxonomic assignments. We can extract the data stored in the qza files by running the bash commands in the QIIME2 conda environment:\n> qiime tools export \\\n  --input-path table_filt_2nd.qza \\\n  --output-path exported-feature-table",
    "Note: The detail tutorials of this analysis using QIIME2 can be found in the following link (https://docs.qiime2.org/2022.2/tutorials/[href=https://docs.qiime2.org/2022.2/tutorials/]). After running these bash commands, we can get some useful files for the downstream analyses. 1) The file “taxa-bar-plots.qzv” can be visualized by dragging into the website (https://view.qiime2.org[href=https://view.qiime2.org]). Further, we can also explore the relative abundance on different taxonomy levels. 2) Under the folder “exported-feature-table”, we can obtain the abundance of all filtered ASVs and their taxonomic assignments. It is recommended to filter out the ASVs with an average relative abundance less than a certain cut-off. In our study, we keep 200 ASVs with an average relative abundance less than 0.1%. Under the folder “core-metrics-results”, we can get the results of alpha and beta-diversity, as well as the results of the statistical tests.\nDirichlet multinomial mixture (DMM) model.\nUsing DMM models, individuals were grouped according to the composition of their microbial communities. We can get the community type of our samples by running the R commands:\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2403-Fig1.jpg\nFigure 1. Format of the file used for the import of raw sequencing reads\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2403-Fig2.jpg\nFigure 2. Summary of the quality scores at the corresponding position of the forward and reverse sequences, respectively\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2403-Fig3.jpg\nFigure 3. Visualization of the relative frequency of the gut microbiota at the genus level\nWe should change the taxonomic level to “Level 6”, and then press the Download bottom “csv” to get the relative frequency of the gut microbiota at the genus level.\n> require(DirichletMultinomial)\n> require(dplyr)\n> require(reshape2)\n> require(ggplot2)\n> L6 <- read.csv('level-6.csv', header = T, row.names = 1) %>%\n  select(-c('Group')) %>%\n  as.matrix()\n> fit <- lapply(1:10, dmn, count = L6, verbose = TRUE)\n> lplc <- sapply(fit, laplace)\n> best <- fit[[which.min(unlist(lplc))]]\n> ass <- apply(mixture(best), 1, which.max)\n> imp_value <- melt(fitted(best))\n> for (k in seq(ncol(fitted(best)))){",
    "d <- melt(fitted(best))\n  colnames(d) <- c(\"Genus\", \"Cluster\", \"Value\")\n  d <- subset(d, Cluster == k) %>%\n    arrange(Value) %>%\n    mutate(Genus = factor(Genus, levels = unique(Genus))) %>%\n    filter(abs(Value) > quantile(abs(Value), 0.8))\n> p <- ggplot(d, aes(x = Genus, y = Value)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip( ) +\n  labs(title = paste(\"Top drivers: community type\", k))\n> print(p)\n}\nCritical: The file “level-6” is an output file exported from “taxa-bar-plots.qzv” via the website (https://view.qiime2.org[href=https://view.qiime2.org]). It is an important file for the analysis in the gut microbiota. Here, we just show how to get the count abundance on the genus level in Figure 3[href=https://www.wicell.org#fig3].\nPart 4. Investigation analysis to identify heritable ASVs and associated SNPs\nTiming: 1–2 h\nThe correlation between the genomic relationship matrices and the Bray-Curtis dissimilarity of the cecal microbiota was then calculated by the Mantel test in R, the commands are as follows.\n> require(ade4)\n> array0 <- read.table('filterdata_ibs.mdist', header = FALSE)\n> array <- as.dist(as(array0, \"matrix\"))\n> micro <- read.csv ('level-6.csv', header = T, row.names = 1) %>%\nselect(-c('Group')) %>%\nas.matrix()\n> mantel.rtest (micro, array, nrepet = 9999)\nNote: Before this analysis, it is necessary to convert the original data into distance matrices.\nWe performed a Procrustes analysis on the Bray-Curtis dissimilarity of the cecal microbiota and the genomic relationship matrices using the “procrustes” function from the R package Vegan, the R commands are as follows.\n> require(vegan)\n> require(dplyr)\n> array0 <- read.csv('genetic_distance.csv', header = T, row.names = 1)\n> array <- as.dist(as(array0, \"matrix\"))\n> micro <- read.csv('level-6.csv', header = T, row.names = 1) %>%\n  select(-c('Group')) %>%\n  as.matrix()\n> vare.proc <- procrustes(array, micro)\n> summary(vare.proc)\nTo associate genomic PCA with the microbiota, we fit a linear model to each of the microbial features using the first five principal components, the R commands are as follows.",
    "> ASV1 <- read.table ('ASV_filt.txt', header = F, sep = '\\t', row.names = 1)\n> pca0 <- read.table ('plink.eigenvec', header = T)\n> ASV_pca <- merge (ASV1, pca0, by.x = 'ID', by.y = 'ID',all.y = TRUE)\n> R_sq <- c()\n> pvalue <- c()\n> lmp <- function(modelobject){\n  if(class(modelobject) != \"lm\") stop(\"Not an object of class 'lm' \")\n  f <- summary(modelobject)$fstatistic\n  p <- pf(f[1], f[2], f[3], lower.tail = F)\n  attributes(p) <- NULL\n  return(p)\n}\n> for (i in 1: dim (ASV1)[1]){\n  storage <- lm(ASV_pca[,i+1] ∼ ASV_pca[,i+3] + ASV_pca[,i+4] + ASV_pca[,i+5] + ASV_pca[,i+6] + ASV_pca[,i+7])\n  R_sq[i] <- summary(storage)$adj.r.squared\n  pvalue[i] <- lmp(storage)\n}\n> R2 <- data.frame(IDs, R_sq, pvalue)\n> R2\n> R2$qvalue <- p.adjust(R2$pvalue)\n> R2$Col[R2$qvalue<=0.05] <- 'Significant'\n> R2$Col[R2$qvalue>0.05] <- 'Not Significant'\nNote: The number of the principal components is based on the proportion of explained variance of the first few principal components (PCs). Here, we used the five PCs to fit the model. The number of PCs applied here is determined by the accumulated explained variances of the PCs. The total proportions of explained variances of the selected PCs must reach the desired cut-off. It can be changed according to our real data. We suggest using no more than ten PCs to fit the model, although increasing the number of PCs could increase the accumulated explained variances. We can get the explained variances of each PC (“vairances2”) by running these R commands:\n> variances <- read.table(“plink.eigenval”, header = FALSE)\n> all_variances <- sum(variances[,1])\n> variances2 <- variances\nGWAS of the major ASVs (n = 200) were performed with GEMMA, a genome-wide efficient mixed model association algorithm. Before identifying the heritable ASVs, we need to prepare the input files by running the bash commands in terminal:\n> plink --file plink --make-bed --out gemma_input",
    "> gemma-0.98.1-linux-static --bfile gemma_input -gk 2 -o kinshipfile\nNote: the parameter “-gk” has two options: 1: centered matrix; 2: standardized matrix. We choose the default parameter, getting a standardized matrix.\nTo fit a linear mixed model to get the associated SNPs, we can run the bash commands as following:\n> gemma -bfile gemma_input -k ./output/kinshipfile.sXX.txt -lmm 4 -n ${i} -o final ${i}\nNote: We set the parameter “-lmm” to 4, achieving all the three test results, including wald test, likelihood ration test and score test. We can also set to 1, 2 or 3, corresponding to the wald test, likelihood ration test and score test, respectively. The parameter “-n” is refer to phenotype.\nThe Manhattan plots were drawn by using the R package CMplot.\n> d1 <- read.table('final_1.assoc.txt', header = T, sep = '\\t')\n> d2 <-data.frame(SNP=d1$rs,CHR=d1$chr,BP=d1$ps,P=d1$p_wald)\n> require(CMplot)\n> CMplot(d2, plot.type = \"m\", LOG10 = TRUE, threshold = 8.7e-08, file = \"pdf\", memo = \"\", file.output = TRUE, verbose = TRUE, width = 18, height = 7, signal.col = NULL)\nNote: Here, we set the threshold to 8.7e-08, which is calculated according to the following formula:\nThreshold = 0.05/N (1)\nN is the number of SNPs analyzed in the study."
  ],
  "subjectAreas": [
    "Genomics",
    "Bioinformatics",
    "Microbiology",
    "Genetics",
    "Sequencing"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}