{
  "id": 2983,
  "origin_website": "Cell",
  "title": "Protocol for metabolic synergy analysis of multi-organs in mice using iMS2Net",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nSectioning the tissues and slide preparation\nTiming: 3–4 h\nPrepare the cryostat by adjusting the blade temperature down to −20°C and chamber temperature down to −22°C.\nPlace appropriate amount of OCT according the sample size on the cryostat holder.\nTransfer the samples on the OCT surface, allow to samples and OCT compound to place for 5 min at the quick-freezing area (−60°C) from the cryostat to ensure solidification.\nAdjust the height and angle of samples to achieve the section located at the maximum cross sectional area of sample.\nCut sections at 10–14 μm thickness and transfer them to ITO-coated slide.\nStore slides at −80°C for iMS experiments.\nCritical: Ensure that there is no residual OCT on sample sections because OCT will interfere with molecule detection using iMS. Additionally, alternatively we can use embedding media composed of 1% or 2% carboxymethyl cellulose instead of OCT.\nMatrix spray by bruker ImagePrep device and image acquisition by bruker rapifleX MALDI Tissuetyper\nTiming: 3–4 h\nRemove slides from −80°C, then dry the section samples in a vacuum desiccator for 40 min.\nLabel the section location in the ITO-coated slides.\nThe parameters of matrix sprayer and mass spectrometer shown in Table 1[href=https://www.wicell.org#tbl1] are used for small molecule analysis on iMS. Troubleshooting 2[href=https://www.wicell.org#sec6.3].\ntable:files/protocols_protocol_2524_1.csv\nCritical: Cleaning matrix sprayer using 50% MeOH immediately for 30 min after finishing the spray application.\nCritical: To ensure image acquisition using iMS, check that the images collected from a lipid-rich micro-region contain the targeted peaks (Dong et al.,1[href=https://www.wicell.org#bib1] 2022).\niMS data preprocessing\nTiming: 1 day\nRun Rstudio, load the three R packages of 'Cardinal', 'MALDIquant' and 'MALDIquantForeign'. And load two functions of 'ExtractMSICoord.R' and 'MSIPreprocessing.R' by entering the following commands:\n> library(Cardinal)\n> options(Cardinal.delay=TRUE)\n> library('MALDIquant')\n> library('MALDIquantForeign')\n> source(pathExtractMSICoord)\n> source(pathMSIPreprocessing)",
    "Where “pathExtractMSICoord” and “pathMSIPreprocessing” are the path names of the R functions ExtractMSICoord.R and MSIPreprocessing.R, respectively. To facilitate reading, parameters used in the following sections are summarized in Table 2[href=https://www.wicell.org#tbl2].\ntable:files/protocols_protocol_2524_2.csv\nPixels’ coordinates assignment.\nCreate two folders for saving the raw MSI data of control and experimental groups.\n> dir.create(pathRawMSI_Ctr)\n> dir.create(pathRawMSI_Exp)\n> dir.create(pathCoord_Ctr)\n> dir.create(pathCoord_Exp)\nCopy the corresponding files (both of '.imzML' and '.ibd' files) to the folders.\nExtract the abscissa and ordinate values of all pixels into two files of “CoordX” and “CoordY”, respectively:\n> ExtractMSICoord(pathRawMSI_Ctr, pathCoord_Ctr)\n> ExtractMSICoord(pathRawMSI_Exp, pathCoord_Exp)\nwhere “pathRawMSI_Ctr” and “pathRawMSI_Exp” are the path names of the raw MSI data for control and experimental groups, respectively. And “pathCoord_Ctr” and “pathCoord_Exp” are the path names of the pixels’ coordinates files to be saved for control and experimental groups, respectively.\nNote: Example of path name of the raw MSI data of control group: '/MSI_preproc/control/'.\nExample of file names of the raw MSI data of control group: 'control_slide.imzML' and 'control_slide.ibd'.\niMS data preprocessing.\nData preprocessing.\n> data = MSIPreprocessing(pathRawMSI_Ctr, type='profile')\n> data = MSIPreprocessing(pathRawMSI_Exp, type='profile')\nWhere the “type” attribute has two cases, 'profile' (default) and 'centroid'.\nExport the preprocessed result.\n> dir.create(pathProc_Ctr)\n> dir.create(pathProc_Exp)\n> export(data, pathProc_Ctr, type='csv', force=TRUE)\n> export(data, pathProc_Exp, type='csv', force=TRUE)\nwhere “pathProc_Ctr” and “pathProc_Exp” are two parameters of path names of the preprocessed iMS data of control and experimental groups.\nRead preprocessed data and save the processed results in Matlab.\nRun Matlab.\nRead preprocessed iMS data and save the processed results in Matlab. Troubleshooting 3[href=https://www.wicell.org#sec6.5].\n>clear all; % clear the workspace\n> mzInterval = 0.005; % Set the binning interval be 0.005 Da, for example\n> [lsMZ, msiData_Ctr, msiData_Exp, imgSize_Ctr, imgSize_Exp] = ReadMSI_csv(pathProc_Ctr, pathProc_Exp, pathCoord_Ctr, pathCoord_Exp, mzInterval);",
    "Where “mzInterval\" is the binning interval for spectra of all pixels, which should be defined in advance by the user; “pathProc_Ctr”, ”pathProc_Exp”, ”pathCoord_Ctr”, and ”pathCoord_Exp” are path names of the processed data and the coordinate data of the control and treated groups; For the five output variables, “lsMZ” is the common peaks list of the studying iMS data, “msiData_Ctr” and ”msiData_Exp” are the preprocessed iMS data, ”imgSize_Ctr” and ”imgSize_Exp” are the image sizes of the control and treated groups, respectively.\nNote: For the scenario that multiple MS images for the control or/and treated groups, we need to import each replicate separately to get the pixels data and their coordinate data from multiple control/treated MS images, then combine the pixels data into a single dataset. It may take you about 15 min to run step 6.\nCreate two label matrices (lblPixel_Ctr and lblPixel_Exp) with same size to the two images imgSize_Ctr and imgSize_Exp, respectively.\n> lblPixel_Ctr = zeros(imgSize_Ctr);\n> lblPixel_Exp = zeros(imgSize_Exp);\nSet values for all elements in the two matrices ”lblPixel_Ctr” and “lblPixel_Exp” with organ indexing as shown in Figure 1[href=https://www.wicell.org#fig1].\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2524-Fig1.jpg\nFigure 1. Example of labeling the pixels\n“-1” for background pixels, “0” for unannotated or uninterested pixels, and “1”∼”7” for pixels from the 7 organs, respectively. Using a same indexing system in both control and treated groups.\nCreate the organ name list “lsOrganName” according the labeling.\n> lsOrganName = {'Brain';'Heart';'Hpf';'Intestine';'Liver'; 'Lung'; 'Thymus'};\nNote: The indexes of the seven organs of “Brain”, ”Heart”, “Hpf”, “Intestine”, ”Liver”, “Lung” and “Thymus” are 1, 2, 3, 4, 5, 6, 7, respectively. However, users should set values for “lsOrganName“ according to their own data.\nExtract organ data matrix: troubleshooting 4[href=https://www.wicell.org#sec6.7].\n> [msiDataOrgan_Ctr, numPixel_Ctr] = ExtractOrgansData(msiData_Ctr,lblPixel_Ctr);\n> [msiDataOrgan_Exp, numPixel_Exp] = ExtractOrgansData(msiData_Exp,lblPixel_Exp);",
    "Where “msiDataOrgan_Ctr” and “msiDataOrgan_Exp” are of data type cell, in which “msiDataOrgan_Ctr{k}” and “msiDataOrgan_Exp{k}” are the data of organ k in control and treated groups, “numPixel_Ctr” and “numPixel_Exp” are the pixel numbers of each organ in control and treated groups, respectively.\nRemove the temple variables, save the preprocessed data and parameters to the file “msiDataProc.mat”.\n> clear msiData_Ctr msiData_Exp; % Clean the workspace\n> save msiDataProc.mat; % save variables in the workspace\nNote: The preprocessed results are saved in the file of “msiDataProc.mat” for further analysis, including “lsOrganName“, “lsMZ”, “msiDataOrgan_Ctr”, “msiDataOrgan_Exp”, “lblPixel_Ctr”, “lblPixel_Exp”, ”imgSize_Ctr”, ”imgSize_Exp”, “numPixel_Ctr”, and “numPixel_Exp”.\nMetabolic synergy analysis (iMS2Net)\nTiming: 2 h\nOrgan network of metabotypic similarity\nCalculate and save metabotypic similarities between organs:\n> clear; load msiDataProc.mat; % Read the preprocessed data\n> matSim_Ctr = MetSim_BWOrgan(msiDataOrgan_Ctr);\n> matSim_Exp = MetSim_BWOrgan(msiDataOrgan_Exp);\n> save('matSim.mat', 'matSim_Ctr','matSim_Exp’);\nWhere “matSim_Ctr” and “matSim_Exp” are metabotypic similarities of the control and treated groups. It may take dozens of minutes to run MetaSim_BWOrgan function.\nPlot the inter-organ similarity network (as shown in Figure 2[href=https://www.wicell.org#fig2]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2524-Fig2.jpg\nFigure 2. An example of Organ network of metabotypic similarity\nNode size is proportional to the number of pixels in the organ. Edge width is proportional to the similarity between two corresponding organs. One specific color is assigned for each organ. This figure is pulled from Dong et al. iScience (2022).1[href=https://www.wicell.org#bib1]\n> simNet_plot(matSim_Ctr, lsOrganName, numPixel_Ctr, dbThreRatio)\n> simNet_plot(matSim_Exp, lsOrganName, numPixel_Exp, dbThreRatio)\nWhere “dbThreRatio” is a ratio threshold set by the user, there is a link between two organs if the similarity score is larger than dbThreRatio. dbThreRatio ranges at [0,1] and should be adjusted manually to get a connected graph with a proper number of links. dbThreRatio=0.35 is a good try.\nMetabolic vulnerability analysis\nCell-specific differential expressed ions.",
    "Calculate the ions (DEIs) for each cell (pixel) in the organs from treated group with reference to control group.\n> clear; load msiDataProc.mat; % Read the preprocessed data\n> lsDEI = DEI_Pxiel(msiDataOrgan_Exp, msiDataOrgan_Ctr, alpha);\nwhere “alpha” is the significance level, e.g., alpha=0.05.\nVisualize the DEIs with heatmap and violin plot (as shown in Figures 3[href=https://www.wicell.org#fig3]A and 3B).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2524-Fig3.jpg\nFigure 3. The result of Metabolic vulnerability analysis\n(A and B) Heatmap (A) and violin plot (B) of the numbers of cell-specific DEIs in all 7 organs.\n(C and D) Heatmap (C) and violin plot (D) of the edge numbers of cell-specific DCNs in all 7 organs. This figure is pulled from Dong et al. iScience (2022).1[href=https://www.wicell.org#bib1]\n> Heatmap_DEI(lsDEI,lblPixel_Exp)\n> Violin_DEI(lsDEI, numPixel_Exp, lsOrganName)\nCell-specific differential correlation network.\nCalculate the differential correlation network (DCN) for each cell (pixel) in the organs from treated group with reference to control group.\n> lsDCN = DCN_Pixel(msiDataOrgan_Exp, msiDataOrgan_Ctr, numPixel_Exp, alpha)\nwhere “alpha” is the significance level, e.g., alpha = 0.05. “lsDCN” is the DCN link numbers of all pixels in msiDataProc_Exp.\nNote: It takes you several to ten minutes to run DCN_Pixel.\nVisualize the DCN with heatmap and violin plot (as shown in Figures 3[href=https://www.wicell.org#fig3]C and 3D).\n> Heatmap_DCN(lsDCN, lblPixel_Exp)\n> Violin_DCN(lsDCN, numPixel_Exp, lsOrganName)\nOrgan covariation network analysis\nOrgan covariant DEIs.\nCalculate the covariant DEI list of all pixels in each organ from treated group with reference to control group.\n> load msiDataProc.mat; % Read the preprocessed data\n> matCoDEI = DEI_Organ(msiDataOrgan_Exp, msiDataOrgan_Ctr);\nCalculate the organ network of metabolic covariation in view of metabolite abundance and visualize it as a graph (as shown in Figure 4[href=https://www.wicell.org#fig4]A).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2524-Fig4.jpg\nFigure 4. The result of Organ covariation network analysis",
    "(A and B) In view of (A) metabolite abundance and (B) metabolite-metabolite interaction. Node size and edge width represent the size of covariant DEIs/DCN, which is also shown on nodes or edges. Numbers on the edges are the common DEIs number or DCN edges number between two corresponding organs. This figure is pulled from Dong et al. iScience (2022).1[href=https://www.wicell.org#bib1]\n> DEI_Net(matCoDEI,lsOrganName,dbThreRatio);\nWhere “dbThreRatio” is the threshold ratio, ranges at [0,1]. dbThreRatio = 0.55 could be a good try. There is a link between two nodes (organs) if the common DEI number of the two organs is larger than the threshold.\nOrgan covariant DCN.\nCalculate the covariant DCN between control and treated groups for each organ:\n> matCoDCN = DCN_Organ(msiDataOrgan_Exp, msiDataOrgan_Ctr, alpha);\nWhere “alpha” is the significance level, e.g., alpha = 0.05.\nCalculate the organ network of metabolic covariation and visualize it as a graph (as shown in Figure 4[href=https://www.wicell.org#fig4]B).\n> DCN_Net(matCoDCN,lsOrganName,dbThreRatio);\nWhere “dbThreRatio” is the threshold ratio, ranges at [0,1]. dbThreRatio = 0.65 could be a good try. There is a link between two nodes (Organs) if the common edges number of the two organs is larger than dbThreRatio.\nMetabolic diversity analysis\nSpectral entropy.\nCalculated the spectral entropy to quantify the metabolic diversity of pixels.\n> clear; load msiDataProc.mat; % Read the preprocessed data\n> [lsEntSpect_Ctr, lsEntSpect_Exp] = Entropy_Spect(msiDataOrgan_Ctr, msiDataOrgan_Exp, numPixel_Ctr, numPixel_Exp);\nVisualize the spectral entropy of all organs (as shown in Figures 5[href=https://www.wicell.org#fig5]A and 5B).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2524-Fig5.jpg\nFigure 5. The result of metabolic diversity analysis\n(A) Violin plot of spectral entropy in control group (left) and treated group (right).\n(B) Organ ranks of spectral entropy.\n(C) Violin plot of ionic entropy in control group (left) and treated group (right).",
    "(D) Heatmap of ionic entropy in control group (left) and treated group (right). This figure is pulled from Dong et al. iScience (2022).1[href=https://www.wicell.org#bib1]\n> EntSpect_plot(lsEntSpect_Ctr, lsEntSpect_Exp, lsOrganName)\nIonic entropy.\nCalculate the ionic entropy to quantify the metabolic diversity of the ion.\n> [matEntIon_Ctr, matEntIon_Exp] = Entropy_Ion(msiDataOrgan_Ctr, msiDataOrgan_Exp, numPixel_Ctr, numPixel_Exp);\nVisualize the ionic entropy of all peaks in different organs (as shown in Figures 5[href=https://www.wicell.org#fig5]C and 5D).\n> EntIon_plot(matEntIon_Ctr, matEntIon_Exp, lsMZ, lsOrganName)"
  ],
  "subjectAreas": [
    "Bioinformatics",
    "Computer Sciences",
    "Metabolism",
    "Biotechnology And Bioengineering",
    "Environmental Sciences"
  ],
  "bigAreas": [
    "Bioinformatics & Computational Biology"
  ]
}