{
  "id": 19686,
  "origin_website": "Wiley",
  "title": "Using ExpressAnalyst for Comprehensive Gene Expression Analysis in Model and Non-Model Organisms",
  "procedures": [
    "The objective of this protocol is to prepare the data for downstream differential expression and functional analysis using ExpressAnalyst. This includes formatting the input files, mapping transcript identifiers to the internal annotation database, performing a basic quality check on the data, and applying filtering and normalization to remove non-informative genes and to correct for systematic technical differences. This protocol assumes that RNA-seq reads have already been aligned to a transcriptome and summarized in a count table, which is the case for most researchers. If this is not the case and you must start from FASTQ files, please see Basic Protocol 11[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0011]. This protocol is also specifically written for RNA-seq count data. ExpressAnalyst also accepts abundance tables produced from microarray or proteomics experiments. Many of the overall concepts are the same; however, count data requires specific normalization techniques. For a discussion of microarray intensity and proteomics abundance data processing, please see Basic Protocol 6[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0006].\nBasic Protocols 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001] to 4[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0004] use the same dataset, an RNA-seq count file measured in mouse liver (Diamante et al., 2021[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0012]). It has been previously shown that bisphenol-A (BPA) exposure during pregnancy leads to cardiometabolic disease in offspring. The objective of the original study was to elucidate the mode of action underlying this outcome. The authors exposed pregnant mice to BPA and collected RNA-seq data in the liver from offspring of both sexes, along with bodyweight, insulin secretion, and targeted lipids in the liver and plasma samples. Differential gene expression analysis was conducted between the exposed and control groups to understand the observed phenotypic differences and metabolic outcomes.\nNecessary Resources\nHardware\nA computer with internet access\nSoftware\nAn up-to-date web browser such as Google Chrome, Mozilla Firefox, or Safari, with JavaScript enabled (see Internet Resources)\nFiles\nNone",
    "1. Go to the ExpressAnalyst home page (https://www.expressanalyst.ca[href=https://www.expressanalyst.ca]) and click the “Tutorials” link at the top menu bar to visit the tutorial page. Scroll to the bottom of the page and find the “Dataset for the ExpressAnalyst Current Protocol” data section. Download the two text files labeled “mouse_counts.csv” and “mouse_metadata.csv.” Open them in a spreadsheet program or a text editor to view the data format (Fig. 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0002]).\nThe most frequent help requests that we receive are related to data and metadata formatting. The input files are displayed in Figure 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0002], including a gene count table for 16 samples (Fig. 2A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0002]), and a metadata table describing these samples (Fig. 2B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0002]). The first two columns in the metadata table show the main study design: 4 BPA exposed and 4 controls for both male and female mice. Liver and plasma lipids were also measured, which are the continuous values displayed in the remainder of the metadata columns.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/8a261f8a-b7b4-4f72-b9ca-a9fcd1f823b9/cpz1922-fig-0002-m.jpg</p>\nFigure 2",
    "Example omics data and metadata tables. The gene count table (A) shows the required format for RNA-seq count table, with sample names in columns and transcript identifiers (here, Official Gene Symbol) in rows. The row surrounded by the red dashed box is an example of a transcript with no counts detected for any sample. These rows will be automatically removed during data upload. The metadata table (B) has a different format, with metadata variables in columns and sample names in rows. Notice the shared sample names in A and B (highlighted with the solid blue boxes). Exactly matching sample names are required for ExpressAnalyst to correctly pair information across input files. Missing values in the metadata should be left blank, as shown in the two empty cells in B surrounded by the dashed orange box. In both A and B, the column headers (sample names and metadata variable names) should not contain spaces or special characters (i.e., %, /, etc.), which could lead to errors during data upload.\n2. Go back to the ExpressAnalyst home page and click “Start Here” to access the Module Overview page. Locate the “Statistical & Functional Analysis” section and click the “Start Here” button underneath the single gene expression table input type. On the Data Upload page, set the organism to “M. musculus (mouse),” leave the “Analysis Type” as “Differential Expression,” set the data type to “Counts (bulk RNA-seq),” and the ID type to “Official Gene Symbol.”",
    "Users must specify the correct organism and ID type so that ExpressAnalyst can map feature IDs to its internal annotation databases. Upon data upload, all IDs are converted to Entrez IDs. When multiple features are mapped to the same Entrez ID (for example, different transcript isoforms for the same gene), their expression values are summed if the data are counts and averaged if the data are intensities (microarray, proteomics). If your data are pre-normalized counts, you should upload them as intensities.\nIt is possible to skip the annotation step by leaving the organism and ID type as “Not specified.” This may be desirable if your species or ID type is not supported, or if you'd like to retain the transcript-level resolution. Please note that in this case, functional analysis will be disabled as functional analysis requires gene level annotation.\n3. Choose the “mouse_counts.csv” file for the data file, and the “mouse_metadata.csv” for the metadata file. Leave the “Metadata included” box unchecked and click “Submit.” Once the upload has finished, various summary messages will be displayed in the top right corner. Click “Proceed” to view this information in more detail on the next page.\nExpressAnalyst accepts files in either comma-separated (.csv) or tab-delimited (.txt) format. Users have the option of either embedding metadata in the count table and uploading a single file, or formatting metadata in a separate table and uploading two files. The former strategy can be used for simple experimental designs with one or two metadata variables, while the latter is suitable for datasets with complex metadata.",
    "4. In the Data Quality Check page, examine the text summary of the uploaded datasets in the gray box at the top of the “Omics data overview” tab. It shows the sample size, the percentage of features that are matched to the annotation database, as well as the number and type of experimental factors.\nThe annotation libraries in ExpressAnalyst are updated about once per year, based on the latest ID versions available from NCBI (Entrez, RefSeq), Ensembl, and Uniprot (Brown et al., 2015[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0006]; Consortium, 2019[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0009]; Zerbino et al., 2018[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0049]). If your data were annotated many years ago, you may have a lower percentage of features that map to the ExpressAnalyst database. Also, Official Gene Symbols generally have a lower mapping rate than the other ID types since there can be many synonyms for the same gene, not all of which may be present in our database.\n5. Scroll down to view various diagnostic graphics, the first of which is the “Box plot.” Since the expression values range from zero to >10,000, it is clear that these are unnormalized count values. Click each of the additional tabs to view the “Count sum” (displays the total counts from all genes for each sample, also called the sequencing depth), “PCA plot” (scatterplots of the top two principal components), and “Density plot” (distribution of count values for each sample) of the uploaded data. The density plot appears in the shape of an “L,” which is caused by the large range and right-skewed distribution of raw count values.",
    "The figures shown under the dataset summary are useful for visually identifying outlier samples, assessing whether the data are normalized or not, determining appropriate filtering thresholds, and providing a benchmark to compare the effects of normalization. Deciding whether a sample is an outlier that should be removed is not a straightforward process. In general, we wish to remove samples that are substantially different from other samples based on technical reasons. A sample might be different due to biological reasons, in which case it should not be removed as this will bias the downstream statistical analysis and potentially lead to incorrect interpretation of the results. Unfortunately, it is not usually possible to determine whether an outlier is due to technical or biological reasons from the data alone. One guiding principle is that biological variability tends to have a smaller range than technical variability, hence if an outlier is extreme, we can usually assume it is a technical outlier and safely remove it without compromising our statistical inference. Examples of extreme outliers are when the first principal component (PC1) explains >70% of the variability and has a single or small number of samples on the extreme end of PC1, or when the count sum of a sample is several orders of magnitude smaller than the other samples (i.e., sequencing effects).",
    "6. Go back to the top of the page and click the “Metadata overview” tab. Scroll down to the metadata table (Fig. 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0003]) and verify that each variable has been correctly recognized as either “Discrete” (Treatment, Sex) or “Continuous” (4 liver and 7 plasma lipid variables). The classification of each metadata variable can be updated using the dropdown menus below individual variable names. Depending on your screen size, some metadata variables may not be visible. To see the additional columns, simply scroll to the right within the table area.\nScrolling to the far right reveals a pencil can and a garbage can icon for each row, allowing users to edit or delete any metadata values or sample names. If you remove a sample from the metadata table, the corresponding sample in the omics data table will also be removed automatically.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/32c3982a-aed6-41b5-bd53-067d7ea0b3c3/cpz1922-fig-0003-m.jpg</p>\nFigure 3\nMetadata editor. ExpressAnalyst automatically infers the type of each metadata variable (‘Discrete’ or ‘Continuous’). Users can use the dropdown menus below each variable name (1) to make corrections. Other tools for editing the metadata information, for example the order of categorical factor classes, can be accessed through the ‘Edit metadata column’ button (2). The pencil icon (3) can be used to edit individual metadata values.",
    "7. Click the “Edit metadata column” button above the metadata table (Fig. 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0003]). Navigate to the “Order (factor-level)” tab and make sure the “Treatment” variable is selected in the dropdown. By default, discrete metadata classes are sorted alphabetically in all downstream plots. However, in some cases, a different order might make more sense. Here, we wish to always plot the control samples on the left and the BPA-exposed samples on the right. Click the “Control” value and use the up-arrow button on the left to move it above “BPA” and click “Update.” Click “Proceed.”\nThe other tabs allow users to include/exclude metadata variables from being displayed as options during the downstream statistical analysis, as well as to specify the primary metadata. The primary metadata is used to annotate most visualizations throughout the remainder of the analysis, so users should select the metadata that they are most interested in.\n8. Click “Proceed.” A dialog will appear, warning that a few missing values were detected in the metadata and explaining how they will be handled in the downstream steps. Click “OK.”\nThe downstream differential expression requires complete metadata for any variables included in the analysis. For example, if both the “Sex” and “liver_TG” variables are included in differential expression analysis (DEA), any sample with at least one missing value for either “Sex” or “liver_TG” will be excluded prior to computing the DEA statistics for that comparison.\n9. Leave the default filtering settings (“Filter unannotated features” checked, “Low abundance” threshold to 4, and “Variance filter” to 15), change the normalization method to “Relative log expression normalization,” and click “Submit.”",
    "Filtering out transcripts that are of low confidence or uninformative to the research context can increase the statistical power of the downstream DEA (Bourgon et al., 2010[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0004]). We can use summary statistics that are agnostic to the metadata (unsupervised), such as average abundance and variability across all samples, to flag transcripts for exclusion. Transcripts with a low average abundance near the detection limit are likely unreliable, while transcripts with a very low variability across all samples are unlikely to correlate with any metadata labels. Note, one should avoid using metadata labels relevant to downstream analysis to decide which transcripts to exclude, which will introduce bias to the DEA and other supervised methods (Bourgon et al., 2010[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0004]).",
    "The purpose of normalization is to make expression profiles more comparable across samples, and to transform them to be more suitable for statistical analysis and visualization. All normalization options for RNA-seq counts (other than ‘None’) are from the “voom” methods in the limma R package which transform the data to “Log2-counts per million” or logCPM (Law et al., 2014[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0025]). This transforms data to the log scale and normalizes for sequencing depth, which often varies across samples. Another potential issue with RNA-seq data relates to its compositional nature (Lovell et al., 2015[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0032]), and the large range of abundances across different transcripts. As we saw in the boxplots and the density plots on the data overview page, most transcripts have counts in the low 10s to 100s range, but a small percentage have many more than this (>15,000). This means that a small number of transcripts can account for >50% of the total counts. If these highly abundant transcripts vary substantially across experimental conditions, they can influence the relative values (such as counts or logCPM) of many other transcripts, even if these transcripts do not change on an absolute scale (Lovell et al., 2015[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0032]). This is a challenging issue to correct for and impacts different datasets to different extents. The last three normalization methods (“Upper Quantile Normalization,” “Trimmed Mean of M-values,” and “Relative log expression normalization”) implement different strategies to address it (Law et al., 2014[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0025]).\n10. Scroll down to the figures in the lower half of the page and consider the “Box plot” and “Density plot” tabs.",
    "Both plots look very different after normalization. The normalized expression values are now below 15, do not have a right-skew distribution at the sample level, and have very similar distributions across samples. This indicates that the data have been normalized for sequencing depth and transformed to a log scale.\n11. Click on the “PCA plot” tab to examine the data patterns based on principal component analysis.\nPrincipal component analysis (PCA) is a widely used dimensionality reduction method that can summarize main variability trends in high-dimensional omics data into a few dimensions for intuitive visualization. In the PCA plot based on the first two principal components, we see that the data fall into four clear clusters (Fig. 4D[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0004]). The samples are colored according to the primary metadata (Treatment), which reveals that the “Control” and “BPA” samples are separated along PC2. Inspecting the sample names, we can see that the samples are separated according to Sex along PC1, with male on the right and female on the left. This is a sign that there is a strong biological signal with respect to our main metadata of interest. Sometimes the PCA shows that the main trends in the data are related to technical variables such as batch or sample preparation protocols. This does not mean that there are no meaningful patterns in the data related to our metadata of interest, but that they explain less variability in the data than the technical parameters. In these cases, the technical parameters should be accounted for during the statistical analysis. This topic will be covered in Basic Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0002].\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/c922cd44-d111-4939-b7a5-abfd94b6ce91/cpz1922-fig-0004-m.jpg</p>\nFigure 4",
    "Diagnostic plots before and after normalization. The box plot in (A) and PCA plot in (B) show the uploaded count data, while (C) and (D) show the data after filtering and normalization. Note the difference in metadata order in (B) and (D) after re-ordering the treatment classes from BPA-Control to Control-BPA.\n12. Click on the “Mean-variance plot” tab to explore the relationship between the mean and variance of transcript expression values.\nThere is typically a relationship between the mean and variance of transcript expression values (Liu et al., 2015[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0030]). While trends may vary across datasets, a typical relationship for unfiltered RNA-seq data is shown in Figure 5A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0005]: moving from left to right along the x-axis, the transcript standard deviation increases for a short section, peaks, and then decreases with increasing mean expression values. The initial increasing section is where transcripts are at or near the detection limit, hence the standard deviation is lower than we would expect based on the mean expression, due to the high numbers of zero values. The goal is to eliminate the initial upswing (see the dashed red box in Fig. 5A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0005]) by setting an appropriate abundance filter, to produce a consistently decreasing mean-variance trend as in Figure 5B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0005]. If the upswing area is not removed, the abundance filter should be increased.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/fb905a43-c343-451c-9a62-e3fe1f7f7022/cpz1922-fig-0005-m.jpg</p>\nFigure 5\nMean-variance trend of RNA-seq data. Plots showing the mean expression values on the x-axis and standard deviation of expression values on the y-axis for all transcripts, both before (A) and after (B) applying abundance and variance filters. The dashed red box in (A) highlights the portion of the trend with a positive mean-variance association.\n13. Click the “Show R Commands” link in the top right corner to view the R commands history.",
    "The R functions used in ExpressAnalyst are publicly available on the GitHub page (https://github.com/xia-lab/ExpressAnalystR[href=https://github.com/xia-lab/ExpressAnalystR]) and can be installed as an R package for local analysis (Fig. 6B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0006]). Throughout the analysis, the executed functions are tracked in the R command history. These features are implemented in ExpressAnalyst for transparency and reproducibility, so that users can see exactly which analyses have been performed.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/b01eb484-630c-4de6-8509-2272431179b1/cpz1922-fig-0006-m.jpg</p>\nFigure 6\nExpressAnalystR command history. Throughout the analysis, click the “Show R Commands” link in the top right corner to display this list of R commands used during the analysis (A). Instructions for installing and using ExpressAnalystR (B) are available under the “ExpressAnalystR” tab on the homepage.",
    "The general objective of differential expression analysis (DEA) is to identify genes or transcripts associated with specific experimental factors of interest, while accounting for other major sources of variability within the data (Law et al., 2016[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0024]). The observed expression patterns can be explained by a combination of technical, biological, environmental, and experimental sources. Technical sources can include different sample preparation or sequencing depths across samples. Biological sources include factors such as sex, age, and circadian rhythm, while examples of environmental sources may encompass the geographic locations of sample collection or lifestyle parameters such as smoking or diet. Finally, experimental sources include any independent variable imposed by the researcher, such as chemical treatments or gene knockouts. In this protocol, we introduce the concepts behind using generalized linear models for performing DEA of gene expression data, explain differences between the main DEA algorithms, and describe how to configure DEA for common experimental designs.\nNecessary Resources\nHardware\nA computer with internet access\nSoftware\nAn up-to-date web browser such as Google Chrome, Mozilla Firefox, or Safari, with JavaScript enabled (see Internet Resources)\nFiles\nNone\n1. This protocol carries on where Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001] left off. If you have not just completed Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001], please do so. Click “Proceed” to move from the “Data Filtering & Normalization” page to the “Differential Expression Analysis” page to begin this protocol.\n2. There are two different parameter interfaces for DEA. The “Simple Metadata” tab is for datasets with only one or two discrete metadata variables, while the “Complex Metadata” tab can handle any number of metadata, including both discrete and continuous types. We will work primarily with the “Complex Metadata” interface. Click the “Complex Metadata” tab.",
    "The objective of DEA is to identify genes that are related to a primary metadata of interest. For example, we may want to know which genes have different expression values in the “BPA” compared to the “Control” samples, or we may want to know which genes are associated with a continuous metadata like “Age.” We may want to additionally consider other metadata when calculating these statistics, to account for potentially confounding biological or technical factors. ExpressAnalyst uses generalized linear models to conduct DEA (Fig. 7[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0007]) (Smyth, 2005[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0041]). Figure 7[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0007] is a simplified representation to highlight how linear models are used. Each of the DEA algorithms makes additional corrections while fitting the model according to their specific statistical assumptions and returns a slightly different set of statistics. Users should always consult the original publications and user manuals for each of the DEA algorithms for more details.\nThe structure of the linear model and statistics extraction are very flexible and can support a wide range of experimental designs. For example, we could include more model terms if we needed to account for additional parameters like “Batch” or “Age,” or we could specify contrasts when extracting the statistics, such as to evaluate interactions between the modeled variables.",
    "Both discrete and continuous variables can be included in the linear model. Continuous variables like “Age” are represented in the model by a single term. If the primary metadata is a continuous variable, then the extracted results include the model coefficient for the “Age” term. If there is a positive or negative association between “Age” and the expression values, then the coefficient will be positive or negative respectively. If the association is stronger, then the coefficient will have a value of greater magnitude. Discrete variables are slightly more complicated, as we must use ‘dummy coding’ to include them in the model. Consider a categorical variable “Dose” that has three classes: “Control,” “Low,” and “High.” While constructing the model, one will be selected as the reference class (e.g., “Control”) and two terms will be added to model: “Low:Control” and “High:Control.” If the primary metadata is discrete, the user can explicitly set the reference class and choose the specific term they would like to extract statistical results for. For example, if you set “Reference group” to “Control” and “Contrast” to “High,” the extracted statistics would be for the “High:Control” term and would describe a comparison between the ‘High’ dose samples and the ‘Control’ samples. In scenarios where the primary metadata is discrete (like this one), the extracted model coefficient is the same as the log2 fold-change (log2FC).\nIn the following protocol steps, we will demonstrate how linear models can be configured for different experimental designs and research questions.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/05c5d49a-9507-4204-bf77-15e175e637da/cpz1922-fig-0007-m.jpg</p>\nFigure 7",
    "Linear models for differential expression analysis. First, a linear model is fit to the expression values for each transcript (1), and then summary statistics are extracted from the model fit for the terms of interest (2). The results for each transcript are compiled in a table (3). A model of the form Y ∼ Treatment + Sex with ‘Treatment’ set as the primary metadata returns a results table with the effect size and p-value for BPA vs Control for each transcript, while accounting for variability associated with ‘Sex.’\n3. Change the “Reference group” to “Control” and the “Contrast” to “BPA,” leaving the remaining as the default settings. The selected parameters should be as in Figure 8[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0008]. Click “Submit” and then click “Proceed.”\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/6a232a48-0065-45cd-8000-8c719f74fc60/cpz1922-fig-0008-m.jpg</p>\nFigure 8\nSettings for basic differential expression analysis (DEA) with respect to Treatment. These parameters will configure the analysis to compare expression values from all ‘BPA’ samples to all ‘Control’ samples.\n4. The simple comparison of all “BPA” samples vs all “Control” samples results in 2957 transcripts with statistically significant differences in expression values (Fig. 9[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0009]). Click the image icon under the “Graphical Summary” column for the top gene (Gm20594) to view the expression values across “Treatment” groups. Click the “NCBI” link for Gm20594 to open the gene profile in the National Center for Biotechnology Information database.",
    "The “Complex metadata” tab uses the limma R package (Smyth, 2004[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0040]), hence the columns in the Results Table are the same statistics that would be returned if you performed DEA in R with limma. The BPA-Control column shows the log2FC, which is the coefficient for the “BPA:Control” term from the linear model. The “AveExpr” column is the mean normalized expression across all samples. The “t,” “P.Value,” and “adj.P.Val” columns are the t-statistic (ratio of the BPA-Control value to the standard error), p-value, and adjusted p-value for that transcript. The “B” column is the B-statistic, also known as the log-odds. The “B” statistic is a more advanced topic and is less commonly used than the p-value to determine differential expression.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/8fc9fe55-c615-4c12-abd3-0a6254286a22/cpz1922-fig-0009-m.jpg</p>\nFigure 9\nDEA results page. The table of statistical results are sorted in the order of ascending p-values, so the most statistically significant transcripts are at the top. By default, any transcript with an adjusted p-value <0.05 is considered a differentially expressed gene (DEG); however, users can adjust this threshold and can also consider log2FC by changing the parameters in (1) and clicking “Submit.” The table is interactive and linked to each gene's NCBI profile (2) and expression values (3).\n5. Click “Previous” to go back to the DEA page. Instead of looking for transcripts that are differentially expressed between treatment groups, we can consider “Sex” instead. Go the “Complex metadata” tab, change the “Primary metadata” to “Sex,” change the “Contrast” to “Male,” click “Submit” and then “Proceed.”",
    "The default option for “Contrast” is “All contrasts (ANOVA-style).” In cases where there are three or more classes in a discrete primary metadata, and therefore more than one dummy-coded term in the model, we can calculate the p-value using an ANOVA-style test to assess for significant differences in variability across all treatment groups. Both of our discrete metadata (“Sex” and “Treatment”) have only two classes. In this case, the “ANOVA” option will give the same results as when we specify the exact comparison.\n6. Now there are 2456 significant transcripts, including those that are widely known for their sexually dimorphic expression. For example, the Xist transcript responsible for X-chromosome inactivation is the 3rd on the list. Once you are done exploring the results, click “Previous” to return to the DEA page.\n7. Go to the “Complex metadata” tab. In the last few steps, we identified transcripts associated with “Treatment” and “Sex” separately. However, based on the patterns in the PCA plot that we generated in Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001], we expect that some transcripts are impacted by both factors, and we want to consider this in our statistical analysis. Set “Primary metadata” to “Treatment,” “Reference group” to “Control,” “Contrast” to “BPA,” and select “Sex” from the dropdown next to “Covariates (control for).” Click “Submit” and then “Proceed.” Now there are 3,801 significant features, representing a substantial increase.",
    "To better understand what's going on here, consider two genes: Rpl39 and S100a1 (Fig. 10[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0010]). When we visualize the raw expression values between the “Control” and “BPA” groups, it is clear that both are differentially expressed. There is much less variability within the Rpl39 treatment groups compared to the S100a1 treatment groups, however the variability in S100a1 is not random. Inspecting the data more closely, we see that the female samples have lower expression values than the male samples in both groups. The strength and direction of the relationship with treatment is nearly identical for both sexes.\nIncluding “Sex” in the model allows it to account for these predictable differences. Without adding sex as a covariate, the p-value for S100a1 is 2.93 × 10-6 and this transcript is the 303rd most significant in the dataset. After adding sex, the p-value drops to 2.08 × 10-11 and S100a1 is now the 4th most significant transcript. In contrast, the p-value for Rpl39 increases slightly, from 3.70 × 10-12 to 9.90 × 10-12. This is expected, as including additional terms in the linear model decreases the degrees of freedom and therefore the statistical power, hence we can expect the p-values to slightly increase when there is no relationship between the transcript and the covariate (i.e., “Sex”).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/c06ddad3-80d8-4f10-b118-011bb2077d9f/cpz1922-fig-0010-m.jpg</p>\nFigure 10\nEffect of including covariates in differential expression analysis (DEA). Normalized expression values for (A) Rpl39 (ribosomal protein L39) and (B) S100a1 (S100 calcium binding protein A1), grouped according to treatment. Groups of male and female observations in (B) were manually labeled with two dashed lines to highlight their distinct expression patterns.",
    "8. Click “Previous” to return to the DEA page and navigate to the “Complex Metadata” tab. Finally, we will show that continuous metadata can be analyzed as well. The metadata for this study contains measurements of four lipids in the liver and seven in the plasma, all of which are continuous (Diamante et al., 2021[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0012]). While the study was designed to assess these measurements for differences between treatment groups, we can also look for transcripts associated with these values. Select ‘Liver TG’ as the primary metadata.\nNotice how the option to select the reference and contrast groups are disabled when we select a continuous variable for the primary metadata, as these are only applicable for discrete variables.\n9. If we expect that both lipid and transcript expression levels are perturbed by BPA exposure, we may observe a significant association between some transcripts and “Liver TG.” In this case, we may naively assume that the changes in gene expression cause the changes in lipid levels, when in reality both are caused by BPA exposure, making it a confounding factor. We can avoid this by including “Treatment” as a covariate in the model. Select both “Treatment” and “Sex” as covariates, click “Submit,” and click “Proceed.”\nIn addition to covariates, it is possible to include a variable in the model as a “Blocking Factor.” Covariates are modeled as fixed effects while blocking factors are modeled as random effects. These terms will be familiar to you if you have experience with mixed effects models. See Basic Protocol 5[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0005] for further discussion of fixed vs random effects.",
    "10. There are no significant differentially expressed genes (DEGs) for this statistical comparison. This is not unexpected because this study was not designed to detect transcripts associated with the lipid concentrations. We include it to show how this type of analysis can be conducted for other datasets. Click “Previous” to return to the DEA page.\nContinuous metadata variables are becoming more common as the frequency of observational omics studies increases. For example, studies that collect transcriptomics data from human tissues (e.g., plasma) typically include many covariates describing clinical, demographic, and lifestyle parameters. Many of these are continuous and correcting for several covariates is usually necessary.\n11. Click the “Simple Metadata” tab (Fig. 11[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0011]). This tab allows users to choose from three different differential expression algorithms: limma, edgeR and DEseq2 (Love et al., 2014[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0031]; Robinson et al., 2010[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0038]; Smyth, 2005[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0041]). All rely on the generalized linear model framework described above to perform DEA.\nThe linear model described in the previous steps can be configured in additional ways to construct more sophisticated comparisons between metadata variables. However, it is challenging to support more advanced models for an unlimited number of metadata variables with unrestricted types. The “Simple Metadata” is developed to provide a simplified interface for several common advanced structures for one or two discrete factors.",
    "The three algorithms make different assumptions about how the raw data is distributed and perform different corrections and filters according to these assumptions. Details that are important for users of ExpressAnalyst are differences in the data input, and differences in type I and type II error rates. Limma uses the normalized data as an input, while edgeR and DESeq2 expect the raw counts data, which is why the latter two algorithms are not available for analyzing microarray or proteomics data. This means that if you use edgeR or DEseq2, the filtered counts will be used for DEA while the normalized data will only be used for downstream data visualizations. We point interested readers to publications by the authors of the algorithms for more details on the specific statistical assumptions.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/8ec0c606-c680-4bde-934b-f4139135b26e/cpz1922-fig-0011-m.jpg</p>\nFigure 11\nSimple Metadata interface. ExpressAnalyst has more sophisticated statistical comparisons available when only considering one or two discrete metadata: (1) compare any two combinations of the metadata to each other; (2) compare all groups to the same control group; (3) compare two contrasts to each other. By default, this will return any features significantly different between the groups in contrast 1, between the groups in contrast 2, and features that have a statistically significant difference between the relationships specified by contrast 1 and 2 (the interaction). Checking “Interaction only” will return only the last set of features; (4) compare all possible groups specified in the dropdowns in (1) to each other. Options 2 to 4 return multiple tables of results, one for each contrast.",
    "12. Leave “Limma” as the “Statistical method,” set “Primary Factor” to “Treatment” and “Secondary Factor” to “Sex.” Select the “Nested Comparisons” radio button. This allows us to specify any two comparisons between groups, and test whether the relationships defined by these comparisons are significantly different from each other. Here, we will explore whether some genes show different responses to BPA exposure between male and female mice. In the first dropdown, select “Control_Female vs. BPA_Female.” For the second dropdown, select “Control_Male vs. BPA_Male,” and check the box beside “Interaction only.” Click “Submit” and click “Proceed.”\nThere are only two statistically significant transcripts, but they do have quite distinctive expression patterns across the male and female samples (Fig. 12[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0012]). The original authors discuss how in this study, BPA exposure had a sex-specific effect on both the omics data and on the higher-level metabolic phenotypes that they measured (Diamante et al., 2021[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0012]). If follow-up work were to try and elucidate the mechanism, examining the top-ranked genes prioritized by this statistical analysis may be a good starting place.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/322edfed-9e3d-4b27-addc-b23c178eff0d/cpz1922-fig-0012-m.jpg</p>\nFigure 12\nTranscripts with a significant interaction between ‘Treatment’ and ‘Sex’. The (A) Cldn7 (claudin 7) and (B) Ehd4 (EH-domain containing 4) transcripts have a statistically significant different relationship between ‘BPA’ and ‘Control’ in male and female mice.",
    "DEA typically produces a long list (100s to 1,000s) of significant features. While specific transcripts may be meaningful to investigators, it is usually difficult to make sense of the overall biological themes within the list. Functional analysis aims to answer this question by testing whether certain functions or biological processes (encoded as different gene sets) are enriched in the gene expression data. ExpressAnalyst offers two main statistical approaches: overrepresentation analysis (ORA) (Sherman et al., 2022[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0039]) and gene set enrichment analysis (GSEA) (Subramanian et al., 2005[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0043]). In ORA, genes in each gene set are compared to the list of differentially expressed genes (DEGs). A gene set is considered overrepresented if the overlap is higher than we would expect from random chance. The p-value is typically computed using a hypergeometric distribution. While GSEA takes the entire list of genes (not just DEGs) ranked by some criteria (such as t-statistics or fold-changes), it then compares each gene set to the gene list and determines whether the genes in the gene set are enriched or concentrated at either the top or the bottom of the list. P-values are computed empirically using a permutation-based approach. In this protocol, we introduce three different visual analytics tools (volcano plot, enrichment network, and ridgeline chart) that can be used to perform functional analysis and visualize the results.\nNecessary Resources\nHardware\nA computer with internet access\nSoftware\nAn up-to-date web browser such as Google Chrome, Mozilla Firefox, or Safari, with JavaScript enabled (see Internet Resources)\nFiles\nNone",
    "1. This protocol carries on where Basic Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0002] left off. We ended Basic Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0002] on a specialized statistical test that only resulted in a few DEGs. You should be on the “Significant Results” page to begin this protocol. Click “Previous” to go back to the DEA page, click the “Complex Metadata” tab, and use the same parameters as step 7 (“Treatment” - “BPA vs. Control” as primary, controlling for “Sex” as a covariate). Click “Submit” and “Proceed.” There should be 3801 significant features. Click the “Proceed” to navigate to the Visual Analytics overview page.\nThe results displayed in the DEA results table are the ones that will be analyzed in downstream steps. Functional analysis typically requires 100s of genes to reliably detect enriched biological themes and does not work well when only a few DEGs are detected.\n2. The “Analysis Overview” allows users to explore their data using six different interactive visual analytics tools (Fig. 13[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0013]). In this protocol, we will explore the features of the three tools located in the top row. The heatmap will be covered in Basic Protocol 4[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0004] and the UpSet diagram in Basic Protocol 8[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0008]. Click the “Volcano Plot” button.\nPlease be patient as it may take up to a minute to load the interactive plot. The time is variable depending on the server load, data size and internet bandwidth.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/6ae4715b-bc05-44f8-b1a5-452d68a5101e/cpz1922-fig-0013-m.jpg</p>\nFigure 13\nVisual analytics overview. There are six main visual analytics tools, each of which is covered in at least one of the protocols.",
    "3. A volcano plot that looks like Figure 14[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0014] should now appear on the screen. The log2FC values are on the x-axis, with positive values to the right and negative values to the left. The y-axis is based on -log10(p-value), so that more significant p-values will have higher y-axis values. For example, a p-value of 4.0 × 10-7 has a y-axis value of 6.4.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/5cc5e6cc-1ca7-4695-8e1f-86628c21f7d5/cpz1922-fig-0014-m.jpg</p>\nFigure 14\nOverview of volcano plot features. The x-axis is log2FC and the y-axis is -log10(p-value). Users can directly click on a data point to view its gene expression profile. Here, the point corresponding to the Gm20594 transcript has been clicked to display the associated violin plot. Users can also perform enrichment analysis on DEGs at different regions on the volcano plot. Here, the row for the “Non-alcoholic fatty liver disease (NAFLD)” pathway has been clicked to highlight DEGs in this pathway on the volcano plot.\n4. By default, ORA has been conducted by comparing the list of DEGs with gene sets corresponding to KEGG pathways. There are ten pathways with an adjusted p-value <0.05, although it is difficult to discern a clear overall biological theme. Both the result table and the volcano plot are interactive. As shown in Figure 14[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0014], click a row in the result table to highlight the gene members of the corresponding gene set on the volcano plot, and click a point on the volcano plot to show a box plot summary of the gene expression levels.\nThe “Enrichment Analysis” results table displays the top pathway results from ORA. Since there is limited space, only a few statistics are displayed, but we can see all of them by clicking the “Save” icon to download a table of the results (Fig. 15[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0015]).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/f7b5bd72-1640-46c7-a889-e261f552ac9c/cpz1922-fig-0015-m.jpg</p>\nFigure 15",
    "ORA pathway analysis results. The columns of the table contain the pathway name, the number of genes in each pathway that are also in the normalized matrix (Total), the number of pathway genes that we would expect to be in the list of DEGs if the DEGs were completely randomly selected (Expected), the number of pathway genes that we observed in our list of DEGs (Hits), and the p-value (P.Value) and adjusted p-value (FDR) associated with the probability of observing the number of hits by random chance. In this table, the top seven pathways are considered significantly overrepresented in the list of DEGs (FDR <0.05).\n5. Sometimes, biological patterns are easier to interpret when we analyze the up and downregulated transcripts separately, as there are often different biological processes represented in these lists. Change the “Query” dropdown in the “Enrichment Analysis” panel on the top left to “Sig. Up” and click “Submit.” In general, we see pathways related to translation and energy generation, with pathways including “Oxidative phosphorylation,” “Ribosome,” and “Non-alcoholic fatty liver disease.” Change the “Database” dropdown to “Reactome” and click “Submit.” These significant results are more specific and follow the general pattern in the KEGG pathways with more gene sets related to the respiratory electron transport chain and translation.",
    "ExpressAnalyst contains nine different gene set libraries for functional analysis. KEGG stands for Kyoto Encyclopedia of Genes and Genomes (Kanehisa & Goto, 2000[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0022]). It initially described metabolic pathways in model organisms but has been expanded later to cover many more biological systems for ∼900 eukaryotic species and >7000 bacteria/archaea (Kanehisa et al., 2017[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0021]). Reactome is a manually curated and peer-reviewed database containing known interactions and reactions between signaling and metabolic molecules (Fabregat et al., 2018[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0015]). GO stands for Gene Ontology and these GO libraries contain sets of genes related to different biological processes (BP), cellular components (CC), and molecular functions (MF), collectively called GO terms (Ashburner et al., 2000[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0002]). Many GO terms overlap and contain redundant information. The PANTHER GO-slim contains fewer terms that are minimally overlapping (Mi et al., 2019[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0034]). The MOTIF library, obtained from the MSigDB, contains genes that share upstream regulatory motifs that theoretically can be regulated by the same transcription factors (Liberzon et al., 2011[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0027]).\n6. Change the “Query” dropdown to “Sig. Down” and the “Database” dropdown to “KEGG” and click “Submit.” Here, the most significant pathways are related to transcript processing, for example “Spliceosome” and “RNA transport.” Change the “Database” to “Reactome” and click “Submit.” Just as with the upregulated transcripts, the Reactome results are related to the same themes as the KEGG pathways but are more specific and detailed.",
    "7. In the overall volcano plot, there is a group of up-regulated DEGs showing very large log2FC values (Fig. 16A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0016]). It is possible they are functionally related to each other. To investigate this hypothesis, click and drag your mouse to form a square around the transcripts highlighted in Figure 16B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0016]. This will zoom in the main plot to include only the highlighted transcripts (Fig. 16A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0016]). Next, change the “Query” to “Current View” and click “Submit” (the database should still be Reactome from the previous step). This will perform ORA with only the transcripts visible in the zoomed in volcano plot area. We see no significant results with this database. Continue exploring other gene set libraries and we notice that “PANTHER:CC” returns a significant result for “Integral component of a membrane” with ∼30 hits (the exact set of selected genes may vary depending on the precise selected area). Click the gene set row: we can now see that almost half of the visible points are highlighted (Fig. 16B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0016]).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/f040ffc5-e6bc-4943-8c08-73ec3c1186ad/cpz1922-fig-0016-m.jpg</p>\nFigure 16\nORA on a highlighted portion of the volcano plot. Interactive gene selection and functional analysis can be used to identify potential biological processes underlaying distinct patterns in the data. Part (A) shows a zoomed in view of an area of interest. Part (B) shows an overview of the entire volcano plot, with the focused area in (A) highlighted.\n8. Click the “Analysis Overview” link in the top navigation bar to return to the Analysis Overview page. Click “Enrichment Network.” Please be patient as this may take up to a minute to load.",
    "9. By default, ORA is performed with KEGG pathways, and we see that the results in the enrichment analysis panel are the same as for the volcano plot. Double-click a node in the network, such as “Synaptic vesicle cycle,” to reveal each DEG in that pathway. Double-click it again to hide the genes.\nBy default, the network shows all pathways with a raw p-value <0.05 or the top 10 pathways ranked by their raw p-values, whichever yields more pathways. The size of the node is proportional to the number of DEGs in the pathway. The color is proportional to the p-value using a white-yellow-red color gradient in order of descending p-value; therefore, red nodes are the most significantly enriched. Two nodes are connected if >30% of their DEGs overlap. This structure allows us to see the pathway relationships. We can see there is a group of nine pathways that share many of the same DEGs.\n10. Go to the top toolbar and select “Bipartite Network” from the dropdown next to “View” (Fig. 17[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0017]). This exposes all DEGs within each pathway. Select “Fruchterman-Reingold” from the “Layout” dropdown. Most of the network structure is visible; however, there is one section of the network where many pathway nodes are covering each other. Click and drag some of these nodes to spread them out until you can see more of the individual pathways.\nGenes are represented by the smaller nodes. Genes with positive log2FC are colored red and those with a negative log2FC are colored blue. The intensity/darkness of the color corresponds to the magnitude of the log2FC. From this, we can identify some groups of pathways that contain mostly upregulated vs mostly downregulated genes (Fig. 17[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0017]).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/a0aa6238-e02d-453a-89b1-12d24511fe2a/cpz1922-fig-0017-m.jpg</p>\nFigure 17",
    "Main components of the network viewer. The top horizontal panel can be used to modify the appearance of the network (Network styling toolbar). The vertical panel inside of the network viewer has tools for moving the network and view around (Network manipulation toolbar). The left panel is for generating the functional analysis results to display in the network. Pathways where most of the gene nodes were either blue (downregulated) or red (upregulated) were visually identified and manually annotated in the figure.\n11. Images with light backgrounds are more suitable for manuscripts and publications. Select “White” from the dropdown next to “Background.” Select “PNG Image” from the dropdown next to “Download” and click “Save” in the dialog that pops up to generate and download a high-resolution version of the network suitable for publication (Fig. 18[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0018]).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/f87a3251-a8a4-4152-967d-7f2c25006698/cpz1922-fig-0018-m.jpg</p>\nFigure 18\nNetwork styled for publication. Nodes have been rearranged to reduce the number of overlapping labels.\n12. Click the “Analysis Overview” link in the top navigation bar to return to the Analysis Overview page. Click “Ridgeline Chart.” Please be patient as this may take up to a minute to load.",
    "13. By default, ORA has been performed with KEGG pathways and the results are displayed in the “Enrichment Analysis” panel. The ridgeline diagram orders the pathways by their p-values, with the most significant at the top. The color is also related to the p-value, with darker colors corresponding to more significant p-values. The density plots show the distribution of DEGs in that pathway based on their logFC values, allowing users to see which pathways are overall up or downregulated. Each DEG is represented by a point along the baseline of each density plot. Hover your mouse over a pathway distribution to see the full pathway name, the specific p-value, and a list of all DEGs. Click a DEG point to see its expression profile.\nThe “Settings” in the top-left corner allow users to manipulate the appearance of the ridgeline diagram. All pathways with an enrichment p-value less than the “Raw Pval cutoff” are displayed on the plot, up to the “Top pathway No.” The ridge height and color can be adjusted according to preference, and the shape of the gene markers can be changed. The “Sort by” options determines whether pathway ridges are ordered by p-value or median log2FC.\n14. In the “Enrichment Analysis” panel, change the “Type” to “GSEA,” change the “Rank” to “T-statistic” and click “Submit.” In the “Settings” panel, change “Sort by” to “Fold-change” and click “Update.”",
    "Since GSEA calculates enrichment scores using the full set of genes, the pathway ridges are based on all genes in the pathway, not just DEGs. This gives a better sense of whether the pathway as a whole has generally upregulated or downregulated in expression. Here, we see that some significant pathways have clearly increased or decreased expression, with a few pathways that have generally unchanged expression (logFC evenly distributed around 0) except for a few downregulated genes (Fig. 19[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0019]).\nAs discussed in the introduction to this protocol, GSEA analyzes lists for concentrated occurrences of pathway genes, particularly at the extreme ends of the list, by keeping a running enrichment score (ES) as it proceeds down the list. The algorithm reports the p-value associated with the maximum magnitude reached by the ES for every pathway. A positive ES indicates that pathway occurrence was enriched at the beginning of the list; negative scores indicate enrichment at the end.\nUsers can choose either Fold-change or T-statistic from the differential expression analysis to rank genes prior to GSEA. For both methods, genes are ranked from high to low. A positive ES therefore means that that pathway was primarily upregulated, whiles a negative ES indicates downregulation.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/2f7828d5-a661-475f-b71b-aeb2872b3eb6/cpz1922-fig-0019-m.jpg</p>\nFigure 19\nRidgeline chart of GSEA results. Chart annotated with three categories of general pathway expression patterns. Gene-level plots are shown for the ‘exception’ genes.\n15. Click some of the gene markers in the second half of the plot that are noticeably more downregulated than the rest to investigate the expression patterns across individual samples (Fig. 19[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0019]).",
    "The plots show considerable variability within treatment groups that cannot be explained by sex. The lowest expression values for Gapdh and Cox7a1 are very low, indicating that these values may approach the detection limit for these genes. The few highly downregulated genes may tempt us to interpret these pathways as downregulated; however, upon viewing the actual data, this interpretation does not seem to be robust. This underscores the importance of visualizing individual data points wherever possible.\n16. Click the “Analysis Overview” link on the top navigation bar to go back to the overview page.",
    "Heatmap visualization combined with unsupervised clustering is a powerful strategy for discovering and exploring gene expression patterns in transcriptomics datasets. Heatmaps display every datapoint as a colored cell, which can reveal expression patterns across different experimental factors. We can visually assess whether a DEG truly has a relatively uniform difference across all samples in each group, or if the difference was driven by a more heterogeneous response. Hierarchical clustering analysis provides an even more informative view of the data by grouping samples and genes based on their similarity to identify inherent expression patterns that are not necessarily related to their main metadata labels (D'haeseleer, 2005[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0010]). The heatmap tool in ExpressAnalyst allows users to interactively select clusters of genes and perform functional analysis to help interpret any observed patterns of interest.\nNecessary Resources\nHardware\nA computer with internet access\nSoftware\nAn up-to-date web browser such as Google Chrome, Mozilla Firefox, or Safari, with JavaScript enabled (see Internet Resources)\nFiles\nNone\n1. This protocol requires Basic Protocols 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001] and 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0002] for data processing and initial statistical analysis. If you have not yet completed Basic Protocols 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001] and 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0002], please do so first. Make sure you are on the “Analysis Overview” page to begin this protocol. Find the heatmap icon and click “ORA.” Please be patient as the heatmap may take up to a minute to load.\nThe heatmap has different interfaces for ORA and GSEA functional analysis. The ORA heatmap emphasizes pattern discovery within a heatmap of expression values, followed by targeted functional analysis. The GSEA heatmap first performs functional analysis, and then allows users to view heatmaps for individual pathways. Since Basic Protocol 4[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0004] emphasizes exploratory analysis, we will only cover the ORA heatmap here. The GSEA heatmap will be introduced in Basic Protocol 5[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0005].",
    "2. A dialogue should pop up, warning us that due to the high number of DEGs, only the top 3000 are visualized to ensure high performance of the interactive tools. Click “OK.”\nThe ORA heatmap tool has four main components: 1) a toolbar for manipulating the heatmap along the top, 2) an overview of all genes on the left panel, 3) a focus view showing genes of interest (default to DEGs) in the center, and 4) an enrichment analysis panel on the right (Fig. 20[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0020]). The “Overview” heatmap is interactive. Clicking and dragging on a section of the “Overview” will put those genes in the “Focus View.”\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/220994fa-434b-4df8-b753-0de0b6d3febe/cpz1922-fig-0020-m.jpg</p>\nFigure 20\nMain components of the ORA heatmap tool. Main sections include the “Heatmap toolbar” (green) for manipulating both heatmaps, the “Overview” (purple) which shows the expression of all genes, the “Focus View” (blue) which initially shows DEGs but can be used to view and analyze any group of genes based on user selection, and the “Enrichment Analysis” pane (orange) for functional analysis of genes in the Focus View.\n3. By default, the genes (rows) are sorted by p-value, and the samples (columns) are in the same order that they were uploaded. The top toolbar gives options for organizing the samples and genes either by metadata (samples), p-value (genes), or different hierarchical clustering methods. Locate the “Cluster Samples” option and change its value to “Treatment.” This re-arranges the samples in both the “Overview” and in the “Focus View.”",
    "Both the “Overview” and “Focus View” heatmaps have a metadata section at the top. Discrete metadata variables are given randomly assigned colors (“Sex,” “Treatment”) and continuous metadata are colored from blue (low) to red (high) according to their values. The main heatmap cells used to represent gene expression values are also colored from blue to red according to the value. Note users can use the “Color” option on the top toolbar to try different color gradients.\nBoth the continuous metadata and gene expression data are scaled to z-scores so that each row has a mean of 0 and a standard deviation of 1. Without scaling, the heatmap would mainly show differences between genes with higher and lower expression. It would be very difficult to distinguish patterns across samples for the same gene, which is generally what we are interested in.\n4. Change “Cluster Samples” to “plasma_TG.” Now the samples have been re-arranged again. Look at the “plasma_TG” row in the metadata section of the Focus View and notice how the “plasma_TG” cells are now arranged from dark blue to dark red (ascending order).\n5. We can also use hierarchical clustering to arrange the samples. Change “Cluster samples” to “Average linkage.”\nFigure 21[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0021] shows the main concepts behind the hierarchical clustering algorithm. “Ward's method,” “Average linkage,” “Single linkage,” and “Complete linkage” are all different methods for measuring distances between two clusters (Fig. 21B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0021]). There is no best approach; we encourage users to cluster their data with multiple methods. Truly distinct clusters should emerge consistently.",
    "Even though we do not explicitly define clusters, this process visually reveals groups of related datapoints as blocks within the heatmap. It is also useful for understanding patterns of variability within the dataset. By synchronizing the metadata with the samples after they have been re-ordered, we can see whether some samples clusters correspond to meaningful groups described by any metadata variables. For example, after clustering samples by “Average linkage,” we can see that samples are perfectly separated by “Treatment” and then, within treatment groups, by “Sex.” This is consistent with the patterns we have seen in the PCA plot in Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001] (Fig. 4[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0004]), where PC1 (28% of variability) was related to “Sex” while PC2 (11% of variability) was related to “Treatment.”\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/55f12247-a399-4d0d-a032-088ce3ee2bd3/cpz1922-fig-0021-m.jpg</p>\nFigure 21\nHierarchical clustering algorithm. Hierarchical clustering is an iterative process where pairwise distances are calculated between samples (A), and then the two samples with the smallest distance between them are merged (B). Here, we show the formula for calculating the Euclidean distance between two columns. Steps A and B are repeated until all samples are merged. The order in which samples are merged can be represented in a dendrogram (C). The original gene expression matrix is re-ordered to match the order in the dendrogram. The same process can be applied to genes (rows).\n6. Now, we wil cluster genes. Change “Cluster features” to “Average Linkage.”\nWe can cluster the samples and rows independently because the distance between two columns does not depend on the order of the rows, and vice versa. Now we can see very distinct patterns in the data.",
    "7. Scroll through the “Overview” and notice the different sections with distinct patterns (Fig. 22A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0022] and 22B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0022]). The order of the rows is no longer related to the DEA results, hence interesting clusters of genes can be present anywhere in the “Overview” heatmap.\nThe major clusters produced by the sample “Average Linkage” clustering method overlap perfectly with “Treatment” (left side = purple = BPA; right side = green = Control), hence portions of the heatmap that have all blue on the left and red on the right are genes that are downregulated after BPA exposure. Conversely, portions that have red on the left and blue on the right were upregulated after BPA exposure.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/1ed76d35-9002-43f1-92dd-b239ff33fdb7/cpz1922-fig-0022-m.jpg</p>\nFigure 22\nExpression patterns in the heatmap. Representative portions of the heatmap with different patterns.\n8. Scroll to the bottom of the heatmap and find the section that matches Figure 22B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0022] (red on left; blue on right). Click and drag your mouse over the most distinct part of this section to view it in the Focus View (Fig. 23[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0023]). Users can find all the gene names displayed in the current Focus View by clicking the “Show Feature Names” tab on the bottom right page.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/d7522177-8db8-43e8-ab9f-9af983f55e36/cpz1922-fig-0023-m.jpg</p>\nFigure 23\nTargeted functional analysis. Main steps of targeted functional analysis include selecting genes of interest (1) and performing functional analysis with the query set to “Features in Focus View” (2). The results table can be expanded to better view the pathway names (3) and double-clicking a pathway row to only show pathway genes in the Focus View (4).\n9. Go to the “Enrichment Analysis” pane, leave the defaults (Query: “Features in Focus View,” Database: “KEGG”), and click “Submit” (Fig. 23[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0023]).",
    "Selecting genes in this way is imprecise: we are visually identifying the boundaries of clusters and it may not be possible to select all the genes with a given pattern due to the limited screen resolution. However, biological themes or functions are defined by group behaviors and can tolerate imprecisions at individual gene levels in general.\nIn this step, we have performed the exact same type of ORA functional analysis as in Basic Protocol 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0003], except that instead of performing the analysis on the list of DEGs, we are performing it on the list of genes in the cluster(s) as shown in the Focus View. For more details on ORA, please see Basic Protocol 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0003].\n10. Hover your mouse over the left border of the “Enrichment Analysis” pane until it turns into an arrow pointing left. Click and drag to the left to expand the width of the “Enrichment Analysis” pane. Next, move your mouse inside of the ORA results table and find the right border of the pathway name column. Click and drag to the right until you can see the entire pathway names.\n11. Double-click the top row in the results table (“Oxidative phosphorylation”) to view only those genes in the “Focus View” (Fig. 23[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0023]). When you are done viewing, click the “Reset” button inside of the “Enrichment Analysis” pane to again view all the selected genes in the “Focus View.”\n12. Click the “Show Feature Names” header in the right-hand panel to view the list of genes displayed in the focus view.",
    "This feature is included to allow you to reproduce your functional analysis results. This list of genes can be saved along with the table of significant pathways so that it is clear how the results were generated. You can also paste a list of genes under the “Define Custom Signatures” header to select exactly the genes displayed in the Focus view. The combination of these two features should allow you to reproduce all heatmap results.\n13. Scroll through the “Overview” to show sections with four distinct columns. It appears that these genes are related to both “Treatment” and “Sex.” Re-ordering the metadata according to “Sex” may make this easier to see. In the Focus View, double click on the heatmap row corresponding to the “Sex” to reorder. Alternatively, use the top toolbar and set “Cluster samples” to “Sex.”\nThe row or gene order stays the same as before, but the samples are re-ordered so that they correspond to sex (left side = female = red; right side = male = blue).\n14. Notice how the sections that showed uniform up or downregulation across both sexes (Fig. 22A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0022] and 22B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0022]) now look like four alternating bands (Fig. 22C[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0022] and 22D[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0022]). We will skip over these sections. Instead, look for the sections that look like Figure 22E[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0022] and 22F[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0022]. The pattern in Figure 22E[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0022] shows genes that are downregulated after exposure to BPA in both female and male mice. Figure 22F[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0022] shows genes that are upregulated after exposure in both sexes.\nThese sections look different than the ones in Fig. 22[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0022], panels A to D, because the baseline control expression values were different in male and female mice. The genes are regulated in the same direction and by about the same magnitude, they just started at different levels.",
    "15. Select the section of genes matching the pattern in Figure 22E[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0022] and perform functional analysis with several different databases.\nThe significant results are related to protein digestion and absorption (KEGG), extracellular matrix (GO:CC), and extracellular space (PANTHER:CC). These pathways and gene sets are overrepresented in genes that are upregulated after BPA exposure and have generally higher expression in female mice.\n16. Select the section of genes matching the pattern in Figure 22F[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0022] and perform functional analysis with several different databases.\nThe significant results are related to protein processing (KEGG), proteolysis (PANTHER:BP), and cytoplasm and mitochondria (PANTHER:CC). These pathways and gene sets are overrepresented in genes that are downregulated after BPA exposure and have generally higher expression in male mice.\n17. Go to the navigation bar at the very top of the page (above the Heatmap Toolbar) and click the “Download” link to view the results from Basic Protocols 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001] to 4[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0004] (Fig. 24[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0024]).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/5b372b98-2f73-46d7-a3ba-f74ff6d9a480/cpz1922-fig-0024-m.jpg</p>\nFigure 24\nDownload page. All results generated throughout the pipeline are available on the “Downloads” tab. Results are sorted, with .csv, .json, and .R files in the first tab (A), and .png images on the second tab (B).",
    "RNA-seq analysis for non-model species can be challenging due to the lack of high-quality and well-annotated reference genomes. The Seq2Fun algorithm solves this problem by aligning short reads to a large database of protein sequences from over 600 species that have been organized into ortholog groups (EcoOmicsDB). Functional information is shared across all species to give each ortholog group a gene symbol, gene/protein description, and KEGG pathway and GO term annotations. RNA-seq reads from any species can be mapped to the same database and therefore to the same set of Seq2Fun IDs. This framework greatly simplifies comparisons of cross-species transcriptomic results compared to using reference genomes where cross-species orthologs must be first identified using BLAST. Read quantification with Seq2Fun and EcoOmicsDB is covered in Basic Protocol 11[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0011]. This protocol covers statistical and functional analysis of a cross-species Seq2Fun ortholog count table. The overall workflow uses many concepts from Basic Protocols 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001] to 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0003]. Here, we focus on aspects particular to cross-species analysis with Seq2Fun results. Please refer to Basic Protocols 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001] to 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0003] for more details on general RNA-seq data processing, statistical analysis, and functional interpretation.",
    "The data analyzed in this protocol is from a study that aimed to identify transcriptomic signatures of tissue regeneration that is conserved across salamander species, which are able to re-grow lost limbs (Dwaraka et al., 2019[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0013]). A single limb was amputated from three different species of salamanders (A. andersoni = AND, A. maculatum = MAC, A. mexicanum = MEX). A small tissue sample was collected at the time of amputation (time0) and after 24 hr (time24). There were three replicates in each species by time group, resulting in 18 total samples. One sample that appeared to be a technical outlier was removed. In this analysis, we identify genes that are consistently differentially expressed between time24 and time0 across all three species.\nNecessary Resources\nHardware\nA computer with internet access\nSoftware\nAn up-to-date web browser such as Google Chrome, Mozilla Firefox, or Safari, with JavaScript enabled (see Internet Resources)\nFiles\nNone\n1. Go to the ExpressAnalyst home page and click “Start Here” to view the module overview. Find the “Statistical & Functional Analysis” section and click the “Start Here” button underneath the single gene expression table input type.\n2. Click the “Try Examples” button in the bottom left of the page. Click the “Non-model organisms” link to open the data that we will analyze in a new tab.\nExpressAnalyst accepts metadata in either a separate table (as in Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001]) or embedded in the omics table. The format for embedding metadata is shown in Figure 25[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0025]. Rows with metadata labels should be directly under the top row that contains the sample IDs. Each row should start with “#CLASS:varName” in the first cell, where “varName” is replaced with the actual metadata variable name.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/2b576f7a-2652-4472-9420-652dce81f342/cpz1922-fig-0025-m.jpg</p>\nFigure 25",
    "Embedded metadata format. Instead of uploading two different files, metadata can be embedded in the omics data table using this format. This may be more convenient for datasets with only a few metadata.\n3. Select the radio button next to “Non-model organisms” and click “Submit.” When the data finishes loading, click “Proceed.”\n4. As in Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001], we can see from the boxplot and density plot that the data are un-normalized RNA-seq counts. Click “Proceed” to go to the “Data Filtering & Normalization” page.\nThe general workflows for data processing, statistical analysis, and functional analysis of an RNA-seq count table were covered in detail in Basic Protocols 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001] to 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0003]. This protocol will only focus on details specific to Seq2Fun results and cross-species analysis. Please refer to Basic Protocols 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001] to 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0003] for more details on each page.\n5. Leave the defaults (low abundance, 4; variance filter, 15; normalization, “Trimmed Mean of M-values”) and click “Submit.”\nFrom the boxplots and density plot, we can see that the data are now normalized on a log scale. The samples show clear separation according to both time and species in the PCA plot (Fig. 26[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0026]). The time labels look partly overlapping until we consider species; once we consider species, we see that samples are consistently separated along PC2 where time24 samples have higher PC2 values than time0. The relative separation of species along PC1 is consistent with their taxonomic relationship: MEX and AND samples are closer together, and their species were estimated to diverge ∼4.3 million years ago compared to ∼21.5 million years for MAC (Hedges et al., 2015[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0017]). This plot shows one advantage to using Seq2Fun for cross-species comparisons, as the data can be directly integrated across species and visualized together.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/e1bc43b1-55c4-49c5-9b88-fd315c14d271/cpz1922-fig-0026-m.jpg</p>\nFigure 26",
    "PCA plot of the salamander dataset. The same data points, labeled according to time on the left and according to species on the right.\n6. For DEA, we are interested in identifying a transcriptomic signature for tissue regeneration that is conserved across species. This dataset has only two categorical metadata, making it a good fit for the “Simple Metadata” tab. Stay on the “Simple Metadata” tab, leave “Limma” selected, leave “Time” as the “Primary Factor,” and select “Species” as the “Secondary Factor.” Check the box next to “This is a blocking factor.” Leave “Specific Comparison” selected but change the order in the dropdown to “time24” first and “time0” second (Fig. 27[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0027]). Click “Submit” and then “Proceed.”\nWhen we initially select “Species” as the secondary factor, the options in the dropdown become more complicated, for example the default options for “Specific comparison” change from “time0” and “time24” to “time0_MEX” and “time0_AND.” Once we click “This is a blocking factor,” we tell ExpressAnalyst that “Species” should be considered a random effect instead of a fixed effect, and the options simplify back to “time0” and “time24” again. A random effect adds a hierarchical structure to our linear model. Instead of fitting a model with two terms (time and species), we fit a model with one term (time) separately to data points from each species. Since the random effect specifies this structure, “Species” cannot be used to construct specific comparisons and thus disappears from the contrast options.\nFor the specific comparison, the fold-changes are computed as First Group/Second Group. Thus, we change the order so that in the results, DEGs with a positive log2FC correspond to increased expression in time24 compared to time0. This has a more intuitive interpretation.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/889c91e2-e6ed-4f70-87d4-d357e2946ce4/cpz1922-fig-0027-m.jpg</p>\nFigure 27",
    "DEA settings for the Seq2Fun analysis. The analysis specified by these parameters identify ortholog groups with differentially expression between time24 and time0, while modeling species as a random effect.\n7. There are 2061 DEGs (adjusted p-value <0.05). View the expression patterns for each of the top two genes by clicking the image icon in the “Graphical Summary” column (Fig. 28[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0028]). The plots clearly show that the top genes have a relationship with time that is conserved across species.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/b912ed05-1e98-4d07-8c73-d6fa2e896cfd/cpz1922-fig-0028-m.jpg</p>\nFigure 28\nDEA results for the Seq2Fun data. The results table is the same as in Basic Protocol \nBasic Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0002], except that the NCBI links have been replaced with EcoOmicsDB (EODB) links (1). The graphical summary shows results split up by species (2).\n8. Click the “EODB” link for the most significant gene (PLEK2) to open the Seq2Fun ortholog profile in EcoOmicsDB.\nEcoOmicsDB has a profile for each Seq2FunID (Fig. 29A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0029]) to provide species-specific details and to show the taxonomic groups represented in the ortholog group (Liu et al., 2023[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0029]). Each ortholog group is a collection of protein sequences that were grouped based on their similarity. The table (Fig. 29C[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0029]) shows each of the species-specific protein/gene information, including the Entrez ID, gene symbol, gene description, KEGG pathways, and GO terms.\nThe overall, ortholog-level symbol, description, and functional annotations displayed in the profile header were derived by considering all the species-specific information and choosing the most frequent occurrences. The word cloud at the top of the page was generated from the list of symbols and descriptions from the species-specific information: the more frequent words and phrases appear larger in the image.",
    "Finally, the species sub-group hits plot (Fig. 29B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0029]) shows the percentage of each taxonomic group that has an entry in the queried ortholog group. PLEK2 is robustly defined for vertebrate species. Other orthologs are more narrowly or broadly defined, for example with only fish species contributing sequences. Knowing this information can help interpret results, especially when doing cross-species comparisons. A robust profile like PLEK2 that is represented by many species and has close to a 1:1 gene-to-species ratio gives us confidence that we have quantified a “real” transcriptomic feature.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/4a6a6ffc-fdce-4c37-a5ba-23a28fe89264/cpz1922-fig-0029-m.jpg</p>\nFigure 29\nEcoOmicsDB profile for PLEK2. Each Seq2Fun ortholog has a profile (A), consisting of a summary in the header, a “Species sub-group hits” plot (B), and a table with detailed species-specific information (C).\n9. Ensure that you are on the “Select Significant Features” page in ExpressAnalyst. Click “Proceed” to go to the “Analysis Overview” and then click “Volcano Plot” to perform functional analysis.\n10. Go to the “Enrichment Analysis” panel and change the query to “Sig. Up,” the database to “GO:BP” and click “Submit.” This will perform ORA on the list of DEGs with positive log2FCs. After examining the results, change the query to “Sig. Down” and click “Submit” again to perform ORA on the list of DEGs with negative log2FCs (Fig. 30[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0030]).",
    "One of the main strengths of using Seq2Fun framework vs using de novo/newly assembled transcriptomes is comprehensive functional annotation (Liu et al., 2021[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0028]). By aggregating information across over 600 species, there are high-quality and high-density KEGG and GO term annotations. This analysis shows that genes related to energy generation and muscle development are downregulated while genes related to more fundamental wound healing and tissue regeneration are upregulated. These themes were also reported by the original publication, which used a combination of de novo and official transcriptomes to conduct the analysis.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/50843755-d87a-422c-b8e3-025d5716cc38/cpz1922-fig-0030-m.jpg</p>\nFigure 30\nFunctional analysis of Seq2Fun results. Enrichment analysis is performed using the left-hand panel, on the up (red) and down (blue) regulated genes separately. The volcano plot is annotated with the main functional themes from ORA with the Gene Ontology Biological Process gene set library.\n11. Click the “Analysis Overview” at the top navigation bar, and then click “Dimension Reduction.” Please be patient as it may take up to a minute to load.\n12. The “Settings” panel in the top left of the screen allows users to adjust the appearance of the 3D scatterplot. Change the background to white by clicking the box next to “Background” (#1 in Fig. 31A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0031]). Click the box next to “Floor” and change it to a lighter gray. Select the checkbox next to the box (#2 in Fig. 31A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0031]). Select the checkbox next to “Shadow” (#3 in Fig. 31A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0031]).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/e47bbabe-fa5c-424f-8bb8-0687d731b3e7/cpz1922-fig-0031-m.jpg</p>\nFigure 31\n3D PCA plot. Overview of the 3D PCA tool with the scores plot displayed in the center (A). Labels 1-6 in A are explained in the text of steps 11-14. It is also possible to switch the view to the loadings plot (B) where we can click points to visualize that feature's expression across experimental groups (C).",
    "13. By default, the points are colored according to their “Time” annotation. We want to distinguish points based on “Species” annotation. First, go to the “Overview” panel and change the “Select meta-data” dropdown from “Time” to “Species” (#4 in Fig. 31A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0031]) and click “Update.” Go to the vertical toolbar inside of the plot view and click the icon that looks like an oval around some points (#5 in Fig. 31A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0031]). In the dialog, make sure that the “Selected meta-data” is “Species” and click “Submit.” Go back to the “Selected meta-data” dropdown in the “Overview” panel and change it back to “Time” and click “Update.”\n14. Go to the vertical toolbar and click the icon that looks like two arrows pointing to each other (#6 in Fig. 31A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0031]) to change the view from the scores plot to the loading plot (Fig. 31B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0031]). If the ellipsoids are still present in the loading plot, click the icon that looks like an oval around some points and click “Remove” in the pop-up dialog to remove them. Click one of the points on the extreme range of the sphere to display the feature plot (Fig. 31C[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0031]).",
    "Each set of principal component scores are calculated as a linear combination of all gene expression values. For example, PC1 = a*gene1 + b*gene2 + … + x*geneN. The coefficients (i.e., a, b, … x) are called loadings. Examining the PC loadings can help us interpret the PCA scores plot. The genes with greater magnitude loadings are the genes that contribute more to the patterns that we see in the sample scores. For example, the samples appear to be separated according to time point along PC2 (Comp.2, Fig. 31A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0031]). Therefore, we expect that the genes with high magnitude loadings will have different expression values between the two time points. The loadings plot (Fig. 31B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0031]) shows the PC1, PC2, and PC3 loadings for each gene. We can interpret the position of each gene as “pulling” the samples towards that direction. The genes on the outer limits of the sphere of points are the ones with the greatest magnitude loading scores.\n15. Navigate back in your browser to return to the “Analysis Overview,” find the heatmap and click “GSEA.” Leave “Fold-change” and “Multi-level (recommended)” selected in the GSEA Parameter Setting dialog and click “Proceed.” Please be patient as it may take up to a minute to load.\nThe bottom left “Enriched Pathways” panel allows users to re-run the GSEA analysis with different functional libraries, and then displays the results sorted based on the p-values. Expression values from the selected pathways in the “Enriched Pathways” panel are displayed in a heatmap in the center “Expression patterns” area. The GSEA enrichment plot for this pathway is displayed in the top left “Enrichment Plot” panel. The top horizontal toolbar can be used to style the heatmap appearance.",
    "16. By default, GSEA has been conducted with KEGG pathways (Fig. 32[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0032]). The most significant pathway is selected. Go to the top Heatmap Toolbar and set “Cluster features” to “Ward's method” to cluster genes based on the similarity of their expression profiles. Select different pathways to see their expression profiles.\nThe significant pathways identified are consistent with the ORA functional results from the volcano plot analysis. GSEA results with positive enrichment scores reflect pathways that are enriched in genes with positive log2FCs and are mainly related to the immune system. Conversely, results with negative enrichment scores are pathways that are enriched in genes with negative log2FCs and are mainly related to energy generation and muscle cell types.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/22956914-f8ec-4842-8d81-be30d81740d1/cpz1922-fig-0032-m.jpg</p>\nFigure 32\nGSEA heatmap tool. GSEA conducted on the list of genes ranked by log2FC (from high to low) and KEGG pathways. The Enriched Pathways panel shows the results. The Enrichment Plot and Heatmap are shown for the TNF signaling pathway.\n17. Click the checkbox next to “TNF signaling pathway” to view this pathway.\nThe “TNF signaling pathway” has a positive enrichment score, meaning that it is enriched in genes with positive log2FCs. From the heatmap, we see that this is indeed the case with predominantly red cells on the right side (time24) and predominantly blue cells on the left side (time0).",
    "The “Enrichment Plot” shows how the GSEA enrichment score was calculated. Genes were sorted from high log2FC to low, from left to right. The vertical black lines along the x-axis show the position of each pathway gene. Lines closer to the left indicate genes with higher log2FC values while those to the right indicate genes with lower log2FC values. The GSEA algorithm moves from left to right along the list of ranked genes. Each time that it encounters a pathway gene with a positive log2FC, the running score (green line) increases. Each time the gene is not a pathway gene, the running score decreases. A pathway “hit” changes the running score more than a pathway “miss.” The returned enrichment score is the furthest deviation of the running score from zero, indicated by the dashed red line.\n18. Go to the navigation bar at the very top of the page and click the “Downloads” link to view and download the results.\nThis protocol demonstrates how powerful ExpressAnalyst is for analyzing RNA-seq data from non-model species. By leveraging the functional annotations of hundreds of species, EcoOmicsDB and Seq2Fun enable immediately investigation of the biological processes perturbed in species with no reference transcriptome (Liu et al., 2023[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0029]).",
    "Basic Protocols 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001] to 4[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0004] covered the steps for a standard RNA-seq data analysis workflow. Proteomics and microarray data are both intensities rather than counts and should be processed differently. However, once the intensity data are properly normalized, the statistical and functional analysis pipelines introduced for RNA-seq data can be used to analyze the proteomics and microarray data.\nEven though proteomics and microarray data are both intensity values, they differ in some key respects. Proteomics data generated using liquid chromatography mass spectrometry (LC-MS) tend to have more missing values than microarray data, and the workflows usually have an imputation step to avoid filtering out a high number of features (Lazar et al., 2016[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0026]). The dynamic range of LC-MS is greater than that of microarray data. For these reasons, specialized normalization methods have been developed for each data type. In this protocol, we will briefly go through data upload, annotation, filtering, and normalization for a proteomics and microarray dataset. After these steps, the methods in Basic Protocols 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0002] to 4[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0004] can be used to perform statistical and functional analysis.\nNecessary Resources\nHardware\nA computer with internet access\nSoftware\nAn up-to-date web browser such as Google Chrome, Mozilla Firefox, or Safari, with JavaScript enabled (see Internet Resources)\nFiles\nNone\n1. Go to the ExpressAnalyst home page (https://www.expressanalyst.ca[href=https://www.expressanalyst.ca]) and click the “Tutorials” link at the top menu bar to visit the tutorial page. Scroll to the bottom of the page and find the “Dataset for the ExpressAnalyst Current Protocol” data section. Download the two text files “microarray_example.csv” and “proteomics_example.csv” from the download link under “Basic Protocol 6[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0006] (microarray and proteomics).” These data were previously published in two different studies (Su et al., 2002[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0042]; Wigger et al., 2021[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0046]).",
    "2. Go to the ExpressAnalyst home page and click “Start Here” to view the module overview. Find the “Statistical & Functional Analysis” section and click the “Start Here” button underneath the single table input type.\n3. Start with the microarray example data and select “human” for organism, keep the analysis type as “Differential Expression,” select “Intensities (microarray)” for the data type, and select “Affymetrix Human Genome U95 (chip hgu95a)” for the ID type. Select the “microarray_example.csv” file, check the “Metadata included” box, click “Submit” and then “Proceed.”\nThe microarray data type has many more options compared to RNA-seq or proteomics data because each chip version has its own annotation system. ExpressAnalyst supports commonly used microarray formats; however, there are many custom arrays that we do not have the annotation files for. If your microarray is not found in the list of ID type options, you must convert the microarray-specific IDs into a common format, such as Entrez, RefSeq, Ensembl, or Official Gene Symbol before uploading.\n4. Examine the “Omics data overview” and the diagnostic plots at the bottom of the page. When you are done, click “Proceed.”\nWe can see that ∼93.3% of the probe IDs are matched. The Entrez ID system is updated frequently by NCBI as higher quality genome assemblies and annotations are continually available. Over time, some IDs are discontinued, hence we expect a lower percentage of older microarray probe sets to map to the current Entrez ID system each year. The boxplot and density plot indicate that the data are not normalized, as the expression values are highly right-skewed and go up to 10,000.",
    "5. Leave the filtering settings as the defaults. Please refer to Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001] step 9 for an explanation of the filtering step; the principles are the same for microarray and RNA-seq data. There are five different normalization options. Select “None” and click “Submit,” to see what the data looks like without any normalization.\nOn a microarray, each targeted transcript can have multiple probes. Information must be summarized across probes using custom software developed specifically for that microarray format before any statistical analysis. These microarray-specific methods may apply some normalization or transformation methods, and it is important that you understand what was done to your dataset. In general, we do not want to perform the same normalization twice. Here, we can see that the data are not on a log scale.\n6. Select “Quantile Normalization” and click “Submit.”\nQuantile normalization assumes all samples have same distribution regardless of sample class (Bolstad et al., 2003[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0003]). This is motivated by a quantile-quantile plot which shows that the distribution of two data vectors is the same if the plot is a straight diagonal line. First, the algorithm re-orders all expression values from low to high within each sample, while remembering the original identity and location of each value. Then, each individual value is replaced by the median of its row. Finally, normalized values are returned to their original locations. This has the effect of enforcing an identical distribution across all samples, and the differences of individual samples are on their gene orders.",
    "In Figure 33A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0033], you can see that the distribution is the same in the boxplot, however the data are not on a log scale. Quantile normalization typically needs to be combined with a log-transformation prior to statistical analysis. We include the option here on its own because sometimes data are already log-transformed prior to uploading to ExpressAnalyst.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/85cbb389-6014-4bf9-8df3-8a3b779e8a51/cpz1922-fig-0033-m.jpg</p>\nFigure 33\nNormalizing microarray data. Boxplot and mean-variance trend for the dataset after each of the normalization methods: quantile normalization (A), log2 transformation (B), VSN (C), and VSN followed by quantile normalization (D).\n7. Select “Log2 Transformation” and click “Submit.”\nThis method is a simple log2 transformation of all expression values. The boxplot in Figure 33B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0033] shows that the data are now on a different scale compared to Figure 33A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0033], and there are some differences in distributions across samples (the boxplots are not identical).\n8. Select “Variance Stabilizing Transformation (VSN)” and click “Submit.”\nAs we discussed in Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001], transcriptomics data typically has a mean-variance trend in that, after filtering out features close to the detection limit, there are higher variances at lower expression values. While most differential expression algorithms directly model and account for this trend, sometimes we still wish to adjust the data to remove this trend, for example if we are going to use the data for hierarchical clustering.\nVSN is a well-established statistical method that can stabilize the variance of microarray data across the full range of the data and make the data more symmetric (Huber et al., 2002[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0018]). The mean-variance plot in Figure 33C[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0033] shows that the clear mean-variance trend visible in Figure 33B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0033] has been completely removed, as this has now become a nearly flat line.\n9. Select “VSN followed by Quantile Normalization.”",
    "This method is exactly as described: VSN has adjusted for the mean-variance trend, and then quantile normalization was performed on the results. You can see that the distributions are identical, on a log scale, and the mean-variance trend has been removed (Fig. 33D[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0033]). We could proceed to downstream statistical and functional analysis, but instead we will return to the upload page and process a proteomics dataset.\n10. Go back to the ExpressAnalyst home page and click “Start Here” to view the module overview. Find the “Statistical & Functional Analysis” section and click the “Start Here” button that is underneath the single table input type.\n11. Select “Human” for the organism, “Intensities (proteomics)” for the data type, leave the analysis type as “Differential Expression,” and set “Official Gene Symbol” for the ID type. Select “proteomics_example.csv” for the omics data file and check “Metadata included.” Click “Submit” and “Proceed.”\n12. View the “Omics data overview.”\nThere are only 2958 annotated features in this dataset. While proteomics coverage has increased in recent years, it is still common to have many fewer features in proteomics compared to transcriptomics datasets. This will be important to remember during the data filtering step.\n13. Navigate to the “Missing value estimation” tab. Leave “Remove all features with >50% missing values” checked. Select the last radio button “Estimate missing values using KNN (feature-wise).” Click “Process” and then “Proceed.”",
    "Most downstream statistical analyses do not tolerate missing values. There are four different general strategies for dealing with missing values (Fig. 34[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0034]). The most conservative approach is to filter out any feature that has a missing value for any sample (Fig. 34A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0034]). This tends to lose a lot of information. The other three approaches aim to impute missing values, which means using the other available data points to generate reasonable estimates for the missing values.\nMissing values can be either “missing at random,” where the missing values are due to random human or technical error, or “missing not at random,” where there is a consistent, systematic explanation (Lazar et al., 2016[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0026]). For “missing at random,” we assume that the true values of the missing values will be distributed normally around the central value of that feature, thus it makes sense to replace missing values with the mean or median of that feature (Fig. 34B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0034]). Most proteomics missing values are “missing not at random,” where the protein abundance was not measured because it was below the limit of detection. In this case, it makes sense to replace missing values with a low value, for example a simple approach is to use 1/5 of the lowest value of each feature (Fig. 34C[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0034]).",
    "The methods in Figure 34B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0034] and C replace all missing values for the same feature with the same value. This is conceptually straightforward; however, it can cause problems with downstream statistical analysis when there are many missing values for the same experimental group. For example, the p-value for DEA depends on the standard error of each of the groups being compared, where lower standard errors result in more significant p-values. If there are multiple missing values for the same experimental group, the standard error will be artificially lower since each will be replaced with the exact same value, inflating the significance of the p-values. We can avoid this by using stochastic imputation methods that use the entire dataset to estimate distributions of reasonable values. The imputed values are drawn randomly from the estimated distribution, avoiding the problems with statistical inference. One downside of these methods is that since they have a random element, you will get slightly different imputed values each time that you analyze your data, resulting in slightly different visualizations and lists of differential features/pathways. For these reasons, it may be preferable to use the methods in Figure 34B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0034] and C if there are very few missing values, and in Figure 34D[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0034] when there are more.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/f6bf4248-2074-40bb-ab08-8f9f926d86f9/cpz1922-fig-0034-m.jpg</p>\nFigure 34\nMissing value methods. Methods are labeled A-D in the order that they are explained in step 13.\n14. Since we already have relatively few features (<3000), set both the abundance and variability filters to 0. Select “None” for the normalization method and click “Submit,” to see what our unnormalized data look like.",
    "Based on the boxplot and mean-variance plot (Fig. 35A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0035]), it appears that the data are already on a log scale and have already undergone some form of VSN normalization. However, the sample-level distributions have some variability hence the data could benefit from either “Normalization by median” or “Quantile normalization.”\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/a12eaf58-6da9-4277-8acb-5a0f66a4e09b/cpz1922-fig-0035-m.jpg</p>\nFigure 35\nProteomics normalization methods. Boxplot and mean-variance trend of the uploaded data (A) and after applying normalization by median (B).\n15. Select “Normalization by median” and click “Submit.”\nThe VSN and Quantile Normalization methods are the same as explained for the microarray data above. In “Normalization by Median,” each intensity value is divided by the median value for that sample. This accounts for systematic differences across samples, for example higher or lower total MS signal related to different sample masses. After performing median normalization, we see that the medians of all boxplots are aligned (Fig. 35B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0035]). The two regression methods assume that the variability is dependent on the mean intensity in a linear (linear regression) and non-linear (local regression) relationship, respectively (Välikangas et al., 2018[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0045]). The results of the regression are used to adjust the data to remove this dependence.\n16. Click the “Downloads” link on the upper navigation tracker. Stay on the “Files & Scripts” tab and download the “data_normalized.csv” file.",
    "This pipeline used a stochastic missing value imputation method (KNN), which means that each time it is executed, we will get slightly different results. This may be undesirable at times, for example, if you have already prepared figures for a manuscript and just want to go back and check something else in the data. To avoid this, we can download the normalized data and upload this file for all future analyses. If we turn off filtering and select “None” for normalization, we will be able to exactly reproduce the analysis.",
    "As the cost of collecting transcriptomics data decreases and public data repositories grow quickly, it has become much easier these days to find multiple datasets testing the same hypothesis. The statistical power of individual transcriptomics DEA is quite low for most DEGs. In addition, analysis results are sensitive to even moderate outliers, which can greatly increase the number of false positives and false negatives. Meta-analysis can help overcome this issue by integrating results across multiple independent datasets to prioritize genes with consistent evidence for differential expression. In this protocol, we introduce how to use ExpressAnalyst for initial processing of multiple expression tables in preparation for the statistical and functional meta-analysis.\nThis protocol uses three datasets on helminth infections. Helminths are parasitic worms that impact ∼2 billion people worldwide (Oyesola & Souza, 2022). Here, we analyze three published microarray gene expression datasets of the liver tissue from both infected and control mice (Zhou et al., 2016[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0052]).\nNecessary Resources\nHardware\nA computer with internet access\nSoftware\nAn up-to-date web browser such as Google Chrome, Mozilla Firefox, or Safari, with JavaScript enabled (see Internet Resources)\nFiles\nNone\n1. Go to the ExpressAnalyst home page and click “Start Here” to access the module overview. Find the “Statistical & Functional Analysis” section and click the “Start Here” button located underneath the multiple gene expression table input type.\n2. Click “Try Examples.” Clicking “Yes” will upload and process all three tables. However, we want to demonstrate these steps, so download and save each of the files. Open each of the three files and examine its content. All datasets must be from the same species and must be described by the same metadata labels, otherwise it will not be possible to compare results.",
    "In general, datasets collected for meta-analysis should be as homogenous as possible. Although it is possible to analyze gene expression tables of very different technologies (i.e., microarray intensities and RNA-seq counts), the differences introduced by technologies and associated data processing pipelines could be too large to overcome during meta-analysis.\n3. Click the “Data Upload” icon at the top of the page and choose the three files that you just downloaded. Click “Upload” and then “Done!”\n4. We first need to perform annotation, missing value estimation, filtering, and normalization for each of the three uploaded datasets. In the “Data annotation” section, set the data value type to “Normalized values,” set the data type to “Microarray data (intensities),” set the organism to mouse, and the ID type to “Entrez ID” (Fig. 36[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0036]). Click “Submit.”\nUsers must obtain these details during the process of data collection for meta-analysis. The information is usually available in the data repositories. When in doubt, please contact the original authors or data depositors for clarifications.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/fe60feab-f12d-4b93-a23d-f8cde901ec3b/cpz1922-fig-0036-m.jpg</p>\nFigure 36\nMeta-analysis data processing. The interface has three different steps: data annotation, missing values, and filtering and normalization. The procedure must be completed for each of the three uploaded datasets.\n5. This dataset has no missing values, so it does not matter what the parameters are for the “Missing values” section. Leave the defaults and click “Submit.”\n6. These datasets are already filtered and normalized, so in the “Filtering & normalization” section, set both the variance and abundance filters to 0 and leave “None” for the data transformation. Click “Submit.” Now the data status above the data processing table should have changed from “Incomplete” to “Finished.”",
    "Here, the data are already normalized, so these parameters are easy to choose. In general, we suggest first analyzing each dataset individually as described in Basic Protocols 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001] to 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0003]. This will allow you to visualize the data before and after filtering and normalization, and to understand the basic trends individually before trying to compare across multiple datasets. The visualizations will help identify potential technical problems and to choose appropriate processing parameters during the meta-analysis.\n7. Find the dropdown menu above the data processing table and change the “Currently selected data” to the second dataset. Notice how this dataset has an “Incomplete” status. Repeat steps 4 to 6 for the second dataset, then select the third dataset and repeat steps 4 to 6 again. Click “Proceed.”\n8. A dialog will pop up telling us that the data passed the integrity check. Click “Next” to proceed to the “Data Quality Check” page.\nThe data quality check has the same components as explained for the single omics analysis (Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001]); however, it has been modified to support multiple omics tables. There is a brief summary of the uploaded data, and data from all datasets are included in the plots and metadata table.\n9. There is a clear batch effect with a strong pattern of separation according to technical platforms along PC1, so we will use ComBat for batch effect correction (Johnson et al., 2007[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0020]). Check the box next to “Adjust study batch effect (Combat)” and then click “Update” (Fig. 37[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0037]).",
    "In Figure 38A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0038], we can see that the Illumina and Affymetrix arrays are separated along PC1, which accounts for 97.5% of the variability in the integrated data. After performing ComBat, we see that the samples now separate by infection status, with controls on the left and infected samples on the right across all three studies (Fig. 38B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0038]).\nComBat first filters out any gene that is missing from >80% of the combined samples. Like other batch effect correction methods, it assumes that the true mean and standard deviation of each gene is the same across datasets. A key difference between ComBat and other methods is that it pools information across genes using an empirical Bayes approach to estimate the batch effect corrections, making it more robust for datasets with small sample sizes.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/0565bfdb-0ff9-4703-bc9e-468a5fa32ef3/cpz1922-fig-0037-m.jpg</p>\nFigure 37\nMeta-analysis data quality check page. This page has a summary of all uploaded datasets, followed by the option to perform batch effect correction.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/e276d74a-8c63-4c7f-ba4a-f8755b2d88b1/cpz1922-fig-0038-m.jpg</p>\nFigure 38\nBatch effect adjustment with ComBat. PCA scores plot of the normalized datasets before (A) and after (B) batch effect adjustment with Combat. The point color reflects the experimental condition (pink = control, blue = infected) and the point shape reflects the dataset.\n10. We have now finished the data processing for meta-analysis. Click “Proceed” to move to the statistical and functional analysis, which will be covered in Basic Protocol 8[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0008].\nThe public ExpressAnalyst web server currently allows users to upload and process a maximum of 10 gene expression datasets, with maximum of 50 MB per dataset. Large-scale meta-analysis of multiple transcriptomics datasets is a complex process and can be computationally very expensive. The task is more suitable to be performed by dedicated bioinformaticians using our ExpressAnalystR package rather than using the web interface.",
    "The objective of meta-analysis is to identify genes that are consistently dysregulated across multiple datasets (Xia et al., 2013[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0047]). There are two general approaches for this: 1) to directly merge the datasets and then perform a single DEA of the merged data, or 2) to perform DEA on each dataset separately and then combine their summary statistics (i.e., p-values or effect sizes). ExpressAnalyst supports both approaches, although in general we do not recommend direct merging unless the datasets are very similar e.g., all measured using the same platform and protocol. After statistical analysis, functional analysis can be performed on the list of DEGs identified during meta-analysis using the same set of visual analytics tools introduced in Basic Protocols 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0003] to 5[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0005], plus an additional tool specifically for comparing results across multiple datasets. Here, we continue analyzing the processed data from Basic Protocol 7[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0007] to perform statistical and functional meta-analysis.\nNecessary Resources\nHardware\nA computer with internet access\nSoftware\nAn up-to-date web browser such as Google Chrome, Mozilla Firefox, or Safari, with JavaScript enabled (see Internet Resources)\nFiles\nNone\n1. This protocol requires Basic Protocol 7[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0007] for meta-analysis data processing and normalization. If you have not just completed Basic Protocol 7[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0007], please do so. You should be on the “Identifying significant features with complex metadata” page to begin this protocol. Make sure that “Control” is chosen as reference group and change “Contrast” to “Infected” and leave the rest as default. Click “Submit.”\nThis is the same interface as the “Complex Metadata” tab on the differential expression page for the single gene expression table workflow. The statistical concepts behind this interface were discussed in detail in Basic Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0002]; please read this protocol for more details.",
    "2. A graphical summary of the results is generated for each dataset. Scroll down to the “Omics Data #1” panel and click one of the points to view the corresponding feature plot (Fig. 39B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0039]). Click the table icon in the top right of the “Omics Data #1” panel to view a table of the summary statistics (Fig. 39C[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0039]). Once you have finished examining the results, click “Proceed.”\nAfter DEA, the left panel summarizing each of the datasets is updated with the number of DEGs (Fig. 39A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0039]). Here, we see that there are many DEGs for the two Illumina datasets (2961 and 2876) and only a few for the Affymetrix dataset (33). The results from each of the datasets are displayed in a panel (Fig. 39B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0039]). The x-axis is the -log10(p-value) (larger values mean they are more significant) calculated using a model with only the primary metadata (no covariates). The y-axis is –log10(p-value) calculated with the complete specified model. Normally, this plot would show how including the covariates in the model changed the p-values, for example points in the top left (y-value > x-value) are scenarios where the p-value is more significant after including covariates, whereas points in the bottom right (y-value < x-value) are where the p-value became less significant after the adjustment. In this case, we only have one metadata variable (infection status), so we were unable to include any covariates in the model hence the x and y-values are exactly the same.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/84b9944c-f12e-4261-9f68-0af0eb59ba9e/cpz1922-fig-0039-m.jpg</p>\nFigure 39\nDEA results for each dataset. After DEA, the dataset summary in the left panel is updated with the number of DEGs (A). A plot is generated for each dataset, to visualize the statistical results (B). Clicking the table icon in (B) opens a detailed table of the statistical results (C).",
    "3. The next step is to integrate the DEA results across datasets. Look over all the integration strategies. Go to the first method (“Combining P-values”), leave the method as “Fisher's method,” and click “Submit” and then “Proceed.”\nExpressAnalyst currently offers four different categories of integration methods: 1) combining p-values; 2) combining effect sizes (log2FC divided by standard deviation); 3) vote counting, which simply counts the number of datasets that a gene is differentially expressed and keeps those genes that pass a specified count threshold; and 4) direct merging normalized data followed by a single DEA. The first two are recommended, as these are the most robust integration methods that make use of summary statistics that are less susceptible to study-specific effects. The “Combining P-values” method should result in 4088 DEGs after combining statistics across all three datasets.\n4. Click “Previous” to go back to the meta-analysis page. Go to the second strategy (“Combining Effect Sizes”). There are two different methods for performing this integration, using a “Fixed Effects Model,” or using a “Random Effects Model.” Click the “Cochran's Q-Test” button.\nCochran's Q test is the traditional test for heterogeneity in meta-analyses. The Q value is calculated as the weighted sum of squared differences between individual study effects and the pooled effect across studies. When the estimated Q values have approximately a chi-squared distribution, fixed effect model assumption is appropriate. In this case, the data deviates from a 1:1 relationship (red dashed line), we should choose to model our data with a random effects model.\n5. Select “Random Effects Model” from the dropdown menu in the “Combining Effect Sizes” section. Leave the p-value threshold as 0.05. Click “Submit” and “Proceed.”\n6. There are 1703 significant results, a good number for visualization and functional analysis. Click “Proceed.”",
    "There are three columns showing summary statistics of individual DEA results followed by the combined effect size and p-values. By default, summary statistics show log2FCs, but we can switch to view p-values if preferred (Fig. 40[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0040]).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/54d488a5-0dba-4166-bc88-6289bf53c342/cpz1922-fig-0040-m.jpg</p>\nFigure 40\nMeta-analysis DEA results. Table summarizing both the individual and combined results. Use the dropdown to visualize the individual dataset p-values instead of fold-changes. Click the image icon to view a feature plot.\n7. The analysis overview has the same tools that were introduced in Basic Protocols 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0003] and 4[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0004]. Click “Enrichment Network.” In the pop-up, leave “Meta-analysis results” selected and click “Proceed.”\n8. In the “Enrichment Analysis” pane, change the “Type” to “GSEA” and click “Submit.” There are many significant results, and the labels are all overlapping and difficult to read. Find the horizontal toolbar and change the “Node” dropdown to “Label.” Go to the “Display” tab in the “Node Label Customization” dialog, change the dropdown to “Unlabel all nodes” and click “Submit” (Fig. 41[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0041]).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/6328f396-3533-430e-bc15-6a42eb25d277/cpz1922-fig-0041-m.jpg</p>\nFigure 41\nSteps to improve the network appearance. The overwhelming number of labels can be strategically reduced to focus on only the most significant results.\n9. Go to the results table. Select the top 10 most significant pathways. Change “Label” to unspecified and then back to “Label” to access the pop-up again. Change the dropdown to “Label selected nodes” and click “Submit.” You will see that all the selected nodes are now labeled. However, these nodes are colored with the same highlight color. To restore their default color styles based on expression profiles, go to the results table, check, and then immediately uncheck the “Select all” box to remove all the checked boxes (Fig. 41[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0041]).",
    "10. The network is now much more interpretable and easier to read, with only the key nodes labeled. Some of the labels are still overlapped by other nodes. Click and drag individual nodes until every label is visible (Fig. 42[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0042]).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/49627985-874f-4d0c-a3e8-65e2bfd0d293/cpz1922-fig-0042-m.jpg</p>\nFigure 42\nEnrichment network of integrated results. Functional analysis results after ORA was performed with the Reactome library. Pathways with an adjusted p-value <0.05 are labeled. Node color corresponds to p-value significance (darker red indicating more significant) and node size corresponds to the number of pathway hits. Two nodes are connected if >30% of their DEG hits overlap.\n11. Navigate back to the “Analysis Overview” and click the “Upset Diagram” button. Keep the defaults: all three datasets included but leave the “Meta-analysis features” unchecked. Click “OK.”\n12. The diagram allows us to explore DEG overlap across datasets (Fig. 43[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0043]). Hover your mouse over any bar to see how many of those genes are present in the other interactions.\nThere are only 16 consensus DEGs across all three datasets (the last column with all three circles filled in). Many of the DEGs are shared between the two Illumina datasets (2961 and 2876 DEGs in E-GEOD-59276 and E-GEOD-25713, respectively; 2050 are shared).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/2cf22684-2254-46ec-a559-4cfafdbfef72/cpz1922-fig-0043-m.jpg</p>\nFigure 43",
    "Upset diagram comparing multiple DEA results (intersect method). Each bar indicates the number of DEGs identified in individual datasets. The dots underneath the bars show where each list came from. Each row corresponds to one dataset; if a dot is filled in, it means that that dataset contributed DEGs towards the bar above it. For example, the first bar corresponds to the DEGs from the third dataset (third circle filled in), the second bar corresponds to the DEGs from the second dataset (second circle filled in), and the third bar corresponds to genes that are in both the second and third datasets (last two circles filled in).\n13. Click the last column of dots corresponding to the DEGs that were present in all datasets. This will display the gene names in the bottom left “Feature Members” panel. Now go to the “Enrichment Analysis” panel and click “Submit.” This will perform ORA with the KEGG database using the genes in the “Feature Members” panel.\n14. Go to the navigation bar at the very top of the page and click the “Downloads” link to view and download the results.",
    "Differential expression analysis (DEA) produces lists of differentially expressed genes or proteins, also known as transcriptomic or proteomic signatures. These lists can be saved, and then uploaded to ExpressAnalyst directly through the list upload in the “Statistical and Functional Analysis” module. DEA results are also commonly available as supplementary files in the published literature, providing another source of transcriptomic signatures. Since the data are small relative to an omics data table, we can easily upload multiple lists simultaneously to visually compare them. We can also perform functional analysis on the list of uploaded genes. In this protocol we introduce the different list formats that are accepted by ExpressAnalyst, and then demonstrate how to compare multiple uploaded lists with a heatmap.\nNecessary Resources\nHardware\nA computer with internet access\nSoftware\nAn up-to-date web browser such as Google Chrome, Mozilla Firefox, or Safari, with JavaScript enabled (see Internet Resources)\nFiles\nNone\n1. Go to the ExpressAnalyst home page and click “Start Here” to view the module overview. Find the “Statistical & Functional Analysis” section and click the “Start Here” button underneath the list input type.\n2. Go to “Try Examples,” keep “Gene list 1” selected, and click “Submit.” This will populate the data input with a list of IDs, along with the appropriate species and ID type.\nThis is an example of a list that is uploaded with log2FC values (Fig. 44A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0044]). The log2FC values are optional, but if included, are used to annotate some of the results, for example the gene nodes in the enrichment network bipartite view. Here you can see that there is a header (starting with “#”) specifying the ID and log2FC columns. This header is optional; ExpressAnalyst will still recognize the data without the header.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/ee7e8c10-146f-413b-af0b-de22b0407eaf/cpz1922-fig-0044-m.jpg</p>\nFigure 44",
    "List upload format. Example data demonstrating a list of IDs uploaded with log2FC values (A), and a multi-list dataset (B).\n3. Click “Try Examples” again, select the last example data called “Multiple Lists,” and click “Submit.”\nThis is an example with multiple lists. If you scroll through the text area with the IDs, you can see that two of the lines are “//.” This is used to separate different lists, so in this case, there are three lists separated by two “//” breaks. Note that in this example, there is no header (row starting with “#”) and no log2FC values.\n4. Click the “Upload” button beneath the text input area, and then click “Proceed.”\nThis is the same overview as for the other workflows, with some visual analytics tools disabled if they require expression values for each sample, or p-values. For lists, we are still able to use the enrichment network, ridgeline plot, ORA heatmap (a different format compared to the expression table upload), and the upset diagram.\n5. Find the heatmap icon and click the “ORA” button. This will show a new type of heatmap, designed to compare multiple lists (Fig. 45[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0045]).",
    "The overall design of the heatmap interface is the same as for an expression table upload. Please see Basic Protocol 4[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0004] for a detailed introduction to the interface components. The main difference is that instead of visualizing expression values, the heatmap is used for visualizing list overlap. If a feature does not appear in a specific list, the respective cell is gray. If it is in the list, it has a color on a scale between yellow and red. If a feature is in only one list, the color is yellow. If it is in all lists, it is red. For frequencies in between none and all, it is given an orange color, where the exact shade is determined by the number of uploaded lists.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/ddb05229-4d33-488b-8bc7-649e7715b69d/cpz1922-fig-0045-m.jpg</p>\nFigure 45\nHeatmap to compare multiple lists. This heatmap has the same three components as the heatmap introduced previously (Overview, Focus View, Enrichment Analysis), however it is designed to visualize list overlap instead of expression values.\n6. In the “Overview” panel on the left, use your mouse to drag-and-select the rows containing red and orange cells. Those selected rows will show in the “Focus View.” Then, go to the “Enrichment Analysis” panel on the right and click “Submit.”\nThese results are the pathways that are enriched in the transcripts that are present in multiple uploaded lists as shown in the Focus View (Fig. 45[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0045]). We can think of this as a shortcut to the functional meta-analysis performed in Basic Protocol 8[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0008].\n7. Navigate back to the “Analysis Overview,” find the network icon and click the “Enrichment Network” button. A dialog with a dropdown will appear. We have the option of choosing one of the three uploaded lists; leave “datalist 1” selected and click “Proceed.”",
    "The interface is almost identical to that of the “Enrichment Network” analysis that we performed after processing an expression table instead of a list. The only significant difference is that GSEA is not available for functional analysis of lists. The purpose of including this step in Basic Protocol 9[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0009] is to highlight the functional analyses that we can perform on lists. We direct users to the Basic Protocol 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0003] for the concepts behind functional analysis and detailed steps on using the enrichment network interface.\n8. Click the “Downloads” button to view all the results from this protocol.",
    "As the cost of acquiring transcriptomics datasets decreases over time, we see more datasets that measure groups of samples along a continuous dimension, such as chemical doses or time points. A statistical method called “dose-response analysis” was developed by the field of toxicology to identify the concentration at which a biological assay responds to chemical exposure (Thomas et al., 2013[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0044]). Dose-response experimental designs typically include a control group (dose = 0) and at least four different dose groups, typically with the same number of replicates in each group. To perform transcriptomics dose-response analysis, the data are processed and normalized according to standard protocols, and then differential analysis is used to identify genes that have a relationship with dose. All genes that pass the DEA filters are used for dose-response curve fitting, in which a suite of linear and non-linear curves is fitted to the expression of each gene, and the best fit model for each gene is kept. Next, the curve is analyzed to determine the precise concentration at which the fitted curve departs from the expression values in the control group (called the gene benchmark dose, or BMD). The collection of gene BMDs can then be analyzed at the pathway or whole-transcriptome level to determine the concentration at which specific pathways respond, or the concentration at which we observe a robust transcriptomic response. ExpressAnalyst uses the FastBMD implementation of dose-response analysis (Ewald et al., 2021[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0014]).",
    "While this method was developed for analyzing dose-series data in a toxicology context (National Toxicology Program, 2018[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0037]), the same statistical approach can be used to analyze data measured along any continuous gradient, for example time-series or even temperature. In this protocol, we introduce BMD analysis with a chemical exposure dataset. Rats were exposed to five concentrations of bromobenzene for 2 weeks, at which point transcriptomic data were measured with microarrays in liver tissue (Thomas et al., 2013[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0044]).\nNecessary Resources\nHardware\nA computer with internet access\nSoftware\nAn up-to-date web browser such as Google Chrome, Mozilla Firefox, or Safari, with JavaScript enabled (see Internet Resources)\nFiles\nNone\n1. Go to the ExpressAnalyst home page and click “Start Here” to view the module overview. Find the “Statistical & Functional Analysis” section and click the “Start Here” button that is underneath the single table input type.\n2. Go to “Try Examples” and select the “Bromobenzene” example data. Click “Submit” and then “Proceed.”\nWe are using a built-in example data, so we do not need to specify any parameters during upload. When uploading your own data, make sure to change the analysis type from the default “Differential Expression Analysis” to “Time series/Dose response.” The metadata must also be formatted in a specific way. Make sure to input the actual concentration values, e.g., in the example data the metadata looks like Figure 46[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0046]. If the actual numerical values are not used, ExpressAnalyst will give an error. In addition, you should have at least two replicates for each dose group because the dose/time group standard error is used in various steps of the analysis.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/0b168c24-98d1-4187-beae-917e9c2918c8/cpz1922-fig-0046-m.jpg</p>\nFigure 46\nConcentration or time-series data format. An example concentration-series data file. Alternatively, a separate metadata file can be uploaded if the series variable is in numeric format.",
    "3. The “Omics data overview” shows that there is a control group (dose = 0) and five dose groups (doses = 25, 100, 200, 300, and 400). When you are done viewing the data, click “Proceed.”\nThese doses are on a linear scale. It is more common to see concentration series on a log or semi-log scale. There are options in later steps to change the scale for visualization, which is typically necessary for log and semi-log scales. This dataset is more representative of other continuous gradients that are commonly measured such as time, which are unlikely to be on a log scale.\n4. This dataset was already normalized. Leave the filtering defaults, select “None” for normalization, and click “Submit.” When you are done viewing the PCA and box plots, click “Proceed.”\nThe PCA plot shows that a substantial amount of variability within the dataset is related to dose, with samples going from low dose to high dose along PC1 (Fig. 47[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0047]). This is a good sign for dose-response analysis.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/1930af2c-093b-4f72-aa65-cd2da8cc68d0/cpz1922-fig-0047-m.jpg</p>\nFigure 47\nPCA plot of the normalized data. Samples are annotated according to dose group (orange = 0, light blue = 25, green = 100, yellow = 200, dark blue = 300, red = 400, units = mg bromobenzene/kg bodyweight/day).\n5. In dose-response analysis, DEA is a pre-filtering step, used to remove genes that do not change over the measured conditions prior to the computationally intensive curve fitting step according to a standard design, hence the interface is greatly simplified. Make sure that “DOSE” is selected as the dose/time factor and that “0” is selected as the control condition. Leave the “Statistical method” as “Limma.” Click “Submit” and then “Proceed.”",
    "6. There should be 2018 significant features. Change the “Adjusted p-value” from 0.05 to 0.01 and click “Submit” to update to 1198 significant features. Click the “Graphical Summary” to view feature plots of the top few rows (Fig. 48[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0048]). Change the “Selected Comparison” dropdown to DOSE_300 vs. DOSE_0. You should see that the log2FC column changed, but that the p-values stayed the same. Click “Proceed.”\nIn Basic Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0002], we explained how DEA is conducted by specifying metadata variables to include in a linear model, fitting the model to the gene expression data, and then extracting moderated t-statistics and p-values related to specific terms from the fit object. If we do not specify a single term, limma returns moderated F-statistics and p-values, similar to an ANOVA test, to assess whether there are significant differences between any of the metadata groups.\nCurve fitting is computationally intensive. It can take ∼5 min to fit curves to 2000 genes. To manage server load, the ExpressAnalyst public server currently allows a maximum of 2000 genes for curve fitting. If there are many significant features and curve fitting is too slow, you can adjust the p-value and/or fold-change thresholds to reduce the number of results to between 500 and 1000.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/55c262df-c4e2-4c38-bd4b-8aae23746e7d/cpz1922-fig-0048-m.jpg</p>\nFigure 48\nDEA results. Significant results from DEA in the dose-response/time-series workflow. Feature plots are shown for the two most significant p-values, showing that there is a clear relationship with dose.\n7. Leave the defaults (Fig. 49A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0049]) and click “Submit.” This is quite computationally intensive, hence this step could take several minutes to complete.",
    "There are ten different models listed in the “Fit Models” section. It is recommended to select all except for the higher-order polynomials (Poly3 and Poly4), which should only be used if you expect to see a non-monotonic response. The lack-of-fit p-value is used to filter out curves prior to calculating the gene BMD. It has the opposite interpretation as the p-values used in DEA, in that we filter out curves that have p-values below this cut-off.\nThe final list of gene BMDs is determined in several steps. First, the mean and standard deviation of the control samples is calculated. Then, the concentration at which the fitted curve first surpasses the mean ± 1 standard deviation is identified. We can change the number of standard deviations considered by adjusting the benchmark response (BMR) factor. The 95% confidence intervals for the gene BMD are calculated, and if the ratio between the upper and lower limit is >40, we filter out that result. Finally, any gene with a BMD higher than the highest dose is also filtered out.\nThe density plot (Fig. 49B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0049]) shows the distribution of all gene-level BMDs. It is annotated with several measures of the “transcriptomic point-of-departure” (tPOD), which are aggregated measures of the concentration at which we observe a robust transcriptomic response. The bar plot (Fig. 49C[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0049]) shows the distribution of models used to calculate the gene BMDs, including both those that passed all the filters (teal) and those that were filtered out (dark gray).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/69fb18c6-8528-4fcc-8780-d559a79933bd/cpz1922-fig-0049-m.jpg</p>\nFigure 49\nDose-response/time-series curve fitting page. Interface for performing curve fitting (A) and plots summarizing the results including a density plot of all gene-level results (B) and a bar plot of how frequently each model type was the best fit (C).",
    "8. Navigate to the results table and click the button in the “View” column for several of the genes.\nThe individual gene plots show each of the expression values (black points), the fitted curve (blue line), the gene BMD (solid red line) and the lower and upper 95% CI of the gene BMD (dashed red lines). The gene plotted in Figure 50[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0050] has such a strong response that the CI is extremely narrow and the dashed and solid lines are nearly on top of each other.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/c606d3b6-e15a-480b-96b1-0f51782456d6/cpz1922-fig-0050-m.jpg</p>\nFigure 50\nTable of curve fitting results. Columns from left to right are the gene symbol, lack-of-fit p-value (higher is more significant), the lower 95% CI of the gene BMD, the gene BMD estimate, the upper 95% CI of the gene BMD, best fit model type, and a graphical summary button.\n9. Click “Proceed” to go to the “Analysis Overview.” Click the “Accumulation Plot” button.\n10. By default, pathway analysis was performed with the KEGG database.\nPathway BMD analysis starts by performing overrepresentation analysis (ORA) on the list of genes with gene BMDs. For more details on ORA, please see Basic Protocol 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0003]. A pathway-level BMD, or the concentration/time where that pathway is activated, is estimated as the median BMD of all gene BMDs in that pathway.\nThe pathway analysis results are shown in the left “Functional Enrichment Analysis” panel. The accumulation plot of the top five most significant pathways is displayed in the center area. Clicking a pathway row displays all gene-level results for that pathway in the “Current Gene Selection” panel on the top right. Clicking a gene, either within the “Current Gene Selection” panel or within the accumulation plot, displays the fitted curve in the bottom right.",
    "11. There is one pathway with a very high number of hits (“Metabolic pathways”) that makes it difficult to see the differences between the other pathways. Click the “Metabolic pathway” row in the results table to remove it from the plot. Now the other pathways become easier to see (Fig. 51[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0051]).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/28e2e7ac-fa46-478c-bbc3-54ff1625a2b7/cpz1922-fig-0051-m.jpg</p>\nFigure 51\nBMD accumulation plot. Significant ORA results are displayed in the “Functional Enrichment Analysis” panel. Pathways highlighted in blue are shown in the accumulation plot in the center. Individual gene BMD statistics in the last selected pathway are displayed in the “Current Gene Selection” panel. Clicking a gene BMD point in the accumulation plot displays the individual curve in the “Gene BMD Plot” panel.\n12. Click the colored box next to the “Database” label in the top left (Fig. 51[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0051]) and choose a new color. Next, click the next most significant pathway that is not highlighted to add an accumulation plot for that pathway in the selected color. Repeat these two steps to add a few more pathways to the diagram.\nAccumulation plots (also called cumulative distribution plots) are powerful tools for visually comparing many distributions to each other. Here, we use them to compare the distributions of BMD values across different pathways. The x-axis reflects the continuous metadata that we used for curve fitting, for example concentration values if this was a dose-response analysis or time points if this was a time-series analysis. The y-axis is the rank of the BMD value within that pathway.",
    "Accumulation plot is very informative. First, the maximum height of each accumulation plot corresponds to the number of hits within that pathway. Pathways with more gene hits will have a taller curve because they ‘accumulate’ more points. Second, areas of the accumulation plot with a steep incline correspond to concentration/time ranges with a high density of gene BMD results. For example, the orange curve (“Glutathione metabolism”) increases in height relatively quickly between concentration values of 10 to 100 mg/kg and then slowly between 100 and 300 mg/kg. Third, the relative location along the x-axis shows which pathways are generally activated at lower vs higher concentrations. The orange pathway is clearly activated at lower concentrations than the other plotted pathways, for example the royal blue “Steroid hormone biosynthesis” pathway.\n13. Click the underlined pathway name in the “Current Function” panel (below the enrichment result table) to generate a heatmap summarizing all fitted curves within that pathway. Hover your mouse over a point in the accumulation plot and click to view the fitted curve for that gene.\n14. Click the “Downloads” link on the top navigation tracker to view and download all the results generated during the analysis session.",
    "The first step in an RNA-seq analysis starts with quantification of the raw reads from FASTQ files. This involves performing quality control, trimming low-quality reads, and aligning cleaned reads to a reference genome or transcriptome (Conesa et al., 2016[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0008]). This is the most computationally intensive part of a basic RNA-seq analysis pipeline, and ExpressAnalyst provides two options: users may upload compressed FASTQ files (.fastq.gz) to the ExpressAnalyst server for remote processing, or they may install the ExpressAnalyst stand-alone (ExpressAnalystSA) Docker for local processing (Liu et al., 2023[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0029]). When using the remote option, data upload is limited to four concurrent users, users are limited to a maximum of 4-hr upload session, and each user may only store and process 30 GB of FASTQ files at one time. In contrast, the local option allows users to avoid the time-consuming data upload step and does not impose any limitation on the dataset size, although it is slightly more complicated to set up for the first time.\nIn this protocol, we guide users through installing the ExpressAnalystSA Docker and performing RNA-seq reads quantification with kallisto and Seq2Fun (Bray et al., 2016[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0005]; Liu et al., 2021[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0028]). Downstream statistical and functional analysis are covered in Basic Protocols 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0002] to 5[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0005]. Note that if users do not envision performing raw data processing and are primarily interested in analyses beginning with a count table, they can skip this protocol and proceed directly to Basic Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0002].\nNecessary Resources\nHardware\nA computer with internet access, equipped with Intel or AMD CPU, and at least 16 GB RAM and 250 GB free storage\nSoftware\nAn up-to-date web browser such as Google Chrome, Mozilla Firefox, or Safari, with JavaScript enabled (see Internet Resources)\nDocker Desktop (see Internet Resources)\nFiles\nNone",
    "1. Go to the ExpressAnalyst homepage and click on the “Tutorials” tab. Click the download link for “Basic Protocol 11[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0011] (FASTQ files).” This will navigate to the Xia Lab file server, which hosts large datasets and databases for download. Click “Download.”\nThis dataset contains 18 sub-sampled FASTQ files, each of which is ∼54 MB. The data are from double-crested cormorant, which does not have a reference transcriptome. There are three experimental conditions (control, medium exposure to chlorpyrifos, and high exposure to chlorpyrifos), with three replicates per condition (Desforges et al., 2021[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0011]). The full FASTQ files are between 3 and 4 GB per sample, and the full dataset had five replicates per condition. This highly sub-sampled dataset is provided to decrease download and processing time for educational purposes. However, the resulting count table should not be analyzed as the sub-sampled data do not provide reliable gene expression quantification.\n2. Expand the zipped file. Inside there should be 18 FASTQ files and a “metadata.txt” file. Right-click the “metadata.txt” file and open it with a spreadsheet program like Microsoft Excel.",
    "The metadata file must be formatted in a very specific way so that ExpressAnalyst can properly recognize the files. RNA-seq datasets usually have paired end reads, meaning that there are two FASTQ files generated per sample. One contains reads that were sequenced from the 5′ to 3′ direction along the forward strands and one with reads that were sequenced from the 5′ to 3′ direction along the reverse strands. In the metadata file, each complete sample gets one row. Two files from the same sample should have the exact same first part of the file name (prefix), differing only in their suffix where one indicates forward reads and one indicates reverse reads (Fig. 52[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0052]). The sample and group columns are used to label the output results.\nA common mistake is using inappropriate sample names, filenames, or group values. This table is read directly into R, therefore all table values should be machine readable and contain no spaces (use “_” instead) or special characters, such as “(” or “/” or “%.”\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/fe6682ae-5604-4757-9525-0a7618dcd9ce/cpz1922-fig-0052-m.jpg</p>\nFigure 52\nMetadata file associated with FASTQ files. The metadata file must have the same four columns. The ’sample’ column contains short sample names for labeling the results table. For paired-end RNA-seq data, each sample has two files: the forward reads and reverse reads, with their complete filenames in the ’forward_file’ and ’reverse_file,’ respectively. The ’group’ column describes one metadata variable that is used to label the QA/QC plots.",
    "3. Start the Docker software on your computer. If you are using Docker Desktop, click the Docker icon and wait while the software initializes. You can tell that Docker Desktop is running if the Docker Desktop window shows an overview of your Docker containers, or if you click the small Docker icon (next to where the Wi-Fi connection status is shown) and the dropdown menu says, “Docker Desktop is running.” We do not include screenshots here because Docker Desktop looks different for different operating systems.\nThis protocol requires the Docker software to be installed on your computer. Implementing Docker on your system is generally outside the scope of this tutorial as we do not have control over Docker configuration or future Docker updates; however, there is up-to-date troubleshooting tips on our ExpressAnalyst Docker Hub page (see Internet Resources). Some operating systems, especially Windows, may require additional steps to get Docker running properly.\n4. To download the most recent version of the ExpressAnalystSA Docker image to your computer, open your command line, copy-paste this text and hit enter:\n         \ndocker pull dockerxialab/expressanalyst_docker:latest\nIt is good practice to run this command each time that you process a dataset, to ensure that you are using the latest version. If you want to use a specific version, for example to exactly reproduce a previous analysis, you can go to https://hub.docker.com/r/dockerxialab/expressanalyst_docker/tags[href=https://hub.docker.com/r/dockerxialab/expressanalyst_docker/tags] to see all previously published versions. Each version has a “docker pull” command that can be copy-pasted into your command line. Also, note that Windows operating systems typically have two command line programs: “PowerShell” and “Command Prompt.” In our experience, “PowerShell” is the better choice for running Docker containers.\n5. Determine your home directory. This can vary depending on your operating system.",
    "For macOS, the home directory is usually “/Users/” followed by your name, for example “/Users/jessica.” For Linux, we recommend using the root, which is just “/.” Windows is more complicated because it can have multiple drives to choose from and the slashes are in the other direction. One example of a Windows home directory is “C:\\jessica.”\nOne way to determine the home directory is to go to the command line and enter “cd ∼” for Linux or Mac or “cd $home” for Windows in PowerShell, and then “pwd.” This will navigate to your home directory and then print out the path.\n6. Stay in the command line and enter the command: \n         \ndocker run -ti --rm -p 8080:8080 -v HOME_DIRECTORY:/data dockerxialab/expressanalyst_docker:latest\nbut replace the words HOME_DIRECTORY with the home directory that you determined in the previous step. For example, with a home directory of “/Users/jessica,” the complete command would be:\n         \ndocker run -ti --rm -p 8080:8080 -v /Users/jessica:/data dockerxialab/expressanalyst_docker:latest\nVarious messages will be printed into your command line while the Docker container is initializing. When you see “ready in ## #### (ms)” (Fig. 53[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0053]), the Docker container is ready to use.\nThe last part dockerxialab/expressanalyst_docker:latest is the name of the ExpressAnalyst Docker image. Entering docker run IMAGE_NAME is how you would run any Docker image that you have pulled from Docker Hub. All the rest in the middle are parameters specifying how we want to run this specific Docker container.",
    "The -ti part tells Docker that we want to run the container interactively, allowing us to give ExpressAnalyst information while we are running it (input files, click buttons, etc). The -rm part tells Docker to clean up temporary files on your computer after you stop running the ExpressAnalyst container. The -p 8080:8080 allows us to access the ExpressAnalyst container through a web browser, by entering localhost:8080 in the URL bar. Finally, the -v HOME_DIRECTORY:/data tells Docker to attach the container to your home directory, and to create a new, temporary directory called /data to use while it is running.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/d452a49b-6c49-457d-90dd-ae7c9a64e2dc/cpz1922-fig-0053-m.jpg</p>\nFigure 53\nRunning ExpressAnalystSA Docker. This is a screenshot of the command line output after the Docker container has finished initializing.\n7. Open a web browser (we recommend Chrome) and type localhost:8080/ExpressAnalystSA/ in the URL bar. You should see the ExpressAnalyst homepage. Click “Start Here.”\n8. We need to first download the reference transcriptome and the ortholog database from the “Databases” page (https://www.expressanalyst.ca/ExpressAnalyst/docs/Databases.xhtml[href=https://www.expressanalyst.ca/ExpressAnalyst/docs/Databases.xhtml]) (Fig. 54A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0054]). On the “With a Reference Transcriptome” tab, find the Gallus gallus (chicken) reference transcriptome and click the download icon (Fig. 54B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0054]). When the download link finishes loading, click the “Download” button. This file size is 644 MB.\nFor kallisto-based RNA-seq processing, users must download the reference transcriptomes that have been specifically indexed for kallisto. ExpressAnalyst makes pre-indexed reference transcriptomes available for download for 22 common species. If your species is not available, you can download the reference transcriptome from either NCBI or Ensembl and perform the indexing yourself using the kallisto software. This is beyond the scope of this protocol.\nAs mentioned before, there is no reference transcriptome for double-crested cormorant, so we will align RNA-seq reads to the chicken transcriptome as this is the most closely related, high-quality reference transcriptome available.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/841d20ff-f87b-4011-ad72-cb4c5da2e6ed/cpz1922-fig-0054-m.jpg</p>\nFigure 54",
    "Downloading reference transcriptome and ortholog database. Files needed for FASTQ processing can be downloaded from the “Databases” tab on ExpressAnalyst (A). The first tab contains reference transcriptomes, including the zebrafish reference used in this protocol (B). The second tab contains the EcoOmicsDB ortholog databases, including the fishes database used in this protocol (C).\n9. Navigate to the “Without a Reference Transcriptome,” find the “Birds” database, and click the download icon (Fig. 54C[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0054]). When the download link finishes loading, click the “Download” button. The file size is 170 MB.\nHere, we outline how to use kallisto while later steps outline how to use Seq2Fun. If you are only interested in Seq2Fun, you do not have to execute the kallisto steps as the two analyses are independent. However, we recommend still reading the steps as some concepts are explained in more detail in the kallisto workflow.\nThere are 28 databases corresponding to 28 different taxonomic groups. While sequences from ∼700 species were used to define the ortholog groups, we have filtered the database according to different NCBI taxonomy categories of species. When aligning reads to an ortholog database, most hits will be to sequences from more closely related species. Since the size of the database directly impacts the computational efficiency, we can decrease the run time without greatly impacting the quality of the results by choosing a narrower taxonomic group.\nIf performing a cross-species analysis, you should choose a database that is sufficiently general to cover all species (i.e., choose the vertebrates database if analyzing and comparing data from birds and fish). More details on the species coverage of each database and ortholog group are exposed via the EcoOmicsDB web interface, which was described in Basic Protocol 5[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0005].",
    "10. We will create a data directory for the analysis with a reference transcriptome. Create a folder called “Process_Kallisto.” Inside the folder, create three more folders: “DATABASE,” “FASTQ,” and “RESULTS.” Move the downloaded FASTQ files to the “FASTQ” folder and move the downloaded reference transcriptome to the “DATABASE” folder (Fig. 55[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0055]).\nThe ExpressAnalyst Docker is configured to recognize this specific directory structure and set of folder names. The names are case sensitive: if you do not use all capital letters, ExpressAnalyst will not recognize the structure. The FASTQ folder should only include FASTQ files, and the filenames must exactly match the filenames in the metadata file. The DATABASE folder should only include the reference transcriptome file (ending in either “.idx” or “.idx.gz”).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/3ff0d97f-f521-4a57-8445-8cda550ca0c0/cpz1922-fig-0055-m.jpg</p>\nFigure 55\nDirectory structure. The job folder should have three subdirectories, one for the downloaded reference transcriptome, one for the FASTQ files, and an empty one for the results.\n11. For Mac or Linux users, double-click the transcriptome file to decompress it (“.idx.gz” to “.idx”). When it is finished, delete the compressed transcriptome file to save space on your computer. If you are using a Windows computer and know how to use your command line to decompress “.gz” files you can do this, otherwise leave the file as is.\nExpressAnalystSA has a built-in method to decompress “.gz” files, but it may be slower compared to the more advanced decompression tools available on your operating systems.",
    "12. Go back to the browser tab where the ExpressAnalystSA Docker is running. Keep the “Data Type” as “Paired-end” and keep the “Analysis Type” as “With reference transcriptome (Kallisto).” Determine the relative path to your data directory (Fig. 56B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0056]), by considering the full path to your data directory and removing the home directory path that you used in the “docker run” command. Enter the relative path into the “Data directory” text input. Choose the “metadata.txt” file for the “Metadata file,” click “Submit,” and then click “Proceed.”\nThis step is tricky for users who are not familiar with Docker. Make sure that the metadata.txt file is stored outside of the job folder. Also make sure that there are no spaces in any of the folder names in the data directory path. If you are using Windows, make sure that the data directory is on the same drive as the home directory that you used in the “docker run” command, otherwise Docker will not be able to access the files.\nIf you are starting with a compressed transcriptome file, ExpressAnalyst will first decompress the “.gz” file which can take 5 to 10 min. If you run a new analysis starting with a “.idx” instead of a “.idx.gz,” the initialization step will be a few seconds.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/1fb34b6f-2e39-429b-82d0-570d28bcdf8d/cpz1922-fig-0056-m.jpg</p>\nFigure 56\nData directory path. The main interface requires users to input the path to their data directory that is relative to where they mounted the Docker container (A). The correct path format can be found according to the approach outlined in (B).\n13. The Data Integrity Check page contains a summary of all the FASTQ files. Make sure that all files are there and properly labeled, then click “Proceed.”",
    "14. Keep the “Minimum reads quality score” as 25. Find the number of cores on your computer. If you have >4, you can increase the number of cores to make the analysis run faster. It is also acceptable to leave this as 3. Click “Confirm,” click “Submit Job,” and then click “Confirm” in the dialog.\nThe “Minimum reads quality score” is a threshold used by the “fastp” software to filter out low quality reads prior to quantification with kallisto. Normal values are anywhere between 20 and 30.\n15. The processing job has started. Wait until the “Current Status” says “COMPLETE” instead of “RUNNING,” then click “Proceed.”\nThe “Job Status View” provides a live summary of the progress (Fig. 57[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0057]). The reads in each file are first filtered using fastp, and then mapped to the reference transcriptome using kallisto. Using a MacBook Pro with 3 cores, this analysis took ∼5 min to complete.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/a6dbbb04-a903-4514-a908-7c334b174c59/cpz1922-fig-0057-m.jpg</p>\nFigure 57\nJob Status View for kallisto. The analysis progress shows the number of completed samples, the time elapsed, and the live output from fastp and kallisto.\n16. Click through the four different tabs to view the summary table and figures. When you are finished viewing the results, click “Download Results” in the bottom right.",
    "The results table in the first tab summarizes the reads mapping. Two columns of interest are the “Clean reads rate (%)” (Fig. 58A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0058], #1) and the “Mapping reads rate (%)” (Fig. 58A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0058], #2). The clean reads rate indicates the percentage of reads that were retained after filtering out the low-quality reads. We should expect a high percentage for each sample (>90%). The mapping reads rate indicates the percentage of reads that were matched to the reference transcriptome. Normally, we would expect >50% of reads to be mapped for a newer reference transcriptome (i.e., the first or second official version) and >70% for a well-established reference (i.e., mouse, human, or another model organism). Here, the rate is lower (∼30%), which is expected since we are mapping reads to a reference transcriptome from a different species.\nThe PCA plot (Fig. 58C[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0058]) of the raw counts shows clear separation between the high exposure group and the medium exposure group and control samples.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/8e19456b-ee51-48f6-ba59-0f25a78065e9/cpz1922-fig-0058-m.jpg</p>\nFigure 58\nOverview of the kallisto and Seq2Fun results. FASTQ processing results summarized in a table for kallisto (A) and Seq2Fun (B). PCA plot of the count table generated by kallisto (C) and Seq2Fun (D). Columns labeled with 1-4 are explained in step 16 and 25.\n17. Download the “All_samples_kallisto_txi_counts.txt” file (Fig. 59A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0059]) and open it to view the format (Fig. 59B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0059]).",
    "This count table can be directly uploaded to ExpressAnalyst under the “single gene expression input,” with the organism as chicken, data type as RNA-seq counts, the ID type as Ensembl transcripts, and the metadata included option checked. Note the values in the “group” column are from the “metadata.txt” file uploaded at the beginning. You can delete the metadata row from the count table and create a separate metadata table if you want to include more variables. Please refer to Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0001] and 5[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0005] for more details on single gene expression table upload and processing.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/b3ca5444-a1c4-4a58-ac88-38ccf66fc6e2/cpz1922-fig-0059-m.jpg</p>\nFigure 59\nDownload the kallisto results. The results available for download are the count table and the table and images displayed on the Result page in ExpressAnalyst (A). The count table is formatted for upload to ExpressAnalyst (B).\n18. Navigate back to ExpressAnalyst home and click “Start here” to initiate a new analysis.\nExpressAnalyst initiates a new session whenever the “Start here” button is clicked. We always recommend doing this instead of navigating back to the upload page and uploading new data. Starting a new session refreshes the settings and clears any objects stored in memory, leading to better performance.\n19. Create a new folder called “Process_Seq2Fun.” Inside the folder, create three more folders: “DATABASE,” “FASTQ,” and “RESULTS.” Drag the FASTQ files from the previous analysis into the new FASTQ directory. Drag the downloaded birds ortholog database into the DATABASE directory.\nWe recommend moving the FASTQ files instead of copy-pasting them to avoid having two copies of these large files on your computer.\n20. Decompress the database file. Move the “birds_annotation_v2.0.txt” and “birds_v2.0.fmi” files directly inside of the DATABASE folder in the data directory. Delete the empty ‘birds’ folder.",
    "21. Select files, parameters, and initiate job. Change to “Without a reference transcriptome (Seq2Fun).” Use the same metadata table that you used for the kallisto analysis. Click “Confirm” and then “Proceed.”\n22. View the “Data Integrity Check” table. It should look the same as for the kallisto workflow since we are using the same samples. Click “Proceed.”\n23. Leave the first three parameters as the defaults. If you changed the CPU cores in the kallisto analysis, change the CPU cores input here as well. Click “Confirm,” “Submit Job,” and then “Confirm.”\nThese parameters control how close the match must be between a translated RNA-seq read and a protein sequence to be considered a hit. The defaults should work for most cases; however, if there is very little coverage of your species taxonomic group in EcoOmicsDB, you can decrease these parameters to compensate for the greater evolutionary divergence between your species and most of the species in the database.\n24. Seq2Fun is now running. Wait until the job view summary says “COMPLETED” and that 9 out of 9 samples have been processed. Click “Proceed.”\nThis analysis took ∼5 min on a MacBook Pro with 3 cores. The text output will be slightly different since Seq2Fun is being run instead of kallisto.\n25. View results and interpret Seq2Fun-specific QA/QC parameters. Click “Download Results.”\nThe % of reads mapped (Fig. 58B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0058], #3) is higher for Seq2Fun compared to kallisto. This makes sense because the Seq2Fun birds database contains sequences from 31 bird species instead of just from chicken. Also, by translating sequences from nucleotides to peptides and adding more tolerance for a small number of mismatches, Seq2Fun is designed to handle evolutionary divergence between the query and target sequences.",
    "The most useful statistic to determine whether there was an adequate match between the sequences from your species and the EcoOmicsDB database is the “Mapping core ortholog rate (%)” (Fig. 58B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0058], #4). Core orthologs are sequences that are present in >90% of species in the database. If there is a good match, we expect this number to be high (70% to 95%). We do not expect a rate of 100% because while core orthologs are likely present in your species database, many still have tissue-specific expression patterns and may not be expressed in your sample. A low core ortholog mapping rate (i.e., 10% to 50%) is cause for concern, and you should perform the mapping again with a more general taxonomic group that includes more species.\nThe PCA plot (Fig. 58D[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0058]) also shows a separation between the high and medium and control samples. There is a notable difference between the location of the samples in the kallisto and Seq2Fun PCA plots. This is likely due to the low mapping rate to the reference transcriptome (since we were using the reference from a different species) and because the data were highly sub-sampled. In published evaluations of Seq2Fun, reads were mapped to the reference transcriptome for the species that the data came from (kallisto) and to a custom ortholog database with sequences for that species removed (Seq2Fun). The resulting PCA plots looked nearly identical in all cases (Liu et al., 2021[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0028]; Liu et al., 2023[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-bib-0029]).\n26. Download the “S2fid_abundance_table_all_samples_submit_2_expressanalyst.txt” file and open it to view. We see that the format is the same as the file generated by kallisto, except that the rows are now labeled with Seq2Fun ortholog IDs instead of with Ensembl chicken transcripts. Open the “S2fid_ortholog_annotation_all_samples.txt” file (Fig. 60[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-fig-0060]).",
    "The abundance table can be directly uploaded to ExpressAnalyst online for downstream statistical and functional analysis using the same methods outlined in Basic Protocol 5[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.922#cpz1922-prot-0005]. If you prefer to analyze the count table using a custom script, the annotation file provides functional annotation information that may be helpful for your analysis.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/55308048-a0d0-4224-9685-99e7d9e5824c/cpz1922-fig-0060-m.jpg</p>\nFigure 60\nSeq2Fun ortholog annotation file. Symbols, descriptions, and functional annotations for all Seq2Fun IDs quantified during the analysis."
  ],
  "subjectAreas": [
    "Bioinformatics"
  ],
  "bigAreas": [
    "Bioinformatics & Computational Biology"
  ]
}