{
  "id": 2799,
  "origin_website": "Cell",
  "title": "SiliFish: A desktop application to model swimming behavior in developing zebrafish (Danio rerio)",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nSwitching to custom model generation\nTiming:  <1 min (for step 1)\nSiliFish provides the models generated by our previous study,1[href=https://www.wicell.org#bib1] which are referred to as predefined models throughout this protocol. These models are accessible through the Single Coil, Double Coil, and Beat and Glide radio buttons at the top of the main window (Figure 1[href=https://www.wicell.org#fig1]). These predefined models have very limited customization. To showcase the full features of SiliFish, the steps of generation of fully customizable Custom Models is explained in this protocol. The following step shows how to switch to custom model creation mode.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2307-Fig1.jpg\nFigure 1. Switching to custom model generation\nThe software can be switched between predefined models (Single coil, double coil, and beat and glide) and custom model creation using the radio buttons on the top of the window.\nClick on the Custom radio button at the top to switch the software to Custom Model mode (Figure 1[href=https://www.wicell.org#fig1]).\nNote: Switching between predefined and custom models will not cause you to lose data. However, clicking the Clear Model link will. Caution: Currently, there is no undo in SiliFish.\nNote: There are customizable versions of the predefined models that are saved as JSON files4[href=https://www.wicell.org#bib4] and are located in the DataSet 1.0[href=https://github.com/Bui-lab/SiliFish/tree/main/DataSet%201.0] folder on GitHub. (JSON is a commonly used human-readable text-based file format). In the program, you can click on the Load Model link and do the following steps on an already created model rather than creating from scratch, which will expedite the learning curve.\nSetting general parameters\nTiming:  <5 min\nThe following section describes the general parameters related to the physical dimensions of the body and the spinal cord the user can define.\nThe General tab contains information on the size and structure of the model animal studied (Figure 2[href=https://www.wicell.org#fig2]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2307-Fig2.jpg",
    "Figure 2. Setting general parameters\nThe General tab contains information about the model (like name and description) and the size of the model animal.\nDefine Model Name and Description.\nDefine body size.\nNote: There is no specific unit of measure (UoM) used within SiliFish in terms of length. The user can select any unit that is appropriate but needs to use the same UoM across the software for any length and speed measures. It is recommended to consider both the dimensions of the animal, the minimum distance between two cells, and the conduction velocity of the connections to determine the appropriate UoM. As many of the conductance velocities in the literature are reported as m/s and SiliFish uses ms as the time unit, mm would be an appropriate starting point.\nNote: The data types used in the code allow a minimum of 15 digits precision with an approximate range of ±5.0 × 10−324 to ±1.7 × 10308. Given appropriate UoM will prevent exceeding these limits.\nNote: Depending on how the spatial distributions are defined in Creating Cell Pools and Connections, the spinal cord and the body can be considered an elliptic cylinder or a rectangular prism.\nNote: The representation of the spinal cord and the body as an elliptic cylinder or a rectangular prism is an oversimplification intended to keep data entry relatively easy in the user interface. A more anatomically correct distribution can be modeled by entering absolute coordinate values in Creating Cell Pools and Connections.\nDorsal-Ventral: Enter the value of the size of the fish body in the dorsal-ventral axis.\nMedial-Lateral: Enter the value of the size of the fish body from midline to the most lateral point.\nDefine the spinal cord size.\nDorsal-Ventral: Enter the value of the size of the spinal cord in the dorsal-ventral axis.",
    "Medial-Lateral: Enter the value of the size of the spinal cord from midline to the most lateral point.\nRostro-Caudal: Enter the length of the spinal cord.\nBody Position: Enter the distance of the spinal cord from the ventral region of the body.\nSetting dynamic parameters\nTiming:  <5 min\nThe following section explains how to update the values that will define the dynamics of the simulation, how cells will behave to a certain stimulus, and the timing of the propagation of electrical activities from one cell to another.\nThe Dynamic tab includes parameters relevant to the cellular dynamics of the cells or the model in general, like conduction velocity and reversal potentials.\nConduction Velocity: Enter the default conduction velocity down the axon of a neuron.\nNote: The conduction velocity is used to calculate the time it takes for a change in membrane potential at the cell body to propagate without attenuation to the presynaptic terminal. The unit of measure is the UoM used to define the length values in Setting General Parameters, divided by time (ms). As explained in Creating Cell Pools and Connections, this value can be overridden in specific neuronal groups.\nE_ach, E_glu, E_gly, and E_gaba: Enter the reversal potentials of acetylcholine, glutamate, glycine, and GABA, respectively.\nNote: As explained in Creating Cell Pools and Connections, these values can be overridden in specific neuronal groups. The UoM of reversal potentials is assumed to be mV.\nCreating cell pools and connections\nTiming: Depends on the complexity of the model\nThe following section explains how to define cell populations and connections between specific cells.",
    "SiliFish allows the definition of different neuronal and muscle cell groups, called cell pools, with different intrinsic properties, distribution patterns, and activity timelines. Furthermore, each cell pool can have electrical (gap) and/or synaptic (chemical) connections to themselves or other cell pools. The Cell Pools & Connections tab provides the user interface to create these cell pools and connections.\nDefining cell pools and connections are the most crucial part of the model definition.\nCreate a cell pool: By right-clicking on the mouse on the Cell Pools panel and selecting Add Item menu, open the Cell Pool edit form (Figures 3[href=https://www.wicell.org#fig3] and 4[href=https://www.wicell.org#fig4]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2307-Fig3.jpg\nFigure 3. Creating cell pools & connections\nThe Cell Pools & Connections tab lists all the defined cell pools and the projections between them. By right-clicking the mouse, you can access different menu items to create, edit, delete the cell pools, or change how they are displayed in the list. See also Figures 4[href=https://www.wicell.org#fig4] and 9[href=https://www.wicell.org#fig9].\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2307-Fig4.jpg\nFigure 4. Editing a cell pool\nCell Pool edit form is where the user can define the cells’ intrinsic properties, spatial distributions, and activation timelines. See also Figures 5[href=https://www.wicell.org#fig5], 6[href=https://www.wicell.org#fig6], and 7[href=https://www.wicell.org#fig7].\nEnter a unique group name for the cell pool.\nOptional: Enter the description field.\nSelect whether the cell type is a neuron or a muscle cell.\nOptional: If the neuron is selected as the cell type, you can set the neuronal class (glutamatergic, GABAergic, etc.). This selection will allow the default reversal potentials to be used while creating the synapses.\n# of cells: Define the number of cells within a cell pool.\nNote: Number of cells can be defined as a total number for the model or as a number per somite.",
    "2D Model Column is a multiplier of the y-axis used in creating a 2D plot, as explained in expected outcomes[href=https://www.wicell.org#expected-outcomes].\nNote: 2D Model Column value is only for display purposes and does not affect the placement of the cells.\nSelect the color that will be used to represent these cells in 2D and 3D models, as well as plots.\nNote: Using different colors for interacting cells will make it easier to understand the visual results. For example, if a cell is receiving multiple incoming currents from different cells, the plot displaying the incoming currents will show each current with the color of the source cell pool. The cell pool based coloring will allow reading the plots quickly.\nSet whether the cell is active or not.\nNote: It is possible to deactivate a cell pool without removing it from the model to run some quick tests.\nEnter the spatial distribution of the cells to create more realistic models (Figures 5[href=https://www.wicell.org#fig5] and 6[href=https://www.wicell.org#fig6]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2307-Fig5.jpg\nFigure 5. Types of distributions\nMany values in SiliFish can be defined as a distribution (Uniform, Gaussian, Bimodal, Equally Spaced) or as a specific number.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2307-Fig6.jpg\nFigure 6. The Y-Z distribution modes\n(A and B) The Y and Z axes distributions can be defined as (A) a linear distribution or (B) an angular distribution. The panels A and B are two different modes of the form based on the Linear/Angular selection.\nNote: Make sure you use the same UoM for distances and spatial distributions throughout the data entry.\nNote: As there are many options in creating spatial distributions, it is recommended that the 3D model is frequently checked, as explained in the expected outcomes[href=https://www.wicell.org#expected-outcomes], to make sure the settings are entered properly.",
    "Note: If the spatial distribution you are trying to achieve cannot be defined with the available options, you can divide the distribution into subparts and create multiple cell pools with the same intrinsic properties and connectivity patterns.\nNote: For the spatial placement of the cells, different distributions can be selected to determine the cell’s coordinates in each axis (Figure 5[href=https://www.wicell.org#fig5], shown for the x-axis). When constant distribution is selected, all the cells in the cell pool are assigned the same value in the given axis. When uniform distribution is selected, the cells are placed randomly using uniform distribution. You can define the minimum and maximum values the specific axis can take. When equally spaced distribution is selected, the cells are placed at the same intervals within the given minimum and maximum range. When Gaussian distribution is selected, the cells will be placed with a normal distribution, with the given mean and standard deviation values. The cells can also be placed in a bimodal distribution with the given mean and standard deviation values.\nOptional: If constant or equally spaced distributions are selected, you can also define a noise parameter. This optional noise value will be used as a standard deviation for a Gaussian distribution of mean one, which will, in turn, be a multiplier to the value generated by the distribution.\nX-Axis Distribution: Enter the rostro-caudal distribution pattern of the cells in the cell pool.\nNote: Using the Absolute/Percentage selection, you can select whether the x-values will be absolute coordinates or will be calculated by the maximum length of the axis, which is the spinal cord’s rostral-caudal length defined in Setting General Parameters.\nY-Z Distribution: Enter the medial-lateral (y-axis) and dorsal-ventral (z-axis) distribution pattern of the cells in the cell pool.",
    "Note: The spatial distributions of the cells in the dorsal-ventral and medial-lateral axes can be defined in two ways: Linear or Angular (Figure 6[href=https://www.wicell.org#fig6]). The linear distributions within the Y-Axis (Medial-Lateral) and Z-Axis (Dorsal-Ventral) are defined similarly to the X-Axis distribution explained above. If the percentage option is selected, the neurons will be placed within the spinal cord, whereas the muscle cells will be placed within the body. You can define the coverage’s angle and radius range for angular distributions. The angle is 0° in the most dorsal region and 180° for the most ventral region. The distribution is defined only for half of the body. Using the sagittal position dropdown, you can define whether the cells exist on the left, right, or both sides.\nNote: In the current version of SiliFish GUI, only spinal neurons are considered and will be placed within the spinal cord. However, it is possible to simulate peripheral neurons by giving absolute coordinates rather than percentages.\nNote: SiliFish GUI allows the definition of only one medial-lateral or dorsal-ventral range of the body. However, the spinal cord of zebrafish is known to vary in size along the rostro-caudal axis. With this non-uniform size distribution in mind, SiliFish does not check whether a coordinate is within the cylindrical or prismatic boundaries defined by the medial-lateral or dorsal-ventral ranges that is inputted by the user. For example, even if the user defines absolute y and x-axis values outside of this medial-lateral or dorsal-ventral range, SiliFish would run without any issues. Thus, the user defined medial-lateral and dorsal-ventral ranges are used in combination with the Percentage option to facilitate assignment of coordinates based on some user-defined reference ranges.\nYou can define the intrinsic properties of the cells within the pool through the Dynamics tab.",
    "Note: Throughout SiliFish, specific UoMs are used for consistency: All membrane potentials (V) are in millivolts (mV), current (I) is in picoAmperes (pA), resistance (R) is in gigaohms (GΩ), capacitance (C) is in picoFarads (pF).\nIf the conduction velocity of a specific cell pool is different from the rest of the model, it can be overridden here.\nNote: The conduction velocity can be a specific number or defined as a distribution. If not entered, the conduction velocity set at the Setting Dynamic Parameters will be used.\nEnter the Izhikevich values (for neurons only) to define the membrane potential dynamics of the cell1[href=https://www.wicell.org#bib1],5[href=https://www.wicell.org#bib5] (Figure 7[href=https://www.wicell.org#fig7]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2307-Fig7.jpg\nFigure 7. Setting dynamical properties of neurons\nSiliFish uses Izhikevich simple neuronal model for neurons. The parameters can be entered in the Dynamics tab on the Cell Pool edit form. All parameters can be defined as a specific number or a distribution to add some randomization to the model.\n  C   d V   d t   = k ∗  (  V −  V r   )  ∗  (  V −  V t   )  − u + I  \n     d u   d t   = a ∗  (  b ∗ ( V −  V r   )  − u  )  \n  i f  V >   V max  → V = c ; u = u + d  \nNote: The Izhikevich model shows how the membrane potential (V) and the feedback current (u) change across a certain incoming current I:",
    "V is the membrane potential that changes throughout the simulation. u is the recovery variable that allows the relaxation of the cell after an action potential. The UoM of u is pA. The initial values of V and u can be set through the grid (Figure 7[href=https://www.wicell.org#fig7]). Parameters a and b represent the time scale and the sensitivity of u, respectively. They are unitless within the formalism used by the Izhikevich model. The membrane potential V resets to value c (in mV) after a spike. Similarly, recovery variable u is incremented by the value d. Vmax represents the maximum membrane potential at the time of a spike, and Vr is the resting membrane potential. Vt is the threshold potential for a spike. All membrane potentials are in mV. k is an approximation of the subthreshold region of the fast component of the I-V relationship of the neuron. Finally, Cm is the membrane capacitance (pF).\nLeaky Integrator values (for muscle cells only): Enter the resistance and capacitance values of the muscle cells.\nNote: SiliFish uses the leaky-integrator model for muscle cells, where R and C are the resistance and the capacitance of the muscle cells, respectively. The UoM of resistance and capacitance are GΩ and pF, respectively.\nNote: It is possible to see how a neuron behaves to a specific stimulus or calculate its rheobase value using the Test Dynamics tool (Figure 8[href=https://www.wicell.org#fig8]). This feature is beneficial in generating cell populations that mimic the firing behavior observed in other studies in the literature.",
    "Optional: It is possible to define a timeline with one or more start and end times through the Timeline tab. The cells will be silenced outside these time windows. If no timeline is entered, the cells will be active throughout the run. This option allows users to investigate the effects of silencing specific populations of cells on circuit and motor activity.\nNote: For complex models, deactivating cells can also help visualize them in 2D and 3D models. Inactive cells and cell pools are not displayed in the 2D and 3D models. Temporary deactivation can help complex models to be more manageable.\nNote: Creating the cell pools with the right parameters is crucial in generating a successful model. As there are many parameters that can be set in creating a cell pool, it can be very time-consuming. The Create Copy menu item accessible through the mouse right-click on the Cell Pools & Connections tab (Figure 3[href=https://www.wicell.org#fig3]) allows for creating a copy of an existing cell pool, which helps create similar cell populations. Duplicating a cell pool using Create Copy option will also create corresponding duplicates of its connections.\nNote: If different models share cell pools with similar characteristics, you can save a cell pool using the Save Pool link (Figure 4[href=https://www.wicell.org#fig4]) in one model and load it back in another.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2307-Fig8.jpg\nFigure 8. Test dynamics form\nTest Dynamics form allows the user to calculate the rheobase of a neuron and test how it behaves to a specific stimulus.\nAfter defining the cell pools, define the projections from one cell pool to another by mouse right-clicking and selecting Add Item on the Connections list (Figure 3[href=https://www.wicell.org#fig3]). A window to edit the projection properties will open (Figure 9[href=https://www.wicell.org#fig9]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2307-Fig9.jpg\nFigure 9. Defining projections",
    "The user can define multiple features of a connection from one cell pool to another: the connection type and weight, the intrinsic properties, the reach information, and the activation timeline.\nSelect the Source Pool and Target Pool.\nNote: In the case of a gap junction, which cell pool is defined as the source pool or the target pool is not important.\nAxon Reach: Enter whether the connections are ipsilateral, contralateral, or bilateral.\nDepending on source and target pool cell types, select whether the connection type is a gap junction, a synapse, or a neuromuscular junction.\nDefine how the distance between two cells will be calculated.\nNote: There are two distance modes you can select from: Euclidean and Manhattan. In Euclidean mode, the distance between the two points is calculated as the shortest path between the two. In Manhattan distance, the sum of x, y, and z distances is used.\nNote: Manhattan distance calculation may be helpful, for example, in the case of a neuron projecting first in the dorsal-ventral axis and then contralaterally.\nTo add some randomization, you can define the probability of the presence of the connection between two cells.\nEnter the maximum conductance value (in nS) for the connection using the weight field.\nSiliFish will automatically populate the name of the connection. You can override this value if you prefer to use another naming convention.\nNote: If you change the name of a connection, SiliFish will stop automatic naming for this connection.\nOptional: You can enter a description of the details of the cell pool.\nEnter the limits of the reach of the connection.",
    "Note: In the case of the model consisting of somites, you can define whether the connection can be within the same or to a different somite. The minimum and maximum reach fields define the possible extent of the connection. The ascending and descending reach fields define the maximum extent in the spinal axis (the x-coordinate).\nOptional: The time it takes for a potential change from one cell to another is calculated as distance/conduction velocity. If the model requires a delay on top of this calculation, you can define it here. You can also enter a fixed duration, in which case the distance, the conduction velocity, and the delay values will be obsolete. All durations are assumed to be in ms.\nIf the connection is a chemical synapse, the time course of the current is a sum of two exponentials. Enter the following synapse parameters: drop and rise decay times (τd and τr), the threshold membrane potential (Threshold V), and the reversal potential (E rev).\nOptional: It is possible to define a timeline with one or more start and end times. The connections will be inactive in the times outside these time windows. The connections will be active throughout the run if no timeline is entered.\nOptional: You can deactivate a connection by unchecking the Active check box on the connection edit form. Deactivation can help test different scenarios without removing the connections from the model.\nDefining stimuli\nTiming:  <5 min\nThe following section explains how electric stimuli can be applied to cells in the model.\nIf the model requires an external stimulation to be applied, you can define them by clicking the Stimuli tab, right-clicking to open the pop-up menu, and selecting Add Item (Figure 10[href=https://www.wicell.org#fig10]). The stimulus edit form will open (Figure 11[href=https://www.wicell.org#fig11]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2307-Fig10.jpg\nFigure 10. Defining stimuli",
    "The Stimuli tab lists all the defined stimuli. You can access different menu items to create, edit, or delete a stimulus by right-clicking the mouse. See also Figure 11[href=https://www.wicell.org#fig11].\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2307-Fig11.jpg\nFigure 11. Stimulus edit form\nThe stimulus edit form is where the user can define a stimulus’s amount, timing, and target.\nYou can define stimuli that will be applied to one or multiple cells or the whole cell population within a cell pool.\nEnter the stimulus type (step, ramp, or Gaussian) and corresponding values: stimulus value for the step stimulus, the start and finish values for the ramp stimulus, and the mean and the standard deviation values for the Gaussian stimulus.\nEnter the cells to which the stimulus will be applied.\nNote: A stimulus can be applied to the desired cells located in all somites, a single somite, or a range of somites (e.g., 2–7). Similarly, within a somite, the stimulus can be applied to all cells, a single cell, or a range of cells.\nNote: The UoM of all stimuli and currents are in picoamperes (pA).\nOptional: It is possible to define a timeline with one or more start and end times. The stimulus will be zero in the times outside these time windows. Otherwise, the stimulus will be active throughout the run if no timeline is entered.\nOptional: You can deactivate a stimulus by unchecking the Active check box on the stimulus edit form. This can help test different scenarios without removing the stimulus from the model.\nSetting simulation parameters\nTiming:  <1 min\nThe following section explains how to set the length of the simulations.",
    "In the Simulation Parameters section, enter how long the model will be run (Time End – in ms) and how much time will be used to wait for the initial conditions to subside (Skip – in ms) (Figure 12[href=https://www.wicell.org#fig12]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2307-Fig12.jpg\nFigure 12. Setting simulation parameters\nYou can enter the simulation duration, the time that will be skipped for initial conditions to subside, the unit of time used in calculations, and how many times the simulation will be run.\nNote: The simulation results within the first period that is skipped will not be visible in any of the plots or animations.\nNote: To decide the right amount of time to skip, you can run the model for a short amount of time without any stimulus and look at the plots to see when the model comes to an equilibrium state.\nOptional: By default, SiliFish uses 0.1 ms as the unit of time in running the iterations in the model. If the model requires a faster or slower response time for the cells, you can set the Δt parameter.\nOptional: It is possible to run a simulation multiple times to collect data for statistical analysis. If certain parameters are probabilistically assigned, the parameter values will be reassigned in each run. To run a simulation multiple times, you need to check the Multiple check box and enter the number of times you want to run the simulation for. The cellular information of each run and the episode information will be saved as JSON and CSV files in the output folder.\nNote: Depending on the complexity of the model and the duration, multiple runs may take a long time. Make sure the model is running to your expectation before working on statistical analysis.",
    "Note: When the simulation is run multiple times, you can only see the plots of the last run.\nSave the model as a human-readable JSON file using the Save Model button for future use.\nNote: Some changes may be easier done on the model JSON file than using the SiliFish UI. If you want to change all of the noise standard deviation values of the X-coordinates, for example, a text editor's find/replace feature will be faster than opening up every cell group and updating its X-distribution parameters. Instead, you can save the model as a JSON file, open the file with a text editor of your choice, edit it, and reload it from SiliFish (Figure 13[href=https://www.wicell.org#fig13]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2307-Fig13.jpg\nFigure 13. An alternative way to edit models\nYou can save the model templates as a JSON file for transferability and easy editing.\nSetting kinematic parameters\nTiming:  <5 min\nAfter the model is run, you can visualize the behavior of the fish by converting the muscle cells’ membrane potentials to muscle contractions. How to update the parameters of this visualization is explained below.\nThe parameters of muscle membrane potential to muscle contraction conversion can be set by clicking the Kinematics tab.\nThe force generated by the contraction of the muscle cells in each somite depends on the activity of the motoneuron innervating that somite. The details of this conversion can be found in our previous model.1[href=https://www.wicell.org#bib1] In summary, the membrane potential of the muscle cells in each somite is converted into oscillation angle using the following formula.\n   θ i ″  + 2 ζ   ω 0   θ i ′  +  ω 0 2   θ i  = δ   (   V  r i g h t  m u s c l e   −  V  l e f t  m u s c l e    )",
    "Enter the kinematic parameters: the damping coefficient (ζ), the natural oscillation frequency (ω0), and the conversion coefficient (δ).\nOptional: The Alpha and Beta values are used to calculate the conversion coefficient by the δ = α + ß∗R formula, where R is the average of the resistance of the muscle cells within a somite. If the calculated value is 0, the Conversion Coefficient entered by the user will be used.\nNote: Entering zero to alpha and beta values will make sure the entered conversion coefficient is used for every somite.\nEnter the Boundary and Delay values that will be used to detect tail beat episodes.\nNote: If the tip of the tail moves in the y-axis at least the Boundary amount, it will be considered the start of an episode. If the dislocation from the central axis is less than the Boundary amount on the left and right for the duration of Delay, it will be considered a rest between episodes.\nNote: Unlike other parameters, kinematic parameters can be modified after running the model. The kinematic parameters are used only to generate the body movement animation using the run results; these parameters do not affect the neuronal activity of the cells.\nGenerating animation\nTiming:  <5 min\nHow to generate the swimming animation using the parameters set in Setting Kinematic Parameters is explained below.\nEnter the Animation Start and Animation End time in milliseconds (Figure 14[href=https://www.wicell.org#fig14]). By default, these values are set to 0 and the simulation end time respectively.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2307-Fig14.jpg\nFigure 14. Setting animation parameters\nThe animation start and finish times and the time resolution (Δt) can be set by the user.\nEnter Δt, the unit of time, for the animation. Using an animation Δt greater than simulation Δt will create a smaller animation file.",
    "Click the Animate button. The animation will be generated as an HTML file and displayed on the window."
  ],
  "subjectAreas": [
    "Computer Sciences",
    "Neuroscience",
    "Model Organisms",
    "Bioinformatics"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}