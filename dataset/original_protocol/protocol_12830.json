{
  "id": 15257,
  "origin_website": "Jove",
  "title": "A Fast and Quantitative Method for Post-translational Modification and Variant Enabled Mapping of Peptides to Genomes",
  "procedures": [
    "1. Preparation, Download, and Setup\nNOTE: The file and folder path examples are shown in a Windows format for the ease of access for standard users. PoGo and PoGoGUI are also available for macOS and Linux operating systems.\nDownload PoGo and PoGoGUI from GitHub\nOpen a web browser and navigate to PoGo on GitHub (http://github.com/cschlaffner/PoGo/). Select Releases and download the latest release zip compressed file. Extract the compressed file into the executables folder (e.g., C:\\PoGo\\executables\\).\nNavigate in the web browser to PoGoGUI on GitHub (http://github.com/cschlaffner/PoGoGUI/). Select Releases and download the latest release jar file (e.g., “PoGoGUI-v1.0.2.jar”). Store the jar file in the executables folder.\nDownload the genome annotation and translated protein-coding sequences\n\tNOTE: Download the genome annotation and translated protein-coding sequences for supported species from GENCODE7 (www.gencodegenes.org) or Ensembl20 (www.ensembl.org) in the General Transfer Format (GTF) and the protein sequences in FASTA format.\n\t\nIn the web browser, navigate to www.gencodegenes.org and select Data | Human | Current Release. Download the Comprehensive gene annotation via the GTF link and extract the gz-compressed file into the data folder (e.g., C:\\PoGo\\Data\\) using an unzipping program (e.g., 7-Zip).\nDownload the Protein-coding transcript translation sequences via the FASTA link and extract the gz-compressed file into the data folder generated in the previous step.\n\t\t\nAlternatively, navigate in the web browser to www.ensembl.org and select Downloads followed by Download data via FTP. Find a supported species (e.g., Human). Download the latest release file for transcript annotation using the GTF link in the Gene set column. Choose the file with name structure “species.release.gtf.gz” and extract the gz-compressed file into the data folder.\nDownload the latest release protein-coding transcript translation sequences using the FASTA link in the Protein sequence (FASTA) column. Choose the file with the name structure “species.release.pep.all.fa.gz” and extract the gz-compressed file into the data folder.",
    "Prepare peptide identification files \n\tNOTE: PoGo only supports a 4-column format containing sample identifier, peptide sequence, number of peptide-spectrum-matches (PSMs), and quantitative value. However, PoGoGUI supports standardized identification file formats mzIdentML, mzid, and mzTab, and converts them into PoGo’s 4-column format using the publicly available framework ms-data-core-api21. Files in mzIdentML, mzid, or mzTab format can be downloaded from the PRIDE archive19. Alternatively, data can be provided in a tab-separated file format with the extension .tsv or .pogo. The format contains 4 columns with the following column headers: sample identifier (Sample), peptide sequences (Peptide), number of peptide-spectrum-matches (PSMs), and peptide quantitation (Quant). An example is shown in Figure 2.\n\t\nDownload an example file in mzTab format from a proteomics study on human testis from the PRIDE archive19 (https://www.ebi.ac.uk/pride/archive/projects/PXD006465/files22).\nSave and extract the gz-compressed file into the data folder created in step 1.2.1.\n\t\tNOTE: Alternatively, download example data for human phosphoproteomics searched with MaxQuant from the PRIDE archive (file “Traktman_2013_MaxQuantOutput-full.zip” from https://www.ebi.ac.uk/pride/archive/projects/PXD005246/files23).\nSave and extract the zip-compressed file in the data folder that was created in step 1.2.1.\nOpen a blank spreadsheet and import the peptides.txt file from the folder C:/PoGo/Data/Traktman_2013_MaxQuantOutput-full/combined/txt/ using the option Data | From Text/CSV. In the opening window, click Edit.\nRemove all columns with the exception of “Sequence”, “Experiment BR1”, “Experiment BR2”, “Experiment BR3”, “Ratio H/L normalized BR1”, “Ratio H/L normalized BR2”, and “Ratio H/L normalized BR3”.\nSelect the columns “Ratio H/L normalized BR1”, “Ratio H/L normalized BR2”, and “Ratio H/L normalized BR3” and click Transform | Unpivot Columns. Select the columns “Experiment BR1”, “Experiment BR2”, and “Experiment BR3” and repeat the unpivot operation.\nSelect the resulting column “Attribute” and split the contents using Transform | Split Column | By Delimiter. Select Space as delimiter in the drop-down menu. Repeat the operation for column “Attribute.1”.",
    "Remove the resulting columns “Attribute.1.1”, “Attribute.2”, “Attribute.3”, and “Attribute.1.1.1”.\nAdd a column by using the Add Column | Custom Column option. Adapt the custom column formula to represent the following: “=[Attribute.4]=[Attribute.1.2]”.\nApply a filter to the generated custom column to filter out all lines containing “FALSE”; only lines containing “TRUE” will remain.\nRemove the columns “Attribute.1.2” and “Custom” and change the order of the remaining columns to the following: “Attribute.4”, “Sequence”, “Value.1”, and “Value”.\nChange the column names to “Experiment”, “Peptide”, “PSMs”, and “Quant”, respectively. Load the file using Home | Close&Load.\nSave the file as a tab-delimited file using File | Save As and select the type “Text (Tab delimited) (*.txt)”. Change the name to “peptides_pogo.txt” and save it in the folder C:/PoGo/Data.\n2. Mapping Peptides with Annotated Post-translational Modifications and Visualization Including Quantitation\nNOTE: The resulting output file can be loaded in any genome browser supporting Browser Extensible Data (BED) format. A selection of browsers is the Integrative Genome Browser (IGV)24 (which is used in the following), the UCSC Genome Browser25, and the Ensembl Genome Browser20. It is important to note that the annotation GTF and protein FASTA versions used for PoGo mapping match the version of the genome in the genome browser. For the human Ensembl releases 57-75 and GENCODE versions 3d-19, use GRCh37/hg19; for the Ensembl versions 76 or higher and GENCODE 20 or higher, use GRCh38/hg38. For the mouse Ensembl versions 74 or higher and GENCODE M2 or higher, use GRCm38.\nMap peptides using PoGoGUI (see Figure 3).\nNavigate to the executables folder. Start the program by double-clicking the icon PoGoGUI-vX.X.X.jar.\n\t\tNOTE: The graphical user interface will start up and allow easy and visual selection of options.",
    "Use the Select button next to the “PoGo Executable”. Then, navigate in the executables folder to the relevant operating systems subfolder (e.g., C:\\PoGo\\Executables\\Windows\\). Select the executable of PoGo (e.g., PoGo.exe) and confirm its selection by clicking the Open button.\nSelect the reference input file for protein sequences by clicking Select. Navigate to the data folder and select the translation FASTA file. Confirm its selection by clicking the Open button.\nSelect the transcript annotation file using the Select button. Navigate to the data folder and select the annotation GTF file. Confirm the selection by clicking the Open button.\nAdd the peptide identification file—multiple file selection is enabled—by using the Add button next to “Peptide Files”. Select a file in the supported format mzTab, mzIdentML, or mzid, or in the tab-separated 4-column format downloaded and prepared in step 1.3.\nUntick the checkboxes next to BED and GTF in the output formats selection. Only leave PTM BED and GCT checked.\nSelect the appropriate species for the data from the drop-down selection. It is essential that the FASTA file, the GTF file, and the drop-down selection are for the same species.\nStart mapping by clicking the START button.\n\t\tNOTE: If necessary, PoGoGUI will convert the input file into pogo format, provide the pogo files in the same folder for future convenience, and start the mapping process. The conversion of a single mzTab file downloaded in step 1.3.1 will last between 10 - 20 min before mapping commences.\nVisualizing in the integrative genomics viewer\n\tNOTE: See Figure 4.\n\t\nLoad the PoGo output file ending in “_ptm.bed” in the IGV through File | Load from File and select the file.",
    "NOTE: Due to size, some files may require the generation of an index to allow a quick reloading of the genomic regions. The IGV will prompt the user automatically to the generation. Follow the instructions indicated.\nRepeat the loading step for the file ending in “_noptm.bed”. This file contains all peptides found without any modification.\nNote that each loaded file will be shown as separate tracks with the file name identifying the track. Reorder tracks by dragging and dropping them to the desired position in the list.\nNote that each track is initially shown in a collapsed manner. To expand them, right click on the track name and select either expanded for a full view of the peptides including the sequences or squished for a stacked view.\nRepeat the loading step for the file ending in “.gct”. This file contains the peptide quantitation per annotated sample.\nUnlike for the files loaded above, each annotated sample will be loaded as a separate track. Reorganize the samples through drag and drop operations.\nNavigate within the genome by selecting a chromosome in the drop-down menu, type in genomic coordinates, search a gene symbol, or click and hold to select a section of a chromosome to zoom in.\n3. Mapping Peptides Identified Through a Custom Variant Database to a Reference Genome\nNOTE: PoGo mapping can be carried out using the graphical user interface (GUI) or through the command line interface. They are interchangeable. In this part of the protocol, the command line interface is used to highlight interchangeability. The second part of this protocol section requires the software tool R26. Please ensure that the package is installed.\nMap the reference peptides to the reference genome.\n\t\nOpen a command prompt (cmd) and navigate to the executables folder of PoGo (e.g., C:\\PoGo\\Executables\\).\nType the command below:",
    "PoGo.exe -gtf \\PATH\\TO\\GTF -fasta \\PATH\\TO\\FASTA -in \\PATH\\TO\\IN -format BED -species MYSPECIES\n\t\t\nSubstitute the \\PATH\\TO\\GTF, \\PATH\\TO\\FASTA, and \\PATH\\TO\\IN with paths to the annotation GTF, protein sequence FASTA, and peptide identification file (in the 4-column format with file ending “.tsv” or “.pogo”) respectively. Also substitute MYSPECIES with the species consistent with the data (e.g., Human).\nConfirm the execution by pressing the “Enter” key. Wait till the execution is finished before progressing any further.\n\t\tNOTE: This may take a few minutes. The resulting file will be stored in the same folder as the peptide input file and will be regarded as \\PATH\\TO\\OUT.pogo.bed in the following.\nExtract only variant peptides from the input file.\n\t\nOpen R and load the input file \\PATH\\TO\\IN using the following command:\n\t\tinputdata <- read.table(“PATH/TO/IN”,header=TRUE,sep=”\\t”)\nLoad the already mapped peptides using the command:\n\t\tmappedpeptides <- read.table(“PATH/TO/OUT.pogo.bed”,sep=”\\t”,header=FALSE)\nRemove peptides that were already mapped from the inputdata:\n\t\tpeptidesnotmapped <- inputdata[!(inputdata$Peptide %in% mappedpeptides$V4),]\nPrint the unmapped peptides into a new input file:\n\t\twrite.table(peptidesnotmapped, “PATH\\TO\\IN.notmapped.pogo”, header=FALSE, sep=”\\t”, col.names=TRUE,row.names=FALSE,quote=FALSE)\nMap the remaining peptides to the reference genome allowing mismatches.\n\t\nAs in step 3.1, open the command prompt and navigate to the executables folder of PoGo.\nType the command below allowing 1 amino acid mismatch and substitute the \\PATH\\TO\\GTF, \\PATH\\TO\\FASTA, and \\PATH\\TO\\IN.notmapped.pogo with paths to the annotation GTF, protein sequence FASTA, and peptide identification file created in step 3.2. Also substitute MYSPECIES with the species consistent with the data (e.g., Human).\n\t\t\nPoGo.exe -gtf \\PATH\\TO\\GTF -fasta \\PATH\\TO\\FASTA -in \\PATH\\TO\\IN -format BED -species MYSPECIES -mm 1\nConfirm the command’s execution by pressing the “Enter” key. Wait till the execution is finished before progressing any further.\n\t\tNOTE: This may take a few minutes. The resulting file will be stored in the same folder as the peptide input file and will be regarded as \\PATH\\TO\\OUT.pogo_1MM.bed in the following.",
    "Visualize the peptides mapped without and with mismatch in the IGV as described in step 2.2.\n4. Mapping Using Multiple Files and Generating Track Hubs for Large Datasets\nMapping peptides from multiple files using PoGoGUI\nNavigate to the executables folder and start the program GUI by running PoGoGUI-vX.X.X.jar.\nSelect the PoGo executable file for the operating system in use (here Linux), as well as the reference input protein sequences FASTA file and the annotation GTF file as described in protocol steps 2.1.2 - 2.1.4.\nAdd the peptide identification files by using the Add button next to “Peptide Files”; multiple file selection is enabled, as well as drag-and-drop into the blank field underneath “Peptide Files”.\nUntick the checkboxes next to PTM BED, GTF, and GCT in the output formats section and only leave BED checked.\nSelect the option Merge multiple input files into single output.\n\t\tNOTE: This will result in a single output file combining all peptides of the input files. Leaving this option unselected will result in a sequential execution of the program for each input file separately.\nSelect the appropriate species for the data from the drop-down selection consistent with the FASTA and GTF files.\nStart mapping by clicking the START button. If necessary, the program will convert the input files into pogo format. This might take some time to execute. In the meantime, download the required tools and scripts for the track hub generation.\nPreparing for track hub generation\nOpen a web browser, navigate to https://github.com/cschlaffner/TrackHubGenerator and download the file “TrackHubGenerator.pl”. Save the file to the executables folder.\nIn the web browser, navigate to www.hgdownload.soe.ucsc.edu/admin/exe/ and select the folder for the operating system in use (here Linux). Download the tool bedToBigBed and the script fetchChromSizes into the executables folder27.\nGenerating a track hub from mapped peptides",
    "NOTE: After PoGoGUI has finished mapping the peptides, a track hub can be automatically generated for all the resulting files in BED format stored in the same folder.\n\t\nOpen a terminal window and type the following command:\n\t\tPerl TrackHubGenerator.pl PATH/TO/NAME ASSEMBLY FBED UCSC EMAIL\n\t\t\nSubstitute PATH/TO/NAME with a file path and name for the track hub (e.g., ~/PoGo/Data/Mytrackhub), ASSEMBLY with the genome assembly on which the annotation is based (e.g., hg38 for human), FBED with the path to the folder containing the BED files on which the track hub will be based (e.g., ~/PoGo/Data/), UCSC with the folder where the tools downloaded from UCSC are stored (e.g., ~/PoGo/Executables/), and EMAIL with an email address for the person responsible for the track hub.\nConfirm the execution by pressing the “Enter” key; the execution will only take a short time to finish.\nTransfer the generated track hub (i.e., the created folder ~/PoGo/Data/Mytrackhub/) with all its contents to a web-accessible FTP server.\n\t\tNOTE: An FTP server with an associated web server enabling access to the track hub via the protocols ftp and http is preferred. The repositories github (github.com) and figshare (figshare.com) support this type of access and can be used instead of a FTP server.\nVisualizing a track hub in the UCSC genome browser\nIn a web browser, navigate to https://genome.ucsc.edu/ and select MyData | Track Hubs. Click on the tab My Hubs.\nCopy the URL to the track hub into the text field.\n\t\tNOTE: The URL consists of the server address, the track hub location and name, and the hub.txt file (e.g., http://ngs.sanger.ac.uk/production/proteogenomics/WTSI_proteomics_PandeyKusterCutler_tissues_hi/hub.txt).\nLoad the track hub by clicking Add Hub.",
    "NOTE: The hub will be loaded, and a short message will appear, stating details of the track hub such as its name, the contact information of the person responsible for the track hub, and the genome assembly used. The website will return to the main page.\nSelect GenomeBrowser to enter the browser view.\n\t\tNOTE: The custom track hub will be shown at the top of the list. If multiple BED files built the basis for the track hub, each of the files will be represented as a separate track within the hub."
  ],
  "subjectAreas": [
    "Genetics"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics"
  ]
}