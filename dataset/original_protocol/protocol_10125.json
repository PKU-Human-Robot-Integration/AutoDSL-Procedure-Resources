{
  "id": 10536,
  "origin_website": "Jove",
  "title": "Targeting Neuronal Fiber Tracts for Deep Brain Stimulation Therapy Using Interactive, Patient-Specific Models",
  "procedures": [
    "1. Image Processing\nT1 MRI Segmentation\n\t\nDownload and install FreeSurfer17. It is assumed that a T1 MRI has been acquired and is in DICOM or NIFTI format.\nType the following command to create a patient directory and add their T1 volume in FreeSurfer: recon-all -s patientName -i /Full/Path/To/nii\nType the following command to run FreeSurfer's automated segmentation: recon-all -s patientName -all\nUse mri_convert to convert \"aseg.auto.mgz\" out of FreeSurfer's proprietary .mgz format.\nDiffusion Weighted Imaging (DWI)\n\t\nDownload and install Slicer18. It is assumed that a DWI acquisition has been performed and is available as a stack of DICOM files.\n\t\tNOTE: A good command line tool to perform this reconstruction is the FMRIB Software Library (FSL)19. FSL was used in this protocol to perform echo-planar, motion, and eddy current distortion correction prior to reconstruction. The DWI data used in this analysis is a series of DICOM files for 41 different diffusion-sensitizing gradient directions.\nUse the DWIConverter module in Slicer to reconstruct the 41 separate acquisitions into a single volume. Specify the Input Dicom Data Directory where the DWI data is located. Select the DicomToNrrd radio button and provide the name of the output DWI volume.\nCreate a Tensor mask with the Diffusion Weighted Volume Masking module to eliminate background noise from the DTI estimation. Leave the threshold parameter at the default of 0.5.\nConvert this single DWI volume to a Diffusion Tensor (DTI) volume with the DWI to DTI Estimation using the mask created in the previous step as the Diffusion Tensor Mask. Set the estimation parameters to Least Squares and make sure the Shift Negative Eigenvalues option is checked.\nSave the newly created DTI volume in NRRD format.\n2. Finite Element Model Generation\nSCIRun",
    "Download and install SCIRun version 5 (http://www.sci.utah.edu/software/scirun.html). SCIRun is a problem-solving environment for modeling, simulation, and visualization of scientific problems. This is the computational workbench used to create, solve, and interact with the model developed in this project.\n\t\tNOTE: SCIRun networks are built by connecting sequences of individual modules that perform specific tasks. Passing data through a network made of simple modules allows for more complex processing and simulation.\nBuilding the Electrode Geometry\n\tNOTE: The electrode modeled in this project is a Medtronic 3387 DBS lead20. It is a cylindrical lead with four contacts 1.5 mm in height, 1.27 mm in diameter, and spaced 1.5 mm apart. Non-conductive material separates the four contacts.\n\t\nCreate a closed surface mesh for each component in the DBS lead matching the listed dimensions. Create the entire lead by using two primitive geometries, cylinders and spheres.\n\t\tNOTE: The lead geometry can be created in a variety of 3D modeling programs.\nCreate a surface mesh of an encapsulation layer 0.5 mm thick surrounding the entire lead.\nCreating the Whole Brain Mesh\n\t\nLoad the brain surface created in Part 1 to serve as the outer boundary of the FEM.\nCreate two concentric box surfaces surrounding the DBS lead to control the mesh density around the electrode.\n\t\tNOTE: The DBS lead and box surface should be aligned along the positive z-axis with the bottom tip of the electrode shaft located at the origin. This is important for later rotation and translation of the electrode.",
    "Create a point cloud with a single point located in each distinct region of the mesh. The regions of the mesh are: the shaft segments, the four contacts, the box, and the brain surface. The values attached to these points represent the maximum volume constraints for each tetrahedral element in the mesh for that region. These constraints are adjusted to control mesh density in and around the electrode.\nUse the \"InterfaceWithTetGen\" module to create the whole brain mesh. Set the input ports as follows:\n\t\tPort 1: brain surface (from 1.1)\n\t\tPort 2: regional attribute point cloud, volume constraints (from 2.3.3)\n\t\tPort 3: none\n\t\tâ€‹Port 4: electrode model surfaces (from 2.2)\nInteractive Electrode Placement\n\tNOTE: The goal of this step is to enable easy movement of the electrode anywhere inside of the brain and have the system automatically update with a new mesh and simulation.\n\t\nUse two cascading CreateGeometricTransform modules to rotate the electrode in the X and Y plane. Click on Rotate and set first module to 1.00 on Axis Y and the second to 1.00 on Axis X. The rotation angle is set with the bottom slider, Rotate Theta (degrees).\nConnect a TransformMeshWithTransform module for every transform and object that needs to be transformed.\nCreate a GenerateSinglePointProbeFromField module and connect its geometry port to the ViewScene module. Move the sphere around in the ViewScene window by holding the shift key and left-clicking. The point probe module updates the sphere's location upon release.\n\t\tNOTE: This location is used to determine the translation transform applied to the electrode geometry.\nUse a TransformMeshWithTransform module to translate each part of the electrode geometry with the point probe location.\nApply the two rotation transforms and the translation from the point probe widget to every object except the brain surface.",
    "NOTE: All three of these transformations should be performed on each object before it is piped into the InterfaceWithTetGen module so the meshing algorithm knows to mesh the electrode geometry inside of the brain at the new location and orientation. Each time the electrode is moved within the brain a new mesh will be built.\n3. Bioelectric Field Calculation\nSetting Conductivity Parameters\n\t\nLoad the DTI volume created in Step 1 and set the data onto the tetrahedral mesh output from InterfaceWithTetGen created in Step 2 using MapFieldDataFromSourceToDestination with the linear('weighted') option.\n\t\tNOTE: Any anisotropic conductivity estimation can be implemented in this step.\nSet the shaft region conductivity to 1e-6 and the contact region to 1e6 using CalculateFieldData. Once all of the conductivity values are set, pipe the field into BuildFEMatrix.\nSetting Current/Voltage Sources and Boundary Conditions\n\t\nPipe the brain surface used in the meshing process from Step 2 into SetFieldDataToConstantValue and set the value to 0. This will create a voltage sink on the entire brain surface. Then use InsertVoltageSource to place the voltage values on the tetrahedral mesh output from InterfaceWithTetGen.\nFor monopolar stimulation, create a single point in the center of one of the contact locations by calculating the FieldCenter value from the ReportFieldInfo module on one of the contact surfaces. Set the field data on this point to -1 Volts. Then use InsertVoltageSource to place the point source in the tetrahedral mesh.\n\t\tNOTE: There are now two copies of the tetrahedral mesh. One with voltage values set on the brain surface and one with a point source inside a contact.\nJoin the output of the two InsertVoltageSource modules and pipe the output into ApplyFEMVoltageSource along with the output of BuildFEMatrix.\nSolving the Forward Problem",
    "NOTE: The output of ApplyFEMVoltageSource gives the stiffness matrix on port 1 and the right-hand side matrix on port 2. These are the two components needed to solve the system of equations.\n\t\nPipe the two outputs of ApplyFEMVoltageSource into SolveLinearSystem. Select the Conjugate Gradient solving method and Jacobi as the preconditioner. The output of this module is the solution matrix, the voltage value at each node in the tetrahedral mesh.\nUse SetFieldData to place the voltage solution matrix onto the tetrahedral mesh for a 3D representation of voltage distribution.\nIsosurface Visualization\n\t\nPipe the result of SetFieldData into ExtractSimpleIsosurface. Open the UI to the Quantity tab and set the number of evenly-spaced isovalues to 10.\nUse a ShowField module and connect it to the ViewScene module to display the Isosurfaces as transparent with a rainbow color map scaled to the min and max of the voltage solution."
  ],
  "subjectAreas": [
    "Bioengineering"
  ],
  "bigAreas": [
    "Bioengineering & Technology"
  ]
}