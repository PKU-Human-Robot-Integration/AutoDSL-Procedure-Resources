{
  "id": 2027,
  "origin_website": "Cell",
  "title": "A computational protein design protocol for optimization of the SARS-CoV-2 receptor-binding-motif affinity for human ACE2",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nPreparation of the molecular model for the design\nTiming: 1–2 h\nPreparation for the design involves building molecular models for the apo and complex states that are compatible with protX. As the first step, generate protein structure file (allh_model.psf) and a corresponding coordinate file (allh_model.pdb).\nEdit the coordinate file to:\nRemove any remote metal ions, crystallographic water molecules and other molecules, from the binding site.\nBuild any missing heavy atoms using the CHARMM-GUI interface (Jo et al., 2008[href=https://www.wicell.org#bib5]).\nRename atoms, residues, disulfide bonds, titratable groups and terminal groups to match the Amber ff99SB force field (Hornak et al., 2006[href=https://www.wicell.org#bib4]) troubleshooting 1[href=https://www.wicell.org#sec6.1].\nName the hACE2 chain (segment identifier) “PROA” and the SARS-CoV-2 chain “PROB”.\nRenumber residues to ensure unique residue numbers for each chain. For example, numbering could start at 1,000 for PROA and 2,000 for PROB (PROA contains less than 1,000 residues).\nCopy the modified coordinate file initial_structure.pdb to the $PROJ/APO/build and $PROJ/CMP/build subdirectories.\nCopy the file $CPD/lib/parameters.str to the subdirectory $PROJ/lib.\nEdit the file parameters.str to specify the main model parameters.\nSelect the Amber ff99SB force field (Hornak et al., 2006[href=https://www.wicell.org#bib4]).\nSet the Generalized Born (GB) flag and select the Hawkins-Cramer-Truhlar approximation of the GB solvation model (Hawkins et al., 1995[href=https://www.wicell.org#bib3]). The GB is a many-body function since the GB atomic solvation radii depend on the entire protein geometry. The GB energy can become pairwise-decomposable via the “Native Environment Approximation,” which computes the solvation radius of a particular residue with the rest of the molecule kept in its wildtype sequence and native conformation. An exact treatment, referred to as the “Fluctuating Boundary Method” (FBM), is also available (Villa et al., 2017[href=https://www.wicell.org#bib14]; Archontis and Simonson, 2005[href=https://www.wicell.org#bib1]).",
    "To optimize the performance of the solvation energy, it is important to combine the selected solvation model with an appropriate value for the protein dielectric constant ɛp. Optimized values can be found in references (Gaillard and Simonson, 2017[href=https://www.wicell.org#bib2]; Michael et al., 2017[href=https://www.wicell.org#bib7]). In the present work we set ɛp to 6.8.\nRetain the default values of all other parameters, at this stage.\nNote: Instead of Amber ff99SB, the Charmm force field CHARMM19 (Neria et al., 1996[href=https://www.wicell.org#bib9]) can be employed. A combination of the GB model with the Lazaridis-Karplus (LK) description of the nonpolar solvation contribution is also available.\nMake copies of the protX input file build.inp and shell script build.sh from $CPD/tutorials/tutorials/tuto_PDZ/build to $PROJ/build subdirectory.\nEdit build.inp to set specific parameters of the system.\n! parameters for the specific application\neval ($name = “model”)\neval ($pdbfile = “initial_structure.pdb”)\neval ($chaina = “PROA”)\neval ($chainb = “PROB”) !this is chain E of the pdb file 6M0J\n! Define disulphide bridges between residues 379 and 432 (PDB\nnumbering)\npatch DISU refe = “-” = (segid PROB and resid 379) refe = “+” =\n(segid PROB and resid 432) end\nRun protX using the script file build.sh to produce the coordinate file allh_model.pdb and the protein structure file allh_model.psf files in protX format.\nprotX < build.inp > build.out\nDefinition of the design regions and creation of a design molecule\nTiming: 30 min",
    "At this stage, we setup the interaction energy matrix (IEM) calculation of the apo and complex systems. We partition each system into three groups: i) “fixed” residues, maintaining the same chemical type and conformation during design; ii) “inactive” residues that explore conformations from a discrete rotamer database; iii) “active” residues that change both chemical type and conformations (this is the target of the design). The partitioning is performed in the following steps:\nIn the $PROJ/lib subdirectory\nEdit the file sele.str to define the sequence/structure space of the design.\nSet the native rotamer flag in the parameters.str file to “1”, to include in the rotamer library of active and inactive groups the sidechain conformation(s) seen in the initial structural model (“native rotamers”).\nDefine the active region to include positions 455, 493, 494 and 501 in the CoV-2 RBD.\nSelect SARS-CoV-2/hACE2 residues within 15 Å of any atom hACE2/SARS-CoV-2 (excluding prolines and glycines) as the inactive region. With the crystallographic structure and the 15 Å cutoff, the resulting inactive region contains 53 SARS-CoV-2 and 108 hACE2 residues.\nBy default, the entire protein backbone, terminal groups, cysteine residues forming disulphide bridges, glycine and proline residues and any remaining atoms not included in the previous selections are included in the fixed region.\nEdit the file mutation_space.dat to define the list of amino acid types sampled at each active position. By default, we allowed positions 455, 493, 494 and 501 to sample 18 natural amino acid types (including the initial wild type): A, I, L, V, M, K, R, D, E, N, Q, C, S, T, F, Y, W and H(Nδ). At a later stage we excluded bulky sidechains F, Y, W, H at position 501 due to steric repulsions troubleshooting 2[href=https://www.wicell.org#sec6.3].",
    "Edit the file phia.str to set the atomic surface area coefficients of nonpolar, polar, ionic, and aromatic atoms and the protein dielectric constant ɛp. We employ the following values (Gaillard and Simonson, 2017[href=https://www.wicell.org#bib2]; Michael et al., 2017[href=https://www.wicell.org#bib7]): ɛp = 6.8, σalk = −5 cal/mol, σpol = −8 cal/mol, σion= −9 cal/mol, σaro= −12 cal/mol.\nNote: To generate a more comprehensive IEM, the user can include a larger set of positions in the active and inactive regions at this stage. Later (in the design phase), the user can restrict sampling of sequences and/or conformations to a subset of the initially specified active and inactive residues.\nThe rotameric library contains a specified number of rotamer conformations for each amino acid type (i.e., one rotamer for alanine, eleven rotamers for asparagine, etc). When the system is partitioned into fixed/inactive/active groups, each position is associated with the appropriate number of rotamers. Setting the native rotamer flag to “1” (in the file parameters.str) includes the rotamer(s) encountered in the initial structural model, as explained above.\nThe interaction energy matrix\nTiming: 1 day\nConstruction of the IEM necessitates the computation and storage of the sidechain-backbone and sidechain-sidechain interaction energies, for all possible pairs of active and inactive chemical types and rotamers (defined in the setup stage). To perform this calculation:\nMake copies of files project.sh, setup.sh, setup.inp from the source directory to the subdirectory matrix.\nEdit project.sh to set the environment variable $CPD to your local Proteus directory (source directory).\n> export CPD = /home/username/Programs/Proteus_3.0\nEdit setup.inp to replace the segment identity (segid) definitions “A” and “B” by “PROA” and “PROB”, respectively.\n> … and (segid PROA or segid PROB)\nExecute the shell script setup.sh. This invokes protX to produce the following necessary files:",
    "The protein structure file setup.psf for a “giant molecule” that contains at each active position a number of sidechains representing all chemical types sampled at this position.\nThe corresponding coordinate file setup.pdb.\nFile position_list.dat contains the list of active and inactive positions of the system (the total number of pair interactions involving each position is also reported).\nIndividual files for all active and inactive positions, listing the allowed amino acid types at each position. These files are stored under the subdirectory $PROJ/matrix/local/Mut.\nThe Generalized Born atomic radii coefficients bi for the fixed part of the system are precalculated and stored at matrix/local/Bsolv/bsolv.pdb.\nMake copies of the shell scripts runI.sh and runIJ.sh to the matrix directory.\nExecute the shell script runI.sh. This invokes protX to compute the diagonal IEM terms (containing the interaction energy of each sidechain with itself and the fixed part). The calculation can be performed sequentially using one CPU core (default), or in parallel using multiple CPU cores (set the desired number of cores as the command line argument). A prerequisite for the parallel calculation is the GNU parallel shell tool.\n> runI.sh [number of CPU cores]\nGeneralized-Born atomic-radii coefficients (bi) are precalculated at each position, for each chemical type and rotamer conformation sampled at that position, with the rest of the system kept at the native sequence and conformation (native environment approximation). These coefficients are stored, along with the atomic coordinates of the corresponding rotamer, to distinct pdb files at matrix/local/Rota.\nThe diagonal IEM elements are computed. The total interaction energies and their decomposition into molecular mechanics terms (bonded, Coulombic, van der Waals) and solvation terms (GB and solvent accessible surface area) are stored in data files at matrix/dat.",
    "The shell script make_rotamer_space.sh, invoked by runI.sh, checks the diagonal terms of the matrix to identify high-energy rotamer conformations at active and inactive positions. The exclusion of unfavorable rotamers reduces the conformational space of the system (and facilitates convergence of the adaptive flattening procedure during the second step). At position 501, all rotamers of chemical types F, Y, W and H failed to satisfy the energy threshold due to steric clashes and were excluded troubleshooting 2[href=https://www.wicell.org#sec6.3].\nA list of all residue pairs to be computed in the next step is created (pair_list.dat).\nExecute the shell script $PROJ/matrix/runIJ.sh to compute the off-diagonal IEM terms via protX.\n> runIJ.sh [number of CPU cores or PBS queue] pair_list.dat\nAt this step, protX computes the sidechain – sidechain interaction energies for all chemical types/rotamers of the various pairs of active and inactive residues. The total interaction energies and the individual molecular-mechanics, Generalized-Born and solvent accessible surface-area energy terms are stored in data files at matrix/dat.\nAfter the energy calculation is completed, all data files are concatenated into a big file (matrix.dat) and then split into two files containing the diagonal terms (matrix.bb) and the off-diagonal terms (matrix.pw) to be read in the second step of the protocol.\nNote: This calculation is computationally demanding and should be performed in multiple CPU cores. In our case, a cluster of 43 nodes with 424 (Intel Xeon 2.4 GHz) CPU cores was employed. By assigning each pair interaction to one CPU core, the entire step was completed in less than a day.\nCritical: Repeat the IEM calculation for the SARS-CoV-2 RBD apo state. The next step of the protocol involves the independent explorations of the sequence – structure space of the complex and the apo states.\nExploration of sequence/conformation space\nTiming: 6 h",
    "The exploration of the sequence/conformation space is performed in two stages: i) First, we conduct a set of design simulations of the apo state (the free SARS-CoV-2 RBD domain). We use these simulations to derive biasing potentials that render all chemical types at each active position approximately equiprobable. The procedure is analogous to the Wang-Landau approach and has been described in (Villa et al., 2018[href=https://www.wicell.org#bib15]; Opuu et al., 2020[href=https://www.wicell.org#bib10]; Mignon et al., 2020[href=https://www.wicell.org#bib8]). The resulting biasing potentials are approximately equal to the negative folding energies of the apo state sequences. ii) Using these biasing potentials, we conduct biased “production design” simulations of the complex. The biasing potentials subtract the apo-state folding free energies from the complex-state folding free energies, promoting thereby the selection of sequences with good binding affinities. iii) We also conduct a new set of biased simulations for the apo state, with the same biasing potentials. These simulations produce biased probabilities of the various sequences in the apo state. The binding free energy of a sequence, relative to a reference sequence, is computed from the sequence probabilities in the complex and apo state (see Equation (9), Polydorides and Archontis, 2021[href=https://www.wicell.org#bib12]).\nAdaptive flattening of the SARS-CoV-2 RBD apo state:\nMake copies of the configuration files “∗.conf” from $CPD/tutorials/adaptive_MC/apo/protMC to $PROJ/protMC/apo.\nEdit the adaptive configuration file (adapt.conf) troubleshooting 3[href=https://www.wicell.org#sec6.5].\nDefine the energy directory location of the apo state energy files (matrix.bb/pw).\nSet the length of the MC trajectory to 3 × 108 steps.",
    "Employ all active positions (455, 493, 494, 501) and all possible position pairs in the adaptive procedure, and update the calculated single and double bias terms every 1,000 steps. Use the parameters e0 = 0.2 kcal/mol and E0 = 100 kcal/mol for single position biases, and the values 0.1 kcal/mol and 40 kcal/mol for two-positions biases. (The values of these parameters can be optimized for a particular system via short biasing simulations).\nSet the temperature via the thermal energy kT at 0.6 kcal/mol and the protein dielectric constant at 6.8.\nRun protMC to conduct the adaptive-flattening simulation that computes and stores the biasing potentials in the output file bias.dat. The values are updated every 1,000 steps. The sampled sequences (adapt.seq) and their energies (adapt.ener) are also stored.\n> $CPD/protMC/protMC.exe < adapt.conf > adapt.log\nWhen the adaptive flattening is completed, manually copy the final set of values of the biasing potentials to the file bias.in, that is used in the next step.\nSet up and run the biased “production design” simulation of the sequence – conformation space of the apo state:\nEdit the MC configuration file (MC.conf) troubleshooting 3[href=https://www.wicell.org#sec6.5]\nUse a replica exchange Monte Carlo (REMC) exploration method, with 4 replicas at temperatures (0.6 kcal/mol, 0.9 kcal/mol, 1.3 kcal/mol, 1.8 kcal/mol).\nInclude the file containing the biasing potentials.\nReduce the conformational space, by restricting distant inactive residues (beyond 8 Å from the interface) to their native conformation.\nSet the trajectory length to 109 steps.\n<Replica_Number> 4 <\\Replica_Number>\n<Temperature> 1.8 1.3 0.9 0.6 <\\Temperature> #kT units\n<Bias_Input_File> bias.in <\\Bias_Input_File>\n<Space_Constraints>\n2417 LYS # all rotamers of lysine are available\n2437 ASN{12} # only the native rotamer is available\n<\\Space_Constraints>\n<Trajectory_Length> 1000000000 <\\Trajectory_Length>",
    "Run protMC to conduct the biased production simulation of the apo SARS-CoV-2 RBD. All sequence – structure combinations visited by each replica and their energies are stored in individual files (proteus.seq, proteus.ener), indexed 0, 1, 2, 3 according to the temperature of the replica (from the highest to the lowest).\n> $CPD/protMC/protMC.exe < MC.conf > MC.log\nEdit the postprocess configuration file POST.conf to include only the designed sequences sampled at the room temperature trajectory.\n<Seq_Input_File> proteus.seq_3 <\\Seq_Input_File>\n<Fasta_File> proteus.rich_3 <\\Fasta_File>\nRun protMC to convert the stored sequences (proteus.seq_3) in a human-readable enriched form (proteus.rich_3)\n> $CPD/protMC/protMC.exe < POST.conf > POST.log\nRun the python script $CPD/bin/analyze_seq.py to count the occurrence of the various sequences identified by the design. For each sequence the script reports, its occurrence and percentage probability, along with the minimum, maximum and average energy (over all rotameric conformations identified by the design).\n> $CPD/bin/analyze_seq.py proteus_seq.3 proteus_rich.3\n1000000000 $proj/matrix/active.list > proteus.dat\nA total of 81,643 out of 81,648 possible sequences were sampled in the simulation of the SARS-CoV-2 RBD apo state. The wild-type sequence L455-S493-Q494-N501 (“LQSN”) was selected 15,651 times. A graphical representation of the chemical type abundancies at each position can be constructed (Polydorides and Archontis, 2021[href=https://www.wicell.org#bib12]).\nRepeat the previous step to set up and run the biased production simulation of the sequence – conformation space of the complex state, using the same biasing potentials (bias.in). A total of 29,668 out of 81,648 possible sequences were sampled in the simulation of the complex. The wild-type sequence “LQSN” was selected 6,347 times. Run the following from the $PROJ/complex. troubleshooting 4[href=https://www.wicell.org#sec6.7]\n> $CPD/protMC/protMC.exe < MC.conf > MC.log\n> $CPD/protMC/protMC.exe < POST.conf > POST.log\n> $CPD/bin/analyze_seq.py proteus_seq.3 proteus_rich.3\n1000000000 $proj/matrix/active.list > proteus.dat\nFilter designed sequences according to their binding affinity.",
    "For sequences encountered very infrequently during the design, the computed sequence probabilities and the resulting binding free energies may be associated with significant errors. For this reason, we exclude sequences with smaller occurrence frequency than a minimum number, set here to 5000. In the simulations of the apo state and the complex, 60,660 and 6,350 sequences appeared, respectively, more than 5,000 times. Of those, a total of 5,596 sequences were common in both states. Extract these common sequences in two new files (i.e., proteus_5000.dat); store those files in the apo and complex directories.\nRun the python script $CPD/bin/affinity.py to calculate the binding free energy of each sequence with respect to the wild-type, using the biased probabilities in the apo and the complex state. The output file lists those sequences with improved binding affinity relative to the wild type, in descending order. A total of 4,704 out of the 5,596 had better affinity than the wild-type sequence.\n> $CPD/bin/affinity.py $PROJ/CMP/protMC/proteus_5000.dat\n$PROJ/APO/protMC/proteus_5000.dat bias.in -rf LQSN -p 455\n493 494 501 > results.dat\nFurther analysis of potent sequences\nFrom the top (strongest-affinity) 50 to 100 sequences, choose a small number ∼10 of sequences with chemical diversity.\nRun the shell script $CPD/bin/reconstruct.sh from $PROJ/complex/reconstruct to create 3D structure models of selected sequences – conformations sampled by the selected replica (proteus_rich.3).\nWe reconstructed the most probable conformers of the highest-affinity sequence LEIV and two more interesting sequences, EEIV and LQWN. We tested further these sequences by MD simulations in explicit water, using the NAMD program (Phillips et al., 2020[href=https://www.wicell.org#bib11]).\nCreate a new subdirectory $PROJ/comp/MD and make copies of the coordinate (rec.1.pdb) and structure (rec.1.psf) files of reconstructed sequence.\nRun the shell script $CPD/bin/dihe_mult.sh to correct the protein structure file from multiple dihedral entries, readable by NAMD.",
    "Critical: Employ a sufficient number of adaptive flattening steps to achieve reasonable convergence of biasing potentials. The simulation length depends on the size of the sequence space. For 4 active positions and 18 chemical types per position, there are 184 (∼105) possible sequences. Each sequence can be associated with a large number of rotamer conformations. Thus, a MC length of at least 109 steps would be expected). Note that perfect flattening of the energy landscape is not necessary. The MC output files proteus.seq, proteus.ener can be extremely large, depending on the trajectory length. We usually employ sequences from the room temperature replica, thus the output files storing solutions from higher-temperature replicas can be shrunk to zero using the Linux truncate command.\nNote: As explained above, we set a minimum sequence occurrence threshold to exclude insufficiently sampled sequences during design. The threshold depends on the size of the sequence space. For a total of ∼105 possible sequences, explored by 109 MC steps, we ignore sequences sampled less than 5,000 times."
  ],
  "subjectAreas": [
    "Structural Biology",
    "Protein Biochemistry",
    "Biophysics"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics"
  ]
}