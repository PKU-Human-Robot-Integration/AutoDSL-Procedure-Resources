{
  "id": 3266,
  "origin_website": "Cell",
  "title": "A protocol to investigate neural coupling of brain oscillations in rodents using in vivo electrophysiological recordings",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nIn vivo electrophysiological recording\nTiming: 5 days\nThis part describes how the raw electrophysiological data are collected.\nConnect the implanted microdrive to a unity-gain head-stage (Axona, St Albans, UK). Each head-stage is connected to a 16-channel preamplifier. The incoming primary signals are digitized by the Analog to Digital Converter at 48 kHz.\nThe digitized signal is then fed into the system unit and the processing is set to record LFP signals with a gain of ×500 or ×1000 with a low pass cut-off of 1 kHz and a digital notch filter of 50 Hz (Australia - may be 60 Hz in other locations).\nBehavioral task\nTiming: 5 days\nThis part describes how the discriminative auditory fear conditioning task is conducted while recording the in-vivo electrophysiological signal. Animal behavior is recorded by a digital camera (FlyCapture Flea 2, Point Grey Research, Richmond, Canada) and freezing behavior is counted and scored manually by the observer. Freezing is defined as the absence of any movement except breathing and was scored if there was no movement for at least 1 s (except sleeping).\nAllow animals to explore the context freely for 3 min before each session to familiarize with the environment and set-up.\nDay 1 habituation: Habituate animals in context A to deliver pseudorandom presentations of 5 CS+ (6 kHz tone) and 5 CS- (white noise; 30 s each with 500 ms pips).\nDay 2 Acquisition: fear condition animals by pseudo randomly presenting 5 presentations of the CS + that co-terminate with the US (0.5 mA foot shock for 0.5 s), and 5 presentations of CS- in context A. Use the last 3 CS presentations to evaluate fear learning.",
    "Day 3 and day 4 extinction: Expose animals to context B and to receive 12 presentations of CS+ and 12 presentations of CS- in a random order on each day.\nNote: The first 3 CS presentations on day 3 are used to evaluate fear expression and the last 3 trials of CS presentations on day 4 are used to evaluate extinction learning.\nDay 5 Test: Test animals for extinction memory recall in context B with 2 CS+ and 2 CS- presentations.\nTransport the animals to their home cage and let them rest for at least 2 h.\nPlace animals back in context A to test for fear memory relapse (Renewal) by presenting 2 CS+ and 2 CS- presentations.\nCritical: Make sure to handle the animals for a few days before the behavioral task.\nVerification of electrode placement\nTiming: 3 days\nThis part describes how the electrode implantation site is confirmed.\nFollowing behavioral procedures, euthanize the rats with a lethal dose of isoflurane.\nPerform electrolytic lesions to mark the tips of the tetrode by an injection of ∼70 μA direct current for 5 s.\nPerfuse animals through the left ventricle with 4% paraformaldehyde (PFA) in 1 × phosphate buffered saline (PBS).\nDissect brains from the skull and fix in 4% PFA for 24 h at 4°C, followed by slicing of the brains coronally into 100 μm sections using a vibratome (Leica Biosystems, Wetzlar, Germany).\nNote: If only single electrodes are implanted, it may be better to section the brains at 50 μm to be able to precisely verify the electrode placement site.\nMount sections on microscope slides, coated with glycerol 50% (v/v in phosphate buffered saline), covered with a glass coverslip and sealed with clear nail polish around the edges.\nLet dry overnight at room temperature.",
    "Identify electrolytic lesions with an upright microscope (Zeiss Axio Imager/Observer, Jena, Germany) by taking images with a 5× objective on a bright field imaging microscope (Figure 2C).\nLocal field potential analysis\nTiming: 1 day\nThis part describes how the recordings are analyzed to extract neural oscillations and the neural coupling between brain regions (Figure 2[href=https://www.wicell.org#fig2]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2859-Fig2.jpg\nFigure 2. Local field potential analysis\n(A) The magnitude response of the designed bandpass filters for distinct frequency bands: theta 4–10 Hz, beta 10–30 Hz, slow gamma 30–55 Hz and fast gamma 55–100 Hz.\n(B) The raw LFP signal is filtered into theta, beta, slow gamma, and fast gamma bands using the designed filters.\n(C) A representative example of the placement of tetrode tips (indicated by the electrolytic lesions) in the PL and IL regions, respectively.\n(D) Heat maps of LFP signals showing the power spectrograms of neural oscillations in different frequency bands. From left to right: Theta oscillations, there is an enhancement in the PSD from 0 s to 2 s at around 4–6 Hz; Beta oscillations: higher PSD in the 10–15 Hz range from 0 s to 5 s; Slow gamma oscillations: higher PSD in the 30–45 Hz range from 0 s to 5 s; Fast gamma oscillations: there is no significant change in PSD in this recording.\n(E) Example of the simultaneously recorded brain regions 1 (top) and 2 (bottom), LFP filtered into the 4–10 Hz theta band.\n(F) Theta coupling (peak cross-correlation coefficient) between the two brain regions represents their functional connectivity (peak cross-correlation coefficient: 0.433 and lag time: 2 ms, calculated by the neural coupling algorithm.\nCritical: Make sure the channels are extracted correctly according to the channel connector maps provided by the manufacturer.\nData filtering (Figures 2[href=https://www.wicell.org#fig2]A and 2B).",
    "Bandpass filter design: the bandpass filter is designed using the MATLAB function designfilt (‘bandpassfir’). The attenuation in the stop band is set at 80 dB and the amount of ripple allowed in the pass band is 1 dB. The frequency differences between the start of the 1st stop band and the start of the 1st pass band and between the start of the 2nd pass band and the start of the 2nd stop band are both 0.5 Hz.\nfunction [sig_filt,newfs,N] = datafilter(sig,fst1,fp1,fp2,fst2,ast1,ap,ast2,fs)\n% Check\nif fp1-fst1 ∼= fst2-fp2\n  warning('Upper and lower pass-stop transitions are not equal length - may give unexpected results'); end\nnewfs = fs/48; %original sample rate is 48 kHz\n  sig=downsample(sig,48) %fixed down sampling rate 1kHz from 25kHz\n% Create filter name\n%savnam = %sprintf('filterspecs%s%s_%g_%g_%g_%g_%g_%g_%g_%g.mat',filesep(),mfi%lename(),fst1,fp1,fp2,fst2,ast1,ap,ast2,newfs);\n%if exist(savnam,'file')\n  %load(savnam); %Load filter if we have a saved version\n    % disp(' - Filter loaded from disk');\n%else\n  % fd = fdesign.bandpass('Fst1,Fp1,Fp2,Fst2,Ast1,Ap,Ast2',fst1,fp1,fp2,fst2,ast1,ap,%ast2,newfs); % Get filter params and design it\n% hd = design(fd);\n  % disp([' - Filter design time ' num2str(toc) ' sec']);\n    % fvtool(hd); % fiter visualisation\n      % save(savnam,'fd','hd'); % Save it for use next time\n%end\n% Filter the signal and adjust for sample offset effect\n%N = length(hd.Numerator); % filter order\n%disp([' - Filter order is ' num2str(N)]);\n%sig_filt = filtfilt(hd.Numerator,1,sig); sig_filt =detrend(sig_filt)\n%if choose to use zero-phase filter\nd = designfilt('bandpassfir','FilterOrder',5061, ...\n  'CutoffFrequency1',fp1,'CutoffFrequency2',fp2, ...\n  'SampleRate',1000); fvtool(d); N=5061\nsig_filt = filtfilt(d,sig); sig_filt =detrend(sig_filt)\nif size(sig_filt,1) == 1\n  sig_filt = [sig_filt(round(N/2)+1:end), zeros(1,round(N/2))];\nelse\n  sig_filt = [sig_filt(round(N/2)+1:end); zeros(round(N/2),1)];\nend\nend\nNotchfilter design: the notchfilter is designed using MATLAB function designfilt (‘bandstopfir’). The filter order is set as 5000. In order to filter out 50 Hz powerline interference (50 Hz), the start of the cutoff frequency is 49 and the end of the cutoff frequency is 51.",
    "Notch filter the raw LFP signals for the 50 Hz powerline interference and then cluster into canonical frequency bands: theta (4–10 Hz), slow gamma (30–55 Hz), and fast gamma (55–100 Hz) using a discrete-form FIR bandpass filter with characteristics of linear phase response and stability.\nload('data.mat');Fs=1000\n%theta oscillations\nband=[4 10]\n[theta,newfs,N] = datafilter(sig,band(1)-0.5,band(1),band(2),band(2)+0.5,80,1,80,Fs);\n%beta oscillations\nband=[10 30]\n[beta,newfs,N] = datafilter(sig,band(1)-0.5,band(1),band(2),band(2)+0.5,80,1,80,Fs);\n%slow gamma oscillations\nband=[30 55]\n[slowgamma,newfs,N] = datafilter(sig,band(1)-0.5,band(1),band(2),band(2)+0.5,80,1,80,Fs);\n%fast gamma oscillations\nband=[55 100]\n[fastgamma,newfs,N] = datafilter(sig,band(1)-0.5,band(1),band(2),band(2)+0.5,80,1,80,Fs);\n% filtered signal plotting\nf=figure\nsubplot(5,1,1)\nplot(sig)\nxlabel('Time');ylabel('Amplitude (a.u.)');title('raw stroke data')\nsubplot(5,1,2)\nplot(theta,'color',[1,0,1])\nxlabel('Time');ylabel('Amplitude (a.u.)');title('theta stroke data')\nsubplot(5,1,3)\nplot(beta,'color',[0.5,1,0])\nxlabel('Time');ylabel('Amplitude (a.u.)');title('beta stroke data')\nsubplot(5,1,4)\nplot(slowgamma,'color',[0.5,0.5,1])\nxlabel('Time');ylabel('Amplitude (a.u.)');title('slowgamma stroke data')\nsubplot(5,1,5)\nplot(fastgamma,'color',[0.5,0.5,0.5])\nxlabel('Time');ylabel('Amplitude (a.u.)');title('fastgamma stroke data')\nset(gcf,'color','w')\nset(gcf,'position',[10 100 1000 800])\nNeural coupling analysis (Figures 2[href=https://www.wicell.org#fig2]D and 2E).\nTo determine the functional connectivity (neural coupling) between two brain regions, perform cross-correlation analysis in MATLAB (xcorr function).\nThe instantaneous amplitudes of the recorded LFPs from two brain regions (the prelimbic cortex and infralimbic cortex in our study) are considered as two discrete-time sequences x(n) and y(n), respectively.\nThe cross-correlation coefficient     R ˆ   x y , c o e f f − p e a k     is calculated by the xcorr function in MATLAB using the following formula (the asterisk denotes complex conjugation):\nR\nˆ\nx\ny\n(\nm\n)\n=\n{\n∑\nn\n=\n0\nN\n−\nm\n−\n1\nx\nn\n+\nm\ny\nn\n∗\n,\nm\n≥\n0\n,\nR\nˆ\ny\nx\n∗\n(\n−\nm\n)\n,\nm\n<\n0\n.\nR\nˆ\nx\ny\n,\nc\no\ne\nf\nf\n(\nm\n)\n=\n1\nR\nˆ\nx\nx\n(\n0\n)\nR\nˆ\ny\ny\n(\n0\n)\nR\nˆ\nx\ny\n(\nm\n)",
    "The averaged peak cross-correlation coefficient in different sessions is retrieved by averaging the peak cross-correlation coefficient     R ˆ   x y , c o e f f − p e a k     across all the animals during the particular session.\n%load multiple channels data, e.g.: channel 1 is recording from the\n%medial prefrontal cortex (mPFC) and stored in row 1, channel 2 is\n%recording from the hippocampus (HPC)and stored in row 2.\nload('data_multiplechannels.mat');Fs=1000\nsig1=sig(1,:) %load row1 which is the mPFC recording\nsig2=sig(2,:) %load row2 which is the HPC recording\n%Filter out the theta oscillations\nband=[4 10]\n[theta1,newfs,N] = datafilter(sig1,band(1)-0.5,band(1),band(2),band(2)+0.5,80,1,80,Fs);\n[theta2,newfs,N] = datafilter(sig2,band(1)-0.5,band(1),band(2),band(2)+0.5,80,1,80,Fs);\n[sumcorr,l] = xcorr(sig1,sig2,ceil(newfs/2),'coeff'); %calculate correlation\n%Plot the corss-correlation curve\nplot(l,sumcorr,'c','Linewidth',2)\n%Calculate the peak corss-correlation coefficient\n[mValue,mIndex]=max(sumcorr)\nlag=l(mIndex)/(newfs)∗1000 % convert second into microsecond\n% Save the results\nfid=fopen(['HPC-mPFC xcorr.txt'],'wt')\nfprintf(fid,'The xcorr-coeffienct PFC&HPC is %.2f. Lag is %.1f ms \\n',mValue,lag);\nfclose(fid)\nX=sprintf('The xcorr-coeffienct PFC&HPC is %.2f. Lag is %.1f ms \\n',mValue,lag)"
  ],
  "subjectAreas": [
    "Biotechnology And Bioengineering",
    "Neuroscience"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research"
  ]
}