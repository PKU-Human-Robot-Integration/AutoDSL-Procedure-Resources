{
  "id": 14321,
  "origin_website": "Jove",
  "title": "Automated, Quantitative Cognitive/Behavioral Screening of Mice: For Genetics, Pharmacology, Animal Cognition and Undergraduate Instruction",
  "procedures": [
    "The three fully automated protocols in the TSsystem (matching, appetitive instrumental and classical conditioning) and the switch protocol have been approved by the Animal Care and Facilities Committee at Rutgers New Brunswick.\n1. Setting Up the Physical System\nSet up the test environments in the cabinets (see Figure 1).\nInstall the experiment-control software provided with the test environments on the protocol-control computers.\nNote: Do not use these computers for any other purpose!\n2. Setting Up the Software System\nSet up the LAN (local area network) so that the server on which data-analysis software is installed can access the hard disks of the computer(s) controlling the test environments (see Figure 1).\nEstablish a file-synchronizing account for data storage in the \"cloud\".\nPut the TSsystem folder and its subfolders on the search path of the commercial programming language in a cloud-synchronized folder.\nNote: The TSsystem is a software toolbox, that is, a library of over 30 high-level functions that facilitate the creation of complex data-analysis and data-graphing code that automatically processes the data whenever it is harvested from the output files generated by the experiment-control program. All of the commands operate on data in fields of the Experiment structure and put the results in other fields in the same structure (see Figure 2). These open-source commands are written in one of the most widely used commercial scientific programming and graphing languages. It has many other \"toolboxes\", including most usefully a statistics toolbox.\n3. Starting an Experiment\nCall TSbegin (see Figure 3).\nNote: TSbegin is an interactive GUI (Graphic User Interface) in the TSsystem toolbox. It leads the user through the process of creating the hierarchical data structure into which the raw data and all results derived from it will be placed by the other functions in the TSsystem toolbox.",
    "Call TSaddprotocol (see Figure 4).\nNote: TSaddprotocol is a GUI in the TSsystem toolbox. It leads the user through the process of specifying control parameters for an experimental protocol, specifying decision code that will automate the decision to terminate the protocol and go on to the next one, and specifying the decision criteria to be used.\nPlace mice in the 24/7 live-in test environments, one mouse per environment.\nNotes: Take care to note the ID number of the mouse that goes into each of the numbered experimental environments (Box 1, Box 2, etc.). Also, note the letter that identifies the experiment-control computer on the Local Area Network (LAN) and its IP address.\nCall TSstartsession (Figure 5).\nNote: TSstartsession is a GUI in the TSsystem toolbox . It leads the user through the process of starting an experimental session. Experimental sessions last one or two weeks, during which several different behavioral testing protocols are run. TSstartsession stores the information that goes into the macro that the protocol-control software reads when a session is started. Included is the path to and name of the code file that the protocol-control software reads. TSsystem's analytic software reads this code into the hierarchical data structure, so there is never doubt as to the exact protocol in force at any time.\nGo to the control computers and call the macros written to the MedPC folder, in order to start the session for the boxes controlled by that computer.\n4. Data Analysis\nIf you have created a new protocol, write appropriate data-analysis and graphing code using the commands in the TSsystem toolbox, which greatly simplify the creation of complex data analyses.",
    "Note: Data-analysis and graphing code for the three protocols whose results are described below are included in the TSsystem toolbox. Because, they are open source, they may be modified at will. The code for these analyses is extensively commented, which makes it easier to create code for analyzing the results from user-specified protocols.\nFor the duration of the experiment (24 hr to many weeks), monitor email for alerts from the server indicating possible equipment malfunctions (power failures, spontaneous, control-computer reboots, pellet feeder malfunctions, etc.), which the TSsystem data-analyzing program detects.\nStudy the plots of performance that the data-analyzing code written in TSsystem produces every time it is called by the analysis timer (typically 2-4 times/day).\nNote: The analysis timer calls the data-analysis and graphing program at user-specified intervals. The called program is written with functions in TSsystem. It reads into the hierarchical data structure the raw data harvested from the file to which the protocol-control software writes. Then, it analyzes the data and graphs the results of the analyses. The file containing the hierarchical data structure is stored in a file-synchronization folder in the cloud. This provides automatic off-site backup. The automatic file-synchronization stores copies of the structure file on the computers of all the personnel and collaborators who have been granted access. Specified graphs are automatically emailed to specified personnel and collaborators. A principal investigator can monitor the progress of the testing from anywhere in the world at any time, and, if necessary, revise the experimental protocol, on line, remote from the site where the mice are being tested.\nUse TSbrowser to study the data and summary statistics in the hierarchical data structure as they become available, in quasi real time (see Figure 2).\nSubscription Required. Please recommend JoVE to your librarian."
  ],
  "subjectAreas": [
    "Behavior"
  ],
  "bigAreas": [
    "Ecology & Environmental Biology"
  ]
}