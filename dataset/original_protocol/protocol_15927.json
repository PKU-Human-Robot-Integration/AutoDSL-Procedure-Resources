{
  "id": 19753,
  "origin_website": "Wiley",
  "title": "Interpreting Image-based Profiles using Similarity Clustering and Single-Cell Visualization",
  "procedures": [
    "The main goal of this tutorial is to examine the correlations between samples to check for their replicability, to explore correlations among them, to discern how features drive differences between samples or groups, and to interpret the biology behind the data.\nAfter cell treatment, imaging, and feature extraction, some profiles are dramatic in only one or a few features and the feature names have obvious meanings (nucleus area or integrated intensity of the mitochondria channel in the cytoplasm, which corresponds to the total amount of staining in that channel); in these cases, looking at feature names will help to discern their connection to biological meaning. Other individual features have meanings that are more difficult to translate into plain language. Furthermore, the challenge is even greater to interpret a collection of feature names that all contribute strongly to a more complex morphological phenotype. For example, a collection of features from a channel stained for actin and wheat germ agglutinin together with DNA granularity was particularly important to predict 70 specific cell health phenotypes from Cell Painting data (Way et al., 2021[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0026]). Even phenotypes that are visually obvious and distinctive by eye, such as cells stalled in a particular stage of the cell cycle, are often difficult to predict just by examining a list of distinctive features; the problem is even more acute for samples without a visual discernible phenotype yet quite distinguishable using image metrics.",
    "To help us in the exploration and interpretation process, we often use Morpheus (available at https://software.broadinstitute.org/morpheus/[href=https://software.broadinstitute.org/morpheus/]), a free web-based open-source software that allows matrix visualization, analysis, clustering, filtering, and displaying of charts. The tool can be readily used without extensive computational or statistical experience. It allows for quick visualization of an entire dataset in different ways, so you can identify patterns in their data that could lead to new biological insights, or even use it as a data quality control step by examining replicability. Morpheus was originally designed at the Broad Institute for exploration of mRNA profiling data, but accepts a variety of matrix files from multiple formats (CSV, GCT, GMT, text file) to be imported. Although raw CellProfiler outputs tables can be input into Morpheus, here, we provide notebooks to preprocess the outputs from CellProfiler so the data can undergo aggregation and normalization (both of which can also be performed in Morpheus) followed by multiple feature reduction steps (some of which are not available in Morpheus).\nMore information can be found in the Morpheus documentation (https://software.broadinstitute.org/morpheus/documentation.html[href=https://software.broadinstitute.org/morpheus/documentation.html]), as well as a two-part series of video tutorials on the Center for Open Bioimage Analysis (COBA) YouTube channel: “The beginner's guide to morphological profiling (Morphological profiling, part 1)” and “Practical exploration of morphological profiling data (Morphological profiling, part 2)”.",
    "During this tutorial, we start by examining how similar each sample is to the other samples using per-well similarity matrices, sorting the data in a way that allows for interpretation. We provide a sample dataset in which drugs with known mechanisms of action (MOAs) have been added at various dose points prior to Cell Painting. To observe how MOAs are grouped, and if technical artifacts such as batch or plate-layout effects are playing a role in the distribution of the groups, we use hierarchical clustering. In the end, you will be able to identify whether drugs with similar MOAs have similar morphological profiles and the positive and negative connections between various MOA profiles. You will also learn how to determine what features drive the differences between the groups. We emphasize that this is just one of the data-exploration approaches that can be used to interpret image-based profiles, and produces comparative results rather than hard distinctions between similar and not.\nMaterials\nLaptop or desktop computer with at least 2 GB RAM and a suitable web browser such as Google Chrome\nInternet access to use Morpheus (https://software.broadinstitute.org/morpheus/[href=https://software.broadinstitute.org/morpheus/])\nData and Jupyter Notebooks (Kluyver et al., 2016)[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0014], available at https://github.com/ciminilab/2023_Garcia-Fossa_Cruz_CurrentProtocols[href=https://github.com/ciminilab/2023_Garcia-Fossa_Cruz_CurrentProtocols]. The data are in a GCT format, a tab-separated value table containing the extracted features aggregated by well in a Cell Painting assay. In this assay, 1571 compounds were tested across six doses in A549 cells (Way, Natoli, et al., 2022[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0027]).",
    "We randomly selected a plate map from this experiment (C-7161-01-LM6-011 plate map) and downloaded the CSV files for five of its replicate plates (SQ00015195, SQ00015218, SQ00015219, SQ00015220, SQ00015221) from the cpg0004-lincs dataset (Way, Natoli, et al., 2022[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0027]) available from the Cell Painting Gallery on the Registry of Open Data on AWS (cellpainting-gallery). We then added annotations to the data (labels for each MOA, compound, and concentration) and normalized the features to the negative control (DMSO) in a Jupyter Notebook (Kluyver et al., 2016[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0014]) using the pandas library (Reback et al., 2020[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0017]) and pycytominer (Way, Chandrasekaran, et al., 2022[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0025]). Next, we performed feature selection to exclude features with low variance (frequency cut = 0.05), high correlation to another feature in the profile (threshold = 0.9), features that have >5% NA (not available) values, blocklisted features, and outliers (features with minimum or maximum absolute values greater than threshold = 500). These parameters serve as useful starting values but may be adjusted as needed; for more details, see the data preparation notebook and pycytominer documentation (https://pycytominer.readthedocs.io/en/latest/[href=https://pycytominer.readthedocs.io/en/latest/]). These steps are available in the basic_protocol_1/notebooks/data_processing folder using the Data_preparation.ipynb notebook in our GitHub repository (https://github.com/ciminilab/2023_Garcia-Fossa_Cruz_CurrentProtocols/blob/main/basic_protocol_1/notebooks/data_processing/Data_preparation.ipynb[href=https://github.com/ciminilab/2023_Garcia-Fossa_Cruz_CurrentProtocols/blob/main/basic_protocol_1/notebooks/data_processing/Data_preparation.ipynb]). We opened the CSV file obtained using Data_preparation.ipynb in Morpheus and clicked on Tools > Transpose, allowing the CSV table to be better visualized in Morpheus. To apply the protocol to your own data, we recommend using CellProfiler to extract features and pycytominer for data preparation.",
    "We calculated the average precision based on https://github.com/niranjchandrasekaran/profiling-workflow-demo/blob/master/analysis/0.calculate-ap.ipynb[href=https://github.com/niranjchandrasekaran/profiling-workflow-demo/blob/master/analysis/0.calculate-ap.ipynb] to enable us to remove weakly correlated pairs (defined as < 0 mean average precision between replicates) before analysis; no such profiles were found for this dataset. To reproduce our results, follow the instructions for creating an environment at https://github.com/niranjchandrasekaran/profiling-workflow-demo[href=https://github.com/niranjchandrasekaran/profiling-workflow-demo], and use our notebook WeakProfiles_Replicability.ipynb available at https://github.com/ciminilab/2023_Garcia-Fossa_Cruz_CurrentProtocols/tree/main/basic_protocol_1/notebooks[href=https://github.com/ciminilab/2023_Garcia-Fossa_Cruz_CurrentProtocols/tree/main/basic_protocol_1/notebooks] to calculate the replicability between samples in our Morpheus_Example_FeatureSelected.csv dataset. For more information about removing weak profiles, see Critical Parameters.\n1. To obtain the dataset for this protocol, clone the GitHub repository into your computer or download the repository at https://minhaskamal.github.io/DownGit/#/home?url[href=https://minhaskamal.github.io/DownGit/#/home?url]=https://github.com/ciminilab/2023_Garcia-Fossa_Cruz_CurrentProtocols[href=https://github.com/ciminilab/2023_Garcia-Fossa_Cruz_CurrentProtocols].\n2. Access the website https://software.broadinstitute.org/morpheus/[href=https://software.broadinstitute.org/morpheus/], click on “Select File” on the main screen, and select the Morpheus_Example_FeatureSelected.gct file you downloaded from GitHub. On the current tab, you will see a heatmap. Notice all the columns displayed for compound, concentration, etc.\nIf using your own data or the provided GCT file instead of the example JSON file (which bypasses this step), click on Options (gear symbol), select the Annotations tab, and change Column annotations. Deselect id and select Compound, Concentration, MOA, Wells, and Plate. This will enable the visualization of metadata information within each column.\n3. Click on Options (gear symbol) > Annotations > Column annotations and click All to select all columns. Right-click on the column labels (Compound, Concentration, MOA, Wells, and Plate) and enable “Show color” for all the columns to color-code the columns.\nYou can avoid these steps by using the Morpheus_Example_FeatureSelected.json file instead.",
    "4. Click on Options > Color Scheme and de-select the Relative color scheme. Change the minimum to –1000 and the maximum to 1000. Try also with –100 and 100. While the Relative color scheme converts values to colors based on each feature's minimum and maximum values (making every row range from blue to red based on their own min and max), overriding and changing the color scheme to these new values allows you to see raw feature values distributed within this new feature range. In this way, extreme feature values became visible.\nSetting the relative color scheme in this way highlights outlier features (with higher or lower values when compared to other features). Trying with different minimum and maximum values will highlight features within different ranges. This is just a quality control step to guarantee that feature selection was performed correctly.\n5. Close the Option window, click the zoom tool, and select Fit To Window.\n6. Use the mouse pointer to scroll throughout the row names in the right corner of the screen, highlighting the feature names. Any values colored in red or blue are unusual features that have high or low values compared to the rest of the features.",
    "Notice that if feature selection was performed, features that have points with abnormal distance from other values in the distribution will often be removed during this process. Removing outlier features is recommended because they could mean errors (e.g., artifacts) during image acquisition, which could affect post-analysis (e.g., interfering with logistic regressions or other learning methods). Be sure to remove them carefully and try to understand why they appeared. More details about feature selection can be found in Critical Parameters, but the pycytominer tool has a function to drop outliers based on absolute minimum and maximum values, allowing the change of the outlier cutoff value.\n7. Open Options > Color Scheme and select Relative color scheme to use the minimum and maximum values in each row to convert values to colors.\nNote that the results will be quite different if you use the minimum and maximum values in each column.\n8. Select Tools > Similarity Matrix > Pearson correlation on the rows. This will calculate the correlation between the wells for all pairs of features in the dataset and generate a similarity matrix for them. Click on Options > Display and select Link rows and columns.\n9. Create a Hierarchical Clustering by selecting Tools > Hierarchical Clustering. In Metric, select “Matrix vales (for a pre-computed similarity matrix)”. Change Cluster to Rows and Columns and click OK. This will group the features depending on how similar their profiles are using the correlation metric you have chosen.",
    "Steps 8 and 9 will create correlations between the features and cluster them by their similarity. The square blocks of red color along the diagonal denote high correlation, meaning the features in those rows and columns look similar to each other. Scroll down and look for the red squares, checking their names. You can see interesting clusters when looking for different feature groups: for example, check “Nuclei_AreaShape_Extent”. (Next to the Help menu, in the white box, type id: Nuclei_AreaShape_Extent and hit Enter. Click on the arrows next to it to redirect to the feature and see the name highlighted). “Nuclei_AreaShape_Extent” and “Nuclei_AreaShape_Solidity”, both related to how circular or protruded an object is and thus unsurprisingly tightly correlated, are grouped right next to Cells and Nuclei Intensity in the endoplasmic reticulum (ER), which would not be expected a priori. Since nuclei and ER are physically linked through the nuclear outer membrane, which is continuous with the ER membrane (Hirano et al., 2020[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0013]), we could hypothesize how these features’ correlations could translate into biology. Seeing that a couple of unexpected features group together may point to interesting and unexpected biology.\n10. Go back to the first tab “Morpheus_Example_FeatureSelected” and select Tools > Similarity Matrix > Pearson correlation on the columns. This will calculate the correlation between features for all pairs of samples in the dataset and generate a similarity matrix for them.\nThe Pearson coefficient is one of the many ways to calculate the correlation, although there are other available methods in Morpheus (e.g., Spearman, Kendall, Cosine). More detail about the Pearson coefficient is provided in Background Information.\n11. Click on Options > Display and select Link rows and columns. This helps navigate the large matrix, showing the respective correlations.",
    "12. While holding the shift key, click on the MOA, Compound, and Concentration columns (in this order) to sort them by value. This will display the samples in order, based on those categories of metadata (rather than based on the profile similarity itself). Focus on MOAs and the different compounds in each MOA. Can you see if compounds belonging to the same MOA have a similar morphological profile (Fig. 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-fig-0002])?\nSquare blocks of red color along the diagonal denote high correlation, meaning the compounds in those rows and columns look similar to each other. Going all the way towards the end of the dataset, on the RNA polymerase inhibitor MOA, you can see how the two compounds of this MOA (favipiravir and PSI-6130) have a similar morphological profile by looking at the higher correlations between them. At the top left of the heatmap, check the adrenergic receptor antagonist MOA and the compounds that define this MOA. Can you see how there is not much correlation between the different compounds? Each compound, even belonging to the same MOA, seems to have a different morphological profile.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/85877ee7-5897-4669-a0ac-e25e857647b7/cpz1713-fig-0002-m.jpg</p>\nFigure 2",
    "Similarity matrix generated in Morpheus. Columns were sorted by MOA, then Compound, then Concentration. (A) A subset of the similarity matrix showing the MOAs “Microtubule inhibitor” and “Microtubule stabilizing agent”. The top left and bottom right large red blocks show similarity of various doses on various plates within the same MOA class; the blocks on the top right and lower left are identical except for rotation, and show the similarity across classes. The small solid black box in the center shows the lowest dose of microtubule-stabilizing agent clusters well across replicates; its relatively poor correlation with the tightly clustered replicates at higher doses (black-dashed box) or any concentrations of microtubule inhibitor (green box) shows it might be below the effective dose of this drug. Higher doses of a microtubule-stabilizing agent cluster well within and across doses, though a subtle recurring pattern within this block (highlighted by yellow arrows) indicates that one of the five replicates shows a somewhat different profile than the other four, indicating a possible batch effect or technical anomaly. The effective concentration of a drug is highlighted by the lowest dose of ixabepilone clustering together (black box) but having weak correlations with the highest doses of ixabepilone. The higher doses of the microtubule-stabilizing agent are extremely similar to low concentrations of microtubule inhibitor (blue box) but less similar to higher concentrations of microtubule inhibitor (purple box). (B) Negative control (DMSO) correlation pattern, zoom out view of the similarity matrix. Black arrows highlight artifacts from plate-layout effects; treatments plated in the same or very similar well positions still can show significant similarity even after normalization. This can be alleviated at the experimental level by scrambling positions across plates and/or plating the same treatment in multiple positions spread across an individual plate.",
    "13. Using the same configuration as in the previous step (columns sorted by MOA > Compound > Concentration), continue to explore the similarity matrix and observe whether there are different MOAs with similar morphological profiles.\nGo to the microtubule inhibitor and microtubule-stabilizing agent MOAs (Fig. 2A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-fig-0002]). See how there are large squares colored in red when comparing the correlation coefficient for both groups, meaning these two MOAs are closely correlated and produce similar morphological profiles. You can even distinguish subtle effects of drug concentration: the lowest concentration of microtubule stabilizer (green box) is relatively dissimilar from all concentrations of microtubule inhibitors; at higher microtubule stabilizer doses, the phenotype is indistinguishable from low concentrations of microtubule inhibitor (blue box), but less similar to higher concentrations of microtubule inhibitor (magenta box). Look for more unusual correlations.\n14. Sort the collapsed similarity matrix by MOA and by plate by holding the shift key. Zoom out (pressing the minus – key) to see a broader view of the matrix.\n15. Roll over to the DMSO MOA (the negative control in this dataset).",
    "Observe how DMSO samples are distributed and do not have universally high correlations with each other (Fig. 2B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-fig-0002]). Some are correlated by well position. This indicates that we performed plate normalization with DMSO as the baseline (meaning DMSO is not a phenotype in this dataset and all DMSO profiles should have feature values of zero, apart from technical noise). For this reason, some DMSO samples in similar positions (same wells in different plates) have some correlation, because well position within the plate is one of the strongest technical artifacts in cell-based experiments (in Fig. 2B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-fig-0002], black arrows indicate well position clusters). Normalization performed in relation to the negative control is the most reliable way to ensure that you can compare your samples even if they come from different plates acquired on different days. Yet we can see some correlations between DMSO samples that are related to DMSO sample position within the plates, highlighting the importance of having the controls scattered to avoid plate position effects. For more information about normalization, see Critical Parameters.\n16. Create a hierarchical clustering by selecting Tools > Hierarchical Clustering. In Metric, select “Matrix values (from a pre-computed similarity matrix)”. Change Cluster to Rows and Columns and click OK. This will group the samples depending on how similar their profiles are (using the correlation metric you have chosen). You can identify different groups and try to make sense of the groups.\nIn this step, observe that the samples do not primarily cluster based on their location on particular plates. Instead, plates are usually spread evenly inside the grouped samples, meaning there is no strong plate effect. Normalization is important to achieve that (see Critical Parameters for more information).",
    "17. Zoom out (using the – key) to see a broader view of the clustering. Scroll through and find large squares of red color in the matrix to observe which MOAs are clustering.\nThe displayed color labels of the columns are useful to find patterns in this broader view. Two groups (proteasome inhibitor and NFkb pathway inhibitor|proteasome inhibitor) are clustered together, meaning these two MOAs have similar morphological profiles. Look for strongly clustered phenotypes (such as mTOR inhibitor|PI3k inhibitor) and note how a few DMSO samples are still clustering with the strong phenotype. This should not be interpreted to mean the mTOR inhibitor phenotype is not strong or that they are close to DMSO; this is just an effect caused by normalization of the data to the negative control (DMSO). For more details, see Critical parameters.\n18. Return to the tab containing the feature value (rather than similarity matrices) and go to Tools > Marker Selection. Choose T-test as the metric, MOA as the field, class A as DMSO, and class B as the tubulin polymerization inhibitor. Leave the default values for Number of Markers and Permutations. This step reveals which features are driving the differences between these two groups (Fig. 3[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-fig-0003]).\nThe Number of Markers will depend on the number of features you have and want to use for this analysis. Permutations will depend on the number of samples in each class. For more information about Marker Selection, see Understanding Results and Gould, Getz, Monti, Reich, & Mesirov (2006[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0012]).\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/e63f54be-5659-471a-a382-5936acf1d9ca/cpz1713-fig-0003-m.jpg</p>\nFigure 3",
    "Features that drive differences between groups. A T-test was performed on DMSO versus tubulin polymerization inhibitor classes using the Marker Selection tool in Morpheus (step 20). Features that differentiate between DMSO and a tubulin polymerization inhibitor are highlighted using a red box. Highlighted in blue are the columns of the two groups being compared (DMSO and tubulin polymerization inhibitor).\n19. Sort the p value column by right-clicking on it. Explore the names of the features that determine the difference between DMSO and tubulin polymerization inhibitors. If you have a large number of features with a p value of 0.00, these will continue to be sorted alphabetically and not by strength; in this case, you can sort to find the highest and lowest T-test values, which should represent the strongest features.\nThe features that differentiate between DMSO and tubulin polymerization inhibitors belong to all three cell compartments: Cells, Nuclei, and Cytoplasm (where the cytoplasm is defined as the region identified as cell and excluding the region identified as nucleus). Texture and granularity (both measures of whether the stain is smooth or not) are frequent features altered by this perturbation. Tubulin is not stained in this assay, but since tubulin interacts with actin, it seems reasonable that the profile would be altered in phalloidin (F-actin) staining. Another frequent feature group is Nuclei_StdIntensityEdge, the standard deviation in intensity at the edge in several channels; this likely indicates differences in the variation in staining of various organelles just outside the nuclei.\n20. Go back to the similarity matrix and go to File > Save Dataset. Write a name for your File, click OK to save as GCT version 1.3, and save the table, allowing it to be opened again in Morpheus when needed.",
    "With large datasets, it often becomes challenging to retrieve images of sites or single cells for visualization to perform quality control, validate a pipeline, and, most importantly, interpret any morphological changes detected in the profiles explored during the data analysis and exploration (visualized with heatmaps, UMAPs, etc.). Along with visualizing sample and feature correlations as in Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-prot-0001], it is also important to think biologically about organelle distribution, morphological characteristics such as cell and nucleus shape, and intensities of each stain. Connecting the numbers (Pearson coefficients, T-tests, morphological feature values in profiles, etc.) with how the cells look in the images can help the user decipher a complex profile.\nIn this protocol, we describe how to use a script we created to retrieve random or representative images from the dataset and plot them together, allowing the user to choose which samples to observe and how to group and display them. While random images are often helpful, especially in cases of high heterogeneity, it can also be helpful to computationally determine which cells’ phenotypes are the most representative in a sample and compare them to control cells. This is not a trivial step, but can sometimes provide critical insight into morphological changes. In this protocol, we use Jupyter Notebook to derive representative cells by performing a clustering analysis on the morphological space of the population of single cells and sampling from the subpopulation closest to the center of the sample(s) of interest. This notebook can also be used to compute similarity matrices as in Morpheus; however, for large-scale experiments, we recommend examining the experiment using the per-well aggregated information as in Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-prot-0001]. Once a few treatments of interest are identified, single cells can be visualized using this protocol.",
    "From the Jupyter Notebook, the user will obtain representative or random image sites and single cells, enabling comparison of the images with the correlation coefficient values obtained in the similarity matrix. By establishing the relationship between the images and heatmaps, the user can start hypothesizing about biological processes and morphological profiles that are significant, which could lead to more specific biological questions and assays. As in Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-prot-0001], we provide some hints and interpretations for each step; for more detailed discussions of biological interpretations, see Understanding Results.\nMaterials\nLaptop or desktop computer with at least 2 GB RAM and a suitable web browser such as Google Chrome\nInternet access\nGmail account if using Google Colab\nThis protocol assumes the use of a web browser to run Google Colab. To run this protocol, open our Google Colab notebook (https://github.com/ciminilab/2023_Garcia-Fossa_Cruz_CurrentProtocols/blob/main/basic_protocol_2/notebook/Basic_Protocol_2.ipynb[href=https://github.com/ciminilab/2023_Garcia-Fossa_Cruz_CurrentProtocols/blob/main/basic_protocol_2/notebook/Basic_Protocol_2.ipynb]) and create a copy on your own Google Drive. To adapt this protocol to your own data, either download the Jupyter Notebook to your local computer and install the requirements based on the requirements.txt file or use Google Colab and mount your Google Drive (https://colab.research.google.com/notebooks/io.ipynb[href=https://colab.research.google.com/notebooks/io.ipynb]) to enable access to data you have stored in your Google Drive. In either case, you must adapt the pathnames and filenames within Section 2 of the Notebook to point to your dataset.",
    "Our dataset table is in a CSV format and contains the extracted features for single cells in a Cell Painting assay. In this assay, 1571 compounds were tested across six doses in A549 cells (Way, Chandrasekaran, et al., 2022[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0025]). Here, we use the same dataset from Basic Protocol 1[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-prot-0001], but we require information about single cells, and each row of the table must have cell features and x-y locations within the image to enable single-cell image retrieval. We also provide all the images of where these single cells are located. For this purpose, we selected only a subset of samples within the dataset to minimize the memory requirements needed for users to explore the data. We performed normalization and feature selection with this dataset using pycytominer. The Jupyter Notebooks required to create this dataset from publicly available datasets (1_Samples_retrieval.ipynb and 2_Generate_Profiles.ipynb) are available on our GitHub under the basic_protocol_2/notebook folder. We also provide an alternate code in the sample retrieval notebook to allow the loading of entire plates when experiment size and memory permit.\nThe Jupyter Notebook functions were written using Python 3.9 (Van Rossum & Drake, 2009[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0023]). Data processing was performed using pycytominer tools for normalization, feature selection, and data annotation. Check pycytominer documentation (https://pycytominer.readthedocs.io/en/latest/[href=https://pycytominer.readthedocs.io/en/latest/]) for details on how to change parameters and inputs depending on your dataset.\nThe GitHub repository contains the following files relevant to Basic Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-prot-0002]:\n               \nutil folder with .py files containing functions written to be used on this notebook. These functions are installed onto the notebook using pip install and then imported from utils.correlations import *.\nbasic_protocol_2/Images folder, which contains the subset of images downloaded from https://github.com/broadinstitute/cellpainting-gallery[href=https://github.com/broadinstitute/cellpainting-gallery]. We provide PNG images that were compressed from the original TIFF images; PNG is a lossless format that requires less storage space.",
    "basic_protocol_2/data folder, which contains the BasicProtocols2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-prot-0002]_Example.zip with a CSV file. To use this notebook with your data, you could extract the features using CellProfiler and export the information to a spreadsheet that can be read in the Jupyter Notebook. Alternatively, if using a database file, you could transform it into a CSV file using our available Samples_retrieval.ipynb Jupyter Notebook. The notebook will perform annotation, normalization, and feature selection if you have not already run those steps. These steps can be bypassed if they have already been done (e.g., by notebook 2_Generate_Profiles.ipynb).\n1. Open the Google Colab notebook Basic Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-prot-0002]_Visualize cells and images.ipynb available in the link at https://github.com/ciminilab/2023_Garcia-Fossa_Cruz_CurrentProtocols/blob/main/basic_protocol_2/notebook/Basic_Protocol_2.ipynb[href=https://github.com/ciminilab/2023_Garcia-Fossa_Cruz_CurrentProtocols/blob/main/basic_protocol_2/notebook/Basic_Protocol_2.ipynb]. Be sure to access the notebook from our GitHub repository, allowing you to check for any recent updates.\n2. Click the Copy to Drive button and the notebook will be available on your Google Drive in the Colab Notebooks folder.\nThis step allows you to have your own copy of the notebook and, if your wish, perform any modifications to run the notebook using your own data.\n3. Run the first three cells in the notebook Section 1 - Import Libraries by clicking on the start button at the top left (or hit Ctrl + Enter). The first line will clone the GitHub repository and install the functions; the second line will install the required libraries to run this notebook (this process takes ∼5 min) and import the libraries to allow their use inside the notebook. Run the lines of code in the order that they appear in the notebook.",
    "The Python packages required to run this notebook are also available on GitHub under the requirements.txt file. This file can be used to install packages via pip or to generate an environment using Anaconda or miniconda to run this Jupyter Notebook locally.\n4. Run only the first cell inside Section 2 - Define Inputs. This will define the inputs required to run the cells in the notebook. The script requires the filename and pathname to access the CSV table and read it as a DataFrame. It also needs the pathname for the images directory.\nThe pathnames are all based on the ones available in the GitHub repository for this project. If you clone the repository in the first step, there is no need to change these inputs. To run this notebook with new data, mount the notebook inside Google Drive and provide the inputs for the variables (running the second code cell inside Section 2 instead of the first cell).\n5. Run the cells inside Section 3a, which will import the dataset and perform annotation, normalization, and feature selection. The table contains all the features measured for every single cell, and also metadata information about compound MOAs, compound names, and concentrations tested. For more information about feature selection, see Critical Parameters.",
    "If your dataset has already been annotated, normalized, and feature selected, skip Section 3A and proceed directly to Section 3B to load it with no adjustments. To run Section 3A with your own data, you will need to have already annotated your data with Metadata (e.g., in CellProfiler's Metadata module) or provide a table here that provides the ability to map the measurement data to treatment metadata. You can run the normalization on the whole dataset or run it relative to the negative control. For more detail, see Critical Parameters.\n6. Run the first three cells in Section 4 (through cell 4.1.1) and choose Metadata_Compound_Concentration for this demonstration. These options were generated based on the names of columns with the “Metadata_” prefix. This choice will impact the information visualized on the plots for the next steps. If the choice is Metadata_Compound_Concentration, you will see values such as DMSO 0.0, etc. When using new data, add the “Metadata_” prefix to any such columns before loading it into the notebook, as it will appear under this dropdown and be used for aggregation (Fig. 4A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-fig-0004]).\nWe use dropdown interaction to allow users different choices based on the DataFrame, because users may be interested in looking at the data based on MOAs or compound names. When using new data, be aware that the tables must have columns containing metadata information with the “Metadata_” prefix.\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/4f8f4382-75ed-4d4e-a97a-0331d68dde65/cpz1713-fig-0004-m.jpg</p>\nFigure 4\nUser interactions with the Jupyter Notebook. (A) Demonstration of the dropdown options and choice box to choose only a subset of the compounds (see Basic Protocol 2[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-prot-0002], step 6). To use new data, add the “Metadata_” prefix to the label columns. (B) More examples of interaction through dropdowns and sliders to choose the number of cells to plot.",
    "7. Run the cell in Section 4.2 to choose all the compounds available on the dataset to visualize. This step will select all the compounds in the dataset.\nTo select just a few compounds of interest to be visualized, run Section 4.3. This piece of code will create an interactive checkbox with the compound names for you to choose only a few options (Fig. 4A[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-fig-0004]).\n8. Run the cells in Section 5 to generate and graph the correlation between the compounds. Choose a column to be the labels for the correlation matrix using the dropdown, then use pycytominer to return a per-well aggregated DataFrame. A correlation matrix will be generated. There is an option to export the matrix as an image (type the name and press Enter/return).\nIn Section 5, the function that applies pycytominer operations aggregates the data and then performs a Pearson correlation analysis on the dataset. To visualize the matrix with different labels, choose a different column and rerun the notebook from that cell onward; the dataset will then be re-aggregated and a new correlation matrix will be calculated based on the new column.\n9. Run the three cells in Section 5.1 to insert the correlation values calculated in the previous step inside the initial DataFrame as a new column. This function will get the chosen compound and find the correlation values for every other compound related to the first. Choose “DMSO 0.0” for comparison, because the aim for this dataset is to evaluate which compounds have morphological profiles more similar to the control.\nChoose whichever compound is desired as a point of reference to be added to the DataFrame. This choice will depend on the biological question being asked.",
    "10. Run all of the cells inside Section 5.2 and choose “DMSO 0.0”. This choice reflects the biological question of which compounds are closely correlated to the negative control (DMSO). However, this is a dynamic Jupyter Notebook where the user could be interested in other compounds or MOAs.\n11. In Section 6 - Visualize Cells, run the first cell to choose whether to visualize randomly selected or representative single cells. Choose the random method to select random samples for each treatment/group you have; choose the representative method to select the most representative cell within each subgroup. Many cells in this section rely on correlation to the reference compound selected in Section 5.1; if you want to change reference compounds, rerun those cells before returning to Section 6 and running all cells here.\nThe representative method uses the KMeans algorithm with the scikit-learn package (Pedregosa et al., 2011[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0016]) to cluster data and find the most representative cell(s) (i.e., closest to the mean of the subgroup) within each subgroup. The random method will return a random sample of one cell for each subgroup (Reback et al., 2020[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0017]). The representative method allows you to evaluate average change, while the random method is often helpful for quality control to check for out-of-focus or unusual cells.\n12. Run the next cell and select how many cells you would like to display from each subgroup and whether or not you would like the images shown in order of subgroup correlation to the reference compound.",
    "Answering “Yes” to “Would you like to use the correlations to order your image plot?” will order the dataset based on the correlation values to the reference compound selected in step 9, starting at 1.0 and descending; answering “No” will keep the DataFrame in the original order. The second question is about how many cells (c) to plot for each group. The generated image will have (c × the number of subgroups) rows. Looking at one cell per subgroup creates a compact visualization, especially for many subgroups; looking at several per subgroup can increase confidence in the overall visual appearance of each subgroup, especially when displaying random cells.\n13. Choose whether (a) each image should be rescaled to the minimum and maximum before being displayed or (b) the raw intensity values should be plotted. Raw intensities are typically more comparable across conditions (see below for caveats), but may be harder to see when the signal is dim and thus may require external rescaling after saving.\nWhile raw images are generally more comparable than individually rescaled images, caution should be taken especially in comparing images from treatments imaged on different plates or different plate batches. Each plate is independently stained, imaged, and feature-normalized, and plates from different batches may have other differences such as reagent lots used. Thus, a treatment that induces “2× negative-control-mean-intensity” in channel X from plate 1 may be overall dimmer in raw pixel intensity values than a different treatment that induces “0.5× negative-control-mean-intensity” in channel X from plate 2 if the plate mean intensities in channel X are quite different. Any conclusions drawn based on looking at images should be subsequently checked against normalized feature data.",
    "14. Insert the pixel size value. This is necessary to add a scale bar in your images. Type the value “0.29898” in this example to add the pixel size for this example dataset in μm/pixel. Each microscope and lens will have its own configuration.\nSome microscopes (such as the Opera Phenix microscope used in this experiment; Way, Natoli, et al., 2022[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0027]) record the effective pixel size in a file such as an XML (eXtensible Markup Language). Other microscopes record this information in the file metadata; one easy way to check this is by opening the image in a tool such as Fiji (Schindelin et al., 2012[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0020]) and look at the Properties menu. Embedded metadata is sometimes missing or unreliable; when in doubt, consult the local expert on the microscope in question and/or calculate the effective pixel size based on the camera specifications and magnifications used.\n15. Plot the selected single cells in random order by running the first cell of Section 6.1. This step allows a first view of the cells without the labels, so you can explore the images before knowing to which group the cells belong. Once you have explored the data, run the rest of the cells in Section 6.1 to append labels to see if your hypotheses were correct, to create an unshuffled version of the image, and to save the image to disk.\nLooking at cells without labels allows users to formulate new hypotheses without bias about how they believe each treatment should look. Parameters to examine might include the organelle distribution within the cells; how mitochondria, endoplasmic reticulum, or Golgi apparatus are organized; changes in overall intensity of individual stains; or overall cell structure changes. This can be quite valuable for unbiased hypothesis generation!",
    "16. Run Section 6.2 to display the full images from which the single-cell crops have been pulled (Fig. 5B[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-fig-0005]). Looking at the entire field of view (FOV) may provide insights into additional biological aspects.\nLooking at whole images allows a more holistic view of the overall cell shape and size distributions present in the images such as: How were the cells affected by the treatment? Do they appear larger or smaller compared to the negative control? Does their shape change? Are they more elongated or rounder? It also allows examination of cell density, e.g.: How are the cells distributed within the FOV? Can you see more cells in the FOV between perturbations and the control, meaning the perturbation might induce some proliferative signaling pathway? Are there fewer cells in the FOV, meaning the perturbation might reduce cell viability?\n<p>imgsrc:https://currentprotocols.onlinelibrary.wiley.com/cms/asset/e61c08b1-32ac-4cd1-9a1b-375ffc61008e/cpz1713-fig-0005-m.jpg</p>\nFigure 5\nSteps to plot single cells and representative images in order of correlation values. Both images were plotted with rescaled intensity using the representative method, one cell per subgroup, and ordered top to bottom by correlation values. (A) A single representative cell for each group in this dataset. Scale bar = 10 μm. (B) Field of view where each representative cell is located. Scale bar = 150 μm. On the y axis are compound names and concentrations in μM; on the x axis are stained structures, showing the different fluorescence channels available in this experiment: DNA (Hoechst 33342, ex./em. 405/450 nm), ER (concanavalin A, ex./em. 488/525 nm), RNA (nucleoli and cytoplasmic RNA stained with SYTO 14, ex./em. 488/600 nm), AGP (actin stained with phalloidin, Golgi and plasma membrane stained with wheat germ agglutinin, both acquired with ex./em. 561/600 nm), and Mito (MitoTracker Deep Red, ex./em. 640/750 nm). For complete details about the Cell Painting procedure, see Bray et al. (2016[href=https://currentprotocols.onlinelibrary.wiley.com/doi/10.1002/cpz1.713#cpz1713-bib-0003])."
  ],
  "subjectAreas": [
    "Cytometry"
  ],
  "bigAreas": [
    "Bioengineering & Technology"
  ]
}