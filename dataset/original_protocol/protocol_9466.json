{
  "id": 9877,
  "origin_website": "Jove",
  "title": "High-resolution Single Particle Analysis from Electron Cryo-microscopy Images Using SPHIRE",
  "procedures": [
    "NOTE: To follow this protocol, it is necessary to properly install SPHIRE on a system with an MPI installation (currently, a Linux cluster). Download SPHIRE and the TcdA1 dataset from http://www.sphire.mpg.de and follow the installation instructions: http://sphire.mpg.de/wiki/doku.php?id=howto:download. This procedure also installs EMAN2. SPHIRE currently uses EMAN2’s e2boxer for particle selection and e2display for displaying image files. For dose-weighted motion correction of the raw micrograph movies, SPHIRE uses unblur 14. Download the program and follow the installation instructions (http://grigoriefflab.janelia.org/unblur, Grigorieff lab). For interactive visualization of the resulting structures, the protocol will use the molecular graphics program Chimera 15 (https://www.cgl.ucsf.edu/chimera/download.html). A nice tutorial to get familiar with the features used throughout this protocol can be found here: https://www.cgl.ucsf.edu/chimera/data/tutorials/eman07/chimera-eman-2007.html. Instructions on how to submit a parallel job to a cluster from the SPHIRE GUI can be found here: http://sphire.mpg.de/wiki/doku.php?id=howto:submissions. The overall organization of the SPHIRE GUI and the major steps of the workflow performed throughout this protocol are illustrated in Figure 1.\n1. PROJECT: Set Constant Parameter Values for This Project\nStart the SPHIRE GUI application by typing \"sphire &\" and the ENTER key at a terminal window.\nAdjust the project-wide parameters (e.g., pixel size, particle radius and symmetry) in the respective input fields of the project settings page and then register these values for all subsequent steps of the workflow.\nClick on the \"PROJECT\" icon on the bottom right of the left panel to open the project settings page.",
    "Measure the longest axis of a particle using the e2display.py image interactive display tool, then enter the half of the particle size to \"Protein particle radius\". If the measurement is in Å, keep in mind to convert the unit to pixels using the pixel size (e.g., if a particle is 200 Å long and the pixel size is 1.2 Å/pixel, then the longest axis of the particle is 200/1.2 = ~166 pixels and the radius 166/2 = 83 pixels).\nSet \"Particle box size\" to at least 1.5 times of the particle size. Avoid window sizes containing large prime number. Also, remember that the 3D refinement algorithm currently requires an even numbered box size.\n\t\tNOTE: The window should include a margin to account for initial centering errors resulting from picking (the need to shift particles within the window) and for the sufficient background region outside of the particle boundary for a proper CTF correction (especially important for large defocus values16).\nSet \"CTF window size\" to that of \"Particle box size\". For projects with low contrast data, use a larger window to obtain smoother estimates of power spectra.\nSet \"Point-group symmetry\" of the complex (e.g., \"C5\"). If the symmetry of the target structure is not known, leave it at \"C1\" (asymmetric). However, if a specific high-order symmetry is identified later on during the processing, change this symmetry setting accordingly and repeat the steps after 2D alignment with ISAC.\nSet \"Protein molecular mass\" in kDa (approximate value will suffice). Press the \"Register settings\" button.\n2. MOVIE: Align the Frames of Each Movie Micrograph to Correct the Overall Motion of the Sample",
    "For all movie micrographs, compute the x/y-shifts for all frames and then create their dose-unweighted and dose-weighted motion-corrected average (see Discussion). Note that the former is necessary only for the CTF estimation because the estimation does not perform well with the dose-weighted averages while the latter is used for all the other steps of the structure determination.\nClick on the \"MOVIE\" icon and then the \"Micrograph Movie Alignment\" button. Set \"Unblur executable path\" by selecting the executable file. Set \"Input micrograph path pattern \" by selecting a raw unaligned movie micrograph and replacing the variable part of the file names with the wildcard \"*\" (e.g., TcdA1_*.mrc). Specify the path for \"Output directory\".\nSet \"Summovie executable path\" by selecting the executable file.\nSet \"Number of movie frames\" to the number of frames in each movie micrograph. Set the \"Microscope voltage\" and \"Per frame exposure\" to the values used during data collection. (For example, if the overall dose is 60 e-/Å2 with 20 frames recorded without pre-exposure, the exposure for every frame is 60/20=3 e-/A2.) Press the \"Run Command\" button to align the frames of each movie micrograph.\n\t\tNOTE: This will automatically create two output directories containing dose-unweighted and dose-weighted motion-corrected average micrographs, respectively.\n3. CTER: Estimate the Defocus and Astigmatism Parameters of the CTF\nEstimate the CTF parameters (defocus and astigmatism; the others are set by the user) for each dose-unweighted average micrograph.\nClick on the \"CTER\" icon and then the \"CTF Estimation\" button. To set \"Input micrograph path pattern\", select a dose-unweighted motion-corrected micrograph, then replace the variable part of the file names with the wildcard \"*\". Also, specify the path for \"Output directory\".",
    "Set \"Amplitude contrast\" to the value routinely used for the kind of data (ice thickness is a major factor) and microscope voltage in the laboratory (e.g., 10%). Typical values are in the 7 - 14% range17.\nSet \"Microscope spherical aberration (Cs)\" and \"Microscope voltage\" used during data collection.\nSet \"Lowest frequency\" and \"Highest frequency\" of search range for the CTF model fitting to 0.0285 and 0.285 Å-1 (40 - 4 Å), respectively. Press the \"Run command\" button to estimate the CTF parameters.\n\t\tNOTE: The CTF parameters will be automatically stored in the partres.txt file in the specified output directory. The CTF estimation of the 112 micrographs was calculated on 96 cores and finished after ~3 min on the Linux cluster used to obtain the representative results.\n4. WINDOW: Extract Particles from the Dose-weighted Average Micrographs\nPick particles manually or automatically from micrographs with e2boxer6 and create coordinate files, each containing a list of particle xy-coordinates within the associated micrograph.\nClick on the \"WINDOW\" icon and then the \"Particle Picking\" button. Press the \"Run command\" button to start e2boxer 6and pick the particles of each micrograph manually or automatically18 (see Discussion). Store the final particle coordinates for each micrograph in the EMAN1 file format (.box). Alternatively, import the coordinate files from other programs after converting them to the EMAN1 format.\nCreate particle stacks by extracting particle images from the dose-weighted micrographs (in SPHIRE, particle stack is often simply called \"stack\").\nPress the \"Particle Extraction\" button. Specify \"Input micrograph path pattern\" by selecting a dose-weighted motion-corrected micrograph and then replacing the variable part of the file names with the wildcard \"*\" (e.g., TcdA1_*.mrc). Similarly, set \"Input coordinates path pattern\" by selecting a coordinates file (e.g., TcdA1_*.box). Specify the path for \"Output directory\".",
    "Set \"CTF parameters source\" by selecting the CTF parameter file (partres.txt produced in step 3.1). Press the \"Run command\" button.\nCombine the extracted particle image stacks into a single one.\nClick on the \"Particle Stack\" button. Specify the path to \"Output virtual image stack\" using a BDB file path format (e.g., \"bdb:Particles/stack\", where \"Particles\" points to the directory containing a BDB data base directory whose name is always EMAN2DB and \"stack\" refers to a particular image stack within this database). Specify \"Input BDB image stack pattern\" by selecting a directory starting with \"mpi_proc\" and then replacing the variable part of the directory names with the wildcard \"*\" (e.g., Particles/mpi_proc_000 to Particles/mpi_proc_* ). Press the \"Run command\" button.\n5. ISAC: Classification of Particle Images in 2D\nCalculate 2D class averages by aligning particles and clustering them according to their 2D appearance.\n\tNOTE: The resulting 2D averages have an improved signal-to-noise ratio (SNR) compared to the individual particle images and are thus used to visually assess the quality and heterogeneity of the dataset, as well as to sort out undesirable images from the stack (e.g., ice crystals, carbon-edges, aggregates, fragments, and etc.)19. Moreover, they will be subsequently used to determine an initial 3D model.\n\t\nClick on the \"ISAC\" icon and then the \"ISAC - 2D Clustering\" button.Set \"Input image stack\" by selecting the stack file containing the extracted particles. Specify the path for \"Output directory\".",
    "Use 200 - 1000 for \"Images per class\". Choose the appropriate number considering the expected number of 2D classes (the total number of particles divided by the number of images per class). Adjust this parameter depending on the SNR and the size of the dataset. Increase the number of members per class in case the dataset is excessively noisy. Decrease the number when a low number of particles is available.\n\t\tNOTE: Due to memory limitations, for rather large datasets (>100,000 particles), split the full dataset into subsets, perform ISAC for each subset independently, and combine the results at the end. Detailed instructions for this processing scenario are given in http://www.sphire.mpg.de/wiki/doku.php.\nCheck the \"Phase-flip\" checkbox. Keep the default values for \"Target particle radius\" and \"Target particle image size\" in order to speed up the process by automatically shrinking all particle images with these settings. Press the \"Run command\" button to calculate the 2D class averages.\n\t\tNOTE: This step is computationally demanding and the running time increases significantly with the number of particles and classes as well as the target radius and image size. On a cluster with 96 processes, the 2D classification of ~10,000 particles finished after about 90 min.\nDisplay and visually inspect the resulting ISAC 2D averages to make sure that their quality is satisfactory (see Discussion).\nPress the \"Display Data\" button under \"UTILITIES\". Set \"Input files\" by selecting the file containing the ISAC 2D averages (class_averages.hdf produced in step 5.1). Press the \"Run command\" button to display the final reproducible and validated class averages delivered by ISAC.\nCreate a new stack including only the particle members of the validated class averages.",
    "Press the \"Create Stack Subset\" button. Set \"Input image stack\" by selecting the same stack file as in the step 5.1.1. Set \"ISAC averages\" by selecting the ISAC 2D averages (class_averages.hdf produced in step 5.1). Specify the path for \"Output directory\". Press the \"Run command\" button.\n6. VIPER: Calculate an Initial 3D Model\nSelect a small set of the class averages (≥100 images) by deleting all bad class averages and identical views of the particle (see Discussion) and use them to calculate a reproducible initial model using VIPER. Remember that the selection should contain at least 60-80 high quality averages with ~200-500 members each.\nClick on the \"VIPER\" icon and then the \"Display Data\" button. Set \"Input files\" by selecting the ISAC 2D averages (class_averages.hdf produced in step 5.1). Press the \"Run command\" button.\nPress the mouse middle button somewhere on the graphics window of the e2display, and activate the \"DEL \" button in the pop-up window. Delete all bad class averages and identical views of the particle (see Discussion). Press the \"Save\" button to store the remaining 2D class averages to a new file.\nFrom the selected ISAC averages, generate an initial reference for the subsequent 3D refinement.\nClick on the \"Initial 3D Model - RVIPER\" button. Set \"Input images stack\" by selecting the screened class averages (produced in step 6.1). Specify the path for \"Output directory\".\nMake sure to use the same value for \"Target particle radius\" as ISAC step 5.1.3. Press the \"Run command\" button to generate a reproducible ab initio 3D model.\n\t\tNOTE: This step is computationally demanding and the running time increases significantly with number of averages and size of the particles. On a cluster with 96 processes, this job (~100 class averages) finished after ~15 min.",
    "Check if the resulting 3D model is reasonable by taking into account the class averages and in addition its structural integrity (i.e. no disconnected parts and/or directional artifacts). To display the map, use the program Chimera15. At this point, perform a first comparison with a crystal structure of a homologous protein or a domain of the protein of interest if it exists (an example is shown in the section Representative Results).\nFor the subsequent 3D refinement, generate an initial 3D reference and a 3D mask from an ab initio 3D model by removing its surrounding noise and rescaling it to match the original pixel size.\nClick on the \"Create 3D Reference\" button. Set \"Input volume\" by selecting the ab initio 3D model (average_volume.hdf produced in step 6.2). Specify the path for \"Output directory\".\nSet \"Resample ratio source\" by selecting the ISAC shrink ratio file (README_shrink_ratio.txt produced in step 5.1). Press the \"Run command\" button.\n7. MERIDIEN: Refine the Initial 3D Volume\nRefine the 3D volume starting from the initial 3D model.\nClick on the \"MERIDIEN\" icon, then the \"3D Refinement\" button. Set \"Input image stack\" and \"Initial 3D reference\" by selecting the particle stack and the ab initio 3D model (produced in step 5.3 & 6.4, respectively). Specify the path for \"Output directory\".\nSet \"3D mask\" by selecting the 3D mask file (produced in step 6.4). Always use a 3D mask but, especially at an early stage of analysis, use a spherical mask or a soft-edged mask loosely fitted to the reference to avoid introducing bias of incorrect masking.",
    "Check the \"Apply hard 2D mask\" checkbox. Set \"Starting resolution\" to a cutoff frequency value between 20 - 25 Å. Keep in mind that a low-pass filter with this cutoff frequency will be applied to the initial 3D structure to reduce initial model bias.\nCheck the specifications of cluster used for this process and then set \"Memory per node\" to the available memory in gigabytes. Press the \"Run command\" button to refine the 3D volume starting from the initial 3D model in a fully automated manner.\n\t\tNOTE: This procedure will divide the dataset into two halves, refine the two models independently and output two raw volumes, each from only half of the particles. It is computationally demanding and the running time will increase significantly with the number of particles. On this cluster, the meridian refinement finished after ~2.5 h running on 192 processes (~8,000 particles, 352 box size).\nCreate a soft-edged 3D mask from the refined volume for the subsequent sharpening step.\nClick on the \"Adaptive 3D Mask\" button. Set \"Input volume\" by selecting one of the unfiltered half-volumes (produced in step 7.1). Specify the path for \"Output mask\".\nSet a value of \"Binarization threshold\". Use Chimera to make sure that, at this particular threshold, the noise is clearly outside the volume of interest in the solvent region of the unfiltered half maps and all densities of the protein are still connected to each other. Press the \"Run command\" button to create the soft-edge 3D mask.\n\t\tNOTE: The main body of the resulting mask (consisting from voxels whose values are >0.5) should tightly fit the particle structure but still enclose all densities of interest. The soft-edge fall-off should be at least 8-10 pixel wide.",
    "Merge the two unfiltered half-volumes obtained by the 3D refinement. Then, sharpen the merged volume by adjusting the power spectrum based on the modulation transfer function (MTF) of the detector, the estimated B-factor, and the FSC (Fourier Shell Correlation) estimate of the resolution.\nSelect the \"Sharpening\" button. Set \"First unfiltered half-volume\" and \"Second unfiltered half-volume\" by selecting the corresponding files (vol_0_unfil.hdf and vol_1_unfil.hdf produced in step 7.1). Always use \"B-factor enhancement\". Typically, keep the default value in order to estimate the B-factor value from the input dataset using the range between the final resolution frequency and 10 Å. Alternatively, specify an ad-hoc value (e.g., -100).\nKeep the default value for \"Low-pass filter frequency\" to apply an FSC-based filter.\nSet \"User-provided mask\" by selecting the 3D mask (produced in step 7.2). Remember that the reported resolution will be determined using FSC with this mask. Press the \"Run command\" button to sharpen the refined 3D volume.\nGenerate the 3D angular distribution map from the projection directions of all particles estimated by the 3D refinement step above.\nClick on the \"Angular Distribution\" button. Set \"Alignment parameter file\" by selecting the file (final_params.txt produced in step 7.1), and press the \"Run command\" button.\nVisually inspect the sharpened 3D model using Chimera. Make sure that the structure appears reasonable considering the achieved resolution (see Discussion).\nVisually inspect the angular distribution using Chimera. Verify that the distribution covers approximately evenly the entire 3D angular space. Keep in mind that, for symmetric structures, the distribution is restricted within the unique asymmetric triangle.\n8. SORT3D: Sort 3D Heterogeneity by Focusing on the Highly Variable Regions\nCalculate the 3D variability map from the particle stack used in the 3D refinement.",
    "Click on \"SORT3D\" icon and then \"3D Variability Estimation\" button. Set \"Input image stack\" by selecting the same screened particle stack given to the 3D refinement step 7.1.1. Specify the path for \"Output directory\".\nKeep the default value for \"Number of projections\".\n\t\tNOTE: The images from the angular neighborhood will be used to estimate the 2D variance at each 3D projection angle. The larger the number, the less noisy the estimate but the lower the resolution and rotational artifacts are more pronounced.\nCheck the \"Use CTF\" checkbox. Press the \"Run command\" button.\nUse the 3D variability map to create a focus mask for the 3D clustering step below.\nSelect the \"Binary 3D Mask\" button. Set \"Input volume\" by selecting the 3D variability map (produced in step 8.1). Specify the file path for \"Output mask\".\nSet \"Binarization threshold\" by using the output of the \"Level\" field in the \"Volume Viewer\" of Chimera. Press the \"Run command\" button.\nSort particle images into homogeneous structural groups by focusing on structurally highly variable regions.\nPress the \"3D Clustering - RSORT3D\" button. Set \"Input 3D refinement directory\" by selecting the output directory of the 3D refinement (produced in step 7.1). Specify the path for \"Output directory\".\nSet \"3D mask\" by selecting the soft-edged 3D mask (produced in step 7.2). Set \"Focus 3D mask\" by selecting the binarized 3D variability map (produced in step 8.2).",
    "For large datasets, use at least 5,000-10,000 for \"Images per group\". Keep in mind that the program always keeps the number of images per group lower than this setting. Adjust the value by considering the expected number of 3D groups (the total number of particles divided by the \"Images per group\" value), the dataset, the SNR, and the degree of heterogeneity. Start with ~5-10 initial 3D groups, if a sufficient number of particles is available, unless a higher number of distinct structural states in the dataset is expected.\nUse at least 3,000-5,000 particles for \"Smallest group size\". Note that the program will disregard groups comprising a lower number of images than the setting of \"Smallest group size\". Press the \"Run command\" button to perform the 3D clustering.\n\t\tNOTE: RSORT3D is subdivided into two steps. The first \"sort3d\" step sorts out 3D heterogeneity. Then, it reconstructs the volumes of each homogeneous structural group using the 3D alignment parameters determined by the 3D refinement step above. The second \"rsort3d\" step finds out reproducible members of each group by carrying out a two-way comparison of the two independent sorting runs. Then, it reconstructs homogeneous structures using only the reproducibly assigned particles. On a cluster with 96 cores, this job (~8,000 particles, 352 box size) finished after about 3 h.\nAfter the program has finished, use Chimera to select a homogeneous 3D group. Select the structure of the highest apparent resolution, typically associated with the most populous group. Make sure that the selected structure is visually reasonable by taking into account the 2D class averages and biological aspects of the protein of interest (see Discussion). If there are other volumes that have an almost identical structure at similar resolution, consider them as emerging from a single homogeneous 3D group.",
    "Perform a local refinement against the particle members of the most homogeneous 3D group (with the highest resolution).\nClick on the \"Local Subset Refinement\" button. Set \"Subset text file path\" by selecting the text file containing the particle IDs of the selected group (e.g., Cluster0.txt produced in step 8.3). Set \"3D refinement directory\" by selecting the output directory of the previous 3D refinement (produced in step 7.1).\nSet \"Restarting iteration\" to the one where the highest resolution is achieved in the previous 3D refinement. Press the \"Run command\" button to perform a local refinement of the selected population of particles.\nSimilar to step 7.2, create a soft-edged 3D mask from an unfiltered final half-volume reconstructed by the local subset refinement.\nSimilar to step 7.3, merge two unfiltered final half-volumes derived by the local subset refinement and sharpen the merged volume. However, do not filter the sharpened volume this time.\n\tNOTE: Should the heterogeneity analysis in step 8.4 indicate several distinct states at comparable resolution, one may want to refine all different states independently.\n9. LOCALRES: Estimate the Local Resolution of the Final 3D Volume\nEstimate the local resolution of the 3D volume obtained from the homogeneous set of particles.\nClick on the \"LOCALRES\" icon and then \"Local Resolution\" button. Set \"First half-volume\" and \"Second half-volume\" by selecting the unfiltered final half-volumes of the local subset refinement (produced in step 8.5). Set \"3D mask\" by selecting the soft-edged 3D mask produced in step 8.6. Specify the file path for \"Output volume\".\nKeep the default value of 7 pixels for \"FSC window size\". Remember that this setting defines the size of window where the local-real-space correlation is computed; larger window sizes produce smoother resolution maps at the expense of local resolvability.\nKeep the default value 0.5 of \"Resolution cut-off\" for resolution criterion.",
    "NOTE: For each voxel, the program will report the local resolution as the frequency at which the local FSC drops below the selected resolution threshold. A threshold lower than 0.5 is not recommended, because lower correlation values have high statistical uncertainty. Therefore, the corresponding local resolution will vary strongly between voxels.\nFor \"Overall resolution\", set the absolute resolution estimated in the sharpening after the local subset refinement (step 8.7). Press the \"Run command\" button to calculate the local resolution of the volume.\nApply the 3D local filter to the volume sharpened after the local subset refinement by using the 3D local resolution map.\nClick on the \"3D Local Filter\" button. Set \"Input volume\" by selecting the sharpened but unfiltered 3D volume (produced in step 8.7). Similarly, set \"Local resolution file\" and \"3D mask\" (produced in step 9.1 and 8.6, respectively). Remember that the 3D mask defines the region where the local filtering will be applied. Specify the file path for \"Output volume\". Press the \"Run command\" button to apply the 3D local filter.\nUse Chimera to visually inspect the final 3D model and the 3D local resolution map (produced in step 9,2 and 9.1, respectively). Select the \"Surface color\" option to color the 3D volume according to the local resolution. Keep in mind that the distribution of local resolution should be smooth (see Discussion)."
  ],
  "subjectAreas": [
    "Biochemistry"
  ],
  "bigAreas": [
    "Molecular Biology & Genetics"
  ]
}