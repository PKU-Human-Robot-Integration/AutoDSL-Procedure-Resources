{
  "id": 2580,
  "origin_website": "Cell",
  "title": "Multiomics data integration to reveal chromatin remodeling and reorganization induced by gene mutational synergy",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nHerein we describe step-by-step analytical procedures starting from raw data processing all the way through to integrated data analysis. The raw data undergo serial processing steps covering: quality control, read mapping, data filtering, normalization, and statistical calling. Subsequently, the processed data are first subjected to integrated analysis on dynamic chromatin states, to reveal differential clusters of cis-regulatory elements (CREs) that demonstrate similar dynamic chromatin modifications. Afterwards, the specific clusters of CREs with characteristic gain or loss of enhancer signatures are annotated to target genes, using either linear or spatial proximity information. Differential mRNA expression is further analyzed for these genes along with their associated functional network. The relevant biological information of the data used and their functional interpretation are discussed in great detail in (Yun et al., 2021[href=https://www.wicell.org#bib16]).\nData processing\nTiming: 2–3 days\nIn this section, the raw data from different genomic approaches are processed in a stepwise manner and are transformed into a format compatible with the subsequent integrative analysis. In brief, a QC step is applied to check the ChIP-seq and ATAC-seq data quality prior to reads mapping to mouse genome, followed by the removal of duplicated reads. Subsequently, genotype-specific open chromatin states are identified by calling significant peaks on ATAC-seq in each cellular condition. Next, transcriptome data profiled by RNA-seq are processed in a similar fashion but with different tools. In addition, the RNA-seq read counts are extracted for all annotated genes and differential expression of protein-coding genes between single or double mutant cells and wildtype cells is analyzed. Finally, chromatin interaction data stored in raw .FASTQ files of pCHiC are converted into readable promoter-associated DNA interaction files. The data processing steps are described in great detail below.\nProcess raw reads in ATAC-seq and ChIP-seq data for each genotype.",
    "Perform QC and reads mapping by running custom scripts (“get_data.sh”) on the input .FASTQ files.\n> get_data.sh -g [GENOTYPE] -m [OUTPUT_FOLDER] -i [INPUT_FASTQ] -x mm10\nNote: QC analysis is carried out with FastQC package, and raw reads are mapped to Mus musculus (house mouse) genome assembly GRCm38 (mm10) using Bowtie2, with parameters allowing to keep reads for at most 2 alignment and 1 mismatch in the seed (20 bp default).\nFilter the mapped reads by removing duplicate reads with custom scripts (“process_aligned_reads.sh”) as below.\n> process_aligned_reads.sh -g [GENOTYPE] -m [OUTPUT_FOLDER] -x mm10\nNote: This process utilizes Picard tools with the “MarkDuplicates” function for data filtering, and generates sorted .BAM files.\nIdentify significant ATAC-seq peaks by running MACS2 callpeak on filtered .BAM files with a pre-defined p value at 1e-20.\n> macs2 callpeak -t [INPUT_BAM] -g mm -f BAM -n [OUTPUT_FILE_NAME] -p 1e-20 --nomodel --nolambda --bdg\nNote: The parameter --nomodel here is specified for single-read ATAC-seq data (the exemplar data), without modeling the fragment size and by default extends the reads for 200 bp. This may not accurately reflect the actual length of nucleosome-free regions.\nProcess RNA-seq raw data and analyze differential expression of protein-coding genes between mutant and wildtype samples.\nProcess RNA-seq data by running custom scripts (“runRNA_STAR_paired.pl”) on paired .FASTQ files (r_1 and r_2) for each genotype.\nNote: This process covers QC analysis using FastQC, then reads mapping and uniquely mappable reads extraction using STAR package which allows at most 2 mismatches, and subsequently read counts computation for all annotated genes using a python package HTSeq.\n> runRNA_STAR_paired.pl [INPUT_r_1_FASTQ] [INPUT_r_2_FASTQ] [GENOTYPE] mm10 STAR-GENOMES-mm10.gencode.vM7.comprehensive gencode.vM7.comprehensive.annotation.gtf [exons y/n]\nAnalyze pairwise differential gene expression between any mutant condition (Npm1c, Flt3-ITD, or DM) and WT counterpart by running custom scripts (“RNAseq_differential_analysis.R”) on .HTSEQ.COUNTS files generated in step 2a.\n> Rscript RNAseq_differential_analysis.R",
    "Note: Bioconductor package DESeq2 is the core analytical tool utilized in this step. The output files are in .CSV format (e.g., “WT.DM.PC.diffExp.csv”).\nProcess the promoter-associated chromatin interaction data profiled by pCHiC assays in each cellular condition.\nProcess pCHiC raw data (paired reads, r_1 and r_2) using HiCUP pipeline to map and filter the data and eventually output valid HiC fragments (termed di-tags) stored in .BAM files.\n> hicup_digester --genome Mouse_GRCm38 --re1 AˆAGCTT,HindIII [mm10_GENOME.fa]\n> hicup --bowtie2 [BOWTIE2_PATH] --index [mm10_REFERENCE_GENOME_PATH] --digest [mm10_HINDIII_DIGESTION_FILE] --format Sanger --longest 800 --shortest 150 [INPUT_r_1_FASTQ] [INPUT_r_2_FASTQ]\nNote: The format of all input files is described in the HiCUP pipeline documentation (https://www.bioinformatics.babraham.ac.uk/projects/hicup/read_the_docs/html/index.html[href=https://www.bioinformatics.babraham.ac.uk/projects/hicup/read_the_docs/html/index.html]). To execute HiCUP, the input HindIII_digestion_file needs to be generated using hicup_digester (included in the hicup software) using the first code above.\nTransform valid HiC di-tags into statistically significant chromatin interactions associated with all mouse promoters using Bioconductor package CHiCAGO.\nConvert filtered read pairs in .BAM files generated by HiCUP into the CHiCAGO input data format, .CHINPUT.\n> bam2chicago.sh [INPUT_BAM] CHiC.mm10.baitmap Digest.mm10.rmap [OUTPUT_FILE] nodelete\nNote: The availability of the shell script, as well as the description and preparation of input files can be referred to CHiCAGO online instruction (https://bitbucket.org/chicagoTeam/chicago/src/master/chicagoTools/[href=https://bitbucket.org/chicagoTeam/chicago/src/master/chicagoTools/]). The rmap file (.RMAP) and baitmap file (.BAITMAP) are tab-separated files describing the restriction digestion fragments and the coordinates of the baited/captured restriction fragments, respectively, all with numeric IDs. Both files can be generated by a CHiCAGO script (“create_baitmap_rmap.pl”) which is accessible via clicking the link above.\nFurther statistical analysis is performed on .CHINPUT files from genotype replicates to generate a list of significant promoter-associated DNA interactions.\n> Rscript runChicago.R --design-dir [DESIGN_FILES_PATH] [CHINPUT_FILE_1, CHINPUT_FILE_2,…] [OUTPUT_FILE] WT.CHiC.R1.chinput,WT.CHiC.R2.chinput WT.CHiC.R1-2\nNote: Significant interactions are called when CHiCAGO scores are ≥5. The format of CHiCAGO input files is described in the CHiCAGO pipeline documentation (https://bitbucket.org/chicagoTeam/chicago/src/master/chicagoTools/[href=https://bitbucket.org/chicagoTeam/chicago/src/master/chicagoTools/]).",
    "Critical: Data processing by HiCUP and CHiCAGO are heavy computation tasks which favor usage of multiple CPU cores and large memory. The running time can be reduced to a reasonable duration in a computational environment with at least 24 threads and 48 GB RAM.\nData integration (i)—Dynamic chromatin states\nTiming: 4–6 h\nWe first apply a multilayered approach (Ma et al., 2020[href=https://www.wicell.org#bib9]) to integrate the multiomics chromatin analysis at all cis-regulatory elements (CREs) in wildtype and mutant HSPCs. As CREs are usually rendered accessible by chromatin binding factors such as transcription factors (TFs), their presence can be implied by open chromatin sites, which are profiled by ATAC-seq. We therefore identify all open chromatin sites across four cellular conditions by creating a compendium of ATAC-seq consensus peak sets. Afterwards, the read counts for each chromatin condition (H3K4me1, H3K4me3, H3K27ac and ATAC-seq) of each genotype (WT, Npm1c, Flt3-ITD and DM) at these potential CREs are computed to build a data matrix for further clustering analysis. Subsequently, the data matrix is processed in a similar way as for single-cell RNA-sequencing with the Seurat package, treating all CREs (as columns, equivalent to cells in a typical Seurat workflow) as separate data points across all 16 assay conditions (as rows, 4 chromatin profiles × 4 phenotypes, equivalent to genes in Seurat). This allows dimensionality reduction to classify and visualize clusters of CREs with similar patterns across wildtype and mutant cells. Meanwhile, specific clusters of chromatin regions showing leukemia-specific alterations of chromatin activation marks are identified for downstream gene network analysis.\nCreate a catalog of ATAC-seq consensus peak sets across four cellular states and convert it into a data table listing 2-kilo base (kb) bins at these consensus peaks (±1 kb from peak summit) in a format of .SAF required for read counts extraction using featureCounts.",
    "Make a sample list (“samplesheet_ATAC.csv”) indicating which ATAC-seq samples to be processed and the path to the storage of filtered reads (in .BAM files) and peak files (created by MACS2), using the layout below (row 3–6 are examples).\ntable:files/protocols_protocol_2081_1.csv\nBy running custom scripts (“ATAC_consensus_peakmax.R”) on the sample list (“samplesheet_ATAC.csv”) generated in step 4a, a list of consensus peak sets (“ATAC_consensus_peaks.bed”) is computed on ATAC-seq peaks from all genotypes including all their replicates. Then supplement this list with the information of which sample has maximal ATAC-seq signal at each peak (“ATAC_consensus_peakmax.bed”).\n> Rscript ATAC_consensus_peakmax.R\nNote: This step is performed by running DiffBind within our custom scripts.\nIdentify the peak summit of each consensus peak sets (summit of the sample with maximal ATAC-seq signal identified in step 4b) and convert this information to featureCounts input file (“ATAC_consensus_summit2kb_adj.saf”) by creating genome coordinates of 2-kb bins surrounding ATAC-seq consensus peak summits (±1 kb from peak summit), with the help of running custom scripts (“ATAC_peaksummit_to_saf.R”).\n> awk '{print $1\"\\t\"$2\"\\t\"$3\"\\t\"$5\"\\t\"\"[SAMPLE]\"}' [PEAK_FILE] > [SAMPLE_PEAK_SUMMIT_BED]\n> cat [ALL_PEAK_SUMMIT_BED] | sort -k1,1 -k2,2n > ATAC_all_summit.bed\n> bedtools intersect -a ATAC_consensus_peakmax.bed -b ATAC_all_summit.bed -wa -wb > ATAC_consensus_peakmax_intersect_summit.bed\n> sort -k4,4 -k9,9rn ATAC_consensus_peakmax_intersect_summit.bed | sort -uk4,4 | awk '{print $6\"\\t\"$7\"\\t\"$8\"\\t\"$4}' | sort -k1,1 -k2,2n > ATAC_consensus_peak_summit.bed\n# “ATAC_consensus_peak_summit.bed” is the input file for subsequent conversion to .SAF file\n> Rscript ATAC_peaksummit_to_saf.R\nExtract the read counts for each genomic approach (H3K4me1, H3K4me3, H3K27ac, and ATAC-seq) in each cellular condition at the 2-kb bins of ATAC-seq consensus peaks from the corresponding .BAM files (with replicates merged and normalized as count per million total read counts) using featureCounts.\n> featureCounts -a ATAC_consensus_summit2kb_adj.saf -F SAF -t exon -g GeneID --largestOverlap -o ATAC_consensus_summit2kb_adj_counts.txt [ALL_BAM_FILES]",
    "Perform integrative analysis on multilayered chromatin profiling data of all four genotype samples by running custom scripts (“Multiomics_Seurat_analysis_v2022.R”) to identify clusters of CREs (accessible chromatin regions) with similar dynamic chromatin states across WT and mutant conditions.\n> Rscript Multiomics_Seurat_analysis_v2022.R\n# input files “ATAC_consensus_summit2kb_adj_counts.txt” and “ATAC_consensus_summit2kb_adj_counts.txt.summary” were generated in step 5 by featureCounts\nNote: A prerequisite to dimensionality reduction analysis is a data matrix containing CREs as column (equivalent to cells in a typical Seurat workflow) and samples as rows (equivalent to genes in Seurat), filling with normalized read counts (CPM) on merged replicates of each condition, in a layout format as listed below. An exemplar data matrix (“ATAC_consensus_summit2kb_adj_cpm_merge_transpose.txt”) is provided in the key resources table[href=https://www.wicell.org#key-resources-table].\ntable:files/protocols_protocol_2081_2.csv\nNote: By analyzing our exemplar data, this step generates three plots as shown in Figure 1[href=https://www.wicell.org#fig1]. Using a heuristic method (ElbowPlot() function in Seurat package), we observe an ‘elbow’ around PC7-8 (Figure 1[href=https://www.wicell.org#fig1]A), suggesting that the majority of true signal is captured in the first 8 PCs. Subsequent analysis using FindClusters() function outputs 10 communities, followed by computation of 10 clusters by non-linear dimensionality reduction algorithms: UMAP or tSNE (Figure 1[href=https://www.wicell.org#fig1]B). And we found individual clusters were more well separated in tSNE plot than in UMAP. Therefore, the 10 tSNE-clusters are further subjected to heatmap plotting, to demonstrate individually dynamic patterns across WT and mutant conditions (Figure 1[href=https://www.wicell.org#fig1]C). Furthermore, we extract the genomic coordinates of Cluster-6 CREs as exemplar data to analyze their associated gene network. This creates a bed file (“Multiomics_Cluster-6_summit200bp.bed”) which contains genome coordinates of a 200 bp region surrounding ATAC-peak summit of Cluster-6 for downstream annotation analysis.",
    "Note: To link a set of CREs (tSNE clusters) with mutation condition, by qualitatively analyzing the dynamic pattern of chromatin profiles associated with mutation alone or in combination in the heatmap (Figure 1[href=https://www.wicell.org#fig1]C), we identified several clusters which demonstrate synergistic impact of mutations on chromatin modulation. For example, we identified CREs showing gains of enhancer marks and accessibility by mutations (e.g., Flt3-ITD and DM), which were separated by marked gain of accessibility (Cluster-5) and H3K27ac (Cluster-6). In comparison, Cluster-8 and Cluster-1 demonstrate mutation-associated loss of enhancer signatures, characterized by concurrent loss of H3K4me1 and accessibility, with or without evident loss of H3K27ac, respectively. More molecular information on these specific clusters can be referred to (Yun et al., 2021[href=https://www.wicell.org#bib16]) where the exemplar data were generated.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2081-Fig1.jpg\nFigure 1. A multilayered approach to analyze dynamic chromatin marks upon mutational synergy induced leukemia\n(A) The elbow plot determines number of PCs to capture the variation in the data.\n(B) Non-linear dimensionality reduction by UMAP or tSNE clustering.\n(C) Heatmap shows individual clusters of CREs with dynamic patterns of chromatin modifications and accessibility across WT and mutant conditions.\nData integration (ii)—Differential gene network\nTiming: 6 h",
    "In this step, we will link the CREs which demonstrate mutation-specific alteration of chromatin states to their associated genes with linear or spatial proximity. From step 6, Cluster-6 is selected as an exemplar group of CREs showing increased chromatin activity induced by mutations. The two mutations (Npm1c and Flt3-ITD) exert a strong synergy to induce a marked gain of H3K27ac, elevated levels of H3K4me1 and ATAC-seq, indicating the acquisition of enhancer signals by leukemia induction. Using the promoter-associated chromatin interaction data from pCHiC assays, Cluster-6 CREs are assigned to target genes when the CREs overlap with bait promoters or interaction fragments revealed by the pCHiC data. These target genes are then examined for differential expression analysis between mutant and WT samples, by checking them in the global analysis from step 2b. Since Cluster-6 CREs represent leukemia-specific gain of chromatin activity, the mutation-induced up-regulated genes linked to Cluster-6 CREs are further selected for gene ontology analysis, leading to the identification of leukemia-specific gene network related to chromatin alteration at 3D level.\nPrepare the CRE annotation file using chromatin interaction information indicated by pCHiC data.\nMake a sample list (“makematrixsample.txt”) indicating the genotypes and the correspondent .RDS files (created by “runChicago.R” in step 3b) which contain promoter-associated DNA interactions generated by CHiCAGO, using the format below.\ntable:files/protocols_protocol_2081_3.csv\nNote: For each genotype, interaction data of two replicates are merged by running runChicago.R as input samples.\nGenerate a consensus matrix of significant chromatin interactions (CHiCAGO score ≥5) detected in at least one genotype by running makePeakMatrix.R in CHiCAGO package (output file: “pCHiC_matrix.txt”).\n> Rscript makePeakMatrix.R --twopass ./makematrixsample.txt pCHiC_matrix > pCHiC_matrix.log\nIdentify specific target genes associated with Cluster-6 CREs which were identified in step 6 by utilizing chromatin interaction information.\n> Rscript Cluster_CREs_genes_diffexp.R",
    "# Annotation input files “Digest.mm10.rmap” and “pCHiC_fragID_Gene.txt” are provided in the KRT, while “pCHiC_matrix.txt” was generated in step 7b. Differential gene expression input file “WT.DM.PC.diffExp.csv” was generated in step 2b.\nNote: Annotation is achieved by the exploration of pCHiC data (“pCHiC_matrix.txt” from step 7b), which include genomic coordinates of gene promoters (as “bait” fragment) and their interacting regions (as other end “oe” fragment). Next, by intersecting CREs with either “bait” or “oe” fragments, the target genes associated with specific CREs can be identified. These genes are further analyzed for altered expression by combined mutations (DM leukemia) in comparison to WT (Figure 2[href=https://www.wicell.org#fig2]A, and the output file “Cluster-6_genes_DMvsWT_diffexp.txt”). Up- or down-regulation is defined as fold-change ≥1.5 and adjP <0.05. This step can be achieved by running custom scripts (“Cluster_CREs_genes_diffexp.R”).\nSelect the upregulated genes from previous step (the file “Cluster-6_DMvsWT_upgenes.txt” from step 8) to load into web server ShinyGO v0.76 (http://bioinformatics.sdstate.edu/go/[href=http://bioinformatics.sdstate.edu/go/]) for gene network or pathway analysis.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2081-Fig2.jpg\nFigure 2. Altered expression of genes and gene network linked to DM-specific chromatin alteration\n(A) Differential expression of genes associated with Cluster-6 CREs showing leukemia-specific gain of chromatin activity.\n(B) Top 10 enriched network pathways of DM leukemia upregulated genes associated with Cluster-6 CREs.\nNote: The search species is set for “Mouse” and “GO Biological Process” is selected as target pathway database, with default parameters (FDR cut-off at 0.05) and setting 10 pathways to show. The output plot (Figure 2[href=https://www.wicell.org#fig2]B) is generated under the tab Network."
  ],
  "subjectAreas": [
    "Genomics",
    "Bioinformatics",
    "Cancer"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}