{
  "id": 19446,
  "origin_website": "Jove",
  "title": "Semi-Automated Analysis of Peak Amplitude and Latency for Auditory Brainstem Response Waveforms Using R",
  "procedures": [
    "All procedures performed on animals were approved in advance by the University of Rochester Committee for Animal Research. The experimental subjects were 12 wild-type F1 male and female mice at 1 month of age. These F1 mice are the product of mating a CBA/CaJ dam and a C57BL/6J sire. The mice were bred and housed in the vivarium facility with a standard 12 h light/dark cycle, unlimited food and water, and ample nesting supplies. No more than five same-sex siblings were housed together in one cage.\n1. Obtaining data for analysis\nNOTE: This step must comply with institutional guidelines and be pre-approved by the institutional animal welfare committee. The detailed process for generating ABR data from mice has been described elsewhere18.\nRecord the ABR with the platform of choice.\n\tNOTE: In the instance shown here, the recordings were performed on mice.\n\t\nUse a 5 ms click stimulus beginning at a 75 dB sound pressure level and decreasing in 5 dB steps to 5 dB. Record an average of 512 sweeps for each amplitude. Reject responses if their peak to trough amplitude is greater than 31 µV at any instance between 1.3 ms and 12.5 ms after the stimulus.\n\t\tNOTE: Recordings from tone pip presentations may also be used. We anticipate that the analysis routine will work for other species, including humans.\nExport the ABR recording as an ASCII file.\n\t\nFor IHS, open the computer program.\nLoad the file of interest, and display the desired waveforms on one page.\nUnder the Data tab, select Save Page as ASCII to obtain a .txt file.",
    "After naming the data file appropriately (\"ID\"), record the ID and subject information in a metadata file entitled \"info.csv.\" Ensure that the \"ID\" does not include any information such as the genotype, sex, age, or treatment; this information is instead recorded in \"info.csv.\"\n\t\tNOTE: A fair deck of playing cards can be used to randomly assign labels if needed.\nRepeat with all the files to be analyzed as separate \"ID\" files.\n2. Installing the required packages and loading the data onto the working computer\nDownload and install R (https://www.r-project.org) and RStudio (https://www.rstudio.com). \n\tNOTE: The protocol described here used R ≥ 4.0.0.\nInstall the required libraries, tidyverse, shiny, plotly, and zoo, by typing the following command in the command window of RStudio:\nInstall.packages(\"tidyverse\")\n\tInstall.packages(\"shiny\")\n\tInstall.packages(\"plotly\")\n\tInstall.packages(\"zoo\")\nDownload the scripts FindPeaks.R and See_trace_click.R from the White lab GitHub (https://github.com/PWhiteLab/FindPeaks), as well as the associated file “Time.csv.”\nCreate a new folder to contain all the ASCII files, \"info.csv\", and \"Time.csv.\" For this example, name the folder \"Test_Folder.\" Within \"Test_Folder,\" place the ASCII files in a subfolder entitled \"ASCII_Folder.\"\n3. Obtaining the preliminary analysis with FindPeaks.R\nOpen the FindPeaks.R script in RStudio.\nRight-click on the tab for the script in the tool bar to select Set working directory, and set it to Test_Folder (see Supplementary Figure S1A).\nIn the script window, click Source on the upper right-hand side of the toolbar to load the program (see Supplementary Figure S1B).\nIn the command window, use the following commands to analyze the waveforms (see Supplementary Figure S2):\nFindPeaks_single(\"ASCII_folder/ID.txt\") for individual files (see Supplementary Figure S2A)\nFindPeaks_group(\"ASCII_Folder\") for batch processing (see Supplementary Figure S2B)",
    "​NOTE: The script will output (1) pdf files displaying the waveforms with labeled peaks and troughs (see Supplementary Figure S2C) and (2) an ID.csv file containing the numerical data for the amplitude (µV) and latency (ms). Both files will be placed in \"Test_Folder\".\n4. Verifying the preliminary analysis\nNOTE: At low sound levels, parts of the waveform may become difficult to distinguish from noise, and FindPeaks.R may misidentify the peaks or troughs compared to the experimenter's opinion. If there is a discrepancy, then the .csv file can be amended with data obtained from the script See_trace_click.R.\nLoad the waveform data for the specific individual using the command (see Supplementary Figure S3A):\nWaveform <- ASCII_extract(\"ASCII_Folder/ID.txt\")\nOpen the See_trace_click.R script in RStudio.\nIn the header on the left, click the Run App button, and wait for a new interactive (Shiny) window to appear (see Supplementary Figure S3B).\nIn the box on the top left, input the sound level for the waveform that requires revision, and look for the waveform displayed in the window.\nMove the cursor around the waveform to reveal the latency and amplitude at any point.\nClick on the correct peak and the following trough to record the data in the table below. Copy and paste the latency data into the .csv file (see Supplementary Figure S3C).\nTo calculate the amplitude measurement, subtract the following trough amplitude from the peak amplitude in the spreadsheet cell.\n5. Compiling and visualizing the dataset\nTransfer the verified .csv files to a new subfolder in Test_Folder entitled \"Peak_Data.\"\nAppend the data into a single .csv file and name it \"Peak_Data.csv.\"\nUse the following command:\nCompile (\"Peak_Data\")\n\tNOTE: This script combines the metadata from info.csv with Peak_Data.csv to label the data with group information. It also automatically calculates the interpeak latencies and amplitude ratios.",
    "Perform statistical analysis on the compiled data.\n\t\nUse a test for normality, such as the Shapiro-Wilks test, to assess the distribution of the data with the following function:\nshapiro.test()\nIf the Shapiro-Wilks test is not significant, the data set has a normal distribution; hence, assess the data with a parametric test such as ANOVA with the following function:\naov()\nIf the Shapiro-Wilks test is less than p = 0.05, use the Kruskal-Wallis rank sum test (with the function below) or another appropriate non-parametric measure (see other possibilities in the discussion).\nkruskal.test()\nTo display average waveforms, use the following command:\nAverage_Waveform(\"ASCII_Folder \", aes(x = Data_Pnt_ms, y = \"dB\", group = Genotype, color = Genotype))\n\tNOTE: This command shows the average waveforms for different genotypes in different colors. For the y variable dB, insert the number that corresponds to the desired amplitude, such as 75, without quotation marks. For other comparisons, use the corresponding group label from the metadata."
  ],
  "subjectAreas": [
    "Neuroscience"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research"
  ]
}