{
  "id": 10354,
  "origin_website": "Jove",
  "title": "Design and Analysis for Fall Detection System Simplification",
  "procedures": [
    "All methods described here have been approved by the Research Committee of the School of Engineering of Universidad Panamericana.\nNOTE: This methodology is based on the configuration of the specific types of sensors, machine-learning methods and procedures in order to configure a simple, fast and multimodal fall detection and human activity recognition system. Due to this, the following protocol is divided in phases: (1) database creation (2) data analysis (3) system simplification and (4) evaluation.\n1. Database creation\nSet up the data acquisition system. This will collect all data from subjects and store the information in a retrieval database.\n\t\nSelect the types of wearable sensors, ambient sensors and vision-based devices required as sources of information. Assign an ID for each source of information, the number of channels per source, the technical specifications and the sampling rate of each of them.\nConnect all sources of information (i.e., wearables and ambient sensors, and vision-based devices) to a central computer or a distributed computer system:\n\t\t\nVerify that wired-based devices are connected properly to one client computer. Verify that wireless-based devices are fully charged. Consider that low battery might impact wireless connections or sensor values. Moreover, intermittent or lost connections will increase loss of data.\nSet up each of the devices to retrieve data.\nSet up the data acquisition system for storing data on the cloud. Due to the large amount of data to be stored, cloud computing is considered in this protocol.\nValidate that the data acquisition system fulfills data synchronization and data consistency20 properties. This maintains the integrity of data storage from all the sources of information. It might require new approaches in data synchronization. For example, see Peñafort-Asturiano et al.20.\n\t\t\nStart collecting some data with the sources of information and store data in a preferred system. Include timestamps in all data.",
    "Query the database and determine if all sources of information are collected at the same sample rates. If done properly, go to Step 1.1.6. Otherwise, perform up-sampling or down-sampling using criteria reported in Peñafort-Asturiano, et al.20.\nSet up the environment (or laboratory) by considering the conditions required and the restrictions imposed by the goal of the system. Set conditions for impact force attenuation in the simulated falls as compliant flooring systems suggested in Lachance, et al.23 to ensure participants safety.\n\t\t\nUse a mattress or any other compliant flooring system and place it at the center of the environment (or laboratory).\nKeep all objects away from the mattress to give at least one meter of safe space all around. If required, prepare personal protective equipment for participants (e.g., gloves, cap, goggles, knee support, etc.).\n\t\t\tNOTE: The protocol can be paused here.\nDetermine the human activities and falls that the system will detect after configuration. It is important to have in mind the purpose of the fall detection and human activity recognition system, as well as the target population.\n\t\nDefine the goal of the fall detection and human activity recognition system. Write it down in a planning sheet. For this case study, the goal is to classify the types of human falls and activities performed in an indoor daily basis of elderly people.\nDefine the target population of the experiment in accordance with the goal of the system. Write it down in the planning sheet. In the study, consider elderly people as the target population.",
    "Determine the type of daily activities. Include some non-fall activities that look like falls in order to improve real fall detection. Assign an ID for all of them and describe them as detailed as possible. Set the time period for each activity to be executed. Write all this information down in the planning sheet.\nDetermine the type of human falls. Assign an ID for all of them and describe them as detailed as possible. Set the time period for each fall to be executed . Consider if the falls will be self-generated by the subjects or generated by others (e.g., pushing the subject). Write all this information down in the planning sheet.\nIn the planning sheet, write down the sequences of activities and falls that a subject will perform. Specify the period of time, the number of trials per activity/fall, the description to perform the activity/fall, and the activity/fall IDs.\n\t\tNOTE: The protocol can be paused here.\nSelect the relevant subjects to the study that will execute the sequences of activities and falls. Falls are rare events to catch in real life and usually occur to old persons. Nevertheless, for safety reasons, do not include elderly and impaired people in fall simulation under medical advice. Stunts have been used to avoid injuries22.\n\t\nDetermine the gender, age range, weight and height of the subjects. Define any impairment conditions required. Also, define the minimum number of subjects required for the experiment.\nRandomly select the set of subjects required, following the conditions stated in the previous step. Use a call for volunteers to recruit them. Fulfill all ethical guidelines applicable from the institution and country, as well as any international regulation when experimenting with humans.\n\t\tNOTE: The protocol can be paused here.",
    "Retrieve and store data from subjects. This information will be useful for further experimental analysis. Complete the following steps under supervision by a clinical expert or a responsible researcher.\n\t\nStart collecting data with the data acquisition system configured in Step 1.1.\nAsk each of the subjects to perform the sequences of activities and falls declared in Step 1.2. Clearly save the timestamps of the start and end of each activity/fall. Verify that data from all sources of information is saved on the cloud.\nIf the activities were not properly done or there were issues with devices (e.g., lost connection, low battery, intermittent connection), discard the samples and repeat Step 1.4.1 until no device issues are found. Repeat Step 1.4.2 for each trial, per subject, declared in the sequence of Step 1.2.\n\t\tNOTE: The protocol can be paused here.\nPre-process all data acquired. Apply up-sampling and down-sampling for each of the sources of information. See details about pre-processing data for fall detection and human activity recognition in Martínez-Villaseñor et al.21.\n\tNOTE: The protocol can be paused here.\n2. Data Analysis\nSelect the mode of data treatment. Select Raw Data if the data stored in the database will be used outright (i.e., using deep learning for automatic feature extraction) and go to Step 2.2. Select Feature Data if feature extraction will be used for further analysis and go to Step 2.3.\nFor Raw Data, no extra steps are required so go to Step 2.5.\nFor Feature Data, extract features from the raw data.\n\t\nSegment raw data in time windows. Determine and fix the time window length (e.g., frames of one-second size). In addition, determine if these time windows will be overlapping or not. A good practice is to choose 50% overlapping.",
    "Extract features from each segment of data. Determine the set of temporal and frequential features to be extracted from the segments. See Martínez-Villaseñor et al.21 for common feature extraction.\nSave the feature extraction data set on the cloud, in an independent database.\nIf different time windows will be selected, repeat Steps 2.3.1 to 2.3.3, and save each feature data set in independent databases.\n\t\tNOTE: The protocol can be paused here.\nSelect the most important features extracted and reduce the feature data set. Apply some commonly used feature selection methods (e.g., univariate selection, principal components analysis, recursive feature elimination, feature importance, correlation matrix, etc.).\n\t\nSelect a feature selection method. Here, we used feature importance.\nUse each feature to train a given model (we employed RF) and measure the accuracy (see Equation 1).\nRank the features by sorting in order of the accuracy.\nSelect the most important features. Here, we used the best ranked first ten features.\n\t\tNOTE: The protocol can be paused here.\nSelect a machine learning classification method and train a model. There are well-known machine learning methods16,17,18,21, such as: support vector machines (SVM), random forest (RF), multilayer perceptron (MLP) and k-nearest neighbors (KNN), among many others.\n\t\nOptionally, if a deep learning approach is selected, then consider21: convolutional neural networks (CNN), long short-term memory neural networks (LSTM), among others.\nSelect a set of machine learning methods. Here, we used the following methods: SVM, RF, MLP and KNN.\nFix the parameters of each of the machine learning methods, as suggested in literature21.",
    "Create a combined feature data set (or raw data set) using the independent feature data sets (or raw data sets), to combine types of sources of information. For example, if a combination of one wearable sensor and one camera is required, then combine the feature data sets from each of these sources.\nSplit the feature data set (or raw data set) in training and testing sets. A good choice is to randomly divide 70% for training and 30% for testing.\nRun a k-fold cross-validation21 using the feature data set (or raw data set), for each machine learning method. Use a common metric of evaluation, like accuracy (see Equation 1) to select the best model trained per method. Leave-one subject-out (LOSO) experiments3 are also recommend.\n\t\t\nOpen the training feature data set (or raw data set) in the preferred programming language software. Python is recommended. For this step, use pandas library to read a CSV file as follows:\ntraining_set = pandas.csv(<filename.csv>).\nSplit the feature data set (or raw data set) in pairs of inputs-outputs. For example, use Python to declare the x-values (inputs) and the y-values (outputs):\ntraining_set_X = training_set.drop(‘tag’,axis=1), training_set_Y = training_set.tag\n\t\t\twhere tag represents the column of the feature data set that includes the target values.\nSelect one machine learning method and set the parameters. For example, use SVM in Python with the library sklearn like the following command:\nclassifier = sklearn.SVC(kernel = ‘poly’)\n\t\t\tin which the kernel function is selected as polynomial.\nTrain the machine learning model. For example, use the above classifier in Python to train the SVM model:\nclassifier.fit(training_set_X,training_set_Y).",
    "Compute the estimates values of the model using the testing feature data set (or the raw data set). For example, use the estimate function in Python as follows: estimates = classifier.predict(testing_set_X) where testing_set_X represents the x-values of the testing set.\nRepeat Steps 2.5.6.1 to 2.5.6.5, the number of times k specified in the k-fold cross validation (or the number of times required for the LOSO approach).\nRepeat Steps 2.5.6.1 to 2.5.6.6 for each machine learning model selected.\n\t\t\tNOTE: The protocol can be paused here.\nCompare the machine learning methods by testing the selected models with the testing data set. Other metrics of evaluation can be used: accuracy (Equation 1), precision (Equation 2), sensitivity (Equation 3), specificity (Equation 4) or F1-score (Equation 5), where TP are the true positives, TN are the true negatives, FP are the false positives and FN are the false negatives.\nimgsrc://cloudfront.jove.com/files/ftp_upload/60361/60361equ01.jpg\nimgsrc://cloudfront.jove.com/files/ftp_upload/60361/60361equ02.jpg\nimgsrc://cloudfront.jove.com/files/ftp_upload/60361/60361equ03.jpg\nimgsrc://cloudfront.jove.com/files/ftp_upload/60361/60361equ04.jpg\nimgsrc://cloudfront.jove.com/files/ftp_upload/60361/60361equ05.jpg\nUse other beneficial performance metrics such as the confusion matrix9 to evaluate the classification task of the machine learning models, or a decision-independent precision-recall9 (PR) or receiver operating characteristic9 (ROC) curves. In this methodology, recall and sensitivity are considered equivalent.\nUse qualitative features of the machine learning models to compare among them, such as: ease of machine learning interpretation; real-time performance; limited resources of time, memory and processing computing; and ease of machine learning deployment in edge devices or embedded systems.\nSelect the best machine learning model using the information from: The quality metrics (Equations 1–5), the performance metrics and the qualitative features of machine learning feasibility of Steps 2.5.6, 2.5.7 and 2.5.8.\n\t\tNOTE: The protocol can be paused here.\n3. System simplification",
    "Select the suitable placements of sources of information. Sometimes, it is necessary to determine the best placement of sources of information (e.g., which location of a wearable sensor is better).\n\t\nDetermine the subset of sources of information that will be analyzed. For example, if there are five wearable sensors in the body and just one has to be selected as the best sensor placed, each of these sensors will be part of the subset.\nFor each source of information in this subset, create a separate data set and store it separately. Keep in mind that this data set could be either the previous feature data set or the raw data set.\n\t\tNOTE: The protocol can be paused here.\nSelect a machine learning classification method and train a model for one source of information placement. Complete Steps from 2.5.1 to 2.5.6 using each of the data sets created in Step 3.1.2. Detect the most suitable source of information placement by ranking. For this case study, we use the following methods: SVM, RF, MLP and KNN.\n\tNote: The protocol can be paused here.\nSelect the suitable placements in a multimodal approach if a combination of two or more sources of information are required for the system (e.g., combination of one wearable sensor and one camera). In this case study, use waist-wearable sensor and camera 1 (lateral view) as the modalities.\n\t\nSelect the best source of information of each modality in the system and create a combined feature data set (or raw data set) using the independent data sets of these sources of information.",
    "Select a machine learning classification method and train a model for these combined sources of information. Complete Steps 2.5.1 to 2.5.6 using the combined feature data set (or raw data set). In this study, use the following methods: SVM, RF, MLP and KNN.\n\t\tNOTE: The protocol can be paused here.\n4. Evaluation\nPrepare a new data set with users in more realistic conditions. Use only the sources of information selected in the previous step. Preferable, implement the system in the target group (e.g., elderly people). Collect data in longer periods of time.\n\t\nOptionally if the target group is used only, create a selection group protocol including the terms of exclusion (e.g., any physical or psychological impairment) and stop criteria prevention (e.g., detect any physical injury during the trials; suffering nausea, dizziness and/or vomiting; fainting). Consider also ethical concerns and data privacy issues.\nEvaluate the performance of the fall detection and human activity recognition system developed so far. Use Equations 1–5 to determine the accuracy and predictive power of the system, or any other performance metrics.\nDiscuss about the findings on the experimental results."
  ],
  "subjectAreas": [
    "Bioengineering"
  ],
  "bigAreas": [
    "Bioengineering & Technology"
  ]
}