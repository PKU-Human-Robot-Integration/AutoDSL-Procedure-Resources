{
  "id": 1943,
  "origin_website": "Cell",
  "title": "Network analysis of TCGA and GTEx gene expression datasets for identification of trait-associated biomarkers in human cancer",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nData import, cleaning, and preprocessing\nTiming: 1–4 h\nNote: The\n      Methods S1[href=https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1425-Mmc1.pdf]\n      file “R Markdown Code Script for UCSCXenaTool“ contains the exact script\n      used to generate the expected outcomes for this section.\n    \n        Download Genes.xlsx (Piovesan et al., 2019[href=https://www.wicell.org#bib31]) from https://osf.io/edjzv/[href=https://osf.io/edjzv/] and\n        save the downloaded file as zz_gene.protein.coding.csv to\n        your working directory.\n      \n        Download the ID/gene mapping for the\n        TcgaTargetGtex_gene_expected_count dataset of the\n        TCGA TARGET GTEx cohort (see\n        key resources table[href=https://www.wicell.org#key-resources-table] for link) and\n        save the downloaded file as\n        zz_gencode.v23.annotation.csv to your working directory.\n      \n        Load the following R packages: 1) UCSCXenaTools, 2)\n        data.table, 3) R.utils, and 4)\n        dplyr.\n      \n        Generate a record of datasets hosted on UCSC Xena Data Hubs via the\n        UCSCXenaTools R package (Wang and Liu, 2019[href=https://www.wicell.org#bib39]).\n      \nNote: Datasets from UCSC Xena Data Hubs\n      can be filtered by their XenaHostNames, XenaCohorts, and/or XenaDatasets.\n      The object XenaData provides information on the contents of\n      each dataset and can be saved to the working directory to assist in the\n      selection of target datasets.\n    \n        Retrieve gene expression, clinical, survival, and phenotype data from\n        the UCSC Xena platform via the UCSCXenaTools R package (Wang and Liu, 2019[href=https://www.wicell.org#bib39]). For network analysis of TCGA colon cancer gene expression, we\n        selected and downloaded:\n        \n            The TcgaTargetGtex_gene_expected_count dataset for the\n            TCGA TARGET GTEx cohort from host toilHub.\n          \n            The COAD_clinicalMatrix dataset for the\n            TCGA Colon Cancer cohort from host\n            tcgaHub by setting the filters paraCohort =\"TCGA Colon Cancer\" and\n            paraDatasets =\n              \"TCGA.COAD.sampleMap/COAD_clinicalMatrix\".\n          \n            The TCGA_survival_data dataset for the\n            TCGA TARGET GTEx cohort from host toilHub.\n          \n            The TcgaTargetGTEX_phenotype dataset for the\n            TCGA TARGET GTEx cohort from host toilHub.\n          \nNote: Within the\n      TcgaTargetGtex_gene_expected_count dataset, GTEx normal\n      tissue data complimentary to TCGA tumor data are available for 16 primary\n      sites (see Table 1[href=https://www.wicell.org#tbl1]). This protocol can be used (with\n      minor modifications) to conduct paired comparison on these 16 primary",
    "sites. Table 2[href=https://www.wicell.org#tbl2] can be used to set values for the\n      arguments paraCohort and paraDatasets (defined\n      during step 5.b) to retrieve dataset(s) that contain clinical information\n      of the desired cancer type.\n    \n        Subset the gene expression matrix to include only observations of\n        desired tissue type(s).\n        \n            The Genotype-Tissue Expression (GTEx) project provides gene\n            expression data from healthy, cancer-free individuals. For\n            differential gene expression analysis, we selected GTEx normal colon\n            tissue samples by setting the filters\n            paraStudy = \"GTEX\",\n            paraPrimarySiteGTEx = \"Colon\" and\n            paraPrimaryTissueGTEx = \"ˆColon\" to the\n            TcgaTargetGTEX_phenotype dataset.\n            Table 3[href=https://www.wicell.org#tbl3] can be used to set values for the\n            arguments paraPrimarySiteGTEx and\n            paraPrimaryTissueGTEx.\n            table:files/protocols_protocol_1425_1.csv\ntable:files/protocols_protocol_1425_2.csv\ntable:files/protocols_protocol_1425_3.csv\n            The Cancer Genome Atlas (TCGA) program provides gene expression data\n            from primary tumors. For differential gene expression analysis, we\n            selected TCGA colon cancer primary tumor samples by setting the\n            filters\n            paraSampleType = \"Primary Tumor\",\n              paraPrimarySiteTCGA =\"Colon\", and\n            paraHistologicalType = \"Colon Adenocarcinoma\". Table 4[href=https://www.wicell.org#tbl4] can be used to set values for the\n            arguments paraPrimarySiteTCGA and\n            paraHistologicalType.\n            table:files/protocols_protocol_1425_4.csv\n            The TcgaTargetGtex_gene_expected_count dataset from the\n            toilHub data hub combines RNA-Seq data from TCGA and\n            GTEx by uniformly realigning reads to the hg38 genome and re-calling\n            expressions using RSEM and Kallisto methods (Vivian et al., 2017[href=https://www.wicell.org#bib38]). To compare gene expression between GTEx normal and TCGA tumor\n            for network analyses, subset the\n            TcgaTargetGtex_gene_expected_count dataset via lists\n            generated during step 6.a and step 6.b.\n          \nNote: When generating the GTEx and TCGA\n      sample lists to subset the gene expression matrix\n      TcgaTargetGtex_gene_expected_count, the\n      subset function may not compute, or may return zero\n      observations. Please refer to\n      troubleshooting[href=https://www.wicell.org#troubleshooting],\n      problem 1[href=https://www.wicell.org#sec6.1] (step 6) for potential solution.\n    \n        Subset the gene expression matrix to include only protein-coding genes.\n        This can be achieved by utilizing the\n        zz_gene.protein.coding.csv saved during step 1.\n        The gene expression matrix can now be saved for downstream analyses.\n      \n        The COAD_clinicalMatrix dataset contains 133 administrative",
    "and phenotypic annotations (see the\n        Methods S1[href=https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1425-Mmc1.pdf]\n        file “R Markdown Code Script for UCSCXenaTool” for a full list), ranging\n        from sample IDs to pathologic stage to\n        KRAS mutation codon. Keep only the variable(s) of interest.\n        For example, to identify potential biomarkers for lymphatic invasion\n        during network analysis of TCGA colon cancer gene expression, we\n        retained the following variables:\n      \n> varClinKeep = c(\"sampleID\",\n          \"lymphaticinvasion\")\nNote: Phenotype variables included in\n      clinical matrices differ among the 19 cancer types laid out in\n      Table 2[href=https://www.wicell.org#tbl2]. For examples of how one can view, select, and\n      re-code other phenotype variable(s) into an annotation matrix that is\n      appropriate for downstream analyses, please refer to\n      troubleshooting[href=https://www.wicell.org#troubleshooting],\n      problem 2[href=https://www.wicell.org#sec6.3] (step 9).\n    \n        The phenotype annotation matrix can now be saved for downstream\n        analyses.\n      \nCritical: Tissue samples from TCGA are\n      classified by cancer types, as well as by sample types (e.g., primary\n      tumor, solid tissue normal). Solid tissue normal samples (referred to as\n      NAT, normal adjacent to tumor) are collected from histologically normal\n      tissues adjacent to tumor margins and are often utilized as healthy\n      controls for comparison with tumor samples. However, analyses of\n      expression profiles from GTEx healthy, TCGA NAT, and TCGA tumor tissues\n      indicate that NAT constitutes an intermediate state between healthy and\n      tumor (Aran et al., 2017[href=https://www.wicell.org#bib3]). That is, the expression\n      profiles obtained from healthy, NAT, and tumor tissues segregate into\n      distinct clusters, with closer resemblance of NAT to tumor in some tissues\n      (e.g., prostate and colon) and greater similarity of NAT to healthy in\n      other tissues (e.g., uterus and breast). Over half of the differentially\n      expressed genes (DEGs) in the healthy to tumor comparison were not\n      identified in the NAT to tumor comparison, while ∼40% of DEGs in the NAT\n      to tumor comparison were insignificant in the healthy to tumor comparison",
    "(Aran et al., 2017[href=https://www.wicell.org#bib3]). Given the middling nature of\n      solid tissue normal (i.e., NAT), these samples should be removed as they\n      may distort subsequent analyses. Furthermore, solid tissue normal samples\n      often have matched primary tumor samples. As such, inclusion of these\n      solid tissue normal samples will introduce duplicate patient IDs.\n    \nCritical: Tissue samples from TCGA are\n      also classified by histological type. Histological heterogeneity can\n      confound gene module-trait correlation if specific clinical traits are\n      overrepresented in certain histological type. For example, colon mucinous\n      adenocarcinoma has distinct molecular aberrations (e.g., overexpression of\n      the MUC2 protein) and higher ratio of lymphatic invasion as compared to\n      its non-mucinous counterpart (Luo et al., 2019[href=https://www.wicell.org#bib21]). Out\n      of the 282 primary tumor samples from the\n      TCGA Colon Cancer cohort, 38 samples (13%) were annotated\n      with histological type colon mucinous adenocarcinoma.\n      Pursuing weighted gene co-expression network analysis (WGCNA) without\n      first resolving histological type may lead to detection of gene-module\n      trait correlations that are associated with histological type in addition\n      to the clinical trait of interest. Table 4[href=https://www.wicell.org#tbl4] can be used\n      to set values for paraHistologicalType, defined during\n      step 6.b.\n    \nNote: For complete details on the use and\n      execution of the UCSCXenaTools R package, please refer to (Wang and Liu, 2019[href=https://www.wicell.org#bib39]).\n    \nDifferential gene expression analysis with limma-voom\nTiming: 0.5–2 h\n      Differential gene expression analysis is routinely used to investigate the\n      biological differences between healthy and diseased states (McDermaid et al., 2019[href=https://www.wicell.org#bib25]). Identification of DEGs can be valuable for uncovering potential\n      biomarkers, therapeutic targets, and gene signatures for diagnostics. In\n      this section, we utilize the limma workflow (Law et al., 2016[href=https://www.wicell.org#bib18]) to detect DEGs across TCGA primary tumor and GTEx normal colon tissue\n      samples.\n    \nNote: The\n      Methods S2[href=https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1425-Mmc1.pdf]\n      file “R Markdown Code Script for LIMMA_ColonCancer” contains the exact\n      script used to generate the expected outcomes for this section.",
    "Load the following R packages: 1) dplyr, 2)\n        limma, and 3) edgeR.\n      \n        The TcgaTargetGtex_gene_expected_count dataset for the\n        TCGA TARGET GTEx cohort from host toilHub was\n        previously log2(x+1) transformed. As such, it is necessary to\n        back-transform the gene expression matrix that was saved to the working\n        directory during step 8 into RSEM gene-level expected count\n        before passing the dataset to limma.\n      \n        Convert the back-transformed gene expression matrix into a\n        DGEList-object using the DGEList function.\n      \nNote: In limma-voom, all samples\n      are assumed to have a similar range and distribution of log-CPM values (Law et al., 2016[href=https://www.wicell.org#bib18]). Samples that have significantly different range and/or distribution of\n      log-CPM values should be removed prior to the generation of the\n      DGEList-object. To resolve the potential issue of sample outliers, please\n      refer to troubleshooting[href=https://www.wicell.org#troubleshooting],\n      problem 3[href=https://www.wicell.org#sec6.5] (step 13). It should also be noted\n      that if there are any sample outliers, and these outliers were not removed\n      prior to the generation of the DGEList-object, then warning messages will\n      start appearing when undertaking step 17, up until step 22,\n      when the eBayes function will fail on execution.\n    \nGroup samples by condition (i.e., TCGA tumor or GTEx normal).\n        Convert expected counts to counts per million (CPM) and\n        log2-counts per million using the function\n        cpm.\n        Remove genes that are lowly expressed using the function\n        filterByExpr.\n        Perform normalization on gene expression using the function\n        calcNormFactors.\n        Generate a design matrix using the function\n        model.matrix.\n        Set up contrast for comparison using the function\n        makeContrasts.\n        Transform gene expression data for linear modeling using the function\n        voom.\n        Perform linear modeling using the function lmFit, then the function contrasts.fit.\n        Compute empirical Bayes statistics for differential expression using the\n        function eBayes.\nInspect the number of significantly up- and down-regulated genes.\nSave the list of DEGs for subsequent analyses.\n        Save the voom transformed gene expression matrix for subsequent\n        analyses.",
    "Note: For complete details on the use and\n      execution of the limma R package, please refer to\n      Ritchie et al. (2015)[href=https://www.wicell.org#bib32] and\n      Law et al. (2016)[href=https://www.wicell.org#bib18].\n    \n      Identification of gene set(s) highly correlated to specific traits of\n      human cancer with WGCNA\n    \nTiming: 1–3 h\n      In addition to the identification of DEGs, the analysis of correlated gene\n      expression (i.e., co-expression) can provide a framework for describing\n      changes in expression of gene sets within the confine of human cancer\n      traits. WGCNA is a bioinformatic algorithm, developed by\n      Langfelder and Horvath (2008)[href=https://www.wicell.org#bib17], that can be used to\n      find clusters (modules) of correlated genes and to associate the\n      identified modules with specific sample traits. Importantly, the gene\n      expression data input for WGCNA is not pre-filtered by differential\n      expression. As such, gene sets that may be highly correlated to specific\n      traits of human cancer, but do not pass the differential expression\n      threshold, may still be revealed via WGCNA. In this section, the\n      voom normalized expression data, generated from the\n      limma-voom workflow presented in the previous section, is subjected\n      to WGCNA to identify gene set(s) highly correlated to lymphatic invasion\n      in human colon cancer.\n    \nNote: The\n      Methods S3[href=https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1425-Mmc1.pdf]\n      file “R Markdown Code Script for WGCNA” contains the exact script used to\n      generate the expected outcomes for this section.\n    \n        Load the following R packages: 1) WGCNA, and 2)\n        dplyr.\n      \n        Subset the voom transformed gene expression matrix, saved during\n        step 25, to include only TCGA gene expression data.\n      \n        Remove genes that are lowly-expressed and/or genes with low variation\n        between samples.\n      \nNote: Genes that are lowly-expressed\n      and/or display low variation between samples have a tendency to generate\n      noise in WGCNA (Langfelder and Horvath, 2008[href=https://www.wicell.org#bib17]).\n      Lowly-expressed genes can be removed by defining a mean expression cutoff\n      value. Filtering for low variance can be achieved by setting a variance",
    "cutoff value. The method and threshold-value chosen for gene-filtering may\n      vary according to study-specific characteristics. Users should examine\n      expression values across the entire dataset for features that would\n      distinguish uninformative variables. For WGCNA on TCGA gene expression\n      data, we removed genes that had normalized expression value < 0 in any\n      of the 244 colon tissue samples.\n    \n        Identify outlier samples by clustering samples using the function\n        hclust. Then, remove the outlier samples by setting a value for the\n        cutHeight argument in the function\n        cutreeStatic.\nNote: Users should refer to the sample\n      clustering dendrogram generated via the function\n      plot to discern the most reasonable cut height for\n      their dataset. In general, each dataset will require a different cut\n      height. A histogram of height (the distance between samples and/or\n      clusters) can also assist in the setting of a value for the\n      cutHeight argument.\n    \n        Convert the phenotype annotation matrix, saved during step 10,\n        into a trait data frame that is analogous to the gene expression data\n        frame.\n      \nNote: Sample traits data can be plotted\n      alongside the sample clustering dendrogram, generated during\n      step 29, to investigate whether samples with distinct trait values\n      have globally distinct gene expression patterns. If so, then there is\n      likely a high correlation among large groups of genes, which invalidates\n      the scale-free topology assumption and can interfere with the appropriate\n      selection of the soft-thresholding power β (step 31). If the lack\n      of scale-free topology is caused by the sample trait of interest, then the\n      recommended power β is six for unsigned or signed hybrid networks, and 12\n      for signed networks (for sample size listed in\n      Table 1[href=https://www.wicell.org#tbl1]). If the lack of scale-free topology is caused\n      by traits that are uninteresting for the study, then the WGCNA consensus\n      network analysis (not described in this protocol) should be employed.",
    "WGCNA consensus network analysis allows for detection of common\n      co-expression patterns across multiple conditions (e.g., the driver of\n      sample differences that is not being studied). Tutorials for the\n      identification of consensus modules that cluster genes with dense\n      connectivity in multiple conditions can be found at\n      https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/[href=https://horvath.genetics.ucla.edu/html/CoexpressionNetwork/Rpackages/WGCNA/Tutorials/], under the heading\n      II. Consensus analysis of female and male liver expression data.\n      (Langfelder and Horvath, 2008[href=https://www.wicell.org#bib17])\n    \n        Use the function pickSoftThreshold to analyze\n        scale-free topology for a set of candidate β-values.\n      \n        Plot, and then inspect the results returned by the function\n        pickSoftThreshold. Select the smallest β-value that satisfies the scale-free\n        topology assumption (i.e., R2 > 0.8).\n      \nNote: A reasonable β-value is < 15 for\n      unsigned or signed hybrid networks, and < 30 for signed networks. If\n      the scale-free topology assumption cannot be satisfied with a reasonable\n      β-value, then the input data should be investigated for heterogeneity\n      drivers that instigated the globally distinct expression pattern (see\n      Note under step 30).\n    \n        Calculate adjacencies with the selected β-value via function\n        adjacency. The adjacency matrix is a square, symmetrical matrix with\n        values ranging between 0 and 1 that correspond to the connection\n        strengths between each pair of genes.\n      \n        Calculate the topological overlap matrix (TOM) from the adjacency matrix\n        using the function TOMsimilarity. Then calculate the dissimilarity matrix via command\n        dissTOM = 1 – TOM.\n      \nNote: When executing functions\n      pickSoftThreshold, adjacency and TOMsimilarity, the network type needs to be defined via arguments networkType,\n      type, and networkType, respectively. In “signed” networks, a\n      pair of genes with positive correlation is considered connected whereas a\n      pair of genes with negative correlation is considered unconnected. In\n      “unsigned” networks, positive and negative correlations are both regarded\n      as connected (i.e., mixed). Although the default network type in WGCNA is\n      “unsigned”, the use of “signed” networks is recommended for analysis of\n      gene expression data (see\n      https://peterlangfelder.com/2018/11/25/signed-or-unsigned-which-network-type-is-preferable/[href=https://peterlangfelder.com/2018/11/25/signed-or-unsigned-which-network-type-is-preferable/]).",
    "Detect modules within the network by clustering genes based on\n        dissTOM using the function hclust. Module assignments can be plotted under the gene dendrogram using the\n        function plotDendroAndColors.\nNote: WGCNA may return modules that\n      capture a large fraction of the input data (i.e., containing 10, 20, or\n      50% of the total input data), which may not provide adequate resolution\n      for the identification of core mechanisms associated with the sample trait\n      of interest. To resolve the potential issue of large modules, please refer\n      to troubleshooting[href=https://www.wicell.org#troubleshooting],\n      problem 4[href=https://www.wicell.org#sec6.7] (step 35).\n    \n        Calculate the weighted average value (eigengene) for each module using\n        the function moduleEigengenes.\n        Calculate the correlation between trait and module eigengenes (MEs)\n        using the function cor and\n        corPvalueStudent to uncover module(s) with\n        significant association to the sample trait of interest. A graphical\n        view of module-trait relationship can be generated with the function\n        labeledHeatmap.\n      \n        Calculate the correlation between trait and gene expression levels with\n        the function cor and\n        corPvalueStudent to define gene significance (GS).\n      \n        Calculate the correlation between MEs and gene expression levels using\n        the function cor and\n        corPvalueStudent to define module membership (MM).\n      \n        Plot a scatterplot of variables GS vs. MM to examine if genes that are\n        highly associated with the trait of interest are also highly associated\n        with their assigned module.\n      \n        Annotate results from WGCNA with Ensembl IDs. This can be done by\n        utilizing the zz_gencode.v23.annotation.csv downloaded and\n        saved during step 2 of this protocol.\n      \nSave the annotated WGCNA result for subsequent analyses.\nNote: For complete details on the use and\n      execution of the WGCNA R package, please refer to\n      Langfelder and Horvath (2008)[href=https://www.wicell.org#bib17].\n    \nGene set enrichment analysis with topGO\nTiming: 0.5–1 h\n      Having identified clusters (modules) of genes that are highly correlated\n      to specific traits of human cancer, the next step is to infer underlying",
    "molecular mechanisms based on the biological attributes of these genes.\n      Gene ontology (GO) is a set of structured and controlled vocabulary, which\n      describes gene characteristics in terms of their function and\n      localization. In the hierarchical tree structure of GO, each child node is\n      a more specific term than its parents. At the highest level, GO terms are\n      classified into three major categories: cellular components (where the\n      gene product is localized), molecular functions (function of the gene\n      product), and biological processes (the activity with which the gene\n      product is involved). In this section, GO enrichment analysis is completed\n      with the topGO R package (Alexa and Rahnenführer, 2021[href=https://www.wicell.org#bib1]) for the category “biological processes”. topGO was chosen to owe to its\n      ‘elim’ method, that considers GO hierarchy when calculating\n      enrichment. In brief, the algorithm accounts for the ‘inheritance problem’\n      (i.e., where root terms inherit annotations from descendent terms; a\n      situation which can generate false positives) in GO enrichment analysis by\n      disregarding genes that had already been annotated with significantly\n      enriched descendant GO terms (Alexa et al., 2006[href=https://www.wicell.org#bib2]).\n    \nNote: The\n      Methods S4[href=https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1425-Mmc1.pdf]\n      file “R Markdown Code Script for topGO” contains the exact script used to\n      generate the expected outcomes for this section.\n    \n        Load the following R packages: 1) data.table, 2)\n        grex, 3) biomaRt, 4) topGO, 5)\n        dplyr, and 6) ggplot2.\n      \n        Annotate the WGCNA result, saved during step 42, with Entrez IDs,\n        via function grex.\n      \n        Connect to the ENSEMBL_MART_ENSEMBL BioMart database to\n        query GO IDs for the list of Entrez IDs returned by the function\n        grex. This constitutes the ‘gene universe’ that we will compare our\n        list of genes of interest to.\n      \n        Define the WGCNA module of interest then set up named factors for genes\n        located within and outside of the module of interest.",
    "Build a topGO data object with the base function new, then run GO analysis.\n      \n        Test significance of GO terms using the function\n        runTest.\n        Generate a summary table of results obtained from topGO enrichment\n        analysis with the function GenTable.\nNote: If users decide to re-run GO term\n      enrichment analysis after some time (e.g., six months), the outcome of\n      this later analysis may not always agree with those obtained from analysis\n      conducted at an earlier time. For explanation and potential solution,\n      please refer to troubleshooting[href=https://www.wicell.org#troubleshooting],\n      problem 5[href=https://www.wicell.org#sec6.9] (step 49, step 61, and step 71).\n    \nCalculate odds ratios via the command:\n> all_res$OR =\n          log2((all_res$Significant/tot_candidate)/(all_res$Annotated/tot_background))\n        Generate a summary figure of topGO results via the ggplot2 R package (Wickham et al., 2016[href=https://www.wicell.org#bib41]).\n      \nNote: For complete details on the use and\n      execution of the topGO R package, please refer to\n      Alexa and Rahnenführer (2021)[href=https://www.wicell.org#bib1] and\n      Alexa et al. (2006)[href=https://www.wicell.org#bib2].\n    \nSurvival analysis with RegParallel\nTiming: 0.5–1 h\n      Potential biomarkers for specific human cancer traits can be detected by\n      cross-referencing genes that reside within the WGCNA module(s) of interest\n      with the list of DEGs derived with limma-voom. To further restrict\n      this list of potential biomarkers, the prognostic ability of gene\n      expression on survival may be evaluated. In this section, the RegParallel\n      R package (Blighe and Lasky-Su, 2021[href=https://www.wicell.org#bib6]) was utilized to\n      examine how the expression of genes within the WGCNA module of interest\n      influenced the rate of overall survival.\n    \nNote: The\n      Methods S5[href=https://prod-shared-star-protocols.s3.amazonaws.com/protocols/1425-Mmc1.pdf]\n      file “R Markdown Code Script for Survival” contains the exact script used\n      to generate the expected outcomes[href=https://www.wicell.org#expected-outcomes] for\n      this section.\n    \n        Load the following R packages: 1) dplyr, 2)\n        data.table, 3) RegParallel, and 4)\n        survminer.\n      \n        Subset the voom transformed gene expression matrix, saved during\n        step 25, to include only TCGA sample IDs and only genes within\n        the module of interest.",
    "Transform the gene expression data to Z-score with the function\n        scale.\n      \n        Merge the transformed gene expression matrix with the file\n        TCGA_survival_data that was downloaded and saved during\n        step 5.c.\nNote: For analysis of how gene expression\n      within the WGCNA module of interest influences the rate of overall\n      survival for members of the TCGA colon cancer cohort, we subset the\n      TCGA_survival_data to include only data ≤3,650 days (i.e., 10\n      years). The subset criterion of 10-year was set based on data that were\n      available within the TCGA_survival_data dataset for the TCGA\n      colon cancer cohort. A histogram summarizing the range and distribution of\n      available survival data can be generated to assist in the setting of the\n      subset criterion. Five-year survival is commonly used, but long-term\n      survival outcomes (e.g., 10, 15, or 20 years) could also be interrogated\n      when data are available (Miller et al., 2019[href=https://www.wicell.org#bib27];\n      Myers and Ries, 1989[href=https://www.wicell.org#bib29]).\n    \n        Run the function RegParallel to fit Cox proportional\n        hazards regression model to gene expression to independently test the\n        association between survival time and each gene within the WGCNA module\n        of interest.\n      \nNote: For network analysis of TCGA colon\n      cancer gene expression, we examined how gene expression influences the\n      rate of overall survival. However, other events of interest can be found\n      within the file TCGA_survival_data (e.g., disease-specific\n      survival, disease-free interval, and progression-free interval).\n    \n        Load the summary of limma-voom differential expression analysis,\n        saved during step 24.\n        Merge the limma-voom differential expression data with\n        RegParallel output, then save the composite data table for\n        Cytoscape network visualization.\n      \n        Generate a short-list of genes that satisfy the conditions:\n        \n            Is associated with the trait of interest (see step 53).\n          \nIs differentially expressed (adj.P.Val < 0.05).\n            Statistically significant prognostic separation between high and low\n            gene expression (LogRank < 0.05).\n          \n        Generate Kaplan-Meier (KM) plots for shortlisted genes using the\n        function ggsurvplot.",
    "Note: For complete details on the use and\n      execution of the RegParallel and survminer R package, please refer to\n      Blighe and Lasky-Su (2021)[href=https://www.wicell.org#bib6] and\n      Kassambara et al. (2021)[href=https://www.wicell.org#bib16], respectively.\n    \nMolecular network visualization with Cytoscape\nTiming: 1–2 h\n      The effective visual display of data architecture is critical for\n      information dissemination and broader contextual understanding. This\n      section describes the use of stringApp for Cytoscape (Doncheva et al., 2019[href=https://www.wicell.org#bib10]; Shannon et al., 2003[href=https://www.wicell.org#bib35]) to retrieve molecular\n      networks from the search tool for the retrieval of interacting\n      genes/proteins (STRING) database (Szklarczyk et al., 2021[href=https://www.wicell.org#bib36]) given a list of proteins of interest. Moreover, the means to import\n      external data (e.g., results from differential expression and survival\n      analysis) for mapping additional information onto the STRING network is\n      provided.\n    \n        Construct the protein-protein interaction (PPI) network with the STRING\n        database.\n        \n            Start Cytoscape and go to\n            File > Import > Network from Public Database.\n          \nSelect STRING: protein query as Data Source.\n            Copy/paste the variable column of data table saved during\n            step 58 into the box titled:\n            Enter protein names or identifiers.\n          \nPress Import.\nNote: The default\n      confidence (score) cutoff value is 0.40. Lowering the cutoff will\n      increase the sensitivity but will also increase the likelihood of false\n      positives. The setting of the cutoff value is arbitrary and is often based\n      on the number of interactions required for the analysis. For example, to\n      visualize PPIs for genes within our WGCNA module of interest, the cutoff\n      was set to 0.15. At this cutoff-value, a single molecular network\n      incorporating 145 out of 151 genes in our module of interest was\n      constructed via the STRING database.\n    \nNote: If users decide to re-construct\n      their PPI network after some time (e.g., six months), the newly\n      constructed network may not be the same as what was returned via earlier",
    "import of network from the STRING database. For explanation and potential\n      solution, please refer to troubleshooting[href=https://www.wicell.org#troubleshooting],\n      problem 5[href=https://www.wicell.org#sec6.9] (step 49, step 61, and\n      step 71).\n    \n        Import the composite data table, saved during step 58, to the\n        constructed STRING network to visualize differential expression and\n        survival analysis overlap.\n        \nGo to File > Import > Table from File.\n            Select the composite data table, saved during step 58. Then\n            press Open.\n            Select To a Network Collection for field\n            Where to Import Table Data:.\n            Select Node Table Columns for field\n            Import Data as:.\n            Select shared name for field\n            Key Column for Network.\n            Under the Preview window, click on the\n            Variable column then change the\n            Meaning: to Key. Then press OK.\n          \n        Compute a set of topological parameters for the STRING network by\n        selecting Tool > Analyze Network. Then press OK.\n      \n        Adjust Layout and Styling as needed. For our network\n        analysis of TCGA colon cancer gene expression, we emphasized the degree\n        of interaction by mapping node size to the network parameter\n        degree. We also highlighted genes that were differentially\n        expressed via colored nodes, and genes that were associated with overall\n        survival with colored node border.\n      \n        Export topology data from Cytoscape by selecting\n        File > Export > Table to File…. Then change the Select a table to export: to\n        String Network default node. Then press\n        OK.\n      \nNote: The exported table can be used to\n      prioritize hub gene(s) by cross-referencing DEGs that significantly impact\n      overall survival probability with their node degree. Node degree\n      represents the number of interactions linked to a given gene.\n    \nNote: For complete details on the use and\n      execution of the Cytoscape (3.9.0) software platform, please refer to\n      Cytoscape User Manual (http://manual.cytoscape.org/en/stable/index.html[href=http://manual.cytoscape.org/en/stable/index.html]) and Shannon et al. (2003)[href=https://www.wicell.org#bib35].\n    \n      Differential (co-expression) correlation analysis with DGCA\n    \nTiming: 1–2 h",
    "Over the past decade, increased efficiencies in global gene expression\n      profiling have made common the study of differential gene expression.\n      However, this approach overlooks the fact that biological processes are\n      defined by complex interactions among molecules. Thus, methods such as\n      WGCNA (Langfelder and Horvath, 2008[href=https://www.wicell.org#bib17]) emerged to\n      facilitate the exploration of relationships between gene sets and sample\n      traits. Complementary to differential expression and co-expression\n      studies, differential co-expression (correlation) studies analyze the\n      rewiring of molecular interactions associated with perturbations such as\n      disease or oncogene activation (Savino et al., 2020[href=https://www.wicell.org#bib34]).\n      In this section, we perform differential correlation analysis with the R\n      package DGCA (McKenzie et al., 2016[href=https://www.wicell.org#bib26]) on our hub gene\n      (identified during step 65) within the gene universe, and between\n      normal and primary tumors. The identification of differentially-correlated\n      genes (DCGs) and the comparison of enrichment of GO terms derived from\n      DCGs can provide insight into the functional relevance of a hub gene in\n      different cellular contexts (e.g., normal vs. tumor). These linkages can\n      further promote the development of an effective hypothesis for integration\n      with experimental validation.\n    \nNote: The Methods S6 file “R Markdown Code\n      Script for DCGA” contains the exact script used to generate the\n      expected outcomes[href=https://www.wicell.org#expected-outcomes] for this section.\n    \n        Load the following R packages: 1) dplyr, and 2)\n        DGCA, 3) org.Hs.eg.db, 4)\n        GOstats, 5) HGNChelper, and 6)\n        plotrix.\n      \n        Import the voom transformed gene expression matrix, saved during\n        step 25.\n        Extract column names from the gene expression matrix to construct a\n        design matrix for DGCA.\n      \n        Filter the gene expression matrix using the function\n        filterGenes:\n        \n            First filter genes by central tendency (e.g.,\n            filterCentralPercentile = 0.25; this removes genes in\n            the bottom 25th percentile of median expression).\n          \n            Then filter genes by dispersion (e.g.,\n            filterDispersionPercentile = 0.25; this removes genes\n            in the bottom 25th percentile of the dispersion index of\n            expression).",
    "Perform differential correlation analysis on the hub gene between normal\n        and primary tumor using the function ddcorAll.\nOptional: Visualize the correlation in\n      each condition (i.e., normal, and primary tumor) between the hub gene and\n      its top DCGs via the following command:\n    \n> plotCors(inputMat = dataExpr, design = dataMatrix, compare =\n          c(\"dataGTEx\", \"dataTCGA\"), geneA = \"hub_gene\" ,geneB =\n\"top_DCG\")\n        Perform GO enrichment on genes with significant gain of correlation to\n        the hub gene in primary tumor and on genes with significant loss of\n        correlation to the hub gene in primary tumor via the DGCA wrapper\n        function ddcorGO.\nNote: If users decide to re-run GO term\n      enrichment analysis after some time (e.g., 6 months), the outcome of this\n      later analysis may not always agree with those obtained from analysis\n      conducted at an earlier time. For explanation and potential solution,\n      please refer to troubleshooting[href=https://www.wicell.org#troubleshooting],\n      problem 5[href=https://www.wicell.org#sec6.9] (step 49, step 61, and step 71).\n    \n        Visualize the odd-ratios from enrichment of GO terms derived from DCGs\n        via the wrapper function plotGOTwoGroups.\nNote: For complete details on the use and\n      execution of the DGCA R package, please refer to\n      McKenzie et al. (2016)[href=https://www.wicell.org#bib26]."
  ],
  "subjectAreas": [
    "Genomics",
    "Rnaseq",
    "Bioinformatics",
    "Systems Biology",
    "Cancer",
    "Gene Expression"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}