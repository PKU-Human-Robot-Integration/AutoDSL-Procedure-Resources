{
  "id": 2647,
  "origin_website": "Cell",
  "title": "Protocol for using GRPath to identify putative gene regulation paths in complex human diseases",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nHere we describe the step-by-step methods for using GRPath, from calculating chromatin openness scores, to predicting putative causal regions (pcRegions), putative causal variants (pcVariants) within, corresponding putative causal genes (pcGenes) and noteworthy cell types, and finally revealing the putative causal paths (pcPaths) that link pcRegions, pcVariants, pcGenes and noteworthy cell types.\nCalculating chromatin openness scores\nTiming:  <18 h\nThis section calculates disease-relevant- and tissue-specific openness scores of pre-defined regulatory elements (REs) corresponding to variants in the donor population from WGS, RNA-seq and disease phenotype data. We used the method proposed by Li et al.2[href=https://www.wicell.org#bib2]\nNote: Users may skip this section if directly using our toy data, since we already provided the output files in the data folder.\nRefer to https://github.com/liwenran/OpenCausal[href=https://github.com/liwenran/OpenCausal] to find out the usage of OpenCausal2[href=https://www.wicell.org#bib2] on GTEx data. After this step, the following files should be ready:\nvariant_openness.txt: A variant-by-donor matrix that denotes the openness scores of each variant predicted from personal genomes (Figure 1[href=https://www.wicell.org#fig1]A).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2141-Fig1.jpg\nFigure 1. Demonstration of the output files after “calculating chromatin openness scores” step\n(A) Demonstration of “variant_openness.txt”.\n(B) Demonstration of “variant_allele.txt”.\n(C) Demonstration of “RE_openness.txt”.\nNote: The file should be explicitly named as such. The first 8 columns should be the RE and variant information, which are RE-located chromosome, RE starting site, RE ending si te, variant-located chromosome, variant starting site, variant ending site, variant reference allele and variant alternate allele, respectively. The rest columns are the predicted openness scores of each variant in each donor.\nvariant_allele.txt: A binary variant-by-donor matrix that records the genetic variations of each donor (0: reference allele / 1: alternate allele).",
    "Note: The variants are the same as in \"variant_openness.txt\" (Figure 1[href=https://www.wicell.org#fig1]B). The first 8 columns should be the same as in \"variant_openness.txt\". The rest columns are the alleles of each variant in each donor.\nRE_openness.txt: An RE-by-sample matrix that denotes the openness scores predicted from reference genomes of all REs that contain the variants in “variant_openness.txt” (Figure 1[href=https://www.wicell.org#fig1]C).\nNote: The first 3 columns should be the RE information, which are RE chromosome, RE starting site and RE ending site, respectively. The rest columns are the predicted openness scores of each RE in each sample.\nPredicting pcRegions, pcVariants, and corresponding pcGenes\nTiming:  <10 min\nIn this section, we will obtain some preliminary results from GWAS summary statistics, eQTLs and outputs in the previous step. We will identify the pcRegions, pcVariants and pcGenes which composed part of the pcPaths.\nPrepare the following input files:\nvariant_openness.txt, variant_allele.txt and RE_openness.txt from the previous step.\ngwas_snps_pos.txt: location of the GWAS SNPs.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2141-Fig2.jpg\nFigure 2. Demonstration of the input files of “predicting pcRegions, pcVariants, and corresponding pcGenes” step\n(A) Demonstration of “gwas_snps_pos.txt”.\n(B) Demonstration of “phenotype.txt”.\n(C) Demonstration of “variant_pos.txt”.\n(D) Demonstration of “eqtls_200kb.txt”.\nNote: The 3 columns should be variant name, chromosome name, and chromosome position with heading (Figure 2[href=https://www.wicell.org#fig2]A).\nphenotype.txt: donor disease phenotype information with heading.\nNote: The 4 columns should be donor id, the sample index (starting from zero) in \"RE_openness.txt\", the donor index (starting from zero) in \"variant_openness.txt\", and disease label (0: control / 1: disease) (Figure 2[href=https://www.wicell.org#fig2]B).\nvariant_pos.txt: location of variants from GTEx donors in the form of “Chromosome_Position_ReferenceAllele_AlternateAllele_GenomeVersion” with heading. For example, “chr2_136422784_C_T_b37” for “rs3863014” (Figure 2[href=https://www.wicell.org#fig2]C).\neqtls_200kb.txt: eQTLs of disease-relevant tissues within the 200 kb region around each GWAS SNP in “gwas_snps_pos.txt”.",
    "Note: The 3 columns should be region central SNP (GWAS SNP), variant name and corresponding eGene (Figure 2[href=https://www.wicell.org#fig2]D).\nAfter preparing the data, run the following script to identify the pcRegions, pcVariants within and corresponding pcGenes:\n> bash predict_region_variant_egene.sh\nCritical: GRPath also allows users to adjust parameters according to their own needs. The following parameters can be adjusted (As for more detailed meaning of the parameters, users may refer to the STAR Methods section in Xi’s work1[href=https://www.wicell.org#bib1]):\n-f: Name of the data directory. Users should store all the input data in a directory under the same parent folder as “code” (default: demo_data).\n-k: Number of working kernels in multiprocessing. Although more kernels can accelerate the computing process, the value should be decided according to the number of cores of users’ devices (default: 8).\n-i: Number of rounds of random sampling. The more rounds, the more robust the results users may get. If i changes, parameter p should also be adjusted accordingly due to effect size changes when calculating the original p-value for each region (default: 10).\n-r: Number of repeats in all rounds. Users should decide this parameter carefully. Theoretically, a higher value may eliminate randomness, but may also be too strict and lead to too many false negatives (default: 2).\n-p: Adjusted p-value threshold. This parameter decides whether the investigated region is a pcRegion. It should change along with parameter i (default: 1e-3).\nFor example,\n> # Set working kernels to 4\n> bash predict_region_variant_egene.sh -k 4\n> # Set the number of rounds to 5, and corresponding adjusted\n> # p-value threshold to 0.02\n> bash predict_region_variant_egene.sh -i 5 -p 0.02\n> # Change data directory to “data”\n> bash predict_region_variant_egene.sh -f data\nCheck out the output files (Figure 3[href=https://www.wicell.org#fig3]), which are:\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2141-Fig3.jpg",
    "Figure 3. Demonstration of newly generated results (files) after some key steps\nalter_pathogenic_region_variant_egene.csv: alternate-allele-pathogenic regions, pcVariants within, and their corresponding pcGenes.\nref_pathogenic_region_variant_egene.csv: reference-allele-pathogenic regions, pcVariants within, and their corresponding pcGenes.\nA “processing” folder that contains some intermediate results.\nNow, some interesting biological discoveries may start to appear.\nPredicting noteworthy cell types and obtaining complete pcPaths\nTiming:  <5 min\nIn this section, users may move one step further, to explore disease mechanisms on a finer cell type level by incorporating aforementioned scRNA-seq data of disease and control samples, and obtain the complete “pcRegion-pcVariant-pcGene-noteworthy cell type-disease phenotype” form of pcPaths.\nProcess the downloaded scRNA-seq datasets.\nNote: The goal of this step is to minimize the influences of sequencing technologies and data noises, as well as annotate the cells. Standard practices include quality control, log-normalization, batch effect correction, data integration, dimensionality reduction and clustering etc. depending on the properties (e.g., sequencing technology, sources) of the data. We recommend using R and Seurat package3[href=https://www.wicell.org#bib3] in this step. Users may refer to online tutorials https://satijalab.org/seurat/articles/pbmc3k_tutorial.html[href=https://satijalab.org/seurat/articles/pbmc3k_tutorial.html] and https://satijalab.org/seurat/articles/integration_introduction.html[href=https://satijalab.org/seurat/articles/integration_introduction.html] for code and more detailed information.\nNote: Users may skip this step if directly running our toy data, since we already provided the processed data in the folder.\nPrepare two files after processing the downloaded scRNA-seq datasets:\nsingle_cell_data.txt: a gene-by-cell gene expression matrix.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2141-Fig4.jpg\nFigure 4. Demonstration of the processed expression matrix and labels of scRNA-seq data in “predicting noteworthy cell types and obtaining complete pcPaths” step\n(A) Demonstration of “single_cell_data.txt”.\n(B) Demonstration of “single_cell_label.txt”.\nNote: Values in the matrix are normalized gene expression levels ready for machine learning models (Figure 4[href=https://www.wicell.org#fig4]A).\nsingle_cell_label.txt: disease state (0: control / 1: disease) and cell type of each cell in the gene-by-cell matrix (Figure 4[href=https://www.wicell.org#fig4]B).",
    "After preparing the data, run the following script to link the previously identified pcGenes with noteworthy cell types, and obtain the complete pcPaths:\n> bash predict_regulation_path.sh\nCritical: Since we used down-sampling technique in this step to avoid the bias caused by unbalanced sample sizes in different classes,1[href=https://www.wicell.org#bib1],4[href=https://www.wicell.org#bib4] we need to repeat the classification process for multiple rounds and take the average. Here, GRPath also allows users to decide the number of rounds they prefer by parameter r:\n-f: Name of the data directory. Same as the parameter in step 3 (default: demo_data).\n-r: Number of rounds of down-sampling. Results will better converge with a higher value, but will be more time-consuming (default: 3).\nFor example, users may run the following command:\n> # Set 10 rounds of down-sampling\n> bash predict_regulation_path.sh –r 10\n> # Change data directory to “data”\n> bash predict_regulation_path.sh -f data\nCheck out the output files (Figure 3[href=https://www.wicell.org#fig3]), which are:\nregulation_path.csv: pcPaths.\ncell_type_auc_mean.csv and cell_type_auc_std.csv in the “processing” folder as intermediate results.\nNow, users may freely explore the pcPaths and see if there are any interesting discoveries.\nVisualizing results\nTiming:  <3 min\nTo better visualize the results, users may further draw the paths in hierarchical graphs.\nOptional: Make sure that the packages described in the “Optional” part in “environment preparation[href=https://www.wicell.org#sec1.2]” were all installed properly. Then, run the following command:\n> python plot_regulation_paths.py\nThe graphs will be saved in “regulation_paths-alternate_pathogenic.pdf” for pcPaths originating from alternate-allele-pathogenic regions (Figure 5[href=https://www.wicell.org#fig5]A) and “regulation_paths-reference_pathogenic.pdf” for pcPaths originating from reference-allele-pathogenic regions (Figure 5[href=https://www.wicell.org#fig5]B), respectively. When zooming in, users can see what each node stands for exactly (Figure 5[href=https://www.wicell.org#fig5]C).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2141-Fig5.jpg\nFigure 5. Visualization of two types of pcPaths\n(A) Visualization of the pcPaths originating from alternate-allele-pathogenic regions.\n(B) Visualization of the pcPaths originating from reference-allele-pathogenic regions.",
    "(C) Information for each node after zooming in."
  ],
  "subjectAreas": [
    "Rnaseq",
    "Bioinformatics",
    "Systems Biology",
    "Health Sciences",
    "Gene Expression",
    "Single Cell"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}