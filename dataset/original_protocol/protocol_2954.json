{
  "id": 3127,
  "origin_website": "Cell",
  "title": "A simple smiFISH pipeline to quantify mRNA at the single-cell level in 3D",
  "procedures": [
    "Step-by-step method details\nStep-by-step method details\nSample dissection and fixation\nTiming: 2 h\nThis protocol has been developed in Drosophila to quantify mRNA in Lin A/15 during the third larval instar (LL3). This neuronal lineage is localized in the ventral nerve cord (VNC) (Figure 1[href=https://www.wicell.org#fig1]).\nNote: All the steps of the protocol are done in pyrex nine well plates. The volume of washes is approximately 150μL. The plate is covered with parafilm to prevent drying.\nCritical: Our tissue is optically transparent enough for microscopy. Other tissues might need an optical clarification protocol.\nDissect Larval VNC from third instar larvae in Schneider medium (or appropriate cell culture medium).\nFix in 4% formaldehyde (in PBS with 0.3% Triton X-100) for 20 min at room temperature with rocking.\nQuickly wash the samples 3 times with PBST (PBS with 0.3% Tween-20).\nWash samples 3 times for 15 min with PBST.\nNote: Samples can be stored in PBST at 4°C for a few h before the hybridization steps.\nSmiFISH\nTiming: 5 days\nThe smiFISH procedure is adapted from Yang et al.10[href=https://www.wicell.org#bib10] and Calvo et al.5[href=https://www.wicell.org#bib5] All hybridization steps are performed in Big Shot III Hybridization Oven with rocking.\nHybridization steps – Day 1.\nPerform a pre-hybridization wash in smiFISH wash buffer at 37°C for 30 min with rocking.\nIncubate the samples with smiFISH probe sets (Figure 2[href=https://www.wicell.org#fig2]) diluted in smiFISH hybridization buffer at 37°C for 12–14 h with rocking.\nNote: The working concentration of individual probe sets are: jim (400 nM), chinmo (800 nM), brC (1 μM), nvy (2 μM), mamo (2 μM) and oli (400 nM). Sequences are available at https://doi.org/10.5281/zenodo.7674721[href=https://doi.org/10.5281/zenodo.7674721]. These concentrations were established by performing a dilution series for each probe set in order to choose the best one. Cross-reactions between probes may occur (see troubleshooting[href=https://www.wicell.org#troubleshooting]).\nWashes – Day 2",
    "Wash the samples for 40 min at 37°C in smiFISH wash buffer with rocking.\nPerform 3 additional washes of 15 min at room temperature with smiFISH wash buffer with rocking.\nWash 10 min in PBST at room temperature with rocking.\nNote: Store samples for 2 days minimum in pyrex plates at 4°C in Vectashield (H1200) with Dapi to label the nucleus.\nCritical: 2 days is necessary to allow Dapi to penetrate the tissue.\nMounting and storage (Figure 3[href=https://www.wicell.org#fig3]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2699-Fig3.jpg\nFigure 3. Schematic of the mounting setup\nVNC larvae is immersed in Vectashield (pink) on a slide. A bridge is made by placing double sided tapes (blue) on each side of the VNC. A coverslip is placed of the top of the VNC (black box).\nPlace Larval VNC in the center of the slide (SuperFrost Plus 25mm∗75mm) with double-sided tape at each side.\nReplace Vectashield by 25μL of Vectashield (H1700) to allow the sample to be better contained.\nPlace a coverslip (#1,5) over the sample (18mm∗18mm). After 1 day at 4°C, seal the coverslip with nail polish.\nStore the slides at −20°C to maintain the signal.\nNote: Slides can be stored for several weeks.\nImage acquisition of larval VNC\nTiming: 8 h\nAt this step use a confocal microscope and acquire images with the optimal optical resolution of your system.\nAcquire images on a Leica TCS SP8 microscope using a 40x/1.4 glycerol objective.\nNote: this results in bright and high-resolution images due to the well-matched refractive index with the Vectashield.\nSettings for image stacks:\nformat 4400x4400 px (223,56 μm ∗ 223,56 μm (XY) and 44,95 μm (Z)),\nspeed 700 Hz,\nunidirectional,\nsequential line scanning,\nline averaging 8,\npinhole 1 airy unit.\nImage stacks are acquired with a 350 nm z interval.",
    "Use a 405nm laser (laser power 2%, detection 412–496nm) to excite and image DAPI, in the cell nucleus.\nUse a 488nm laser (laser power 4.5%, detection 494–530nm) to excite and image the cell membrane labeled with GFP.\nUse a 548nm (laser power 5%, detection 555–605nm) to excite and image the mRNA foci labeled with Quasar-570.\nCritical: Do not use too much power of the 548 laser to avoid signal bleaching.\nPost-imaging processing: Lightning\nTiming: 1 h\nA step of post-imaging processing (deconvolution) is necessary to maximize detection and quantification of signal in MATLAB. Deconvolution is an image processing technique that attempts to improve contrast and resolution, minimizing the effects of any --out-of-focus light in fluorescence images. It uses the metadata of the acquisitions (objective, immersion, wavelengths, etc.) to characterize these effects and minimize them, proceeding with successive iterations in order to optimize image quality. Here, we use the Lightning option of the Leica software.\nSelect adaptive mode in the Strategy box.\nChose the refractive Index of mounting medium: 1,46 Vectashield.\nNote: With the adaptative function, the deconvolution parameters automatically vary according to the local XYZ quality of the fluorescent signal (on small areas of a few XYZ voxels) channel by channel. In this way, the system deconvolutes the areas of good or poor quality in an optimal way. Use the default deconvolution settings:\nNumber of Iterations: Auto.\nNote: number of times that the deconvolution process is repeated.\nOptimization: 1.\nNote: The software deconvolves by default with the slider on 1, which corresponds to a fairly conservative deconvolution without risk of artifacts.\nRegularization Parameter: 0.05.\nNote: This number correspond to the degree of denoising of the image during deconvolution.\nSmoothing: Very high.\nNote: smoothing option before deconvolution.\nContrast enhancement, Cut Off and deblurring are disabled.",
    "Note: After this process, one new confocal stack is created with the lightning correction.\nNote: Other methods of deconvolution can be used at this step. However, we found the Lightning extremely powerful compared to other methods.\nCritical: LAS_X_4.5.0 or higher version of the Leica software must be used. Older versions cannot correctly process the large data sets which are created.\nSave the processed confocal stack.\nCritical: Name the processed confocal stack as followed: Stage_Transcriptionfactor_VNC.\nIn our experiment, we named it: LL3_Jim_VNC01. We performed our experiment in a third instar larva (LL3), we analysed the mRNA expression of jim (Jim) in a VNC called 01 (VNC01).\nSave the processed confocal stack in the following path:\nC:\\Count_mRNA_Urdy\\Stage_Transcriptionfactor\\VNC.\nNote: For example in our study we wrote:\nC:\\Count_mRNA_Urdy\\LL3_Jim\\VNC01.\nCritical: Name the path exactly as written above since the MATLAB script will use this path to quantify the mRNA expression. This protocol was developed using Windows 10.\nPipeline for cell segmentation with limeseg: A Fiji plugin\nTiming: 4 h\nWe segmented Lin A/15 confocal stacks using the Limeseg plugin9[href=https://www.wicell.org#bib9] in ImageJ/Fiji software.11[href=https://www.wicell.org#bib11],12[href=https://www.wicell.org#bib12],13[href=https://www.wicell.org#bib13] The Limeseg plugin uses a particle-based active contour method allowing 3D object segmentation on objects labelled on their outline from image stacks, for example confocal stacks containing cells labeled on their membrane (Figure 4[href=https://www.wicell.org#fig4]). The Limeseg plugin does not require a powerful PC. We could run it on a Windows 10, Intel Core i5-6600 CPU 3.31GHz, 16Go RAM.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2699-Fig4.jpg\nFigure 4. Schematic of the Limeseg pipeline\n(A and B) Confocal section of the LinA/15 neuroblast (NB) labelled with a membrane GFP (myr::GFP). (A) A ROI is placed in the center of the cell. (B) After running Limeseg, the border of the NB is marked by dots (green) and (C) a 3D reconstruction of the NB is generated.\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2699-Fig5.jpg",
    "Figure 5. Schematic of the smiFISH Pipeline\n(A) Confocal stack images (composite stack) where the cell membranes are labelled with GFP (green), nucleus with DAPI (red) and jim mRNA dots with Quasar 570 (cyan).\n(B) Same confocal stack as in (A), here called Cell counter stack, where each cell is identify by a number (2).\n(C) Composite stack as in (A) processed by a median filter. ROI are placed in each cell using the cell counter stack (B) as reference(C) Composite stack as in (A) processed by a median filter. ROI are placed in each cell using the cell counter stack (B) as reference.\n(D) Composite stack as in (C) after running Limeseg where the border of the cells are marked by dots.\n(E) 3D reconstruction of Lin A/15 cells after running Limeseg.\n(F–H) Same picture as (C–E) respectively where unsegmented cells have been processed individually.\n(I) Confocal stack images (composite stack) from (A) processed with Lightning.\n(J) The composite stack processed with Lightning (I) and the ply files generated with Limeseg (C–H) are imported in MATLAB.\n(K) Check files are generated by MATLAB for each cell, here is the example of one of them. left: original image, center: image after Gaussian filter, and right: mRNA dots detected color-labelled.\n(L) MATLAB 3D view showing jim mRNA expression (dots), the border of each cell is color-coded according to the mRNA expression level (the color code is indicated on the right).\nIdentify the cells of interest with the Cell Counter plugin of the ImageJ/Fiji software11[href=https://www.wicell.org#bib11],12[href=https://www.wicell.org#bib12],13[href=https://www.wicell.org#bib13] (Figure 5[href=https://www.wicell.org#fig5]B).\nNote: The Cell counter plugin in Fiji allows the counting of the number of cells present in Lin A/15 and their localizations.\nOpen the confocal image stack and the Cell Counter plugin.\nNote: Plugins\\Analyze\\Cell Counter\\Cell Counter",
    "Go through the confocal stacks placing a number in the center of each cell.\nNote: the GFP and DAPI signal are used to find the center of the cell. At this step, the coordinates of each point are managed in the measurement tab.\nSave the cell counter results table.\nCritical: To allow a good synchronization between the image stack and the cell counter when they will open again, do not modify the name proposed by the cell counter.\nSmooth the GFP signal with a median filter of the ImageJ/Fiji software11[href=https://www.wicell.org#bib11],12[href=https://www.wicell.org#bib12],13[href=https://www.wicell.org#bib13] (optional).\nNote: The Median filter of ImageJ will smooth discontinuity of the contours of the cell membranes. This step helps during the cell segmentation which is based on membrane signal.\nOpen the original confocal stack (not processed with the Lightning) with the Fiji software.\nApply a median filter only on the channel with the membrane signal: Process\\Filter\\Median.\nNote: We used the GFP signal that was not processed with the Lightning Settings of the Leica software.\nPlace a ROI (region of interest) on each cell with the ROI manager of the ImageJ/Fiji software.11[href=https://www.wicell.org#bib11],12[href=https://www.wicell.org#bib12],13[href=https://www.wicell.org#bib13]\nOpen two windows (/ images).\nthe GFP membrane smoothing and DAPI signals (composite stack).\nthe cell counter stack.\nPlace an ROI on the center of each cell in the composite stack (GFP membrane smoothing and DAPI signals).\nNote: Use the cell counter stack as a reference in order to not forget any cell or to avoid placing two ROI in the same cell (Figure 5[href=https://www.wicell.org#fig5]B and 5C).\nSave all the coordinates (X,Y,Z from the center of the circle), More/Save.\nSegment each cell using the Limeseg9[href=https://www.wicell.org#bib9] plugin of the ImageJ/Fiji software.11[href=https://www.wicell.org#bib11],12[href=https://www.wicell.org#bib12],13[href=https://www.wicell.org#bib13]\nOpen the Sphere Seg : Pluggin\\limeseg\\Sphere Seg.\nChoose the parameters according to the explanations: (https://imagej.net/plugins/limeseg[href=https://imagej.net/plugins/limeseg]).\nNote: The images raw data are available in Medata in ImageJ/Fiji.",
    "Note: for our study1[href=https://www.wicell.org#bib1], the chosen parameters are :\nD_0 ∼4–6, the smallest feature size that you want LimeSeg to detect (in pixels); F pressure = 0.01, the “default pressure” exerted on the surface; Z_scale = 6.8, the physical ratio of the spacing; Range in d0 unit∼4–6, the size over which each particle will look for a local maximum (in pixels); Optimisation step = -1, number of integration step; real XY pixel size = 50, the size of a XY pixel in physical units.\nClick on OK to run Sphere Seg, and wait for the 3D segmentation (Methods video S1[href=https://www.wicell.org#mmc1]).\nNote: After clicking ok there are two possibilities.\nThe segmentation stops by itself as it has completed the job. In this case, go through the stack and verify that the cell segmentation is correct (Figure 5[href=https://www.wicell.org#fig5]D).\nThe segmentation is unable to finish the job because some cells are not correctly segmented (Figure 5[href=https://www.wicell.org#fig5]D). In this case, go to Pluggin\\Limeseg\\Stop optimization. Change the parameters (see https://imagej.net/plugins/limeseg[href=https://imagej.net/plugins/limeseg]) and start the process again until you find the optimal parameters. Users may find it helpful to increase the signal intensity of the GFP channel. After this step, most of the cells are well segmented, though sometimes unsegmented cells are still present. In this case, remove the ROI of the unsegmented cells and identify them on a new duplicated stack with cell counter. Run Limeseg again without these unsegmented cells and save the data (see next paragraph for saving procedure). Then run Limeseg again with different parameters on the individual cells that were not segmented (do it one by one) (Figure 5[href=https://www.wicell.org#fig5]F–5H).\nSave the data.\nSave the table: File\\save as.",
    "Note: Once the segmentation is performed on multiple cells or on individual cells, a results table will be created. This table contains the coordinates and the volumes of segmented cells.\nSave also the .ply files: Plugin\\limeseg\\show GUI. In the ‘write’ box of the ‘show GUI’ window write where to save the .ply file and click SaveStateToXmlPly.\nNote: A folder containing a .ply file and a 3D file of the cell is created and saved for each cell. These files will be used in MATLAB to quantify mRNA in each cell.\nCritical: As written above, sometimes several rounds of segmentation are needed to segment all the cells of a lineage A. In this case, compile all the folders containing the .ply file in the same folder. Before compiling all the .ply folders, it is essential that each folder is manually renamed as followed: ‘Developmental time_ gene name _ sample name _localisation_cell_number of the cell’\nNote: For example, in our study, we wrote: LL3_jim_VNC01_T2R_cell_1. In this experiment, we were observing a third instar larva (LL3), we have analysed the mRNA expression of jim (jim) in a VNC called 01 (VNC01) in the Lin A/15 localized in the right thoracic hemisegment number 2 (T2R) (Figure 1[href=https://www.wicell.org#fig1]). The number of the cell is arbitrary. In our study, these numbers vary from 35 to 45 since Lin A/15 contained 37 cells on average at this stage.\nExport all the folders in the following path: C:\\Count_mRNA_Urdy\\Stage_Transcriptionfactor\\VNC\\Hemisegment\\Limeseg.\nNote: In our example the path is: C:\\Count_mRNA_Urdy\\LL3_Jim\\VNC01\\T2R\\Limeseg.\nCritical: Rename each folder containing the .ply files before putting them in the Limeseg folder. If you don’t rename them at this step you might overwrite a folder since they can have the same name.",
    "Note: Renaming manually the folders can be -time-consuming. Optionally you can use our Python script: https://doi.org/10.5281/zenodo.7456891[href=https://doi.org/10.5281/zenodo.7456891] . Before using it download and install Python 3: https://www.python.org/downloads/release/python-3111/[href=https://www.python.org/downloads/release/python-3111/].\nThe Script will rename the folders containing the .ply file and pool them in a single Limeseg folder.\n    Your browser does not support HTML5 video.\n  \n      Methods video S1. Segmentation of LinA/15 cells from Limeseg plugin\n    \nMATLAB\nTiming: 4 h\nMATLAB (Figure 5[href=https://www.wicell.org#fig5]) is used to quantify mRNA in each Lin A/15 Cell. Two types of files are imported in MATLAB: 1/ the .ply files containing the segmented cells and their coordinates and 2/ the composite stack with the smiFISH signal processed with the Lightning. These stacks are cropped around each cell using the point clouds generated by individual cell segmentation with LimeSeg.\nThe mRNA spots are detected in 3D, in the mRNA channel of these cropped stacks, using the method described by Raj et al.14[href=https://www.wicell.org#bib14] In short, the spots are identified computationally by running a MATLAB image processing script that runs the raw data through a filter, a Laplacian of a Gaussian, a mathematical operator commonly used to enhance spots of the correct size and shape while removing the varying background. On the filtered stacks an optimal threshold is used to remove remaining background noise. In order to choose an optimal threshold, all possible thresholds are computed. The thresholds are always chosen manually and close to the plateau after the first peak (Figure 6[href=https://www.wicell.org#fig6]).14[href=https://www.wicell.org#bib14]\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2699-Fig6.jpg\nFigure 6. Threshold decision",
    "(A–C) Example of Check file figures generated by MATLAB for jim mRNA. Note: MATLAB generates check file figures for each cell, left: original image, center: image after Gaussian filter, and right: mRNA dots detected are color-labelled. The applied threshold is different in (A–C): (A) threshold is 3, (B) threshold is 11 and (C) threshold is 20.\n(D) Threshold curve generated by MATLAB for one cell. MATLAB generates Threshold curve for each cell. The thresholds are always chosen manually close to the plateau after the first peak, in our example with select threshold 11. In most of our case, the chosen for one cell is valid for all the cells of the experiment.\nNote: At this stage of the protocol, the processed confocal stack and the .ply folders should be located respectively as follows:\nC:\\Count_mRNA_Urdy\\ LL3_Jim\\VNC01\\ LL3_Jim_VNC01.\nC:\\Count_mRNA_Urdy\\ LL3_Jim\\VNC01\\T2R\\Limeseg\\ LL3_jim_VNC01_T2R_cell 1 to N.\nDownload MATLAB : https://fr.mathworks.com/[href=https://fr.mathworks.com/].\nDownload the source_code: https://doi.org/10.5281/zenodo.7674721[href=https://doi.org/10.5281/zenodo.7674721].\nPlace this folder in C:\\Count_mRNA_Urdy.\nOpen MATLAB:\nEditor\\Open\\Count_mRNA_Urdy\\Source_code\\Count_mrna_modified_Urdy_upgraded_5. (Figure 7[href=https://www.wicell.org#fig7]).\nimgsrc:https://prod-shared-star-protocols.s3.amazonaws.com/protocols/2699-Fig7.jpg\nFigure 7. Screenshot of MATLAB software\nIn line 64, 67, 70 and 73 the different information needed by MATLAB to import the data. In line 76, 77, 81, 82 and 83 the different parameters used for RNA spot detection.\nDefine the parameters in lines 57, 64, 67, 70 and 73.\nNote: These parameters are used to import the correct .ply file and confocal stacks (Figure 5[href=https://www.wicell.org#fig5]J). Figure 7[href=https://www.wicell.org#fig7] illustrates the parameters we used.\nDefine the parameters in lines 77, 78, 82, 83 and 84.\nDefine the voxel size of your confocal stack in lines 77 and 78.\nDefine the Gaussian parameters to filter images and find particles in line 82 to 84. Chose the parameters that give the best visual detection of mRNA spots.",
    "Note: Our datasets are as follow: width of the Gaussian filter = 5 (unit: number of pixels, in our case 1 pixel = 50nm); variance of the Gaussian filter = 0.25; threshold (filter to remove the background) = 0.11 for jim, 0.08 for chinmo, 0.15 for mamo, 0.09 for br, 0.29 for nvy and 0.15 for oli. The detected spots in each cell have a normal distribution of diameters with a mean of 0.25 +/- 0.05 micrometers and their maximum intensities displayed a unimodal distribution, arguing that the detected spots are mostly individual molecules.\nRun the script Count_mrna_modified_Urdy_upgraded_5 in the command window.\nWhen the script is done, a 3D view (Figure 5[href=https://www.wicell.org#fig5]L) (see outcomes) and Check files (Figure 5[href=https://www.wicell.org#fig5]K) are generated. The check File stack are used to visualize the accuracy of the spot detection for a given threshold.\nNote: In most of our samples, common thresholds are chosen for all the cells of a given Lin A/15. However, specific thresholds are occasionally chosen for some cells.\nChange the parameters until you get good accuracy, it means the number of mRNAs detected by the script match with the reality (Figure 6[href=https://www.wicell.org#fig6]A–6C).\nNote: For our example in Figure 6[href=https://www.wicell.org#fig6], the validated threshold is 11: the number of spots correlates with the stack and the threshold is after the first peak.\nNote: An Excel file with Count mRNA number for each cell are generated and automatically saved in C:\\Count_mRNA_Urdy\\LL3_Jim\\VNC01\\T2R."
  ],
  "subjectAreas": [
    "Bioinformatics",
    "Microscopy",
    "Cell Biology",
    "In Situ Hybridization",
    "Developmental Biology",
    "Molecular Biology"
  ],
  "bigAreas": [
    "Biomedical & Clinical Research",
    "Bioengineering & Technology",
    "Molecular Biology & Genetics",
    "Bioinformatics & Computational Biology"
  ]
}